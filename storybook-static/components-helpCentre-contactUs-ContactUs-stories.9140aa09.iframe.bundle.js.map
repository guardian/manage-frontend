{"version":3,"file":"components-helpCentre-contactUs-ContactUs-stories.9140aa09.iframe.bundle.js","mappings":";;AAOA;;;AASA;AACA;;AAEA;;;AAPA;;;ACKA;ACPA;;;AAGA;;;;AAIA;;;AAIA;;;;;;;;AAQA;;;;;AAKA;;;AAIA;;AAGA;;;;;AAKA;AACA;AACA;;;;;AAKA;;;AAGA;;;AAGA;AACA;;;;AAIA;;;;;;;;;AASA;;AAEA;;;;;;;;;;;;;AAaA;;;;;;;;;AAUA;AACA;AACA;;;;;;;AAQA;AACA;AACA","sources":["webpack://manage-frontend/./node_modules/@guardian/source/dist/react-components/inline/styles.js","webpack://manage-frontend/./node_modules/@guardian/source/dist/react-components/inline/Inline.js","webpack://manage-frontend/./node_modules/@guardian/source/dist/react-components/radio/styles.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport { until } from '../../foundations/mq/mq.js';\nimport { space } from '../../foundations/__generated__/space.js';\n\nconst inline = css`\n\toverflow: hidden;\n`;\nconst inlineWrapper = css`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`;\nconst collapseBreakpoint = (breakpoint) => css`\n\t${until[breakpoint]} {\n\t\tflex-direction: column;\n\t}\n`;\nconst inlineSpace = (number) => css`\n\tmargin: -${space[number] / 2}px;\n\t> * {\n\t\tmargin: ${space[number] / 2}px;\n\t}\n`;\n\nexport { collapseBreakpoint, inline, inlineSpace, inlineWrapper };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { inline, inlineWrapper, inlineSpace, collapseBreakpoint } from './styles.js';\nimport { isUndefined } from '../../libs/dist/isUndefined/isUndefined.js';\n\nconst Inline = ({\n  cssOverrides,\n  children,\n  space,\n  collapseUntil,\n  ...props\n}) => {\n  return /* @__PURE__ */ jsx(\"div\", { css: inline, children: /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      css: [\n        inlineWrapper,\n        isUndefined(space) ? \"\" : inlineSpace(space),\n        collapseUntil ? collapseBreakpoint(collapseUntil) : \"\",\n        cssOverrides\n      ],\n      ...props,\n      children\n    }\n  ) });\n};\n\nexport { Inline };\n","import { css } from '@emotion/react';\nimport { resets } from '../../foundations/utils/resets.js';\nimport { width, height } from '../../foundations/__generated__/size.js';\nimport { space } from '../../foundations/__generated__/space.js';\nimport { transitions } from '../../foundations/animation/transitions.js';\nimport { focusHalo } from '../../foundations/accessibility/focus-halo.js';\nimport { appearance } from '../../foundations/utils/supports-queries.js';\nimport { textSans17, textSans15 } from '../../foundations/__generated__/typography.js';\n\nconst fieldset = (radio2) => css`\n\t${resets.fieldset};\n\n\t&[aria-invalid='true'] input {\n\t\tborder: 2px solid ${radio2.borderError};\n\n\t\t&:not(:checked):hover,\n\t\t&:active {\n\t\t\tborder: 2px solid ${radio2.borderHover};\n\t\t}\n\t}\n`;\nconst radioContainer = (radio2) => css`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: flex-start;\n\t/**\n\t * Ensure minimum height of 44px by applying 10px padding to top and bottom\n\t * of container. This ensures consistent spacing when supporting text present.\n\t */\n\tpadding: ${(height.inputMedium - height.inputXsmall) / 2}px 0;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tinput {\n\t\t\tborder: 2px solid ${radio2.borderHover};\n\t\t}\n\t}\n`;\nconst label = css`\n\tcursor: pointer;\n`;\nconst radio = (radio2) => css`\n\tflex: 0 0 auto;\n\tcursor: pointer;\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\twidth: ${width.inputXsmall}px;\n\theight: ${height.inputXsmall}px;\n\tmargin: 0 ${space[2]}px 0 0;\n\n\tborder: 1px solid currentColor;\n\tborder-radius: 50%;\n\tposition: relative;\n\ttransition: box-shadow ${transitions.short};\n\ttransition-delay: 0.08s;\n\n\tcolor: ${radio2.borderUnselected};\n\n\t&:checked {\n\t\tborder: 2px solid ${radio2.borderSelected};\n\t\tcolor: ${radio2.fillSelected};\n\t}\n\n\t&:focus {\n\t\t${focusHalo};\n\t}\n\n\t/*\n\tTake care: Emotion extracts @supports blocks and moves them below\n\tall other <style> elements, making these values hard to override.\n\tI have chosen to keep these styles in the @supports block as\n\tmoving them out makes radio buttons look horrible on older browsers\n\t*/\n\t@supports (${appearance}) {\n\t\tappearance: none;\n\t\tbackground-color: ${radio2.fillUnselected};\n\n\t\t&:after {\n\t\t\tbackground: currentColor;\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tborder-radius: 50%;\n\t\t\ttransform: scale(0);\n\t\t\ttransform-origin: center;\n\t\t\ttransition: transform ${transitions.short};\n\t\t}\n\n\t\t&:checked {\n\t\t\t&:after {\n\t\t\t\ttransform: scale(0.6);\n\t\t\t}\n\t\t}\n\t}\n`;\nconst labelText = (radio2) => css`\n\t${textSans17};\n\tcolor: ${radio2.textLabel};\n\twidth: 100%;\n\tmargin-top: 1px;\n\t/* If label text is empty, add additional spacing to align supporting text */\n\t&:empty {\n\t\tmargin-top: 2px;\n\t}\n`;\nconst supportingText = (radio2) => css`\n\t${textSans15};\n\tcolor: ${radio2.textSupporting};\n`;\n\nexport { fieldset, label, labelText, radio, radioContainer, supportingText };\n"],"names":[],"sourceRoot":""}