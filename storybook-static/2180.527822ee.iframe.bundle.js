/*! For license information please see 2180.527822ee.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkmanage_frontend =
	self.webpackChunkmanage_frontend || []).push([
	[2180],
	{
		'./node_modules/@babel/runtime/helpers/esm/extends.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			function _extends() {
				return (
					(_extends = Object.assign
						? Object.assign.bind()
						: function (target) {
								for (var i = 1; i < arguments.length; i++) {
									var source = arguments[i];
									for (var key in source)
										Object.prototype.hasOwnProperty.call(
											source,
											key,
										) && (target[key] = source[key]);
								}
								return target;
						  }),
					_extends.apply(this, arguments)
				);
			}
			__webpack_require__.d(__webpack_exports__, { Z: () => _extends });
		},
		'./node_modules/@base2/pretty-print-object/dist/index.js': function (
			__unused_webpack_module,
			exports,
		) {
			'use strict';
			var __assign =
					(this && this.__assign) ||
					function () {
						return (
							(__assign =
								Object.assign ||
								function (t) {
									for (
										var s, i = 1, n = arguments.length;
										i < n;
										i++
									)
										for (var p in (s = arguments[i]))
											Object.prototype.hasOwnProperty.call(
												s,
												p,
											) && (t[p] = s[p]);
									return t;
								}),
							__assign.apply(this, arguments)
						);
					},
				__spreadArrays =
					(this && this.__spreadArrays) ||
					function () {
						for (
							var s = 0, i = 0, il = arguments.length;
							i < il;
							i++
						)
							s += arguments[i].length;
						var r = Array(s),
							k = 0;
						for (i = 0; i < il; i++)
							for (
								var a = arguments[i], j = 0, jl = a.length;
								j < jl;
								j++, k++
							)
								r[k] = a[j];
						return r;
					};
			Object.defineProperty(exports, '__esModule', { value: !0 });
			var seen = [];
			exports.prettyPrint = function prettyPrint(input, options, pad) {
				void 0 === pad && (pad = '');
				var tokens,
					combinedOptions = __assign(
						__assign({}, { indent: '\t', singleQuotes: !0 }),
						options,
					);
				tokens =
					void 0 === combinedOptions.inlineCharacterLimit
						? {
								newLine: '\n',
								newLineOrSpace: '\n',
								pad,
								indent: pad + combinedOptions.indent,
						  }
						: {
								newLine: '@@__PRETTY_PRINT_NEW_LINE__@@',
								newLineOrSpace:
									'@@__PRETTY_PRINT_NEW_LINE_OR_SPACE__@@',
								pad: '@@__PRETTY_PRINT_PAD__@@',
								indent: '@@__PRETTY_PRINT_INDENT__@@',
						  };
				var expandWhiteSpace = function (string) {
					if (void 0 === combinedOptions.inlineCharacterLimit)
						return string;
					var oneLined = string
						.replace(new RegExp(tokens.newLine, 'g'), '')
						.replace(new RegExp(tokens.newLineOrSpace, 'g'), ' ')
						.replace(
							new RegExp(tokens.pad + '|' + tokens.indent, 'g'),
							'',
						);
					return oneLined.length <=
						combinedOptions.inlineCharacterLimit
						? oneLined
						: string
								.replace(
									new RegExp(
										tokens.newLine +
											'|' +
											tokens.newLineOrSpace,
										'g',
									),
									'\n',
								)
								.replace(new RegExp(tokens.pad, 'g'), pad)
								.replace(
									new RegExp(tokens.indent, 'g'),
									pad + combinedOptions.indent,
								);
				};
				if (-1 !== seen.indexOf(input)) return '"[Circular]"';
				if (
					null == input ||
					'number' == typeof input ||
					'boolean' == typeof input ||
					'function' == typeof input ||
					'symbol' == typeof input ||
					(function isRegexp(value) {
						return (
							'[object RegExp]' ===
							Object.prototype.toString.call(value)
						);
					})(input)
				)
					return String(input);
				if (input instanceof Date)
					return "new Date('" + input.toISOString() + "')";
				if (Array.isArray(input)) {
					if (0 === input.length) return '[]';
					seen.push(input);
					var ret =
						'[' +
						tokens.newLine +
						input
							.map(function (el, i) {
								var eol =
										input.length - 1 === i
											? tokens.newLine
											: ',' + tokens.newLineOrSpace,
									value = prettyPrint(
										el,
										combinedOptions,
										pad + combinedOptions.indent,
									);
								return (
									combinedOptions.transform &&
										(value = combinedOptions.transform(
											input,
											i,
											value,
										)),
									tokens.indent + value + eol
								);
							})
							.join('') +
						tokens.pad +
						']';
					return seen.pop(), expandWhiteSpace(ret);
				}
				if (
					(function isObj(value) {
						var type = typeof value;
						return (
							null !== value &&
							('object' === type || 'function' === type)
						);
					})(input)
				) {
					var objKeys_1 = __spreadArrays(
						Object.keys(input),
						(function getOwnEnumPropSymbols(object) {
							return Object.getOwnPropertySymbols(object).filter(
								function (keySymbol) {
									return Object.prototype.propertyIsEnumerable.call(
										object,
										keySymbol,
									);
								},
							);
						})(input),
					);
					if (
						(combinedOptions.filter &&
							(objKeys_1 = objKeys_1.filter(function (el) {
								return (
									combinedOptions.filter &&
									combinedOptions.filter(input, el)
								);
							})),
						0 === objKeys_1.length)
					)
						return '{}';
					seen.push(input);
					ret =
						'{' +
						tokens.newLine +
						objKeys_1
							.map(function (el, i) {
								var eol =
										objKeys_1.length - 1 === i
											? tokens.newLine
											: ',' + tokens.newLineOrSpace,
									isSymbol = 'symbol' == typeof el,
									isClassic =
										!isSymbol &&
										/^[a-z$_][a-z$_0-9]*$/i.test(
											el.toString(),
										),
									key =
										isSymbol || isClassic
											? el
											: prettyPrint(el, combinedOptions),
									value = prettyPrint(
										input[el],
										combinedOptions,
										pad + combinedOptions.indent,
									);
								return (
									combinedOptions.transform &&
										(value = combinedOptions.transform(
											input,
											el,
											value,
										)),
									tokens.indent +
										String(key) +
										': ' +
										value +
										eol
								);
							})
							.join('') +
						tokens.pad +
						'}';
					return seen.pop(), expandWhiteSpace(ret);
				}
				return (
					(input = String(input).replace(/[\r\n]/g, function (x) {
						return '\n' === x ? '\\n' : '\\r';
					})),
					combinedOptions.singleQuotes
						? "'" + (input = input.replace(/\\?'/g, "\\'")) + "'"
						: '"' + (input = input.replace(/"/g, '\\"')) + '"'
				);
			};
		},
		'./node_modules/@bundled-es-modules/statuses/index-esm.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				default: () => source_default,
			});
			var mod,
				isNodeMode,
				target,
				__create = Object.create,
				__defProp = Object.defineProperty,
				__getOwnPropDesc = Object.getOwnPropertyDescriptor,
				__getOwnPropNames = Object.getOwnPropertyNames,
				__getProtoOf = Object.getPrototypeOf,
				__hasOwnProp = Object.prototype.hasOwnProperty,
				__commonJS = (cb, mod) =>
					function __require() {
						return (
							mod ||
								(0, cb[__getOwnPropNames(cb)[0]])(
									(mod = { exports: {} }).exports,
									mod,
								),
							mod.exports
						);
					},
				require_codes = __commonJS({
					'node_modules/statuses/codes.json'(exports, module) {
						module.exports = {
							100: 'Continue',
							101: 'Switching Protocols',
							102: 'Processing',
							103: 'Early Hints',
							200: 'OK',
							201: 'Created',
							202: 'Accepted',
							203: 'Non-Authoritative Information',
							204: 'No Content',
							205: 'Reset Content',
							206: 'Partial Content',
							207: 'Multi-Status',
							208: 'Already Reported',
							226: 'IM Used',
							300: 'Multiple Choices',
							301: 'Moved Permanently',
							302: 'Found',
							303: 'See Other',
							304: 'Not Modified',
							305: 'Use Proxy',
							307: 'Temporary Redirect',
							308: 'Permanent Redirect',
							400: 'Bad Request',
							401: 'Unauthorized',
							402: 'Payment Required',
							403: 'Forbidden',
							404: 'Not Found',
							405: 'Method Not Allowed',
							406: 'Not Acceptable',
							407: 'Proxy Authentication Required',
							408: 'Request Timeout',
							409: 'Conflict',
							410: 'Gone',
							411: 'Length Required',
							412: 'Precondition Failed',
							413: 'Payload Too Large',
							414: 'URI Too Long',
							415: 'Unsupported Media Type',
							416: 'Range Not Satisfiable',
							417: 'Expectation Failed',
							418: "I'm a Teapot",
							421: 'Misdirected Request',
							422: 'Unprocessable Entity',
							423: 'Locked',
							424: 'Failed Dependency',
							425: 'Too Early',
							426: 'Upgrade Required',
							428: 'Precondition Required',
							429: 'Too Many Requests',
							431: 'Request Header Fields Too Large',
							451: 'Unavailable For Legal Reasons',
							500: 'Internal Server Error',
							501: 'Not Implemented',
							502: 'Bad Gateway',
							503: 'Service Unavailable',
							504: 'Gateway Timeout',
							505: 'HTTP Version Not Supported',
							506: 'Variant Also Negotiates',
							507: 'Insufficient Storage',
							508: 'Loop Detected',
							509: 'Bandwidth Limit Exceeded',
							510: 'Not Extended',
							511: 'Network Authentication Required',
						};
					},
				}),
				require_statuses = __commonJS({
					'node_modules/statuses/index.js'(exports, module) {
						var codes = require_codes();
						function getStatusMessage(code) {
							if (
								!Object.prototype.hasOwnProperty.call(
									status2.message,
									code,
								)
							)
								throw new Error('invalid status code: ' + code);
							return status2.message[code];
						}
						function status2(code) {
							if ('number' == typeof code)
								return getStatusMessage(code);
							if ('string' != typeof code)
								throw new TypeError(
									'code must be a number or string',
								);
							var n = parseInt(code, 10);
							return isNaN(n)
								? (function getStatusCode(message) {
										var msg = message.toLowerCase();
										if (
											!Object.prototype.hasOwnProperty.call(
												status2.code,
												msg,
											)
										)
											throw new Error(
												'invalid status message: "' +
													message +
													'"',
											);
										return status2.code[msg];
								  })(code)
								: getStatusMessage(n);
						}
						(module.exports = status2),
							(status2.message = codes),
							(status2.code =
								(function createMessageToStatusCodeMap(codes2) {
									var map = {};
									return (
										Object.keys(codes2).forEach(
											function forEachCode(code) {
												var message = codes2[code],
													status3 = Number(code);
												map[message.toLowerCase()] =
													status3;
											},
										),
										map
									);
								})(codes)),
							(status2.codes = (function createStatusCodeList(
								codes2,
							) {
								return Object.keys(codes2).map(function mapCode(
									code,
								) {
									return Number(code);
								});
							})(codes)),
							(status2.redirect = {
								300: !0,
								301: !0,
								302: !0,
								303: !0,
								305: !0,
								307: !0,
								308: !0,
							}),
							(status2.empty = { 204: !0, 205: !0, 304: !0 }),
							(status2.retry = { 502: !0, 503: !0, 504: !0 });
					},
				}),
				source_default = ((mod = require_statuses()),
				(isNodeMode = 1),
				(target = null != mod ? __create(__getProtoOf(mod)) : {}),
				((to, from, except, desc) => {
					if (
						(from && 'object' == typeof from) ||
						'function' == typeof from
					)
						for (let key of __getOwnPropNames(from))
							__hasOwnProp.call(to, key) ||
								key === except ||
								__defProp(to, key, {
									get: () => from[key],
									enumerable:
										!(desc = __getOwnPropDesc(from, key)) ||
										desc.enumerable,
								});
					return to;
				})(
					!isNodeMode && mod && mod.__esModule
						? target
						: __defProp(target, 'default', {
								value: mod,
								enumerable: !0,
						  }),
					mod,
				)).default;
		},
		'./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				Z: () => createCache,
			});
			var StyleSheet = (function () {
					function StyleSheet(options) {
						var _this = this;
						(this._insertTag = function (tag) {
							var before;
							(before =
								0 === _this.tags.length
									? _this.insertionPoint
										? _this.insertionPoint.nextSibling
										: _this.prepend
										? _this.container.firstChild
										: _this.before
									: _this.tags[_this.tags.length - 1]
											.nextSibling),
								_this.container.insertBefore(tag, before),
								_this.tags.push(tag);
						}),
							(this.isSpeedy =
								void 0 === options.speedy || options.speedy),
							(this.tags = []),
							(this.ctr = 0),
							(this.nonce = options.nonce),
							(this.key = options.key),
							(this.container = options.container),
							(this.prepend = options.prepend),
							(this.insertionPoint = options.insertionPoint),
							(this.before = null);
					}
					var _proto = StyleSheet.prototype;
					return (
						(_proto.hydrate = function hydrate(nodes) {
							nodes.forEach(this._insertTag);
						}),
						(_proto.insert = function insert(rule) {
							this.ctr % (this.isSpeedy ? 65e3 : 1) == 0 &&
								this._insertTag(
									(function createStyleElement(options) {
										var tag =
											document.createElement('style');
										return (
											tag.setAttribute(
												'data-emotion',
												options.key,
											),
											void 0 !== options.nonce &&
												tag.setAttribute(
													'nonce',
													options.nonce,
												),
											tag.appendChild(
												document.createTextNode(''),
											),
											tag.setAttribute('data-s', ''),
											tag
										);
									})(this),
								);
							var tag = this.tags[this.tags.length - 1];
							if (this.isSpeedy) {
								var sheet = (function sheetForTag(tag) {
									if (tag.sheet) return tag.sheet;
									for (
										var i = 0;
										i < document.styleSheets.length;
										i++
									)
										if (
											document.styleSheets[i]
												.ownerNode === tag
										)
											return document.styleSheets[i];
								})(tag);
								try {
									sheet.insertRule(
										rule,
										sheet.cssRules.length,
									);
								} catch (e) {
									0;
								}
							} else
								tag.appendChild(document.createTextNode(rule));
							this.ctr++;
						}),
						(_proto.flush = function flush() {
							this.tags.forEach(function (tag) {
								return (
									tag.parentNode &&
									tag.parentNode.removeChild(tag)
								);
							}),
								(this.tags = []),
								(this.ctr = 0);
						}),
						StyleSheet
					);
				})(),
				abs = Math.abs,
				Utility_from = String.fromCharCode,
				Utility_assign = Object.assign;
			function trim(value) {
				return value.trim();
			}
			function Utility_replace(value, pattern, replacement) {
				return value.replace(pattern, replacement);
			}
			function indexof(value, search) {
				return value.indexOf(search);
			}
			function Utility_charat(value, index) {
				return 0 | value.charCodeAt(index);
			}
			function Utility_substr(value, begin, end) {
				return value.slice(begin, end);
			}
			function Utility_strlen(value) {
				return value.length;
			}
			function Utility_sizeof(value) {
				return value.length;
			}
			function Utility_append(value, array) {
				return array.push(value), value;
			}
			var line = 1,
				column = 1,
				Tokenizer_length = 0,
				position = 0,
				character = 0,
				characters = '';
			function node(value, root, parent, type, props, children, length) {
				return {
					value,
					root,
					parent,
					type,
					props,
					children,
					line,
					column,
					length,
					return: '',
				};
			}
			function Tokenizer_copy(root, props) {
				return Utility_assign(
					node('', null, null, '', null, null, 0),
					root,
					{ length: -root.length },
					props,
				);
			}
			function prev() {
				return (
					(character =
						position > 0
							? Utility_charat(characters, --position)
							: 0),
					column--,
					10 === character && ((column = 1), line--),
					character
				);
			}
			function next() {
				return (
					(character =
						position < Tokenizer_length
							? Utility_charat(characters, position++)
							: 0),
					column++,
					10 === character && ((column = 1), line++),
					character
				);
			}
			function peek() {
				return Utility_charat(characters, position);
			}
			function caret() {
				return position;
			}
			function slice(begin, end) {
				return Utility_substr(characters, begin, end);
			}
			function token(type) {
				switch (type) {
					case 0:
					case 9:
					case 10:
					case 13:
					case 32:
						return 5;
					case 33:
					case 43:
					case 44:
					case 47:
					case 62:
					case 64:
					case 126:
					case 59:
					case 123:
					case 125:
						return 4;
					case 58:
						return 3;
					case 34:
					case 39:
					case 40:
					case 91:
						return 2;
					case 41:
					case 93:
						return 1;
				}
				return 0;
			}
			function alloc(value) {
				return (
					(line = column = 1),
					(Tokenizer_length = Utility_strlen((characters = value))),
					(position = 0),
					[]
				);
			}
			function dealloc(value) {
				return (characters = ''), value;
			}
			function delimit(type) {
				return trim(
					slice(
						position - 1,
						delimiter(
							91 === type
								? type + 2
								: 40 === type
								? type + 1
								: type,
						),
					),
				);
			}
			function whitespace(type) {
				for (; (character = peek()) && character < 33; ) next();
				return token(type) > 2 || token(character) > 3 ? '' : ' ';
			}
			function escaping(index, count) {
				for (
					;
					--count &&
					next() &&
					!(
						character < 48 ||
						character > 102 ||
						(character > 57 && character < 65) ||
						(character > 70 && character < 97)
					);

				);
				return slice(
					index,
					caret() + (count < 6 && 32 == peek() && 32 == next()),
				);
			}
			function delimiter(type) {
				for (; next(); )
					switch (character) {
						case type:
							return position;
						case 34:
						case 39:
							34 !== type && 39 !== type && delimiter(character);
							break;
						case 40:
							41 === type && delimiter(type);
							break;
						case 92:
							next();
					}
				return position;
			}
			function commenter(type, index) {
				for (
					;
					next() &&
					type + character !== 57 &&
					(type + character !== 84 || 47 !== peek());

				);
				return (
					'/*' +
					slice(index, position - 1) +
					'*' +
					Utility_from(47 === type ? type : next())
				);
			}
			function identifier(index) {
				for (; !token(peek()); ) next();
				return slice(index, position);
			}
			var COMMENT = 'comm',
				Enum_RULESET = 'rule',
				Enum_DECLARATION = 'decl';
			function Serializer_serialize(children, callback) {
				for (
					var output = '', length = Utility_sizeof(children), i = 0;
					i < length;
					i++
				)
					output +=
						callback(children[i], i, children, callback) || '';
				return output;
			}
			function stringify(element, index, children, callback) {
				switch (element.type) {
					case '@layer':
						if (element.children.length) break;
					case '@import':
					case Enum_DECLARATION:
						return (element.return =
							element.return || element.value);
					case COMMENT:
						return '';
					case '@keyframes':
						return (element.return =
							element.value +
							'{' +
							Serializer_serialize(element.children, callback) +
							'}');
					case Enum_RULESET:
						element.value = element.props.join(',');
				}
				return Utility_strlen(
					(children = Serializer_serialize(
						element.children,
						callback,
					)),
				)
					? (element.return = element.value + '{' + children + '}')
					: '';
			}
			function compile(value) {
				return dealloc(
					parse(
						'',
						null,
						null,
						null,
						[''],
						(value = alloc(value)),
						0,
						[0],
						value,
					),
				);
			}
			function parse(
				value,
				root,
				parent,
				rule,
				rules,
				rulesets,
				pseudo,
				points,
				declarations,
			) {
				for (
					var index = 0,
						offset = 0,
						length = pseudo,
						atrule = 0,
						property = 0,
						previous = 0,
						variable = 1,
						scanning = 1,
						ampersand = 1,
						character = 0,
						type = '',
						props = rules,
						children = rulesets,
						reference = rule,
						characters = type;
					scanning;

				)
					switch (((previous = character), (character = next()))) {
						case 40:
							if (
								108 != previous &&
								58 == Utility_charat(characters, length - 1)
							) {
								-1 !=
									indexof(
										(characters += Utility_replace(
											delimit(character),
											'&',
											'&\f',
										)),
										'&\f',
									) && (ampersand = -1);
								break;
							}
						case 34:
						case 39:
						case 91:
							characters += delimit(character);
							break;
						case 9:
						case 10:
						case 13:
						case 32:
							characters += whitespace(previous);
							break;
						case 92:
							characters += escaping(caret() - 1, 7);
							continue;
						case 47:
							switch (peek()) {
								case 42:
								case 47:
									Utility_append(
										comment(
											commenter(next(), caret()),
											root,
											parent,
										),
										declarations,
									);
									break;
								default:
									characters += '/';
							}
							break;
						case 123 * variable:
							points[index++] =
								Utility_strlen(characters) * ampersand;
						case 125 * variable:
						case 59:
						case 0:
							switch (character) {
								case 0:
								case 125:
									scanning = 0;
								case 59 + offset:
									-1 == ampersand &&
										(characters = Utility_replace(
											characters,
											/\f/g,
											'',
										)),
										property > 0 &&
											Utility_strlen(characters) -
												length &&
											Utility_append(
												property > 32
													? declaration(
															characters + ';',
															rule,
															parent,
															length - 1,
													  )
													: declaration(
															Utility_replace(
																characters,
																' ',
																'',
															) + ';',
															rule,
															parent,
															length - 2,
													  ),
												declarations,
											);
									break;
								case 59:
									characters += ';';
								default:
									if (
										(Utility_append(
											(reference = ruleset(
												characters,
												root,
												parent,
												index,
												offset,
												rules,
												points,
												type,
												(props = []),
												(children = []),
												length,
											)),
											rulesets,
										),
										123 === character)
									)
										if (0 === offset)
											parse(
												characters,
												root,
												reference,
												reference,
												props,
												rulesets,
												length,
												points,
												children,
											);
										else
											switch (
												99 === atrule &&
												110 ===
													Utility_charat(
														characters,
														3,
													)
													? 100
													: atrule
											) {
												case 100:
												case 108:
												case 109:
												case 115:
													parse(
														value,
														reference,
														reference,
														rule &&
															Utility_append(
																ruleset(
																	value,
																	reference,
																	reference,
																	0,
																	0,
																	rules,
																	points,
																	type,
																	rules,
																	(props =
																		[]),
																	length,
																),
																children,
															),
														rules,
														children,
														length,
														points,
														rule ? props : children,
													);
													break;
												default:
													parse(
														characters,
														reference,
														reference,
														reference,
														[''],
														children,
														0,
														points,
														children,
													);
											}
							}
							(index = offset = property = 0),
								(variable = ampersand = 1),
								(type = characters = ''),
								(length = pseudo);
							break;
						case 58:
							(length = 1 + Utility_strlen(characters)),
								(property = previous);
						default:
							if (variable < 1)
								if (123 == character) --variable;
								else if (
									125 == character &&
									0 == variable++ &&
									125 == prev()
								)
									continue;
							switch (
								((characters += Utility_from(character)),
								character * variable)
							) {
								case 38:
									ampersand =
										offset > 0
											? 1
											: ((characters += '\f'), -1);
									break;
								case 44:
									(points[index++] =
										(Utility_strlen(characters) - 1) *
										ampersand),
										(ampersand = 1);
									break;
								case 64:
									45 === peek() &&
										(characters += delimit(next())),
										(atrule = peek()),
										(offset = length =
											Utility_strlen(
												(type = characters +=
													identifier(caret())),
											)),
										character++;
									break;
								case 45:
									45 === previous &&
										2 == Utility_strlen(characters) &&
										(variable = 0);
							}
					}
				return rulesets;
			}
			function ruleset(
				value,
				root,
				parent,
				index,
				offset,
				rules,
				points,
				type,
				props,
				children,
				length,
			) {
				for (
					var post = offset - 1,
						rule = 0 === offset ? rules : [''],
						size = Utility_sizeof(rule),
						i = 0,
						j = 0,
						k = 0;
					i < index;
					++i
				)
					for (
						var x = 0,
							y = Utility_substr(
								value,
								post + 1,
								(post = abs((j = points[i]))),
							),
							z = value;
						x < size;
						++x
					)
						(z = trim(
							j > 0
								? rule[x] + ' ' + y
								: Utility_replace(y, /&\f/g, rule[x]),
						)) && (props[k++] = z);
				return node(
					value,
					root,
					parent,
					0 === offset ? Enum_RULESET : type,
					props,
					children,
					length,
				);
			}
			function comment(value, root, parent) {
				return node(
					value,
					root,
					parent,
					COMMENT,
					Utility_from(
						(function Tokenizer_char() {
							return character;
						})(),
					),
					Utility_substr(value, 2, -2),
					0,
				);
			}
			function declaration(value, root, parent, length) {
				return node(
					value,
					root,
					parent,
					Enum_DECLARATION,
					Utility_substr(value, 0, length),
					Utility_substr(value, length + 1, -1),
					length,
				);
			}
			var identifierWithPointTracking =
					function identifierWithPointTracking(begin, points, index) {
						for (
							var previous = 0, character = 0;
							(previous = character),
								(character = peek()),
								38 === previous &&
									12 === character &&
									(points[index] = 1),
								!token(character);

						)
							next();
						return slice(begin, position);
					},
				getRules = function getRules(value, points) {
					return dealloc(
						(function toRules(parsed, points) {
							var index = -1,
								character = 44;
							do {
								switch (token(character)) {
									case 0:
										38 === character &&
											12 === peek() &&
											(points[index] = 1),
											(parsed[index] +=
												identifierWithPointTracking(
													position - 1,
													points,
													index,
												));
										break;
									case 2:
										parsed[index] += delimit(character);
										break;
									case 4:
										if (44 === character) {
											(parsed[++index] =
												58 === peek() ? '&\f' : ''),
												(points[index] =
													parsed[index].length);
											break;
										}
									default:
										parsed[index] +=
											Utility_from(character);
								}
							} while ((character = next()));
							return parsed;
						})(alloc(value), points),
					);
				},
				fixedElements = new WeakMap(),
				compat = function compat(element) {
					if (
						'rule' === element.type &&
						element.parent &&
						!(element.length < 1)
					) {
						for (
							var value = element.value,
								parent = element.parent,
								isImplicitRule =
									element.column === parent.column &&
									element.line === parent.line;
							'rule' !== parent.type;

						)
							if (!(parent = parent.parent)) return;
						if (
							(1 !== element.props.length ||
								58 === value.charCodeAt(0) ||
								fixedElements.get(parent)) &&
							!isImplicitRule
						) {
							fixedElements.set(element, !0);
							for (
								var points = [],
									rules = getRules(value, points),
									parentRules = parent.props,
									i = 0,
									k = 0;
								i < rules.length;
								i++
							)
								for (
									var j = 0;
									j < parentRules.length;
									j++, k++
								)
									element.props[k] = points[i]
										? rules[i].replace(
												/&\f/g,
												parentRules[j],
										  )
										: parentRules[j] + ' ' + rules[i];
						}
					}
				},
				removeLabel = function removeLabel(element) {
					if ('decl' === element.type) {
						var value = element.value;
						108 === value.charCodeAt(0) &&
							98 === value.charCodeAt(2) &&
							((element.return = ''), (element.value = ''));
					}
				};
			function emotion_cache_browser_esm_prefix(value, length) {
				switch (
					(function hash(value, length) {
						return 45 ^ Utility_charat(value, 0)
							? (((((((length << 2) ^ Utility_charat(value, 0)) <<
									2) ^
									Utility_charat(value, 1)) <<
									2) ^
									Utility_charat(value, 2)) <<
									2) ^
									Utility_charat(value, 3)
							: 0;
					})(value, length)
				) {
					case 5103:
						return '-webkit-print-' + value + value;
					case 5737:
					case 4201:
					case 3177:
					case 3433:
					case 1641:
					case 4457:
					case 2921:
					case 5572:
					case 6356:
					case 5844:
					case 3191:
					case 6645:
					case 3005:
					case 6391:
					case 5879:
					case 5623:
					case 6135:
					case 4599:
					case 4855:
					case 4215:
					case 6389:
					case 5109:
					case 5365:
					case 5621:
					case 3829:
						return '-webkit-' + value + value;
					case 5349:
					case 4246:
					case 4810:
					case 6968:
					case 2756:
						return (
							'-webkit-' +
							value +
							'-moz-' +
							value +
							'-ms-' +
							value +
							value
						);
					case 6828:
					case 4268:
						return '-webkit-' + value + '-ms-' + value + value;
					case 6165:
						return '-webkit-' + value + '-ms-flex-' + value + value;
					case 5187:
						return (
							'-webkit-' +
							value +
							Utility_replace(
								value,
								/(\w+).+(:[^]+)/,
								'-webkit-box-$1$2-ms-flex-$1$2',
							) +
							value
						);
					case 5443:
						return (
							'-webkit-' +
							value +
							'-ms-flex-item-' +
							Utility_replace(value, /flex-|-self/, '') +
							value
						);
					case 4675:
						return (
							'-webkit-' +
							value +
							'-ms-flex-line-pack' +
							Utility_replace(
								value,
								/align-content|flex-|-self/,
								'',
							) +
							value
						);
					case 5548:
						return (
							'-webkit-' +
							value +
							'-ms-' +
							Utility_replace(value, 'shrink', 'negative') +
							value
						);
					case 5292:
						return (
							'-webkit-' +
							value +
							'-ms-' +
							Utility_replace(value, 'basis', 'preferred-size') +
							value
						);
					case 6060:
						return (
							'-webkit-box-' +
							Utility_replace(value, '-grow', '') +
							'-webkit-' +
							value +
							'-ms-' +
							Utility_replace(value, 'grow', 'positive') +
							value
						);
					case 4554:
						return (
							'-webkit-' +
							Utility_replace(
								value,
								/([^-])(transform)/g,
								'$1-webkit-$2',
							) +
							value
						);
					case 6187:
						return (
							Utility_replace(
								Utility_replace(
									Utility_replace(
										value,
										/(zoom-|grab)/,
										'-webkit-$1',
									),
									/(image-set)/,
									'-webkit-$1',
								),
								value,
								'',
							) + value
						);
					case 5495:
					case 3959:
						return Utility_replace(
							value,
							/(image-set\([^]*)/,
							'-webkit-$1$`$1',
						);
					case 4968:
						return (
							Utility_replace(
								Utility_replace(
									value,
									/(.+:)(flex-)?(.*)/,
									'-webkit-box-pack:$3-ms-flex-pack:$3',
								),
								/s.+-b[^;]+/,
								'justify',
							) +
							'-webkit-' +
							value +
							value
						);
					case 4095:
					case 3583:
					case 4068:
					case 2532:
						return (
							Utility_replace(
								value,
								/(.+)-inline(.+)/,
								'-webkit-$1$2',
							) + value
						);
					case 8116:
					case 7059:
					case 5753:
					case 5535:
					case 5445:
					case 5701:
					case 4933:
					case 4677:
					case 5533:
					case 5789:
					case 5021:
					case 4765:
						if (Utility_strlen(value) - 1 - length > 6)
							switch (Utility_charat(value, length + 1)) {
								case 109:
									if (
										45 !== Utility_charat(value, length + 4)
									)
										break;
								case 102:
									return (
										Utility_replace(
											value,
											/(.+:)(.+)-([^]+)/,
											'$1-webkit-$2-$3$1-moz-' +
												(108 ==
												Utility_charat(
													value,
													length + 3,
												)
													? '$3'
													: '$2-$3'),
										) + value
									);
								case 115:
									return ~indexof(value, 'stretch')
										? emotion_cache_browser_esm_prefix(
												Utility_replace(
													value,
													'stretch',
													'fill-available',
												),
												length,
										  ) + value
										: value;
							}
						break;
					case 4949:
						if (115 !== Utility_charat(value, length + 1)) break;
					case 6444:
						switch (
							Utility_charat(
								value,
								Utility_strlen(value) -
									3 -
									(~indexof(value, '!important') && 10),
							)
						) {
							case 107:
								return (
									Utility_replace(value, ':', ':-webkit-') +
									value
								);
							case 101:
								return (
									Utility_replace(
										value,
										/(.+:)([^;!]+)(;|!.+)?/,
										'$1-webkit-' +
											(45 === Utility_charat(value, 14)
												? 'inline-'
												: '') +
											'box$3$1-webkit-$2$3$1-ms-$2box$3',
									) + value
								);
						}
						break;
					case 5936:
						switch (Utility_charat(value, length + 11)) {
							case 114:
								return (
									'-webkit-' +
									value +
									'-ms-' +
									Utility_replace(
										value,
										/[svh]\w+-[tblr]{2}/,
										'tb',
									) +
									value
								);
							case 108:
								return (
									'-webkit-' +
									value +
									'-ms-' +
									Utility_replace(
										value,
										/[svh]\w+-[tblr]{2}/,
										'tb-rl',
									) +
									value
								);
							case 45:
								return (
									'-webkit-' +
									value +
									'-ms-' +
									Utility_replace(
										value,
										/[svh]\w+-[tblr]{2}/,
										'lr',
									) +
									value
								);
						}
						return '-webkit-' + value + '-ms-' + value + value;
				}
				return value;
			}
			var defaultStylisPlugins = [
					function prefixer(element, index, children, callback) {
						if (element.length > -1 && !element.return)
							switch (element.type) {
								case Enum_DECLARATION:
									element.return =
										emotion_cache_browser_esm_prefix(
											element.value,
											element.length,
										);
									break;
								case '@keyframes':
									return Serializer_serialize(
										[
											Tokenizer_copy(element, {
												value: Utility_replace(
													element.value,
													'@',
													'@-webkit-',
												),
											}),
										],
										callback,
									);
								case Enum_RULESET:
									if (element.length)
										return (function Utility_combine(
											array,
											callback,
										) {
											return array.map(callback).join('');
										})(element.props, function (value) {
											switch (
												(function Utility_match(
													value,
													pattern,
												) {
													return (value =
														pattern.exec(value))
														? value[0]
														: value;
												})(
													value,
													/(::plac\w+|:read-\w+)/,
												)
											) {
												case ':read-only':
												case ':read-write':
													return Serializer_serialize(
														[
															Tokenizer_copy(
																element,
																{
																	props: [
																		Utility_replace(
																			value,
																			/:(read-\w+)/,
																			':-moz-$1',
																		),
																	],
																},
															),
														],
														callback,
													);
												case '::placeholder':
													return Serializer_serialize(
														[
															Tokenizer_copy(
																element,
																{
																	props: [
																		Utility_replace(
																			value,
																			/:(plac\w+)/,
																			':-webkit-input-$1',
																		),
																	],
																},
															),
															Tokenizer_copy(
																element,
																{
																	props: [
																		Utility_replace(
																			value,
																			/:(plac\w+)/,
																			':-moz-$1',
																		),
																	],
																},
															),
															Tokenizer_copy(
																element,
																{
																	props: [
																		Utility_replace(
																			value,
																			/:(plac\w+)/,
																			'-ms-input-$1',
																		),
																	],
																},
															),
														],
														callback,
													);
											}
											return '';
										});
							}
					},
				],
				createCache = function createCache(options) {
					var key = options.key;
					if ('css' === key) {
						var ssrStyles = document.querySelectorAll(
							'style[data-emotion]:not([data-s])',
						);
						Array.prototype.forEach.call(
							ssrStyles,
							function (node) {
								-1 !==
									node
										.getAttribute('data-emotion')
										.indexOf(' ') &&
									(document.head.appendChild(node),
									node.setAttribute('data-s', ''));
							},
						);
					}
					var stylisPlugins =
						options.stylisPlugins || defaultStylisPlugins;
					var container,
						_insert,
						inserted = {},
						nodesToHydrate = [];
					(container = options.container || document.head),
						Array.prototype.forEach.call(
							document.querySelectorAll(
								'style[data-emotion^="' + key + ' "]',
							),
							function (node) {
								for (
									var attrib = node
											.getAttribute('data-emotion')
											.split(' '),
										i = 1;
									i < attrib.length;
									i++
								)
									inserted[attrib[i]] = !0;
								nodesToHydrate.push(node);
							},
						);
					var currentSheet,
						callback,
						finalizingPlugins = [
							stringify,
							((callback = function (rule) {
								currentSheet.insert(rule);
							}),
							function (element) {
								element.root ||
									((element = element.return) &&
										callback(element));
							}),
						],
						serializer = (function middleware(collection) {
							var length = Utility_sizeof(collection);
							return function (
								element,
								index,
								children,
								callback,
							) {
								for (var output = '', i = 0; i < length; i++)
									output +=
										collection[i](
											element,
											index,
											children,
											callback,
										) || '';
								return output;
							};
						})(
							[compat, removeLabel].concat(
								stylisPlugins,
								finalizingPlugins,
							),
						);
					_insert = function insert(
						selector,
						serialized,
						sheet,
						shouldCache,
					) {
						(currentSheet = sheet),
							(function stylis(styles) {
								Serializer_serialize(
									compile(styles),
									serializer,
								);
							})(
								selector
									? selector + '{' + serialized.styles + '}'
									: serialized.styles,
							),
							shouldCache &&
								(cache.inserted[serialized.name] = !0);
					};
					var cache = {
						key,
						sheet: new StyleSheet({
							key,
							container,
							nonce: options.nonce,
							speedy: options.speedy,
							prepend: options.prepend,
							insertionPoint: options.insertionPoint,
						}),
						nonce: options.nonce,
						inserted,
						registered: {},
						insert: _insert,
					};
					return cache.sheet.hydrate(nodesToHydrate), cache;
				};
		},
		'./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					E: () => Emotion$1,
					T: () => ThemeContext,
					a: () => ThemeProvider,
					c: () => createEmotionProps,
					h: () =>
						emotion_element_c39617d8_browser_esm_hasOwnProperty,
					i: () => isBrowser,
					w: () => withEmotionCache,
				});
				var react = __webpack_require__(
						'./node_modules/react/index.js',
					),
					emotion_cache_browser_esm = __webpack_require__(
						'./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js',
					),
					esm_extends = __webpack_require__(
						'./node_modules/@babel/runtime/helpers/esm/extends.js',
					),
					weakMemoize = function weakMemoize(func) {
						var cache = new WeakMap();
						return function (arg) {
							if (cache.has(arg)) return cache.get(arg);
							var ret = func(arg);
							return cache.set(arg, ret), ret;
						};
					},
					emotion_utils_browser_esm = __webpack_require__(
						'./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js',
					),
					emotion_serialize_esm = __webpack_require__(
						'./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js',
					),
					emotion_use_insertion_effect_with_fallbacks_browser_esm =
						__webpack_require__(
							'./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js',
						),
					isBrowser = !0,
					emotion_element_c39617d8_browser_esm_hasOwnProperty = {}
						.hasOwnProperty,
					EmotionCacheContext = react.createContext(
						'undefined' != typeof HTMLElement
							? (0, emotion_cache_browser_esm.Z)({ key: 'css' })
							: null,
					);
				EmotionCacheContext.Provider;
				var withEmotionCache = function withEmotionCache(func) {
					return (0, react.forwardRef)(function (props, ref) {
						var cache = (0, react.useContext)(EmotionCacheContext);
						return func(props, cache, ref);
					});
				};
				isBrowser ||
					(withEmotionCache = function withEmotionCache(func) {
						return function (props) {
							var cache = (0, react.useContext)(
								EmotionCacheContext,
							);
							return null === cache
								? ((cache = (0, emotion_cache_browser_esm.Z)({
										key: 'css',
								  })),
								  react.createElement(
										EmotionCacheContext.Provider,
										{ value: cache },
										func(props, cache),
								  ))
								: func(props, cache);
						};
					});
				var ThemeContext = react.createContext({});
				var createCacheWithTheme = weakMemoize(function (outerTheme) {
						return weakMemoize(function (theme) {
							return (function getTheme(outerTheme, theme) {
								return 'function' == typeof theme
									? theme(outerTheme)
									: (0, esm_extends.Z)({}, outerTheme, theme);
							})(outerTheme, theme);
						});
					}),
					ThemeProvider = function ThemeProvider(props) {
						var theme = react.useContext(ThemeContext);
						return (
							props.theme !== theme &&
								(theme = createCacheWithTheme(theme)(
									props.theme,
								)),
							react.createElement(
								ThemeContext.Provider,
								{ value: theme },
								props.children,
							)
						);
					};
				var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__',
					createEmotionProps = function createEmotionProps(
						type,
						props,
					) {
						var newProps = {};
						for (var key in props)
							emotion_element_c39617d8_browser_esm_hasOwnProperty.call(
								props,
								key,
							) && (newProps[key] = props[key]);
						return (newProps[typePropName] = type), newProps;
					},
					Insertion = function Insertion(_ref) {
						var cache = _ref.cache,
							serialized = _ref.serialized,
							isStringTag = _ref.isStringTag;
						return (
							(0, emotion_utils_browser_esm.hC)(
								cache,
								serialized,
								isStringTag,
							),
							(0,
							emotion_use_insertion_effect_with_fallbacks_browser_esm.L)(
								function () {
									return (0, emotion_utils_browser_esm.My)(
										cache,
										serialized,
										isStringTag,
									);
								},
							),
							null
						);
					};
				var Emotion$1 = withEmotionCache(function (props, cache, ref) {
					var cssProp = props.css;
					'string' == typeof cssProp &&
						void 0 !== cache.registered[cssProp] &&
						(cssProp = cache.registered[cssProp]);
					var WrappedComponent = props[typePropName],
						registeredStyles = [cssProp],
						className = '';
					'string' == typeof props.className
						? (className = (0, emotion_utils_browser_esm.fp)(
								cache.registered,
								registeredStyles,
								props.className,
						  ))
						: null != props.className &&
						  (className = props.className + ' ');
					var serialized = (0, emotion_serialize_esm.O)(
						registeredStyles,
						void 0,
						react.useContext(ThemeContext),
					);
					className += cache.key + '-' + serialized.name;
					var newProps = {};
					for (var key in props)
						emotion_element_c39617d8_browser_esm_hasOwnProperty.call(
							props,
							key,
						) &&
							'css' !== key &&
							key !== typePropName &&
							(newProps[key] = props[key]);
					return (
						(newProps.ref = ref),
						(newProps.className = className),
						react.createElement(
							react.Fragment,
							null,
							react.createElement(Insertion, {
								cache,
								serialized,
								isStringTag:
									'string' == typeof WrappedComponent,
							}),
							react.createElement(WrappedComponent, newProps),
						)
					);
				});
			},
		'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				az: () => jsx,
				iv: () => css,
				xB: () => Global,
			});
			var _emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ =
					__webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js',
					),
				react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
					'./node_modules/react/index.js',
				),
				_emotion_utils__WEBPACK_IMPORTED_MODULE_6__ =
					__webpack_require__(
						'./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js',
					),
				_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__ =
					__webpack_require__(
						'./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js',
					),
				_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__ =
					__webpack_require__(
						'./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js',
					),
				jsx =
					(__webpack_require__(
						'./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js',
					),
					__webpack_require__(
						'./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js',
					),
					function jsx(type, props) {
						var args = arguments;
						if (
							null == props ||
							!_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.h.call(
								props,
								'css',
							)
						)
							return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(
								void 0,
								args,
							);
						var argsLength = args.length,
							createElementArgArray = new Array(argsLength);
						(createElementArgArray[0] =
							_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.E),
							(createElementArgArray[1] = (0,
							_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.c)(
								type,
								props,
							));
						for (var i = 2; i < argsLength; i++)
							createElementArgArray[i] = args[i];
						return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(
							null,
							createElementArgArray,
						);
					}),
				Global = (0,
				_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.w)(
					function (props, cache) {
						var styles = props.styles,
							serialized = (0,
							_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__.O)(
								[styles],
								void 0,
								react__WEBPACK_IMPORTED_MODULE_0__.useContext(
									_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.T,
								),
							);
						if (
							!_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.i
						) {
							for (
								var _ref,
									serializedNames = serialized.name,
									serializedStyles = serialized.styles,
									next = serialized.next;
								void 0 !== next;

							)
								(serializedNames += ' ' + next.name),
									(serializedStyles += next.styles),
									(next = next.next);
							var shouldCache = !0 === cache.compat,
								rules = cache.insert(
									'',
									{
										name: serializedNames,
										styles: serializedStyles,
									},
									cache.sheet,
									shouldCache,
								);
							return shouldCache
								? null
								: react__WEBPACK_IMPORTED_MODULE_0__.createElement(
										'style',
										(((_ref = {})['data-emotion'] =
											cache.key +
											'-global ' +
											serializedNames),
										(_ref.dangerouslySetInnerHTML = {
											__html: rules,
										}),
										(_ref.nonce = cache.sheet.nonce),
										_ref),
								  );
						}
						var sheetRef =
							react__WEBPACK_IMPORTED_MODULE_0__.useRef();
						return (
							(0,
							_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__.j)(
								function () {
									var key = cache.key + '-global',
										sheet = new cache.sheet.constructor({
											key,
											nonce: cache.sheet.nonce,
											container: cache.sheet.container,
											speedy: cache.sheet.isSpeedy,
										}),
										rehydrating = !1,
										node = document.querySelector(
											'style[data-emotion="' +
												key +
												' ' +
												serialized.name +
												'"]',
										);
									return (
										cache.sheet.tags.length &&
											(sheet.before =
												cache.sheet.tags[0]),
										null !== node &&
											((rehydrating = !0),
											node.setAttribute(
												'data-emotion',
												key,
											),
											sheet.hydrate([node])),
										(sheetRef.current = [
											sheet,
											rehydrating,
										]),
										function () {
											sheet.flush();
										}
									);
								},
								[cache],
							),
							(0,
							_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__.j)(
								function () {
									var sheetRefCurrent = sheetRef.current,
										sheet = sheetRefCurrent[0];
									if (sheetRefCurrent[1])
										sheetRefCurrent[1] = !1;
									else {
										if (
											(void 0 !== serialized.next &&
												(0,
												_emotion_utils__WEBPACK_IMPORTED_MODULE_6__.My)(
													cache,
													serialized.next,
													!0,
												),
											sheet.tags.length)
										) {
											var element =
												sheet.tags[
													sheet.tags.length - 1
												].nextElementSibling;
											(sheet.before = element),
												sheet.flush();
										}
										cache.insert('', serialized, sheet, !1);
									}
								},
								[cache, serialized.name],
							),
							null
						);
					},
				);
			function css() {
				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				)
					args[_key] = arguments[_key];
				return (0, _emotion_serialize__WEBPACK_IMPORTED_MODULE_2__.O)(
					args,
				);
			}
		},
		'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					BX: () => jsxs,
					HY: () => Fragment,
					tZ: () => jsx,
				});
				var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/react/jsx-runtime.js',
						),
					_dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ =
						__webpack_require__(
							'./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js',
						),
					Fragment =
						(__webpack_require__('./node_modules/react/index.js'),
						__webpack_require__(
							'./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js',
						),
						__webpack_require__(
							'./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js',
						),
						__webpack_require__(
							'./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js',
						),
						__webpack_require__(
							'./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js',
						),
						react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment);
				function jsx(type, props, key) {
					return _dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.h.call(
						props,
						'css',
					)
						? react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(
								_dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.E,
								(0,
								_dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(
									type,
									props,
								),
								key,
						  )
						: react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(
								type,
								props,
								key,
						  );
				}
				function jsxs(type, props, key) {
					return _dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.h.call(
						props,
						'css',
					)
						? react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs(
								_dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.E,
								(0,
								_dist_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(
									type,
									props,
								),
								key,
						  )
						: react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs(
								type,
								props,
								key,
						  );
				}
			},
		'./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					O: () => serializeStyles,
				});
				var unitlessKeys = {
					animationIterationCount: 1,
					aspectRatio: 1,
					borderImageOutset: 1,
					borderImageSlice: 1,
					borderImageWidth: 1,
					boxFlex: 1,
					boxFlexGroup: 1,
					boxOrdinalGroup: 1,
					columnCount: 1,
					columns: 1,
					flex: 1,
					flexGrow: 1,
					flexPositive: 1,
					flexShrink: 1,
					flexNegative: 1,
					flexOrder: 1,
					gridRow: 1,
					gridRowEnd: 1,
					gridRowSpan: 1,
					gridRowStart: 1,
					gridColumn: 1,
					gridColumnEnd: 1,
					gridColumnSpan: 1,
					gridColumnStart: 1,
					msGridRow: 1,
					msGridRowSpan: 1,
					msGridColumn: 1,
					msGridColumnSpan: 1,
					fontWeight: 1,
					lineHeight: 1,
					opacity: 1,
					order: 1,
					orphans: 1,
					scale: 1,
					tabSize: 1,
					widows: 1,
					zIndex: 1,
					zoom: 1,
					WebkitLineClamp: 1,
					fillOpacity: 1,
					floodOpacity: 1,
					stopOpacity: 1,
					strokeDasharray: 1,
					strokeDashoffset: 1,
					strokeMiterlimit: 1,
					strokeOpacity: 1,
					strokeWidth: 1,
				};
				function memoize(fn) {
					var cache = Object.create(null);
					return function (arg) {
						return (
							void 0 === cache[arg] && (cache[arg] = fn(arg)),
							cache[arg]
						);
					};
				}
				var isDevelopment = !1,
					hyphenateRegex = /[A-Z]|^ms/g,
					animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
					isCustomProperty = function isCustomProperty(property) {
						return 45 === property.charCodeAt(1);
					},
					isProcessableValue = function isProcessableValue(value) {
						return null != value && 'boolean' != typeof value;
					},
					processStyleName = memoize(function (styleName) {
						return isCustomProperty(styleName)
							? styleName
							: styleName
									.replace(hyphenateRegex, '-$&')
									.toLowerCase();
					}),
					processStyleValue = function processStyleValue(key, value) {
						switch (key) {
							case 'animation':
							case 'animationName':
								if ('string' == typeof value)
									return value.replace(
										animationRegex,
										function (match, p1, p2) {
											return (
												(cursor = {
													name: p1,
													styles: p2,
													next: cursor,
												}),
												p1
											);
										},
									);
						}
						return 1 === unitlessKeys[key] ||
							isCustomProperty(key) ||
							'number' != typeof value ||
							0 === value
							? value
							: value + 'px';
					},
					noComponentSelectorMessage =
						'Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.';
				function handleInterpolation(
					mergedProps,
					registered,
					interpolation,
				) {
					if (null == interpolation) return '';
					var componentSelector = interpolation;
					if (void 0 !== componentSelector.__emotion_styles)
						return componentSelector;
					switch (typeof interpolation) {
						case 'boolean':
							return '';
						case 'object':
							var keyframes = interpolation;
							if (1 === keyframes.anim)
								return (
									(cursor = {
										name: keyframes.name,
										styles: keyframes.styles,
										next: cursor,
									}),
									keyframes.name
								);
							var serializedStyles = interpolation;
							if (void 0 !== serializedStyles.styles) {
								var next = serializedStyles.next;
								if (void 0 !== next)
									for (; void 0 !== next; )
										(cursor = {
											name: next.name,
											styles: next.styles,
											next: cursor,
										}),
											(next = next.next);
								return serializedStyles.styles + ';';
							}
							return (function createStringFromObject(
								mergedProps,
								registered,
								obj,
							) {
								var string = '';
								if (Array.isArray(obj))
									for (var i = 0; i < obj.length; i++)
										string +=
											handleInterpolation(
												mergedProps,
												registered,
												obj[i],
											) + ';';
								else
									for (var key in obj) {
										var value = obj[key];
										if ('object' != typeof value) {
											var asString = value;
											null != registered &&
											void 0 !== registered[asString]
												? (string +=
														key +
														'{' +
														registered[asString] +
														'}')
												: isProcessableValue(
														asString,
												  ) &&
												  (string +=
														processStyleName(key) +
														':' +
														processStyleValue(
															key,
															asString,
														) +
														';');
										} else {
											if (
												'NO_COMPONENT_SELECTOR' ===
													key &&
												isDevelopment
											)
												throw new Error(
													noComponentSelectorMessage,
												);
											if (
												!Array.isArray(value) ||
												'string' != typeof value[0] ||
												(null != registered &&
													void 0 !==
														registered[value[0]])
											) {
												var interpolated =
													handleInterpolation(
														mergedProps,
														registered,
														value,
													);
												switch (key) {
													case 'animation':
													case 'animationName':
														string +=
															processStyleName(
																key,
															) +
															':' +
															interpolated +
															';';
														break;
													default:
														string +=
															key +
															'{' +
															interpolated +
															'}';
												}
											} else
												for (
													var _i = 0;
													_i < value.length;
													_i++
												)
													isProcessableValue(
														value[_i],
													) &&
														(string +=
															processStyleName(
																key,
															) +
															':' +
															processStyleValue(
																key,
																value[_i],
															) +
															';');
										}
									}
								return string;
							})(mergedProps, registered, interpolation);
						case 'function':
							if (void 0 !== mergedProps) {
								var previousCursor = cursor,
									result = interpolation(mergedProps);
								return (
									(cursor = previousCursor),
									handleInterpolation(
										mergedProps,
										registered,
										result,
									)
								);
							}
					}
					var asString = interpolation;
					if (null == registered) return asString;
					var cached = registered[asString];
					return void 0 !== cached ? cached : asString;
				}
				var cursor,
					labelPattern = /label:\s*([^\s;{]+)\s*(;|$)/g;
				function serializeStyles(args, registered, mergedProps) {
					if (
						1 === args.length &&
						'object' == typeof args[0] &&
						null !== args[0] &&
						void 0 !== args[0].styles
					)
						return args[0];
					var stringMode = !0,
						styles = '';
					cursor = void 0;
					var strings = args[0];
					null == strings || void 0 === strings.raw
						? ((stringMode = !1),
						  (styles += handleInterpolation(
								mergedProps,
								registered,
								strings,
						  )))
						: (styles += strings[0]);
					for (var i = 1; i < args.length; i++) {
						if (
							((styles += handleInterpolation(
								mergedProps,
								registered,
								args[i],
							)),
							stringMode)
						)
							styles += strings[i];
					}
					labelPattern.lastIndex = 0;
					for (
						var match, identifierName = '';
						null !== (match = labelPattern.exec(styles));

					)
						identifierName += '-' + match[1];
					var name =
						(function murmur2(str) {
							for (
								var k, h = 0, i = 0, len = str.length;
								len >= 4;
								++i, len -= 4
							)
								(k =
									1540483477 *
										(65535 &
											(k =
												(255 & str.charCodeAt(i)) |
												((255 & str.charCodeAt(++i)) <<
													8) |
												((255 & str.charCodeAt(++i)) <<
													16) |
												((255 & str.charCodeAt(++i)) <<
													24))) +
									((59797 * (k >>> 16)) << 16)),
									(h =
										(1540483477 *
											(65535 & (k ^= k >>> 24)) +
											((59797 * (k >>> 16)) << 16)) ^
										(1540483477 * (65535 & h) +
											((59797 * (h >>> 16)) << 16)));
							switch (len) {
								case 3:
									h ^= (255 & str.charCodeAt(i + 2)) << 16;
								case 2:
									h ^= (255 & str.charCodeAt(i + 1)) << 8;
								case 1:
									h =
										1540483477 *
											(65535 &
												(h ^=
													255 & str.charCodeAt(i))) +
										((59797 * (h >>> 16)) << 16);
							}
							return (
								((h =
									1540483477 * (65535 & (h ^= h >>> 13)) +
									((59797 * (h >>> 16)) << 16)) ^
									(h >>> 15)) >>>
								0
							).toString(36);
						})(styles) + identifierName;
					return { name, styles, next: cursor };
				}
			},
		'./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
				__webpack_require__.d(__webpack_exports__, {
					L: () => useInsertionEffectAlwaysWithSyncFallback,
					j: () => useInsertionEffectWithLayoutFallback,
				});
				var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
						'./node_modules/react/index.js',
					),
					useInsertionEffect =
						!!(
							react__WEBPACK_IMPORTED_MODULE_0___namespace_cache ||
							(react__WEBPACK_IMPORTED_MODULE_0___namespace_cache =
								__webpack_require__.t(
									react__WEBPACK_IMPORTED_MODULE_0__,
									2,
								))
						).useInsertionEffect &&
						(
							react__WEBPACK_IMPORTED_MODULE_0___namespace_cache ||
							(react__WEBPACK_IMPORTED_MODULE_0___namespace_cache =
								__webpack_require__.t(
									react__WEBPACK_IMPORTED_MODULE_0__,
									2,
								))
						).useInsertionEffect,
					useInsertionEffectAlwaysWithSyncFallback =
						useInsertionEffect ||
						function syncFallback(create) {
							return create();
						},
					useInsertionEffectWithLayoutFallback =
						useInsertionEffect ||
						react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;
			},
		'./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				My: () => insertStyles,
				fp: () => getRegisteredStyles,
				hC: () => registerStyles,
			});
			function getRegisteredStyles(
				registered,
				registeredStyles,
				classNames,
			) {
				var rawClassName = '';
				return (
					classNames.split(' ').forEach(function (className) {
						void 0 !== registered[className]
							? registeredStyles.push(registered[className] + ';')
							: (rawClassName += className + ' ');
					}),
					rawClassName
				);
			}
			var registerStyles = function registerStyles(
					cache,
					serialized,
					isStringTag,
				) {
					var className = cache.key + '-' + serialized.name;
					!1 === isStringTag &&
						void 0 === cache.registered[className] &&
						(cache.registered[className] = serialized.styles);
				},
				insertStyles = function insertStyles(
					cache,
					serialized,
					isStringTag,
				) {
					registerStyles(cache, serialized, isStringTag);
					var className = cache.key + '-' + serialized.name;
					if (void 0 === cache.inserted[serialized.name]) {
						var current = serialized;
						do {
							cache.insert(
								serialized === current ? '.' + className : '',
								current,
								cache.sheet,
								!0,
							),
								(current = current.next);
						} while (void 0 !== current);
					}
				};
		},
		'./node_modules/@guardian/source-development-kitchen/dist/react-components/footer-with-contents/FooterLinks.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					q: () => FooterLinks,
				});
				var emotion_react_jsx_runtime_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
					emotion_element_c39617d8_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js',
					),
					Link = __webpack_require__(
						'./node_modules/@guardian/source/dist/react-components/link/Link.js',
					),
					ButtonLink = __webpack_require__(
						'./node_modules/@guardian/source/dist/react-components/link/ButtonLink.js',
					),
					Hide = __webpack_require__(
						'./node_modules/@guardian/source/dist/react-components/hide/Hide.js',
					),
					theme = __webpack_require__(
						'./node_modules/@guardian/source/dist/react-components/link/theme.js',
					),
					emotion_react_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
					),
					space = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/space.js',
					),
					mq = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/mq/mq.js',
					);
				const columns = emotion_react_browser_esm.iv`
	box-sizing: border-box;
	display: flex;
	margin-right: -${space.D[5]}px;
	& > * {
		margin-right: ${space.D[5]}px;
	}
`,
					collapseBelowColumnsCSS = (
						breakpoint,
					) => emotion_react_browser_esm.iv`
	${mq.C4[breakpoint]} {
		display: block;
		margin-right: 0;
		& > * {
			margin-right: 0;
		}
	}
`,
					collapseBelowSpaceYCSS = (
						spaceY,
					) => emotion_react_browser_esm.iv`
	margin-bottom: ${-space.D[spaceY]}px;
	& > * {
		margin-bottom: ${space.D[spaceY]}px;
	}
`,
					collapseBelowWidth = emotion_react_browser_esm.iv`
	width: 100% !important;
`,
					collapseBelowTablet = emotion_react_browser_esm.iv`
	& > * {
		${mq.C4.tablet} {
			${collapseBelowWidth}
		}
	}
`,
					collapseBelowDesktop = emotion_react_browser_esm.iv`
	& > * {
		${mq.C4.desktop} {
			${collapseBelowWidth}
		}
	}
`,
					collapseBelowleftCol = emotion_react_browser_esm.iv`
	& > * {
		${mq.C4.leftCol} {
			${collapseBelowWidth}
		}
	}
`,
					collapseBelowWide = emotion_react_browser_esm.iv`
	& > * {
		${mq.C4.wide} {
			${collapseBelowWidth}
		}
	}
`,
					calculateWidth = (width) =>
						0 === width
							? '\n\t\t\tdisplay: none;\n\t\t'
							: `\n\t\twidth: calc((100%) * ${width} - ${space.D[5]}px);\n\n\t\t/* Reset value that might have been set at a lower breakpoint */\n\t\tdisplay: block;\n\t`,
					columnBreakpoints = [
						{ totalColumns: 4, rule: mq.C4.tablet },
						{ totalColumns: 12, rule: mq.vX.tablet.and.leftCol },
						{ totalColumns: 14, rule: mq.vX.leftCol.and.wide },
						{ totalColumns: 16, rule: mq.Dp.wide },
					],
					calculateSpan = (span) =>
						`\n\t\t${columnBreakpoints.reduce((acc, cur) => {
							if (0 === span)
								return '\n\t\t\t\t\tdisplay: none;\n\t\t\t\t';
							const inferredWidth = span / cur.totalColumns,
								cssForBreakpoint = calculateWidth(
									inferredWidth < 1 ? inferredWidth : 1,
								);
							return `\n\t\t\t\t${acc}\n\t\t\t\t${cur.rule} {\n\t\t\t\t\t${cssForBreakpoint}\n\t\t\t\t}\n\t\t\t`;
						}, '')}\n\t`,
					column = emotion_react_browser_esm.iv`
	box-sizing: border-box;
`,
					flexGrow = emotion_react_browser_esm.iv`
	flex: 1;
`,
					setWidth = (value) => emotion_react_browser_esm.iv`
	${((width) => {
		const widths = Array.isArray(width) ? width : [width],
			breakpoints = ['mobile', 'tablet', 'desktop', 'leftCol', 'wide'];
		let widthCSS = '';
		for (const [i, width2] of widths.entries()) {
			const breakpoint = breakpoints[i];
			breakpoint &&
				(widthCSS += `\n\t\t\t\t${
					mq.Dp[breakpoint]
				} {\n\t\t\t\t\t${calculateWidth(width2)};\n\t\t\t\t}\n\t\t\t`);
		}
		return widthCSS;
	})(value)};
`,
					setSpan = (value) => emotion_react_browser_esm.iv`
	${((span) => {
		const spans = Array.isArray(span) ? span : [span],
			breakpoints = ['mobile', 'tablet', 'desktop', 'leftCol', 'wide'];
		let spanCSS = '';
		for (const [i, span2] of spans.entries()) {
			const breakpoint = breakpoints[i];
			breakpoint &&
				(spanCSS += `\n\t\t\t\t${
					mq.Dp[breakpoint]
				} {\n\t\t\t\t\t${calculateSpan(span2)};\n\t\t\t\t}\n\t\t\t`);
		}
		return spanCSS;
	})(value)}
`;
				var isUndefined = __webpack_require__(
					'./node_modules/@guardian/source/dist/libs/dist/isUndefined/isUndefined.js',
				);
				const collapseBelowMap = {
						tablet: collapseBelowTablet,
						desktop: collapseBelowDesktop,
						leftCol: collapseBelowleftCol,
						wide: collapseBelowWide,
					},
					collapseBelowColumnsMap = {
						tablet: collapseBelowColumnsCSS('tablet'),
						desktop: collapseBelowColumnsCSS('desktop'),
						leftCol: collapseBelowColumnsCSS('leftCol'),
						wide: collapseBelowColumnsCSS('wide'),
					},
					Columns = ({
						collapseBelow,
						collapseUntil = collapseBelow,
						cssOverrides,
						children,
						spaceY,
						...props
					}) =>
						(0, emotion_react_jsx_runtime_browser_esm.tZ)('div', {
							css: [
								columns,
								collapseUntil
									? collapseBelowColumnsMap[collapseUntil]
									: '',
								collapseUntil
									? collapseBelowMap[collapseUntil]
									: '',
								(0, isUndefined.o)(spaceY)
									? ''
									: collapseBelowSpaceYCSS(spaceY),
								cssOverrides,
							],
							...props,
							children,
						}),
					Column = ({
						width,
						span,
						cssOverrides,
						children,
						...props
					}) => {
						const columnCss = [column];
						return (
							width
								? columnCss.push(setWidth(width))
								: span
								? columnCss.push(setSpan(span))
								: columnCss.push(flexGrow),
							(0, emotion_react_jsx_runtime_browser_esm.tZ)(
								'div',
								{
									css: [columnCss, cssOverrides],
									...props,
									children,
								},
							)
						);
					};
				var palette = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__deprecated__/colour/palette.js',
					),
					typography = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js',
					);
				const fullWidthContainer = emotion_react_browser_esm.iv`
	width: 100%;
`,
					linkListStyles = emotion_react_browser_esm.iv`
	background-color: ${palette.UQ[400]};
	display: flex;
	list-style: none;
	padding: 0;
	margin: 0;
	padding-bottom: 64px;
	${mq.Dp.tablet} {
		padding-bottom: ${space.D[6]}px;
	}
`,
					linkColumnsStyles = emotion_react_browser_esm.iv`
	${mq.C4.desktop} {
		position: relative;
		display: grid;
		grid-template-columns: 1fr 1fr;
		grid-auto-rows: min-content;
		padding-bottom: 55px;
		/* Centre divider */
		:after {
			position: absolute;
			left: 50%;
			bottom: 18px;
			content: '';
			width: 1px;
			background-color: ${palette.UQ[600]};
			height: calc(100% - 18px);
		}

		${mq.Dp.tablet} {
			grid-template-columns: 1fr 3fr;
			padding-bottom: ${space.D[9]}px;
			:after {
				content: unset;
			}
		}
	}
`;
				function getListStyles(useColumns) {
					return useColumns
						? [linkListStyles, linkColumnsStyles]
						: linkListStyles;
				}
				const linkListItemStyles = emotion_react_browser_esm.iv`
	padding-top: ${space.D[3]}px;
	${mq.Dp.tablet} {
		padding-top: 10px;
	}
	:not(:first-of-type) {
		padding-left: ${space.D[2]}px;
		border-left: 1px solid ${palette.UQ[600]};
		${mq.Dp.tablet} {
			padding-left: 10px;
		}
	}
	${mq.C4.tablet} {
		:not(:last-of-type) {
			padding-right: ${space.D[3]}px;
			${mq.Dp.mobileMedium} {
				padding-right: ${space.D[6]}px;
			}
		}
	}
`,
					linkColumnItemStyles = emotion_react_browser_esm.iv`
	padding-top: ${space.D[3]}px;

	:nth-child(even) {
		padding-left: ${space.D[2]}px;
		${mq.Dp.tablet} {
			padding-left: 10px;
		}
	}

	${mq.vX.tablet.and.desktop} {
		width: 100%;
		:nth-child(odd) {
			border-right: 1px solid ${palette.UQ[600]};
		}
	}

	${mq.Dp.desktop} {
		${linkListItemStyles}
	}
`;
				function getItemStyles(useColumns) {
					return useColumns
						? linkColumnItemStyles
						: linkListItemStyles;
				}
				const linkElementStyles = emotion_react_browser_esm.iv`
	display: block;
	text-decoration: none;
	${typography.VZD};
	line-height: 1.15;
	:hover {
		text-decoration: underline;
		color: ${palette.A5[400]};
	}
	${mq.Dp.mobileMedium} {
		${typography.Kz0};
		line-height: 1.15;
	}
`,
					defaultGuardianLinks = [
						{
							href: 'https://www.theguardian.com/info/privacy',
							text: 'Privacy policy',
							isExternal: !0,
						},
						{
							href: 'https://www.theguardian.com/help/contact-us',
							text: 'Contact us',
							isExternal: !0,
						},
						{
							href: 'https://www.theguardian.com/help',
							text: 'Help centre',
							isExternal: !0,
						},
					],
					getLink = ({ href, text, isExternal, ...linkAttrs }) =>
						(0, emotion_react_jsx_runtime_browser_esm.tZ)(Link.r, {
							cssOverrides: linkElementStyles,
							href,
							rel: isExternal ? 'noopener noreferrer' : '',
							...linkAttrs,
							children: text,
						}),
					getButtonLink = ({ text, onClick, ...linkAttrs }) =>
						(0, emotion_react_jsx_runtime_browser_esm.tZ)(
							ButtonLink.Z,
							{
								cssOverrides: linkElementStyles,
								onClick,
								...linkAttrs,
								children: text,
							},
						),
					FooterLinks = ({
						links = defaultGuardianLinks,
						forceColumns = !1,
					}) => {
						const useColumns = links.length > 3 || forceColumns;
						return (0, emotion_react_jsx_runtime_browser_esm.BX)(
							'div',
							{
								css: fullWidthContainer,
								children: [
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										Hide.c,
										{
											from: 'tablet',
											children: (0,
											emotion_react_jsx_runtime_browser_esm.tZ)(
												'ul',
												{
													css: getListStyles(
														useColumns,
													),
													children: links.map(
														(link, index) =>
															(0,
															emotion_react_jsx_runtime_browser_esm.tZ)(
																'li',
																{
																	css: getItemStyles(
																		useColumns,
																	),
																	children:
																		(0,
																		emotion_react_jsx_runtime_browser_esm.tZ)(
																			emotion_element_c39617d8_browser_esm.a,
																			{
																				theme: theme.hI,
																				children:
																					'href' in
																					link
																						? getLink(
																								link,
																						  )
																						: getButtonLink(
																								link,
																						  ),
																			},
																		),
																},
																`link-${index}`,
															),
													),
												},
											),
										},
									),
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										Hide.c,
										{
											until: 'tablet',
											children: (0,
											emotion_react_jsx_runtime_browser_esm.tZ)(
												Columns,
												{
													cssOverrides:
														getListStyles(
															useColumns,
														),
													children: links.map(
														(link, index) =>
															(0,
															emotion_react_jsx_runtime_browser_esm.tZ)(
																Column,
																{
																	span: [
																		0, 3, 2,
																	],
																	cssOverrides:
																		getItemStyles(
																			useColumns,
																		),
																	children:
																		(0,
																		emotion_react_jsx_runtime_browser_esm.tZ)(
																			emotion_element_c39617d8_browser_esm.a,
																			{
																				theme: theme.hI,
																				children:
																					'href' in
																					link
																						? getLink(
																								link,
																						  )
																						: getButtonLink(
																								link,
																						  ),
																			},
																		),
																},
																`link-${index}`,
															),
													),
												},
											),
										},
									),
								],
							},
						);
					};
			},
		'./node_modules/@guardian/source-development-kitchen/dist/react-components/footer-with-contents/FooterWithContents.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					M: () => FooterWithContents,
				});
				var emotion_react_jsx_runtime_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
					palette = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__deprecated__/colour/palette.js',
					),
					emotion_react_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
					),
					space = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/space.js',
					),
					mq = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/mq/mq.js',
					),
					breakpoints = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js',
					),
					_generated_palette = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
					);
				const container = emotion_react_browser_esm.iv`
	margin: 0 auto;
	box-sizing: border-box;
	padding: 0 ${space.D[3]}px;
	width: 100%;
	${mq.Dp.mobileLandscape} {
		padding: 0 ${space.D[5]}px;
	}
	${mq.Dp.tablet} {
		width: ${breakpoints.A.tablet}px;
	}
	${mq.Dp.desktop} {
		width: ${breakpoints.A.desktop}px;
	}
	${mq.Dp.leftCol} {
		width: ${breakpoints.A.leftCol}px;
	}
	${mq.Dp.wide} {
		width: ${breakpoints.A.wide}px;
	}
	border-color: ${_generated_palette.palette.neutral[86]};
`,
					containerSideBorders = emotion_react_browser_esm.iv`
	border-left-style: solid;
	border-right-style: solid;
	border-left-width: 0;
	border-right-width: 0;

	${mq.Dp.tablet} {
		width: ${breakpoints.A.tablet + 2}px;
		border-left-width: 1px;
		border-right-width: 1px;
	}
	${mq.Dp.desktop} {
		width: ${breakpoints.A.desktop + 2}px;
	}
	${mq.Dp.leftCol} {
		width: ${breakpoints.A.leftCol + 2}px;
	}
	${mq.Dp.wide} {
		width: ${breakpoints.A.wide + 2}px;
	}
`,
					containerTopBorder = emotion_react_browser_esm.iv`
	border-top-width: 1px;
	border-top-style: solid;
`,
					containerBackground = (
						color,
					) => emotion_react_browser_esm.iv`
	background-color: ${color};
`,
					Container = ({
						element: Element = 'section',
						border = !1,
						sideBorders = !1,
						topBorder = !1,
						backgroundColor,
						borderColor,
						cssOverrides,
						children,
						...props
					}) => {
						return (0, emotion_react_jsx_runtime_browser_esm.tZ)(
							Element,
							{
								css: [
									backgroundColor &&
										containerBackground(backgroundColor),
									cssOverrides,
								],
								...props,
								children: (0,
								emotion_react_jsx_runtime_browser_esm.tZ)(
									'div',
									{
										css: [
											container,
											backgroundColor &&
												containerBackground(
													backgroundColor,
												),
											topBorder && containerTopBorder,
											(sideBorders || border) &&
												containerSideBorders,
											borderColor &&
												((color = borderColor),
												emotion_react_browser_esm.iv`
	border-color: ${color};
`),
										],
										children,
									},
								),
							},
						);
						var color;
					};
				var BackToTop = __webpack_require__(
						'./node_modules/@guardian/source/dist/react-components/footer/BackToTop.js',
					),
					typography = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js',
					);
				const footer = emotion_react_browser_esm.iv`
	background-color: ${palette.UQ[400]};
	color: ${palette.n$[100]};
	padding-bottom: ${space.D[1]}px;
	${typography.Kz0};
`,
					contentWrapperStyles = emotion_react_browser_esm.iv`
	display: flex;
	position: relative;
`,
					copyrightStyles = emotion_react_browser_esm.iv`
	display: block;
	${typography.Hi4};
	padding-top: ${space.D[6]}px;
	padding-bottom: 18px;
	${mq.Dp.tablet} {
		padding-top: ${space.D[3]}px;
	}
`,
					backToTopStyles = emotion_react_browser_esm.iv`
	background-color: ${palette.UQ[400]};
	padding: 0 ${space.D[2]}px;
	position: absolute;
	bottom: -21px;
	right: ${space.D[3]}px;
	${mq.Dp.tablet} {
		padding: 0 5px;
		right: 0;
	}
`,
					footerContainerProps = {
						sideBorders: !0,
						borderColor: palette.UQ[600],
					},
					FooterWithContents = ({
						children,
						ContainerComponent = Container,
					}) =>
						(0, emotion_react_jsx_runtime_browser_esm.BX)(
							'footer',
							{
								css: footer,
								children: [
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										ContainerComponent,
										{
											...footerContainerProps,
											children: (0,
											emotion_react_jsx_runtime_browser_esm.BX)(
												'div',
												{
													css: contentWrapperStyles,
													children: [
														children,
														(0,
														emotion_react_jsx_runtime_browser_esm.tZ)(
															'div',
															{
																css: backToTopStyles,
																children:
																	BackToTop.z,
															},
														),
													],
												},
											),
										},
									),
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										ContainerComponent,
										{
											...footerContainerProps,
											topBorder: !0,
											sideBorders: !1,
											children: (0,
											emotion_react_jsx_runtime_browser_esm.BX)(
												'small',
												{
													css: copyrightStyles,
													children: [
														'© ',
														new Date().getFullYear(),
														' Guardian News & Media Limited or its affiliated companies. All rights reserved.',
													],
												},
											),
										},
									),
								],
							},
						);
			},
		'./node_modules/@guardian/source/dist/foundations/__deprecated__/colour/palette.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					A5: () => brandAlt,
					UQ: () => brand,
					Vp: () => success,
					fL: () => text,
					n$: () => neutral,
					r: () => news,
					vU: () => error,
				});
				var _generated_palette_js__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
					);
				const {
						brand,
						brandAlt,
						neutral,
						error,
						success,
						news,
						opinion,
						sport,
						culture,
						lifestyle,
						labs,
						specialReport,
						focus,
					} =
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette,
					text =
						(_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[97],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[10],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[800],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[600],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[300],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brandAlt[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[7],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brandAlt[200],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[60],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[86],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.success[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.error[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[60],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.focus[400],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[600],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[600],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.success[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.error[500],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[800],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[7],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[86],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[600],
						_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[7],
						{
							primary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							supporting:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[46],
							success:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.success[400],
							error: _generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.error[400],
							ctaPrimary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[100],
							ctaSecondary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.brand[400],
							ctaTertiary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.brand[400],
							anchorPrimary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.brand[500],
							anchorSecondary:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							userInput:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							inputLabel:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							inputError:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							inputLabelSupporting:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[46],
							inputChecked:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.brand[400],
							inputHover:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.brand[400],
							groupLabel:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[7],
							groupLabelSupporting:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.neutral[46],
							newsInverse:
								_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.palette.news[550],
						});
				_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
					.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.brand[800],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.success[500],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.error[500],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.brand[400],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.brandAlt[400],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.brand[800],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[7],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[60],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[100],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[7],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[7],
					_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette
						.neutral[7];
			},
		'./node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					A: () => breakpoints,
				});
				const breakpoints = {
					desktop: 980,
					leftCol: 1140,
					mobile: 320,
					mobileLandscape: 480,
					mobileMedium: 375,
					phablet: 660,
					tablet: 740,
					wide: 1300,
				};
			},
		'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					palette: () => palette,
				});
				const palette = {
					brand: {
						100: '#001536',
						300: '#041F4A',
						400: '#052962',
						500: '#0077B6',
						600: '#506991',
						800: '#C1D8FC',
					},
					brandAlt: {
						200: '#F3C100',
						300: '#FFD900',
						400: '#FFE500',
					},
					culture: {
						50: '#2B2625',
						100: '#3E3323',
						200: '#574835',
						300: '#6B5840',
						350: '#866D50',
						400: '#866D50',
						450: '#A1845C',
						500: '#EACCA0',
						600: '#E7D4B9',
						700: '#EFE8DD',
						800: '#FBF6EF',
					},
					error: { 400: '#C70000', 500: '#FF9081' },
					focus: { 400: '#0077B6' },
					labs: { 200: '#0C7A73', 300: '#65A897', 400: '#69D1CA' },
					lifestyle: {
						100: '#510043',
						200: '#650054',
						300: '#7D0068',
						400: '#BB3B80',
						450: '#F37ABC',
						500: '#FFABDB',
						600: '#FEC8D3',
						800: '#FEEEF7',
					},
					neutral: {
						0: '#000000',
						7: '#121212',
						10: '#1A1A1A',
						20: '#333333',
						38: '#545454',
						46: '#707070',
						60: '#999999',
						73: '#BABABA',
						86: '#DCDCDC',
						93: '#EDEDED',
						97: '#F6F6F6',
						100: '#FFFFFF',
					},
					news: {
						100: '#660505',
						200: '#8B0000',
						300: '#AB0613',
						400: '#C70000',
						500: '#FF5943',
						550: '#FF9081',
						600: '#FFBAC8',
						800: '#FFF4F2',
					},
					opinion: {
						100: '#672005',
						200: '#8D2700',
						300: '#C74600',
						400: '#C74600',
						450: '#E05E00',
						500: '#FF7F0F',
						550: '#FF9941',
						600: '#F9B376',
						800: '#FEF9F5',
					},
					specialReport: {
						100: '#222527',
						200: '#303538',
						300: '#3F464A',
						400: '#595C5F',
						450: '#9DA0A2',
						500: '#ABC2C9',
						700: '#E4E5E8',
						800: '#EFF1F2',
					},
					specialReportAlt: {
						100: '#2B2B2A',
						200: '#B9300A',
						300: '#FF663D',
						700: '#EBE6E1',
						800: '#F5F0EB',
					},
					sport: {
						100: '#003C60',
						200: '#004E7C',
						300: '#005689',
						400: '#0077B6',
						500: '#00B2FF',
						600: '#90DCFF',
						800: '#F1F8FC',
					},
					success: { 300: '#185E36', 400: '#22874D', 500: '#58D08B' },
				};
			},
		'./node_modules/@guardian/source/dist/foundations/__generated__/size.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					Cb: () => height,
					EA: () => iconSize,
					T6: () => remHeight,
					bf: () => width,
					dp: () => size,
					jA: () => remWidth,
				});
				const height = {
						ctaMedium: 44,
						ctaSmall: 36,
						ctaXsmall: 24,
						iconMedium: 30,
						iconSmall: 26,
						iconXsmall: 20,
						inputMedium: 44,
						inputXsmall: 24,
					},
					iconSize = { medium: 30, small: 26, xsmall: 20 },
					size = { medium: 44, small: 36, xsmall: 24 },
					width = {
						ctaMedium: 44,
						ctaSmall: 36,
						ctaXsmall: 24,
						iconMedium: 30,
						iconSmall: 26,
						iconXsmall: 20,
						inputXsmall: 24,
					},
					remHeight = {
						ctaMedium: '2.75rem',
						ctaSmall: '2.25rem',
						ctaXsmall: '1.5rem',
						iconMedium: '1.875rem',
						iconSmall: '1.625rem',
						iconXsmall: '1.25rem',
						inputMedium: '2.75rem',
						inputXsmall: '1.5rem',
					},
					remWidth = {
						ctaMedium: '2.75rem',
						ctaSmall: '2.25rem',
						ctaXsmall: '1.5rem',
						iconMedium: '1.875rem',
						iconSmall: '1.625rem',
						iconXsmall: '1.25rem',
						inputXsmall: '1.5rem',
					};
			},
		'./node_modules/@guardian/source/dist/foundations/__generated__/space.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					D: () => space,
					K: () => remSpace,
				});
				const space = {
						0: 2,
						1: 4,
						2: 8,
						3: 12,
						4: 16,
						5: 20,
						6: 24,
						8: 32,
						9: 36,
						10: 40,
						12: 48,
						14: 56,
						16: 64,
						18: 72,
						24: 96,
					},
					remSpace = {
						0: '0.125rem',
						1: '0.25rem',
						2: '0.5rem',
						3: '0.75rem',
						4: '1rem',
						5: '1.25rem',
						6: '1.5rem',
						8: '2rem',
						9: '2.25rem',
						10: '2.5rem',
						12: '3rem',
						14: '3.5rem',
						16: '4rem',
						18: '4.5rem',
						24: '6rem',
					};
			},
		'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					AjP: () => textSans14,
					D35: () => textEgyptianBold17,
					Ff7: () => textEgyptian17,
					Hi4: () => textSans12,
					Hu7: () => headlineBold28,
					IOq: () => headlineBold42,
					JX9: () => textSansBold28,
					Kie: () => textSansBold20,
					Kz0: () => textSans17,
					L7k: () => headlineBold14Object,
					N_U: () => headlineMedium17,
					Rcn: () => textSansBold17,
					Rpr: () => textEgyptian14Object,
					Rze: () => textSansBold24,
					SPg: () => textSans17Object,
					U8s: () => textSansBold12,
					VZD: () => textSans15,
					_H: () => titlepiece42,
					fRL: () => textSansBold15,
					fy7: () => headlineBold20,
					ggb: () => textSansItalic15,
					hGi: () => textSans20,
					t_M: () => headlineBold34,
					vD7: () => headlineBold24,
					yLC: () => headlineBold17,
					yQm: () => textSans24,
					zlp: () => textSansBold14,
				});
				const headlineBold14Object = {
						fontFamily:
							'"GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif',
						fontSize: '0.875rem',
						lineHeight: 1.15,
						fontWeight: 700,
						fontStyle: 'normal',
					},
					headlineBold17 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					headlineBold20 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 1.25rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					headlineBold24 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 1.5rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					headlineBold28 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 1.75rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					headlineBold34 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 2.125rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 4px;\n',
					headlineBold42 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 2.625rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 5px;\n',
					headlineMedium17 =
						'\n\tfont-family: "GH Guardian Headline", "Guardian Egyptian Web", Georgia, serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.15;\n\tfont-weight: 500;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textEgyptian14Object = {
						fontFamily:
							'GuardianTextEgyptian, "Guardian Text Egyptian Web", Georgia, serif',
						fontSize: '0.875rem',
						lineHeight: 1.3,
						fontWeight: 400,
						fontStyle: 'normal',
					},
					textEgyptian17 =
						'\n\tfont-family: GuardianTextEgyptian, "Guardian Text Egyptian Web", Georgia, serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textEgyptianBold17 =
						'\n\tfont-family: GuardianTextEgyptian, "Guardian Text Egyptian Web", Georgia, serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSans12 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.75rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSans14 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.875rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSans15 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.9375rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSans17 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSans17Object = {
						fontFamily:
							'GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif',
						fontSize: '1.0625rem',
						lineHeight: 1.3,
						fontWeight: 400,
						fontStyle: 'normal',
					},
					textSans20 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.25rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					textSans24 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.5rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					textSansBold12 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.75rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSansBold14 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.875rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSansBold15 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.9375rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSansBold17 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.0625rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 2px;\n',
					textSansBold20 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.25rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					textSansBold24 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.5rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					textSansBold28 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 1.75rem;\n\tline-height: 1.3;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 3px;\n',
					textSansItalic15 =
						'\n\tfont-family: GuardianTextSans, "Guardian Text Sans Web", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n\tfont-size: 0.9375rem;\n\tline-height: 1.3;\n\tfont-weight: 400;\n\tfont-style: italic;\n\t--source-text-decoration-thickness: 2px;\n',
					titlepiece42 =
						'\n\tfont-family: "GT Guardian Titlepiece", Georgia, serif;\n\tfont-size: 2.625rem;\n\tline-height: 1.15;\n\tfont-weight: 700;\n\tfont-style: normal;\n\t--source-text-decoration-thickness: 5px;\n';
			},
		'./node_modules/@guardian/source/dist/foundations/accessibility/focus-halo.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					m: () => focusHaloSpaced,
					y: () => focusHalo,
				});
				var _generated_palette_js__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
					);
				const focusHalo = `\n outline: 0;\n html:not(.src-focus-disabled) & {\n\t box-shadow: 0 0 0 3px ${_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette.focus[400]};\n }\n`,
					focusHaloSpaced = `\n outline: 0;\n html:not(.src-focus-disabled) & {\n\toutline: 5px solid ${_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__.palette.focus[400]};\n\toutline-offset: 3px;\n }\n`;
			},
		'./node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					j: () => visuallyHidden,
				});
				const visuallyHidden =
					'\n\tposition: absolute;\n\toverflow: hidden; /* gets rid of horizontal scrollbar that appears in some circumstances */\n\twhite-space: nowrap; /* The white-space property forces the content to render on one line. */\n\twidth: 1px;  /* ensures content is announced by VoiceOver. */\n\theight: 1px; /* ensures content is announced by VoiceOver. */\n\tmargin: -1px; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tpadding: 0; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px); /* clip removes any visible trace of the element */\n\t-webkit-clip-path: inset(50%); /* clip removes any visible trace of the element */\n\tclip-path: inset(50%); /* clip removes any visible trace of the element */\n';
			},
		'./node_modules/@guardian/source/dist/foundations/animation/transitions.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					p: () => transitions,
				});
				const transitions = {
					short: '.2s cubic-bezier(.64, .57, .67, 1.53)',
					medium: '.3s ease-in-out',
					long: '.65s ease-in-out',
				};
			},
		'./node_modules/@guardian/source/dist/foundations/mq/mq.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				C4: () => until,
				Dp: () => from,
				vX: () => between,
			});
			var _generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__ =
				__webpack_require__(
					'./node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js',
				);
			const minWidth = (from2) => `@media (min-width: ${from2}px)`,
				maxWidth = (until2) =>
					`@media (max-width: ${until2 - 0.1 + 'px'})`,
				minWidthMaxWidth = (from2, until2) =>
					`@media (min-width: ${from2}px) and (max-width: ${
						until2 - 0.1 + 'px'
					})`,
				from = {
					mobile: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobile,
					),
					mobileMedium: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobileMedium,
					),
					mobileLandscape: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobileLandscape,
					),
					phablet: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.phablet,
					),
					tablet: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.tablet,
					),
					desktop: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.desktop,
					),
					leftCol: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.leftCol,
					),
					wide: minWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.wide,
					),
				},
				until = {
					mobile: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobile,
					),
					mobileMedium: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobileMedium,
					),
					mobileLandscape: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.mobileLandscape,
					),
					phablet: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.phablet,
					),
					tablet: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.tablet,
					),
					desktop: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.desktop,
					),
					leftCol: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.leftCol,
					),
					wide: maxWidth(
						_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__.A
							.wide,
					),
				},
				between = {
					mobile: {
						and: {
							mobileMedium: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
							),
							mobileLandscape: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
							),
							phablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
							),
							tablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
							),
							desktop: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
							),
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobile,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					mobileMedium: {
						and: {
							mobileLandscape: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
							),
							phablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
							),
							tablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
							),
							desktop: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
							),
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileMedium,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					mobileLandscape: {
						and: {
							phablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
							),
							tablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
							),
							desktop: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
							),
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.mobileLandscape,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					phablet: {
						and: {
							tablet: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
							),
							desktop: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
							),
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.phablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					tablet: {
						and: {
							desktop: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
							),
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.tablet,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					desktop: {
						and: {
							leftCol: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
							),
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.desktop,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
					leftCol: {
						and: {
							wide: minWidthMaxWidth(
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.leftCol,
								_generated_breakpoints_js__WEBPACK_IMPORTED_MODULE_0__
									.A.wide,
							),
						},
					},
				};
		},
		'./node_modules/@guardian/source/dist/libs/dist/isUndefined/isUndefined.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					o: () => isUndefined,
				});
				const isUndefined = (_) => void 0 === _;
			},
		'./node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgArrowRightStraight.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					l: () => SvgArrowRightStraight,
				});
				var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
						),
					_emotion_react__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
						),
					_foundations_accessibility_visually_hidden_js__WEBPACK_IMPORTED_MODULE_3__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js',
						),
					_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/size.js',
						);
				const Svg = ({ size, theme }) =>
						(0,
						_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
							'svg',
							{
								width: size
									? _foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_1__
											.EA[size]
									: void 0,
								height: void 0,
								viewBox: '-3 -3 30 30',
								xmlns: 'http://www.w3.org/2000/svg',
								focusable: !1,
								'aria-hidden': !0,
								children: (0,
								_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
									'path',
									{
										fillRule: 'evenodd',
										clipRule: 'evenodd',
										d: 'M1 12.956h18.274l-7.167 8.575.932.932L23 12.478v-.956l-9.96-9.985-.932.932 7.166 8.575H1z',
										fill: theme?.fill,
									},
								),
							},
						),
					SvgArrowRightStraight = ({
						size,
						theme,
						isAnnouncedByScreenReader = !1,
					}) =>
						(0,
						_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.BX)(
							_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.HY,
							{
								children: [
									(0,
									_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
										Svg,
										{ size, theme },
									),
									isAnnouncedByScreenReader
										? (0,
										  _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
												'span',
												{
													css: _emotion_react__WEBPACK_IMPORTED_MODULE_2__.iv`
					${_foundations_accessibility_visually_hidden_js__WEBPACK_IMPORTED_MODULE_3__.j}
				`,
													children: 'Arrow right',
												},
										  )
										: '',
								],
							},
						);
			},
		'./node_modules/@guardian/source/dist/react-components/button/LinkButton.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					Q: () => LinkButton,
				});
				var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
						),
					_shared_js__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/button/shared.js',
						),
					_styles_js__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/button/styles.js',
						);
				const LinkButton = ({
					priority,
					size,
					iconSide,
					icon: iconSvg,
					nudgeIcon,
					hideLabel,
					cssOverrides,
					children,
					theme,
					...props
				}) =>
					(0,
					_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
						'a',
						{
							css: (0, _styles_js__WEBPACK_IMPORTED_MODULE_1__.$)(
								{
									size,
									priority,
									icon: iconSvg,
									hideLabel,
									iconSide,
									nudgeIcon,
									cssOverrides,
									theme,
								},
							),
							...props,
							children: (0,
							_shared_js__WEBPACK_IMPORTED_MODULE_2__._)({
								hideLabel,
								iconSvg,
								children,
							}),
						},
					);
			},
		'./node_modules/@guardian/source/dist/react-components/button/shared.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					_: () => buttonContents,
				});
				var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
						),
					_emotion_react__WEBPACK_IMPORTED_MODULE_3__ =
						__webpack_require__(
							'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
						),
					react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
						'./node_modules/react/index.js',
					),
					_spinner_Spinner_js__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/spinner/Spinner.js',
						),
					_foundations_accessibility_visually_hidden_js__WEBPACK_IMPORTED_MODULE_4__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js',
						);
				const buttonContents = ({
					hideLabel,
					iconSvg,
					isLoading,
					children,
				}) => {
					const contents = [children];
					return (
						isLoading
							? (hideLabel ||
									contents.push(
										(0,
										_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)(
											'div',
											{ className: 'src-button-space' },
											'space',
										),
									),
							  contents.push(
									(0,
									react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(
										(0,
										_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)(
											_spinner_Spinner_js__WEBPACK_IMPORTED_MODULE_2__.$,
											{
												theme: {
													background: 'transparent',
													color: 'currentColor',
												},
											},
										),
										{ key: 'svg' },
									),
							  ))
							: iconSvg &&
							  (hideLabel ||
									contents.push(
										(0,
										_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)(
											'div',
											{ className: 'src-button-space' },
											'space',
										),
									),
							  contents.push(
									(0,
									react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(
										iconSvg,
										{ key: 'svg' },
									),
							  )),
						hideLabel
							? (0,
							  _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.BX)(
									_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.HY,
									{
										children: [
											(0,
											_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)(
												'span',
												{
													css: _emotion_react__WEBPACK_IMPORTED_MODULE_3__.iv`
						${_foundations_accessibility_visually_hidden_js__WEBPACK_IMPORTED_MODULE_4__.j};
					`,
													children,
												},
											),
											contents[1],
										],
									},
							  )
							: contents
					);
				};
			},
		'./node_modules/@guardian/source/dist/react-components/button/styles.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					$: () => buttonStyles,
				});
				var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
						),
					_utils_themes_js__WEBPACK_IMPORTED_MODULE_6__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/utils/themes.js',
						),
					_theme_js__WEBPACK_IMPORTED_MODULE_7__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/button/theme.js',
						),
					_foundations_animation_transitions_js__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/animation/transitions.js',
						),
					_foundations_accessibility_focus_halo_js__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/accessibility/focus-halo.js',
						),
					_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_3__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js',
						),
					_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/size.js',
						),
					_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/space.js',
						);
				const button = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	display: inline-flex;
	justify-content: center;
	align-items: center;
	box-sizing: border-box;
	border: none;
	background: transparent;
	cursor: pointer;
	transition: ${_foundations_animation_transitions_js__WEBPACK_IMPORTED_MODULE_1__.p.medium};
	text-decoration: none;
	white-space: nowrap;
	vertical-align: middle;

	:disabled {
		cursor: not-allowed;
	}

	&:focus {
		${_foundations_accessibility_focus_halo_js__WEBPACK_IMPORTED_MODULE_2__.m};
	}
`,
					loadingSpinnerSizes = {
						xsmall: 16,
						small: 20,
						default: 24,
					},
					applyButtonStylesToLoadingSpinner = (
						size,
					) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
		svg {
			/*
		 * The loading spinner width has been specified as 24px in the design
		 * which falls outside of the icon sizes in foundations, so we
		 * override the width here.
		 */
			width: ${loadingSpinnerSizes[size]}px;
		}
	`,
					defaultSize = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_3__.Rcn};
	height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaMedium}px;
	min-height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaMedium}px;
	padding: 0 ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[5]}px;
	border-radius: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaMedium}px;
	padding-bottom: 2px;
`,
					smallSize = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_3__.Rcn};
	height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaSmall}px;
	min-height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaSmall}px;
	padding: 0 ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[4]}px;
	border-radius: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaSmall}px;
	padding-bottom: 2px;
`,
					xsmallSize = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_3__.zlp};
	height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaXsmall}px;
	min-height: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaXsmall}px;
	padding: 0 ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[3]}px;
	border-radius: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.Cb.ctaXsmall}px;
	padding-bottom: 1px;
`,
					iconDefault = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		flex: 0 0 auto;
		display: block;
		fill: currentColor;
		position: relative;
		width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.iconMedium}px;
		height: auto;
	}
	.src-button-space {
		width: ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[3]}px;
	}
`,
					iconSmall = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		flex: 0 0 auto;
		display: block;
		fill: currentColor;
		position: relative;
		width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.iconSmall}px;
		height: auto;
	}
	.src-button-space {
		width: ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[2]}px;
	}
`,
					iconXsmall = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		flex: 0 0 auto;
		display: block;
		fill: currentColor;
		position: relative;
		width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.iconXsmall}px;
		height: auto;
	}
	.src-button-space {
		width: ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__.D[1]}px;
	}
`,
					pullIconTowardEdge =
						-_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__
							.D[1],
					iconLeft = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	flex-direction: row-reverse;
	svg {
		margin-left: ${pullIconTowardEdge}px;
	}
`,
					iconRight = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		margin-right: ${pullIconTowardEdge}px;
	}
`,
					iconOnly = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	padding: 0;
`,
					iconOnlyDefault = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${iconOnly};
	width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.ctaMedium}px;
`,
					iconOnlySmall = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${iconOnly};
	width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.ctaSmall}px;
`,
					iconOnlyXsmall = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	${iconOnly};
	width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_4__.bf.ctaXsmall}px;
`,
					iconNudgeAnimation = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		transform: translate(0, 0);
		transition: ${
			_foundations_animation_transitions_js__WEBPACK_IMPORTED_MODULE_1__.p
				.short
		};
	}
	&:hover,
	&:focus {
		svg {
			transform: translate(${
				_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_5__
					.D[1] / 2
			}px, 0);
		}
	}
`,
					priorities = {
						primary: (
							button2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	background-color: ${button2.backgroundPrimary};
	color: ${button2.textPrimary};

	&:hover {
		background-color: ${button2.backgroundPrimaryHover};
	}
`,
						secondary: (
							button2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	background-color: ${button2.backgroundSecondary};
	color: ${button2.textSecondary};

	&:hover {
		background-color: ${button2.backgroundSecondaryHover};
	}
`,
						tertiary: (
							button2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	background-color: ${button2.backgroundTertiary};
	color: ${button2.textTertiary};
	border: 1px solid ${button2.borderTertiary};

	&:hover {
		background-color: ${button2.backgroundTertiaryHover};
	}
`,
						subdued: (
							button2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	padding: 0;
	background-color: transparent;
	color: ${button2.textSubdued};
	text-decoration: underline;
	text-underline-offset: 4px;

	&:hover {
		text-decoration-thickness: 4px;
	}

	/* Why is this zero? Because the default is to have rounded corners but here, when
	   there is only text, it is more natural to show a rectangle for the focus halo */
	border-radius: 0;
`,
					},
					iconSides = { right: iconRight, left: iconLeft },
					sizes = {
						default: defaultSize,
						small: smallSize,
						xsmall: xsmallSize,
					},
					iconSizes = {
						default: iconDefault,
						small: iconSmall,
						xsmall: iconXsmall,
					},
					iconOnlySizes = {
						default: iconOnlyDefault,
						small: iconOnlySmall,
						xsmall: iconOnlyXsmall,
					},
					mergedTheme = (providerTheme, theme) =>
						(0, _utils_themes_js__WEBPACK_IMPORTED_MODULE_6__.I)(
							_theme_js__WEBPACK_IMPORTED_MODULE_7__.Ud,
							theme,
							providerTheme,
						),
					buttonStyles =
						({
							priority = 'primary',
							size = 'default',
							icon: iconSvg,
							hideLabel,
							iconSide = 'left',
							nudgeIcon,
							cssOverrides,
							isLoading,
							theme,
						}) =>
						(providerTheme) =>
							[
								button,
								sizes[size],
								priorities[priority](
									mergedTheme(providerTheme.button, theme),
								),
								iconSvg ?? isLoading ? iconSizes[size] : '',
								(iconSvg ?? isLoading) && !hideLabel
									? iconSides[iconSide]
									: '',
								nudgeIcon ? iconNudgeAnimation : '',
								hideLabel ? iconOnlySizes[size] : '',
								isLoading
									? applyButtonStylesToLoadingSpinner(size)
									: void 0,
								cssOverrides,
							];
			},
		'./node_modules/@guardian/source/dist/react-components/button/theme-reader-revenue.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					gk: () => themeButtonReaderRevenueBrand,
					yi: () => themeButtonReaderRevenueBrandAlt,
				});
				var _foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__deprecated__/colour/palette.js',
					);
				const text = {
						readerRevenue: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.UQ[400],
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.UQ[400],
						},
						readerRevenueBrand: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.UQ[400],
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.A5[400],
						},
						readerRevenueBrandAlt: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.n$[100],
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.n$[7],
						},
					},
					background = {
						readerRevenue: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.A5[400],
							ctaPrimaryHover: '#FFD213',
							ctaTertiaryHover: '#E5E5E5',
						},
						readerRevenueBrand: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.A5[400],
							ctaPrimaryHover: '#FFD213',
							ctaTertiaryHover:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.UQ[300],
						},
						readerRevenueBrandAlt: {
							ctaPrimary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.n$[7],
							ctaPrimaryHover: '#454545',
							ctaTertiaryHover: '#FFD213',
						},
					},
					border = {
						readerRevenue: {
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.UQ[400],
						},
						readerRevenueBrand: {
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.A5[400],
						},
						readerRevenueBrandAlt: {
							ctaTertiary:
								_foundations_deprecated_colour_palette_js__WEBPACK_IMPORTED_MODULE_0__
									.n$[7],
						},
					},
					themeButtonReaderRevenueBrand =
						(text.readerRevenue.ctaPrimary,
						background.readerRevenue.ctaPrimary,
						background.readerRevenue.ctaPrimaryHover,
						text.readerRevenue.ctaTertiary,
						background.readerRevenue.ctaTertiaryHover,
						border.readerRevenue.ctaTertiary,
						{
							textPrimary: text.readerRevenueBrand.ctaPrimary,
							backgroundPrimary:
								background.readerRevenueBrand.ctaPrimary,
							backgroundPrimaryHover:
								background.readerRevenueBrand.ctaPrimaryHover,
							textTertiary: text.readerRevenueBrand.ctaTertiary,
							backgroundTertiaryHover:
								background.readerRevenueBrand.ctaTertiaryHover,
							borderTertiary:
								border.readerRevenueBrand.ctaTertiary,
						}),
					themeButtonReaderRevenueBrandAlt = {
						textPrimary: text.readerRevenueBrandAlt.ctaPrimary,
						backgroundPrimary:
							background.readerRevenueBrandAlt.ctaPrimary,
						backgroundPrimaryHover:
							background.readerRevenueBrandAlt.ctaPrimaryHover,
						textTertiary: text.readerRevenueBrandAlt.ctaTertiary,
						backgroundTertiaryHover:
							background.readerRevenueBrandAlt.ctaTertiaryHover,
						borderTertiary:
							border.readerRevenueBrandAlt.ctaTertiary,
					};
			},
		'./node_modules/@guardian/source/dist/react-components/button/theme.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					Ud: () => themeButton,
				});
				var _foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
					);
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[800],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[600],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[300],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brandAlt[200],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[0],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7];
				const themeButton = {
					textPrimary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.neutral[100],
					backgroundPrimary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
					backgroundPrimaryHover: '#234B8A',
					textSecondary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
					backgroundSecondary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[800],
					backgroundSecondaryHover: '#ACC9F7',
					textTertiary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
					backgroundTertiary: 'transparent',
					backgroundTertiaryHover: '#E5E5E5',
					borderTertiary:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
					textSubdued:
						_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
							.palette.brand[400],
				};
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.brand[400],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[600],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brand[300],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[100],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.brandAlt[200],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[0],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7];
			},
		'./node_modules/@guardian/source/dist/react-components/footer/BackToTop.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					z: () => BackToTop,
				});
				var emotion_react_jsx_runtime_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
					emotion_react_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
					),
					visually_hidden = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js',
					),
					_generated_size = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/size.js',
					);
				const Svg = ({ size, theme }) =>
						(0, emotion_react_jsx_runtime_browser_esm.tZ)('svg', {
							width: size ? _generated_size.EA[size] : void 0,
							height: void 0,
							viewBox: '-3 -3 30 30',
							xmlns: 'http://www.w3.org/2000/svg',
							focusable: !1,
							'aria-hidden': !0,
							children: (0,
							emotion_react_jsx_runtime_browser_esm.tZ)('path', {
								fillRule: 'evenodd',
								clipRule: 'evenodd',
								d: 'M23 16.768 12.502 6.27h-1.004L1 16.768l.98.954L12 9.284l10.02 8.438z',
								fill: theme?.fill,
							}),
						}),
					SvgChevronUpSingle = ({
						size,
						theme,
						isAnnouncedByScreenReader = !1,
					}) =>
						(0, emotion_react_jsx_runtime_browser_esm.BX)(
							emotion_react_jsx_runtime_browser_esm.HY,
							{
								children: [
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										Svg,
										{ size, theme },
									),
									isAnnouncedByScreenReader
										? (0,
										  emotion_react_jsx_runtime_browser_esm.tZ)(
												'span',
												{
													css: emotion_react_browser_esm.iv`
					${visually_hidden.j}
				`,
													children:
														'Collapse to show less',
												},
										  )
										: '',
								],
							},
						);
				var palette = __webpack_require__(
					'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
				);
				const theme_footerThemeBrand_footer = {
					border: palette.palette.brand[600],
					background: palette.palette.brand[400],
					text: palette.palette.neutral[100],
					anchor: palette.palette.neutral[100],
					anchorHover: palette.palette.brandAlt[400],
				};
				var _generated_space = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/space.js',
					),
					mq = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/mq/mq.js',
					),
					typography = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js',
					),
					focus_halo = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/accessibility/focus-halo.js',
					);
				emotion_react_browser_esm.iv`
	display: flex;
	align-items: center;
`,
					emotion_react_browser_esm.iv`
	margin-bottom: ${_generated_space.D[6]}px;
	${mq.Dp.desktop} {
		margin-bottom: ${_generated_space.D[1]}px;
	}
`;
				const backToTopSpace = (initial) =>
						initial - _generated_size.Cb.ctaMedium / 2,
					BackToTop =
						(emotion_react_browser_esm.iv`
	margin-bottom: ${backToTopSpace(_generated_space.D[6])}px;
	${mq.Dp.desktop} {
		margin-bottom: ${backToTopSpace(_generated_space.D[1])}px;
	}
`,
						emotion_react_browser_esm.iv`
	${typography.Hi4};
	display: block;
`,
						emotion_react_browser_esm.iv`
	${mq.vX.mobile.and.tablet} {
		padding-right: ${_generated_size.Cb.ctaMedium}px;
	}
`,
						(0, emotion_react_jsx_runtime_browser_esm.BX)('a', {
							href: '#top',
							css: (theme) =>
								((
									footer2 = theme_footerThemeBrand_footer,
								) => emotion_react_browser_esm.iv`
	display: flex;
	align-items: center;
	height: ${_generated_size.Cb.ctaMedium}px;
	padding-left: ${_generated_space.D[2]}px;

	${typography.fRL};
	color: ${footer2.anchor};
	background-color: ${footer2.background};
	text-decoration: none;
	white-space: nowrap;

	& :hover {
		color: ${footer2.anchorHover};
	}

	& :focus {
		${focus_halo.y};
	}
`)(theme.footer),
							children: [
								'Back to top',
								(0, emotion_react_jsx_runtime_browser_esm.tZ)(
									'div',
									{
										css: (theme) =>
											((
												footer2 = theme_footerThemeBrand_footer,
											) => emotion_react_browser_esm.iv`
	height: ${_generated_size.Cb.ctaMedium}px;
	width: ${_generated_size.bf.ctaMedium}px;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: ${_generated_size.Cb.ctaMedium}px;
	background: currentColor;
	margin-left: ${_generated_space.D[2]}px;

	svg {
		height: ${_generated_size.Cb.iconSmall}px;
		width: ${_generated_size.bf.iconSmall}px;
		fill: ${footer2.background};
	}
`)(theme.footer),
										children: (0,
										emotion_react_jsx_runtime_browser_esm.tZ)(
											SvgChevronUpSingle,
											{},
										),
									},
								),
							],
						}));
			},
		'./node_modules/@guardian/source/dist/react-components/hide/Hide.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, { c: () => Hide });
			var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ =
					__webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
				_emotion_react__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
					),
				_foundations_mq_mq_js__WEBPACK_IMPORTED_MODULE_1__ =
					__webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/mq/mq.js',
					);
			const Hide = ({
				children,
				above,
				below,
				from: from$1 = above,
				until: until$1 = below,
			}) => {
				let whenToHide;
				return (
					until$1 &&
						(whenToHide = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
			${_foundations_mq_mq_js__WEBPACK_IMPORTED_MODULE_1__.C4[until$1]} {
				display: none;
			}
		`),
					from$1 &&
						(whenToHide = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
			${whenToHide}
			${_foundations_mq_mq_js__WEBPACK_IMPORTED_MODULE_1__.Dp[from$1]} {
				display: none;
			}
		`),
					(0,
					_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)(
						'span',
						{ css: whenToHide, children },
					)
				);
			};
		},
		'./node_modules/@guardian/source/dist/react-components/link/ButtonLink.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					Z: () => ButtonLink,
				});
				var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
						),
					_shared_js__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/link/shared.js',
						),
					_styles_js__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/link/styles.js',
						);
				const ButtonLink = ({
					priority = 'primary',
					icon: iconSvg,
					iconSide = 'left',
					cssOverrides,
					children,
					theme,
					...props
				}) =>
					(0,
					_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
						'button',
						{
							css: (0,
							_styles_js__WEBPACK_IMPORTED_MODULE_1__.Wf)({
								isButton: !0,
								priority,
								iconSvg,
								iconSide,
								cssOverrides,
								theme,
							}),
							...props,
							children: (0,
							_shared_js__WEBPACK_IMPORTED_MODULE_2__.w)({
								children,
								iconSvg,
								iconSide,
							}),
						},
					);
			},
		'./node_modules/@guardian/source/dist/react-components/link/Link.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, { r: () => Link });
			var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
				_shared_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
					'./node_modules/@guardian/source/dist/react-components/link/shared.js',
				),
				_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
					'./node_modules/@guardian/source/dist/react-components/link/styles.js',
				);
			const Link = ({
				priority = 'primary',
				icon: iconSvg,
				iconSide = 'left',
				cssOverrides,
				children,
				theme,
				...props
			}) =>
				(0, _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.tZ)(
					'a',
					{
						css: (0, _styles_js__WEBPACK_IMPORTED_MODULE_1__.Wf)({
							priority,
							iconSvg,
							iconSide,
							cssOverrides,
							theme,
						}),
						...props,
						children: (0,
						_shared_js__WEBPACK_IMPORTED_MODULE_2__.w)({
							children,
							iconSvg,
							iconSide,
						}),
					},
				);
		},
		'./node_modules/@guardian/source/dist/react-components/link/shared.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					w: () => linkContents,
				});
				var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
						),
					react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
						'./node_modules/react/index.js',
					);
				const linkContents = ({ children, iconSvg, iconSide }) => {
					const spacer = (0,
						_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)(
							react__WEBPACK_IMPORTED_MODULE_0__.Fragment,
							{ children: '      ' },
							'spacer',
						),
						linkContents2 = [children];
					return (
						iconSvg &&
							('left' === iconSide
								? linkContents2.unshift(
										spacer,
										(0,
										react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(
											iconSvg,
											{ key: 'svg' },
										),
								  )
								: linkContents2.push(
										spacer,
										(0,
										react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(
											iconSvg,
											{ key: 'svg' },
										),
								  )),
						linkContents2
					);
				};
			},
		'./node_modules/@guardian/source/dist/react-components/link/styles.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					Wf: () => linkStyles,
				});
				var _emotion_react__WEBPACK_IMPORTED_MODULE_0__ =
						__webpack_require__(
							'./node_modules/@emotion/react/dist/emotion-react.browser.esm.js',
						),
					_utils_themes_js__WEBPACK_IMPORTED_MODULE_5__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/utils/themes.js',
						),
					_theme_js__WEBPACK_IMPORTED_MODULE_6__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/react-components/link/theme.js',
						),
					_foundations_accessibility_focus_halo_js__WEBPACK_IMPORTED_MODULE_2__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/accessibility/focus-halo.js',
						),
					_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_3__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/size.js',
						),
					_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_4__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/space.js',
						),
					_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_1__ =
						__webpack_require__(
							'./node_modules/@guardian/source/dist/foundations/__generated__/typography.js',
						);
				const link = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	position: relative;
	${_foundations_generated_typography_js__WEBPACK_IMPORTED_MODULE_1__.Kz0};
	cursor: pointer;
	text-decoration: underline;
	text-underline-position: under;
	text-underline-offset: 5%;

	display: inline;
	align-items: center;

	&:focus {
		${_foundations_accessibility_focus_halo_js__WEBPACK_IMPORTED_MODULE_2__.y};
	}

	&:hover {
		/* If the hover text decoration thickness is not set, we default to the initial value. */
		text-decoration-thickness: var(--source-text-decoration-thickness, auto);
	}
`,
					buttonLink = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	/* override user agent styles */
	border: none;
	background: transparent;
	padding: 0;
`,
					icon = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		fill: currentColor;
		/*
		TODO: hardcoded bottom margin to vertically align
		icons with text. This needs to be revisited when
		the rules of icon spacing have been formalised
		 */
		margin-bottom: -3px;
		width: ${_foundations_generated_size_js__WEBPACK_IMPORTED_MODULE_3__.bf.iconXsmall}px;
		height: auto;
	}
`,
					iconRight = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		margin-left: -${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_4__.D[5]}px;
	}
`,
					iconLeft = _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	svg {
		margin-left: -${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_4__.D[6]}px;
		margin-right: ${_foundations_generated_space_js__WEBPACK_IMPORTED_MODULE_4__.D[1]}px;
	}
`,
					priorities = {
						primary: (
							link2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	color: ${link2.textPrimary};

	&:hover {
		color: ${link2.textPrimaryHover};
	}
`,
						secondary: (
							link2,
						) => _emotion_react__WEBPACK_IMPORTED_MODULE_0__.iv`
	color: ${link2.textSecondary};

	&:hover {
		color: ${link2.textSecondaryHover};
	}
`,
					},
					iconSides = { right: iconRight, left: iconLeft },
					linkStyles = ({
						isButton,
						priority,
						iconSvg,
						iconSide = 'left',
						cssOverrides,
						theme,
					}) => {
						const mergedTheme = (providerTheme) =>
							(0,
							_utils_themes_js__WEBPACK_IMPORTED_MODULE_5__.I)(
								_theme_js__WEBPACK_IMPORTED_MODULE_6__.qD,
								theme,
								providerTheme,
							);
						return (providerTheme) => [
							link,
							isButton ? buttonLink : '',
							priorities[priority](
								mergedTheme(providerTheme.link),
							),
							iconSvg ? icon : '',
							iconSvg ? iconSides[iconSide] : '',
							cssOverrides,
						];
					};
			},
		'./node_modules/@guardian/source/dist/react-components/link/theme.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				hI: () => linkThemeBrand,
				qD: () => themeLink,
			});
			var _foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__ =
				__webpack_require__(
					'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
				);
			_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
				.palette.brand[500],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.brand[500],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[7],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[7];
			const linkThemeBrand = {
					link: {
						textPrimary:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.neutral[100],
						textPrimaryHover:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.neutral[100],
					},
				},
				themeLink =
					(_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
						.palette.neutral[7],
					{
						textPrimary:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.brand[500],
						textPrimaryHover:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.brand[500],
						textSecondary:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.neutral[7],
						textSecondaryHover:
							_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
								.palette.neutral[7],
					});
			_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
				.palette.neutral[100],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[100],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[7],
				_foundations_generated_palette_js__WEBPACK_IMPORTED_MODULE_0__
					.palette.neutral[7];
		},
		'./node_modules/@guardian/source/dist/react-components/spinner/Spinner.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					$: () => Spinner,
				});
				var emotion_react_jsx_runtime_browser_esm = __webpack_require__(
						'./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js',
					),
					palette = __webpack_require__(
						'./node_modules/@guardian/source/dist/foundations/__generated__/palette.js',
					);
				const themeSpinner = {
					background: palette.palette.brand[800],
					color: palette.palette.brand[400],
				};
				var _generated_size = __webpack_require__(
					'./node_modules/@guardian/source/dist/foundations/__generated__/size.js',
				);
				const Spinner = ({ size = 'medium', theme }) => {
					const mergedTheme = { ...themeSpinner, ...theme },
						spinnerWidth =
							'number' == typeof size
								? size
								: _generated_size.EA[size];
					return (0, emotion_react_jsx_runtime_browser_esm.tZ)(
						'svg',
						{
							width: spinnerWidth,
							viewBox: '0 0 30 30',
							focusable: !1,
							'aria-hidden': !0,
							children: (0,
							emotion_react_jsx_runtime_browser_esm.BX)('g', {
								children: [
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										'animateTransform',
										{
											attributeName: 'transform',
											attributeType: 'XML',
											type: 'rotate',
											from: '0 15 15',
											to: '360 15 15',
											dur: '2.5s',
											repeatCount: 'indefinite',
										},
									),
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										'circle',
										{
											cx: 15,
											cy: 15,
											r: 12.5,
											strokeWidth: 5,
											stroke: mergedTheme.background,
											fill: 'transparent',
										},
									),
									(0,
									emotion_react_jsx_runtime_browser_esm.tZ)(
										'circle',
										{
											cx: 15,
											cy: 15,
											r: 12.5,
											strokeWidth: 5,
											strokeDasharray: 82,
											strokeDashoffset: 82,
											stroke: mergedTheme.color,
											fill: 'transparent',
											children: (0,
											emotion_react_jsx_runtime_browser_esm.tZ)(
												'animate',
												{
													attributeName:
														'stroke-dashoffset',
													dur: '3.5s',
													from: 164,
													to: 0,
													repeatCount: 'indefinite',
												},
											),
										},
									),
								],
							}),
						},
					);
				};
			},
		'./node_modules/@guardian/source/dist/react-components/utils/themes.js':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.d(__webpack_exports__, {
					I: () => mergeThemes,
				});
				const mergeThemes = (
					defaultTheme,
					themeOverrides,
					providerTheme,
					transform,
				) => ({
					...defaultTheme,
					...(transform ? transform(providerTheme) : providerTheme),
					...themeOverrides,
				});
			},
		'./node_modules/@storybook/addon-docs/dist/chunk-GN5PWX3D.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			Object.create,
				Object.defineProperty,
				Object.getOwnPropertyDescriptor,
				Object.getOwnPropertyNames,
				Object.getPrototypeOf,
				Object.prototype.hasOwnProperty;
		},
		'./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					argsEnhancers: () => argsEnhancers,
					loaders: () => loaders,
				});
			const esm_browser_native = {
				randomUUID:
					'undefined' != typeof crypto &&
					crypto.randomUUID &&
					crypto.randomUUID.bind(crypto),
			};
			let getRandomValues;
			const rnds8 = new Uint8Array(16);
			function rng() {
				if (
					!getRandomValues &&
					((getRandomValues =
						'undefined' != typeof crypto &&
						crypto.getRandomValues &&
						crypto.getRandomValues.bind(crypto)),
					!getRandomValues)
				)
					throw new Error(
						'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
					);
				return getRandomValues(rnds8);
			}
			const byteToHex = [];
			for (let i = 0; i < 256; ++i)
				byteToHex.push((i + 256).toString(16).slice(1));
			function unsafeStringify(arr, offset = 0) {
				return (
					byteToHex[arr[offset + 0]] +
					byteToHex[arr[offset + 1]] +
					byteToHex[arr[offset + 2]] +
					byteToHex[arr[offset + 3]] +
					'-' +
					byteToHex[arr[offset + 4]] +
					byteToHex[arr[offset + 5]] +
					'-' +
					byteToHex[arr[offset + 6]] +
					byteToHex[arr[offset + 7]] +
					'-' +
					byteToHex[arr[offset + 8]] +
					byteToHex[arr[offset + 9]] +
					'-' +
					byteToHex[arr[offset + 10]] +
					byteToHex[arr[offset + 11]] +
					byteToHex[arr[offset + 12]] +
					byteToHex[arr[offset + 13]] +
					byteToHex[arr[offset + 14]] +
					byteToHex[arr[offset + 15]]
				);
			}
			const esm_browser_v4 = function v4(options, buf, offset) {
				if (esm_browser_native.randomUUID && !buf && !options)
					return esm_browser_native.randomUUID();
				const rnds =
					(options = options || {}).random || (options.rng || rng)();
				if (
					((rnds[6] = (15 & rnds[6]) | 64),
					(rnds[8] = (63 & rnds[8]) | 128),
					buf)
				) {
					offset = offset || 0;
					for (let i = 0; i < 16; ++i) buf[offset + i] = rnds[i];
					return buf;
				}
				return unsafeStringify(rnds);
			};
			var external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__(
					'@storybook/preview-api',
				),
				external_STORYBOOK_MODULE_GLOBAL_ =
					__webpack_require__('@storybook/global'),
				external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_ =
					__webpack_require__(
						'@storybook/core-events/preview-errors',
					),
				config = { depth: 10, clearOnStoryChange: !0, limit: 50 },
				findProto = (obj, callback) => {
					let proto = Object.getPrototypeOf(obj);
					return !proto || callback(proto)
						? proto
						: findProto(proto, callback);
				},
				serializeArg = (a) => {
					if (
						'object' == typeof (e = a) &&
						e &&
						findProto(e, (proto) =>
							/^Synthetic(?:Base)?Event$/.test(
								proto.constructor.name,
							),
						) &&
						'function' == typeof e.persist
					) {
						let e = Object.create(
							a.constructor.prototype,
							Object.getOwnPropertyDescriptors(a),
						);
						e.persist();
						let viewDescriptor = Object.getOwnPropertyDescriptor(
								e,
								'view',
							),
							view = viewDescriptor?.value;
						return (
							'object' == typeof view &&
								'Window' === view?.constructor.name &&
								Object.defineProperty(e, 'view', {
									...viewDescriptor,
									value: Object.create(
										view.constructor.prototype,
									),
								}),
							e
						);
					}
					var e;
					return a;
				};
			function action(name, options = {}) {
				let actionOptions = { ...config, ...options },
					handler = function (...args) {
						if (options.implicit) {
							let storyRenderer = (
								'__STORYBOOK_PREVIEW__' in
								external_STORYBOOK_MODULE_GLOBAL_.global
									? external_STORYBOOK_MODULE_GLOBAL_.global
											.__STORYBOOK_PREVIEW__
									: void 0
							)?.storyRenders.find(
								(render) =>
									'playing' === render.phase ||
									'rendering' === render.phase,
							);
							if (storyRenderer) {
								let deprecated =
										!window?.FEATURES
											?.disallowImplicitActionsInRenderV8,
									error =
										new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering(
											{
												phase: storyRenderer.phase,
												name,
												deprecated,
											},
										);
								if (!deprecated) throw error;
								console.warn(error);
							}
						}
						let channel =
								external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),
							id =
								'object' == typeof crypto &&
								'function' == typeof crypto.getRandomValues
									? esm_browser_v4()
									: Date.now().toString(36) +
									  Math.random().toString(36).substring(2),
							serializedArgs = args.map(serializeArg),
							normalizedArgs =
								args.length > 1
									? serializedArgs
									: serializedArgs[0],
							actionDisplayToEmit = {
								id,
								count: 0,
								data: { name, args: normalizedArgs },
								options: {
									...actionOptions,
									maxDepth: 5 + (actionOptions.depth || 3),
									allowFunction:
										actionOptions.allowFunction || !1,
								},
							};
						channel.emit(
							'storybook/actions/action-event',
							actionDisplayToEmit,
						);
					};
				return (
					(handler.isAction = !0),
					(handler.implicit = options.implicit),
					handler
				);
			}
			var isInInitialArgs = (name, initialArgs) =>
					typeof initialArgs[name] > 'u' && !(name in initialArgs),
				argsEnhancers = [
					(context) => {
						let {
							initialArgs,
							argTypes,
							parameters: { actions },
						} = context;
						return actions?.disable || !argTypes
							? {}
							: Object.entries(argTypes)
									.filter(
										([name, argType]) => !!argType.action,
									)
									.reduce(
										(acc, [name, argType]) => (
											isInInitialArgs(
												name,
												initialArgs,
											) &&
												(acc[name] = action(
													'string' ==
														typeof argType.action
														? argType.action
														: name,
												)),
											acc
										),
										{},
									);
					},
					(context) => {
						let {
							initialArgs,
							argTypes,
							id,
							parameters: { actions },
						} = context;
						if (
							!actions ||
							actions.disable ||
							!actions.argTypesRegex ||
							!argTypes
						)
							return {};
						let argTypesRegex = new RegExp(actions.argTypesRegex);
						return Object.entries(argTypes)
							.filter(([name]) => !!argTypesRegex.test(name))
							.reduce(
								(acc, [name, argType]) => (
									isInInitialArgs(name, initialArgs) &&
										(acc[name] = action(name, {
											implicit: !0,
											id,
										})),
									acc
								),
								{},
							);
					},
				],
				subscribed = !1,
				loaders = [
					(context) => {
						let {
							parameters: { actions },
						} = context;
						if (
							!actions?.disable &&
							!subscribed &&
							'__STORYBOOK_TEST_ON_MOCK_CALL__' in
								external_STORYBOOK_MODULE_GLOBAL_.global &&
							'function' ==
								typeof external_STORYBOOK_MODULE_GLOBAL_.global
									.__STORYBOOK_TEST_ON_MOCK_CALL__
						) {
							(0,
							external_STORYBOOK_MODULE_GLOBAL_.global
								.__STORYBOOK_TEST_ON_MOCK_CALL__)(
								(mock, args) => {
									let name = mock.getMockName();
									'spy' !== name &&
										(!/^next\/.*::/.test(name) ||
											[
												'next/router::useRouter()',
												'next/navigation::useRouter()',
												'next/navigation::redirect',
												'next/cache::',
												'next/headers::cookies().set',
												'next/headers::cookies().delete',
												'next/headers::headers().set',
												'next/headers::headers().delete',
											].some((prefix) =>
												name.startsWith(prefix),
											)) &&
										action(name)(args);
								},
							),
								(subscribed = !0);
						}
					},
				];
		},
		'./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.r(__webpack_exports__),
					__webpack_require__.d(__webpack_exports__, {
						decorators: () => decorators,
						globals: () => globals,
						parameters: () => parameters,
					});
				var external_STORYBOOK_MODULE_PREVIEW_API_ =
						__webpack_require__('@storybook/preview-api'),
					external_STORYBOOK_MODULE_GLOBAL_ =
						__webpack_require__('@storybook/global'),
					esm = __webpack_require__(
						'./node_modules/ts-dedent/esm/index.js',
					),
					external_STORYBOOK_MODULE_CLIENT_LOGGER_ =
						__webpack_require__('@storybook/client-logger'),
					{ document: preview_document, window: preview_window } =
						external_STORYBOOK_MODULE_GLOBAL_.global,
					clearStyles = (selector) => {
						(Array.isArray(selector)
							? selector
							: [selector]
						).forEach(clearStyle);
					},
					clearStyle = (selector) => {
						let element = preview_document.getElementById(selector);
						element && element.parentElement?.removeChild(element);
					},
					decorators = [
						(StoryFn, context) => {
							let { globals: globals2, parameters: parameters2 } =
									context,
								gridParameters = parameters2.backgrounds.grid,
								isActive =
									!0 === globals2.backgrounds?.grid &&
									!0 !== gridParameters.disable,
								{ cellAmount, cellSize, opacity } =
									gridParameters,
								isInDocs = 'docs' === context.viewMode,
								defaultOffset =
									void 0 === parameters2.layout ||
									'padded' === parameters2.layout
										? 16
										: 0,
								offsetX =
									gridParameters.offsetX ??
									(isInDocs ? 20 : defaultOffset),
								offsetY =
									gridParameters.offsetY ??
									(isInDocs ? 20 : defaultOffset),
								gridStyles = (0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(
									() =>
										`\n      ${
											'docs' === context.viewMode
												? `#anchor--${context.id} .docs-story`
												: '.sb-show-main'
										} {\n        background-size: ${[
											`${cellSize * cellAmount}px ${
												cellSize * cellAmount
											}px`,
											`${cellSize * cellAmount}px ${
												cellSize * cellAmount
											}px`,
											`${cellSize}px ${cellSize}px`,
											`${cellSize}px ${cellSize}px`,
										].join(
											', ',
										)} !important;\n        background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n        background-blend-mode: difference !important;\n        background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(rgba(130, 130, 130, ${
											opacity / 2
										}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${
											opacity / 2
										}) 1px, transparent 1px) !important;\n      }\n    `,
									[cellSize],
								);
							return (
								(0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(() => {
									let selectorId =
										'docs' === context.viewMode
											? `addon-backgrounds-grid-docs-${context.id}`
											: 'addon-backgrounds-grid';
									isActive
										? ((selector, css) => {
												let existingStyle =
													preview_document.getElementById(
														selector,
													);
												if (existingStyle)
													existingStyle.innerHTML !==
														css &&
														(existingStyle.innerHTML =
															css);
												else {
													let style =
														preview_document.createElement(
															'style',
														);
													style.setAttribute(
														'id',
														selector,
													),
														(style.innerHTML = css),
														preview_document.head.appendChild(
															style,
														);
												}
										  })(selectorId, gridStyles)
										: clearStyles(selectorId);
								}, [isActive, gridStyles, context]),
								StoryFn()
							);
						},
						(StoryFn, context) => {
							let { globals: globals2, parameters: parameters2 } =
									context,
								globalsBackgroundColor =
									globals2.backgrounds?.value,
								backgroundsConfig = parameters2.backgrounds,
								selectedBackgroundColor = (0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(
									() =>
										backgroundsConfig.disable
											? 'transparent'
											: ((
													currentSelectedValue,
													backgrounds = [],
													defaultName,
											  ) => {
													if (
														'transparent' ===
														currentSelectedValue
													)
														return 'transparent';
													if (
														backgrounds.find(
															(background) =>
																background.value ===
																currentSelectedValue,
														)
													)
														return currentSelectedValue;
													let defaultBackground =
														backgrounds.find(
															(background) =>
																background.name ===
																defaultName,
														);
													if (defaultBackground)
														return defaultBackground.value;
													if (defaultName) {
														let availableColors =
															backgrounds
																.map(
																	(
																		background,
																	) =>
																		background.name,
																)
																.join(', ');
														external_STORYBOOK_MODULE_CLIENT_LOGGER_
															.logger.warn(esm.Z`
        Backgrounds Addon: could not find the default color "${defaultName}".
        These are the available colors for your story based on your configuration:
        ${availableColors}.
      `);
													}
													return 'transparent';
											  })(
													globalsBackgroundColor,
													backgroundsConfig.values,
													backgroundsConfig.default,
											  ),
									[backgroundsConfig, globalsBackgroundColor],
								),
								isActive = (0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(
									() =>
										selectedBackgroundColor &&
										'transparent' !==
											selectedBackgroundColor,
									[selectedBackgroundColor],
								),
								selector =
									'docs' === context.viewMode
										? `#anchor--${context.id} .docs-story`
										: '.sb-show-main',
								backgroundStyles = (0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(
									() =>
										`\n      ${selector} {\n        background: ${selectedBackgroundColor} !important;\n        ${
											preview_window.matchMedia(
												'(prefers-reduced-motion: reduce)',
											).matches
												? ''
												: 'transition: background-color 0.3s;'
										}\n      }\n    `,
									[selectedBackgroundColor, selector],
								);
							return (
								(0,
								external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(() => {
									let selectorId =
										'docs' === context.viewMode
											? `addon-backgrounds-docs-${context.id}`
											: 'addon-backgrounds-color';
									isActive
										? ((selector, css, storyId) => {
												let existingStyle =
													preview_document.getElementById(
														selector,
													);
												if (existingStyle)
													existingStyle.innerHTML !==
														css &&
														(existingStyle.innerHTML =
															css);
												else {
													let style =
														preview_document.createElement(
															'style',
														);
													style.setAttribute(
														'id',
														selector,
													),
														(style.innerHTML = css);
													let gridStyleSelector =
															'addon-backgrounds-grid' +
															(storyId
																? `-docs-${storyId}`
																: ''),
														existingGridStyle =
															preview_document.getElementById(
																gridStyleSelector,
															);
													existingGridStyle
														? existingGridStyle.parentElement?.insertBefore(
																style,
																existingGridStyle,
														  )
														: preview_document.head.appendChild(
																style,
														  );
												}
										  })(
												selectorId,
												backgroundStyles,
												'docs' === context.viewMode
													? context.id
													: null,
										  )
										: clearStyles(selectorId);
								}, [isActive, backgroundStyles, context]),
								StoryFn()
							);
						},
					],
					parameters = {
						backgrounds: {
							grid: { cellSize: 20, opacity: 0.5, cellAmount: 5 },
							values: [
								{ name: 'light', value: '#F8F8F8' },
								{ name: 'dark', value: '#333333' },
							],
						},
					},
					globals = { backgrounds: null };
			},
		'./node_modules/@storybook/addon-essentials/dist/docs/preview.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					parameters: () => parameters,
				});
			__webpack_require__(
				'./node_modules/@storybook/addon-docs/dist/chunk-GN5PWX3D.mjs',
			);
			var external_STORYBOOK_MODULE_GLOBAL_ =
					__webpack_require__('@storybook/global'),
				excludeTags = Object.entries(
					external_STORYBOOK_MODULE_GLOBAL_.global.TAGS_OPTIONS ?? {},
				).reduce((acc, entry) => {
					let [tag, option] = entry;
					return (
						option.excludeFromDocsStories && (acc[tag] = !0), acc
					);
				}, {}),
				parameters = {
					docs: {
						renderer: async () => {
							let { DocsRenderer } = await Promise.all([
								__webpack_require__.e(5562),
								__webpack_require__.e(5312),
							]).then(
								__webpack_require__.bind(
									__webpack_require__,
									'./node_modules/@storybook/addon-docs/dist/DocsRenderer-K4EAMTCU.mjs',
								),
							);
							return new DocsRenderer();
						},
						stories: {
							filter: (story) =>
								0 ===
									(story.tags || []).filter(
										(tag) => excludeTags[tag],
									).length && !story.parameters.docs?.disable,
						},
					},
				};
		},
		'./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.r(__webpack_exports__);
				var external_STORYBOOK_MODULE_GLOBAL_ =
						__webpack_require__('@storybook/global'),
					external_STORYBOOK_MODULE_PREVIEW_API_ =
						__webpack_require__('@storybook/preview-api'),
					external_STORYBOOK_MODULE_CORE_EVENTS_ =
						__webpack_require__('@storybook/core-events'),
					{ document: preview_document } =
						external_STORYBOOK_MODULE_GLOBAL_.global,
					channel =
						external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),
					resetHighlight = () => {
						let sheetToBeRemoved =
							preview_document.getElementById(
								'storybookHighlight',
							);
						sheetToBeRemoved &&
							sheetToBeRemoved.parentNode?.removeChild(
								sheetToBeRemoved,
							);
					};
				channel.on(
					external_STORYBOOK_MODULE_CORE_EVENTS_.STORY_CHANGED,
					resetHighlight,
				),
					channel.on('storybook/highlight/reset', resetHighlight),
					channel.on('storybook/highlight/add', (infos) => {
						resetHighlight();
						let elements = Array.from(new Set(infos.elements)),
							sheet = preview_document.createElement('style');
						sheet.setAttribute('id', 'storybookHighlight'),
							(sheet.innerHTML = elements
								.map(
									(target) =>
										`${target}{\n          ${((
											color = '#FF4785',
											style = 'dashed',
										) =>
											`\n  outline: 2px ${style} ${color};\n  outline-offset: 2px;\n  box-shadow: 0 0 0 6px rgba(255,255,255,0.6);\n`)(
											infos.color,
											infos.style,
										)}\n         }`,
								)
								.join(' ')),
							preview_document.head.appendChild(sheet);
					});
			},
		'./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					decorators: () => decorators,
					globals: () => globals,
				});
			var external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__(
					'@storybook/preview-api',
				),
				external_STORYBOOK_MODULE_GLOBAL_ =
					__webpack_require__('@storybook/global'),
				isProduction = !0,
				prefix = 'Invariant failed';
			function invariant(condition, message) {
				if (!condition) {
					if (isProduction) throw new Error(prefix);
					var provided =
							'function' == typeof message ? message() : message,
						value = provided
							? ''.concat(prefix, ': ').concat(provided)
							: prefix;
					throw new Error(value);
				}
			}
			function getDocumentWidthAndHeight() {
				let container =
						external_STORYBOOK_MODULE_GLOBAL_.global.document
							.documentElement,
					height = Math.max(
						container.scrollHeight,
						container.offsetHeight,
					);
				return {
					width: Math.max(
						container.scrollWidth,
						container.offsetWidth,
					),
					height,
				};
			}
			function setCanvasWidthAndHeight(
				canvas,
				context,
				{ width, height },
			) {
				(canvas.style.width = `${width}px`),
					(canvas.style.height = `${height}px`);
				let scale =
					external_STORYBOOK_MODULE_GLOBAL_.global.window
						.devicePixelRatio;
				(canvas.width = Math.floor(width * scale)),
					(canvas.height = Math.floor(height * scale)),
					context.scale(scale, scale);
			}
			var state = {};
			function init() {
				state.canvas ||
					(state = (function createCanvas() {
						let canvas =
							external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement(
								'canvas',
							);
						canvas.id = 'storybook-addon-measure';
						let context = canvas.getContext('2d');
						invariant(null != context);
						let { width, height } = getDocumentWidthAndHeight();
						return (
							setCanvasWidthAndHeight(canvas, context, {
								width,
								height,
							}),
							(canvas.style.position = 'absolute'),
							(canvas.style.left = '0'),
							(canvas.style.top = '0'),
							(canvas.style.zIndex = '2147483647'),
							(canvas.style.pointerEvents = 'none'),
							external_STORYBOOK_MODULE_GLOBAL_.global.document.body.appendChild(
								canvas,
							),
							{ canvas, context, width, height }
						);
					})());
			}
			function clear() {
				state.context &&
					state.context.clearRect(
						0,
						0,
						state.width ?? 0,
						state.height ?? 0,
					);
			}
			var colors = {
					margin: '#f6b26b',
					border: '#ffe599',
					padding: '#93c47d',
					content: '#6fa8dc',
					text: '#232020',
				},
				labelPadding = 6;
			function roundedRect(context, { x, y, w, h, r }) {
				(x -= w / 2),
					(y -= h / 2),
					w < 2 * r && (r = w / 2),
					h < 2 * r && (r = h / 2),
					context.beginPath(),
					context.moveTo(x + r, y),
					context.arcTo(x + w, y, x + w, y + h, r),
					context.arcTo(x + w, y + h, x, y + h, r),
					context.arcTo(x, y + h, x, y, r),
					context.arcTo(x, y, x + w, y, r),
					context.closePath();
			}
			function textWithRect(context, type, { x, y, w, h }, text) {
				return (
					roundedRect(context, { x, y, w, h, r: 3 }),
					(context.fillStyle = `${colors[type]}dd`),
					context.fill(),
					(context.strokeStyle = colors[type]),
					context.stroke(),
					(context.fillStyle = colors.text),
					context.fillText(text, x, y),
					roundedRect(context, { x, y, w, h, r: 3 }),
					(context.fillStyle = `${colors[type]}dd`),
					context.fill(),
					(context.strokeStyle = colors[type]),
					context.stroke(),
					(context.fillStyle = colors.text),
					context.fillText(text, x, y),
					{ x, y, w, h }
				);
			}
			function configureText(context, text) {
				(context.font = '600 12px monospace'),
					(context.textBaseline = 'middle'),
					(context.textAlign = 'center');
				let metrics = context.measureText(text),
					actualHeight =
						metrics.actualBoundingBoxAscent +
						metrics.actualBoundingBoxDescent;
				return {
					w: metrics.width + 2 * labelPadding,
					h: actualHeight + 2 * labelPadding,
				};
			}
			function drawLabel(
				context,
				measurements,
				{ type, position = 'center', text },
				prevRect,
				external = !1,
			) {
				let { x, y } = (function positionCoordinate(
						position,
						{ padding, border, width, height, top, left },
					) {
						let contentWidth =
								width -
								border.left -
								border.right -
								padding.left -
								padding.right,
							contentHeight =
								height -
								padding.top -
								padding.bottom -
								border.top -
								border.bottom,
							x = left + border.left + padding.left,
							y = top + border.top + padding.top;
						return (
							'top' === position
								? (x += contentWidth / 2)
								: 'right' === position
								? ((x += contentWidth),
								  (y += contentHeight / 2))
								: 'bottom' === position
								? ((x += contentWidth / 2),
								  (y += contentHeight))
								: 'left' === position
								? (y += contentHeight / 2)
								: 'center' === position &&
								  ((x += contentWidth / 2),
								  (y += contentHeight / 2)),
							{ x, y }
						);
					})(position, measurements),
					{ offsetX, offsetY } = (function offset(
						type,
						position,
						{ margin, border, padding },
						labelPaddingSize,
						external,
					) {
						let shift = (dir) => 0,
							offsetX = 0,
							offsetY = 0,
							locationMultiplier = external ? 1 : 0.5,
							labelPaddingShift = external
								? 2 * labelPaddingSize
								: 0;
						return (
							'padding' === type
								? (shift = (dir) =>
										padding[dir] * locationMultiplier +
										labelPaddingShift)
								: 'border' === type
								? (shift = (dir) =>
										padding[dir] +
										border[dir] * locationMultiplier +
										labelPaddingShift)
								: 'margin' === type &&
								  (shift = (dir) =>
										padding[dir] +
										border[dir] +
										margin[dir] * locationMultiplier +
										labelPaddingShift),
							'top' === position
								? (offsetY = -shift('top'))
								: 'right' === position
								? (offsetX = shift('right'))
								: 'bottom' === position
								? (offsetY = shift('bottom'))
								: 'left' === position &&
								  (offsetX = -shift('left')),
							{ offsetX, offsetY }
						);
					})(
						type,
						position,
						measurements,
						labelPadding + 1,
						external,
					);
				(x += offsetX), (y += offsetY);
				let { w, h } = configureText(context, text);
				if (
					prevRect &&
					(function collide(a, b) {
						return (
							Math.abs(a.x - b.x) < Math.abs(a.w + b.w) / 2 &&
							Math.abs(a.y - b.y) < Math.abs(a.h + b.h) / 2
						);
					})({ x, y, w, h }, prevRect)
				) {
					let adjusted = (function overlapAdjustment(
						position,
						currentRect,
						prevRect,
					) {
						return (
							'top' === position
								? (currentRect.y =
										prevRect.y - prevRect.h - labelPadding)
								: 'right' === position
								? (currentRect.x =
										prevRect.x +
										prevRect.w / 2 +
										labelPadding +
										currentRect.w / 2)
								: 'bottom' === position
								? (currentRect.y =
										prevRect.y + prevRect.h + labelPadding)
								: 'left' === position &&
								  (currentRect.x =
										prevRect.x -
										prevRect.w / 2 -
										labelPadding -
										currentRect.w / 2),
							{ x: currentRect.x, y: currentRect.y }
						);
					})(position, { x, y, w, h }, prevRect);
					(x = adjusted.x), (y = adjusted.y);
				}
				return textWithRect(context, type, { x, y, w, h }, text);
			}
			function drawFloatingLabel(context, measurements, { type, text }) {
				let { floatingAlignment: floatingAlignment2, extremities } =
						measurements,
					x = extremities[floatingAlignment2.x],
					y = extremities[floatingAlignment2.y],
					{ w, h } = configureText(context, text),
					{ offsetX, offsetY } = (function floatingOffset(
						alignment,
						{ w, h },
					) {
						let deltaW = 0.5 * w + labelPadding,
							deltaH = 0.5 * h + labelPadding;
						return {
							offsetX: ('left' === alignment.x ? -1 : 1) * deltaW,
							offsetY: ('top' === alignment.y ? -1 : 1) * deltaH,
						};
					})(floatingAlignment2, { w, h });
				return (
					(x += offsetX),
					(y += offsetY),
					textWithRect(context, type, { x, y, w, h }, text)
				);
			}
			function drawStack(context, measurements, stack, external) {
				let rects = [];
				stack.forEach((l, idx) => {
					let rect =
						external && 'center' === l.position
							? drawFloatingLabel(context, measurements, l)
							: drawLabel(
									context,
									measurements,
									l,
									rects[idx - 1],
									external,
							  );
					rects[idx] = rect;
				});
			}
			var colors2 = {
					margin: '#f6b26ba8',
					border: '#ffe599a8',
					padding: '#93c47d8c',
					content: '#6fa8dca8',
				},
				SMALL_NODE_SIZE = 30;
			function pxToNumber(px) {
				return parseInt(px.replace('px', ''), 10);
			}
			function round(value) {
				return Number.isInteger(value) ? value : value.toFixed(2);
			}
			function filterZeroValues(labels) {
				return labels.filter((l) => 0 !== l.text && '0' !== l.text);
			}
			function floatingAlignment(extremities) {
				let windowExtremities_top =
						external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,
					windowExtremities_bottom =
						external_STORYBOOK_MODULE_GLOBAL_.global.window
							.scrollY +
						external_STORYBOOK_MODULE_GLOBAL_.global.window
							.innerHeight,
					windowExtremities_left =
						external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX,
					windowExtremities_right =
						external_STORYBOOK_MODULE_GLOBAL_.global.window
							.scrollX +
						external_STORYBOOK_MODULE_GLOBAL_.global.window
							.innerWidth,
					distances_top = Math.abs(
						windowExtremities_top - extremities.top,
					),
					distances_bottom = Math.abs(
						windowExtremities_bottom - extremities.bottom,
					);
				return {
					x:
						Math.abs(windowExtremities_left - extremities.left) >
						Math.abs(windowExtremities_right - extremities.right)
							? 'left'
							: 'right',
					y: distances_top > distances_bottom ? 'top' : 'bottom',
				};
			}
			function drawBoxModel(element) {
				return (context) => {
					if (element && context) {
						let measurements = (function measureElement(element) {
								let style =
										external_STORYBOOK_MODULE_GLOBAL_.global.getComputedStyle(
											element,
										),
									{
										top,
										left,
										right,
										bottom,
										width,
										height,
									} = element.getBoundingClientRect(),
									{
										marginTop,
										marginBottom,
										marginLeft,
										marginRight,
										paddingTop,
										paddingBottom,
										paddingLeft,
										paddingRight,
										borderBottomWidth,
										borderTopWidth,
										borderLeftWidth,
										borderRightWidth,
									} = style;
								(top +=
									external_STORYBOOK_MODULE_GLOBAL_.global
										.window.scrollY),
									(left +=
										external_STORYBOOK_MODULE_GLOBAL_.global
											.window.scrollX),
									(bottom +=
										external_STORYBOOK_MODULE_GLOBAL_.global
											.window.scrollY),
									(right +=
										external_STORYBOOK_MODULE_GLOBAL_.global
											.window.scrollX);
								let margin = {
										top: pxToNumber(marginTop),
										bottom: pxToNumber(marginBottom),
										left: pxToNumber(marginLeft),
										right: pxToNumber(marginRight),
									},
									padding = {
										top: pxToNumber(paddingTop),
										bottom: pxToNumber(paddingBottom),
										left: pxToNumber(paddingLeft),
										right: pxToNumber(paddingRight),
									},
									border = {
										top: pxToNumber(borderTopWidth),
										bottom: pxToNumber(borderBottomWidth),
										left: pxToNumber(borderLeftWidth),
										right: pxToNumber(borderRightWidth),
									},
									extremities = {
										top: top - margin.top,
										bottom: bottom + margin.bottom,
										left: left - margin.left,
										right: right + margin.right,
									};
								return {
									margin,
									padding,
									border,
									top,
									left,
									bottom,
									right,
									width,
									height,
									extremities,
									floatingAlignment:
										floatingAlignment(extremities),
								};
							})(element),
							marginLabels = (function drawMargin(
								context,
								{
									margin,
									width,
									height,
									top,
									left,
									bottom,
									right,
								},
							) {
								let marginHeight =
									height + margin.bottom + margin.top;
								return (
									(context.fillStyle = colors2.margin),
									context.fillRect(
										left,
										top - margin.top,
										width,
										margin.top,
									),
									context.fillRect(
										right,
										top - margin.top,
										margin.right,
										marginHeight,
									),
									context.fillRect(
										left,
										bottom,
										width,
										margin.bottom,
									),
									context.fillRect(
										left - margin.left,
										top - margin.top,
										margin.left,
										marginHeight,
									),
									filterZeroValues([
										{
											type: 'margin',
											text: round(margin.top),
											position: 'top',
										},
										{
											type: 'margin',
											text: round(margin.right),
											position: 'right',
										},
										{
											type: 'margin',
											text: round(margin.bottom),
											position: 'bottom',
										},
										{
											type: 'margin',
											text: round(margin.left),
											position: 'left',
										},
									])
								);
							})(context, measurements),
							paddingLabels = (function drawPadding(
								context,
								{
									padding,
									border,
									width,
									height,
									top,
									left,
									bottom,
									right,
								},
							) {
								let paddingWidth =
										width - border.left - border.right,
									paddingHeight =
										height -
										padding.top -
										padding.bottom -
										border.top -
										border.bottom;
								return (
									(context.fillStyle = colors2.padding),
									context.fillRect(
										left + border.left,
										top + border.top,
										paddingWidth,
										padding.top,
									),
									context.fillRect(
										right - padding.right - border.right,
										top + padding.top + border.top,
										padding.right,
										paddingHeight,
									),
									context.fillRect(
										left + border.left,
										bottom - padding.bottom - border.bottom,
										paddingWidth,
										padding.bottom,
									),
									context.fillRect(
										left + border.left,
										top + padding.top + border.top,
										padding.left,
										paddingHeight,
									),
									filterZeroValues([
										{
											type: 'padding',
											text: padding.top,
											position: 'top',
										},
										{
											type: 'padding',
											text: padding.right,
											position: 'right',
										},
										{
											type: 'padding',
											text: padding.bottom,
											position: 'bottom',
										},
										{
											type: 'padding',
											text: padding.left,
											position: 'left',
										},
									])
								);
							})(context, measurements),
							borderLabels = (function drawBorder(
								context,
								{
									border,
									width,
									height,
									top,
									left,
									bottom,
									right,
								},
							) {
								let borderHeight =
									height - border.top - border.bottom;
								return (
									(context.fillStyle = colors2.border),
									context.fillRect(
										left,
										top,
										width,
										border.top,
									),
									context.fillRect(
										left,
										bottom - border.bottom,
										width,
										border.bottom,
									),
									context.fillRect(
										left,
										top + border.top,
										border.left,
										borderHeight,
									),
									context.fillRect(
										right - border.right,
										top + border.top,
										border.right,
										borderHeight,
									),
									filterZeroValues([
										{
											type: 'border',
											text: border.top,
											position: 'top',
										},
										{
											type: 'border',
											text: border.right,
											position: 'right',
										},
										{
											type: 'border',
											text: border.bottom,
											position: 'bottom',
										},
										{
											type: 'border',
											text: border.left,
											position: 'left',
										},
									])
								);
							})(context, measurements),
							contentLabels = (function drawContent(
								context,
								{ padding, border, width, height, top, left },
							) {
								let contentWidth =
										width -
										border.left -
										border.right -
										padding.left -
										padding.right,
									contentHeight =
										height -
										padding.top -
										padding.bottom -
										border.top -
										border.bottom;
								return (
									(context.fillStyle = colors2.content),
									context.fillRect(
										left + border.left + padding.left,
										top + border.top + padding.top,
										contentWidth,
										contentHeight,
									),
									[
										{
											type: 'content',
											position: 'center',
											text: `${round(
												contentWidth,
											)} x ${round(contentHeight)}`,
										},
									]
								);
							})(context, measurements);
						!(function labelStacks(
							context,
							measurements,
							labels,
							externalLabels,
						) {
							let stacks = labels.reduce(
								(acc, l) => (
									Object.prototype.hasOwnProperty.call(
										acc,
										l.position,
									) || (acc[l.position] = []),
									acc[l.position]?.push(l),
									acc
								),
								{},
							);
							stacks.top &&
								drawStack(
									context,
									measurements,
									stacks.top,
									externalLabels,
								),
								stacks.right &&
									drawStack(
										context,
										measurements,
										stacks.right,
										externalLabels,
									),
								stacks.bottom &&
									drawStack(
										context,
										measurements,
										stacks.bottom,
										externalLabels,
									),
								stacks.left &&
									drawStack(
										context,
										measurements,
										stacks.left,
										externalLabels,
									),
								stacks.center &&
									drawStack(
										context,
										measurements,
										stacks.center,
										externalLabels,
									);
						})(
							context,
							measurements,
							[
								...contentLabels,
								...paddingLabels,
								...borderLabels,
								...marginLabels,
							],
							measurements.width <= 3 * SMALL_NODE_SIZE ||
								measurements.height <= SMALL_NODE_SIZE,
						);
					}
				};
			}
			function drawSelectedElement(element) {
				!(function draw(callback) {
					clear(), callback(state.context);
				})(drawBoxModel(element));
			}
			var nodeAtPointerRef,
				pointer = { x: 0, y: 0 };
			function findAndDrawElement(x, y) {
				(nodeAtPointerRef = ((x, y) => {
					let element =
							external_STORYBOOK_MODULE_GLOBAL_.global.document.elementFromPoint(
								x,
								y,
							),
						crawlShadows = (node) => {
							if (node && node.shadowRoot) {
								let nestedElement =
									node.shadowRoot.elementFromPoint(x, y);
								return node.isEqualNode(nestedElement)
									? node
									: nestedElement.shadowRoot
									? crawlShadows(nestedElement)
									: nestedElement;
							}
							return node;
						};
					return crawlShadows(element) || element;
				})(x, y)),
					drawSelectedElement(nodeAtPointerRef);
			}
			var decorators = [
					(StoryFn, context) => {
						let { measureEnabled } = context.globals;
						return (
							(0,
							external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(() => {
								let onPointerMove = (event) => {
									window.requestAnimationFrame(() => {
										event.stopPropagation(),
											(pointer.x = event.clientX),
											(pointer.y = event.clientY);
									});
								};
								return (
									document.addEventListener(
										'pointermove',
										onPointerMove,
									),
									() => {
										document.removeEventListener(
											'pointermove',
											onPointerMove,
										);
									}
								);
							}, []),
							(0,
							external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(() => {
								let onResize = () => {
									window.requestAnimationFrame(() => {
										!(function rescale() {
											invariant(
												state.canvas,
												'Canvas should exist in the state.',
											),
												invariant(
													state.context,
													'Context should exist in the state.',
												),
												setCanvasWidthAndHeight(
													state.canvas,
													state.context,
													{ width: 0, height: 0 },
												);
											let { width, height } =
												getDocumentWidthAndHeight();
											setCanvasWidthAndHeight(
												state.canvas,
												state.context,
												{ width, height },
											),
												(state.width = width),
												(state.height = height);
										})();
									});
								};
								return (
									'story' === context.viewMode &&
										measureEnabled &&
										(document.addEventListener(
											'pointerover',
											(event) => {
												window.requestAnimationFrame(
													() => {
														event.stopPropagation(),
															findAndDrawElement(
																event.clientX,
																event.clientY,
															);
													},
												);
											},
										),
										init(),
										window.addEventListener(
											'resize',
											onResize,
										),
										findAndDrawElement(
											pointer.x,
											pointer.y,
										)),
									() => {
										window.removeEventListener(
											'resize',
											onResize,
										),
											(function destroy() {
												state.canvas &&
													(clear(),
													state.canvas.parentNode?.removeChild(
														state.canvas,
													),
													(state = {}));
											})();
									}
								);
							}, [measureEnabled, context.viewMode]),
							StoryFn()
						);
					},
				],
				globals = { measureEnabled: !1 };
		},
		'./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					decorators: () => decorators,
					globals: () => globals,
				});
			var external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__(
					'@storybook/preview-api',
				),
				external_STORYBOOK_MODULE_GLOBAL_ =
					__webpack_require__('@storybook/global'),
				esm = __webpack_require__(
					'./node_modules/ts-dedent/esm/index.js',
				),
				clearStyles = (selector) => {
					(Array.isArray(selector) ? selector : [selector]).forEach(
						clearStyle,
					);
				},
				clearStyle = (input) => {
					let selector =
							'string' == typeof input ? input : input.join(''),
						element =
							external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(
								selector,
							);
					element &&
						element.parentElement &&
						element.parentElement.removeChild(element);
				};
			var decorators = [
					(StoryFn, context) => {
						let { globals: globals2 } = context,
							isActive = [!0, 'true'].includes(globals2.outline),
							isInDocs = 'docs' === context.viewMode,
							outlineStyles = (0,
							external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(
								() =>
									(function outlineCSS(selector) {
										return esm.Z`
    ${selector} body {
      outline: 1px solid #2980b9 !important;
    }

    ${selector} article {
      outline: 1px solid #3498db !important;
    }

    ${selector} nav {
      outline: 1px solid #0088c3 !important;
    }

    ${selector} aside {
      outline: 1px solid #33a0ce !important;
    }

    ${selector} section {
      outline: 1px solid #66b8da !important;
    }

    ${selector} header {
      outline: 1px solid #99cfe7 !important;
    }

    ${selector} footer {
      outline: 1px solid #cce7f3 !important;
    }

    ${selector} h1 {
      outline: 1px solid #162544 !important;
    }

    ${selector} h2 {
      outline: 1px solid #314e6e !important;
    }

    ${selector} h3 {
      outline: 1px solid #3e5e85 !important;
    }

    ${selector} h4 {
      outline: 1px solid #449baf !important;
    }

    ${selector} h5 {
      outline: 1px solid #c7d1cb !important;
    }

    ${selector} h6 {
      outline: 1px solid #4371d0 !important;
    }

    ${selector} main {
      outline: 1px solid #2f4f90 !important;
    }

    ${selector} address {
      outline: 1px solid #1a2c51 !important;
    }

    ${selector} div {
      outline: 1px solid #036cdb !important;
    }

    ${selector} p {
      outline: 1px solid #ac050b !important;
    }

    ${selector} hr {
      outline: 1px solid #ff063f !important;
    }

    ${selector} pre {
      outline: 1px solid #850440 !important;
    }

    ${selector} blockquote {
      outline: 1px solid #f1b8e7 !important;
    }

    ${selector} ol {
      outline: 1px solid #ff050c !important;
    }

    ${selector} ul {
      outline: 1px solid #d90416 !important;
    }

    ${selector} li {
      outline: 1px solid #d90416 !important;
    }

    ${selector} dl {
      outline: 1px solid #fd3427 !important;
    }

    ${selector} dt {
      outline: 1px solid #ff0043 !important;
    }

    ${selector} dd {
      outline: 1px solid #e80174 !important;
    }

    ${selector} figure {
      outline: 1px solid #ff00bb !important;
    }

    ${selector} figcaption {
      outline: 1px solid #bf0032 !important;
    }

    ${selector} table {
      outline: 1px solid #00cc99 !important;
    }

    ${selector} caption {
      outline: 1px solid #37ffc4 !important;
    }

    ${selector} thead {
      outline: 1px solid #98daca !important;
    }

    ${selector} tbody {
      outline: 1px solid #64a7a0 !important;
    }

    ${selector} tfoot {
      outline: 1px solid #22746b !important;
    }

    ${selector} tr {
      outline: 1px solid #86c0b2 !important;
    }

    ${selector} th {
      outline: 1px solid #a1e7d6 !important;
    }

    ${selector} td {
      outline: 1px solid #3f5a54 !important;
    }

    ${selector} col {
      outline: 1px solid #6c9a8f !important;
    }

    ${selector} colgroup {
      outline: 1px solid #6c9a9d !important;
    }

    ${selector} button {
      outline: 1px solid #da8301 !important;
    }

    ${selector} datalist {
      outline: 1px solid #c06000 !important;
    }

    ${selector} fieldset {
      outline: 1px solid #d95100 !important;
    }

    ${selector} form {
      outline: 1px solid #d23600 !important;
    }

    ${selector} input {
      outline: 1px solid #fca600 !important;
    }

    ${selector} keygen {
      outline: 1px solid #b31e00 !important;
    }

    ${selector} label {
      outline: 1px solid #ee8900 !important;
    }

    ${selector} legend {
      outline: 1px solid #de6d00 !important;
    }

    ${selector} meter {
      outline: 1px solid #e8630c !important;
    }

    ${selector} optgroup {
      outline: 1px solid #b33600 !important;
    }

    ${selector} option {
      outline: 1px solid #ff8a00 !important;
    }

    ${selector} output {
      outline: 1px solid #ff9619 !important;
    }

    ${selector} progress {
      outline: 1px solid #e57c00 !important;
    }

    ${selector} select {
      outline: 1px solid #e26e0f !important;
    }

    ${selector} textarea {
      outline: 1px solid #cc5400 !important;
    }

    ${selector} details {
      outline: 1px solid #33848f !important;
    }

    ${selector} summary {
      outline: 1px solid #60a1a6 !important;
    }

    ${selector} command {
      outline: 1px solid #438da1 !important;
    }

    ${selector} menu {
      outline: 1px solid #449da6 !important;
    }

    ${selector} del {
      outline: 1px solid #bf0000 !important;
    }

    ${selector} ins {
      outline: 1px solid #400000 !important;
    }

    ${selector} img {
      outline: 1px solid #22746b !important;
    }

    ${selector} iframe {
      outline: 1px solid #64a7a0 !important;
    }

    ${selector} embed {
      outline: 1px solid #98daca !important;
    }

    ${selector} object {
      outline: 1px solid #00cc99 !important;
    }

    ${selector} param {
      outline: 1px solid #37ffc4 !important;
    }

    ${selector} video {
      outline: 1px solid #6ee866 !important;
    }

    ${selector} audio {
      outline: 1px solid #027353 !important;
    }

    ${selector} source {
      outline: 1px solid #012426 !important;
    }

    ${selector} canvas {
      outline: 1px solid #a2f570 !important;
    }

    ${selector} track {
      outline: 1px solid #59a600 !important;
    }

    ${selector} map {
      outline: 1px solid #7be500 !important;
    }

    ${selector} area {
      outline: 1px solid #305900 !important;
    }

    ${selector} a {
      outline: 1px solid #ff62ab !important;
    }

    ${selector} em {
      outline: 1px solid #800b41 !important;
    }

    ${selector} strong {
      outline: 1px solid #ff1583 !important;
    }

    ${selector} i {
      outline: 1px solid #803156 !important;
    }

    ${selector} b {
      outline: 1px solid #cc1169 !important;
    }

    ${selector} u {
      outline: 1px solid #ff0430 !important;
    }

    ${selector} s {
      outline: 1px solid #f805e3 !important;
    }

    ${selector} small {
      outline: 1px solid #d107b2 !important;
    }

    ${selector} abbr {
      outline: 1px solid #4a0263 !important;
    }

    ${selector} q {
      outline: 1px solid #240018 !important;
    }

    ${selector} cite {
      outline: 1px solid #64003c !important;
    }

    ${selector} dfn {
      outline: 1px solid #b4005a !important;
    }

    ${selector} sub {
      outline: 1px solid #dba0c8 !important;
    }

    ${selector} sup {
      outline: 1px solid #cc0256 !important;
    }

    ${selector} time {
      outline: 1px solid #d6606d !important;
    }

    ${selector} code {
      outline: 1px solid #e04251 !important;
    }

    ${selector} kbd {
      outline: 1px solid #5e001f !important;
    }

    ${selector} samp {
      outline: 1px solid #9c0033 !important;
    }

    ${selector} var {
      outline: 1px solid #d90047 !important;
    }

    ${selector} mark {
      outline: 1px solid #ff0053 !important;
    }

    ${selector} bdi {
      outline: 1px solid #bf3668 !important;
    }

    ${selector} bdo {
      outline: 1px solid #6f1400 !important;
    }

    ${selector} ruby {
      outline: 1px solid #ff7b93 !important;
    }

    ${selector} rt {
      outline: 1px solid #ff2f54 !important;
    }

    ${selector} rp {
      outline: 1px solid #803e49 !important;
    }

    ${selector} span {
      outline: 1px solid #cc2643 !important;
    }

    ${selector} br {
      outline: 1px solid #db687d !important;
    }

    ${selector} wbr {
      outline: 1px solid #db175b !important;
    }`;
									})(
										isInDocs
											? '[data-story-block="true"]'
											: '.sb-show-main',
									),
								[context],
							);
						return (
							(0,
							external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(() => {
								let selectorId = isInDocs
									? `addon-outline-docs-${context.id}`
									: 'addon-outline';
								return (
									isActive
										? ((selector, css) => {
												let existingStyle =
													external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(
														selector,
													);
												if (existingStyle)
													existingStyle.innerHTML !==
														css &&
														(existingStyle.innerHTML =
															css);
												else {
													let style =
														external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement(
															'style',
														);
													style.setAttribute(
														'id',
														selector,
													),
														(style.innerHTML = css),
														external_STORYBOOK_MODULE_GLOBAL_.global.document.head.appendChild(
															style,
														);
												}
										  })(selectorId, outlineStyles)
										: clearStyles(selectorId),
									() => {
										clearStyles(selectorId);
									}
								);
							}, [isActive, outlineStyles, context]),
							StoryFn()
						);
					},
				],
				globals = { outline: !1 };
		},
		'./node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs':
			(
				__unused_webpack_module,
				__webpack_exports__,
				__webpack_require__,
			) => {
				'use strict';
				__webpack_require__.r(__webpack_exports__),
					__webpack_require__.d(__webpack_exports__, {
						globals: () => globals,
					});
				var globals = { viewport: 'reset', viewportRotated: !1 };
			},
		'./node_modules/@storybook/docs-tools/dist/index.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				Ir: () => createSummaryValue,
				Je: () => extractComponentProps,
				PO: () => SourceType,
				Px: () => hasDocgen,
				VF: () => extractComponentDescription,
				_A: () => isTooLongForTypeSummary,
				fW: () => isTooLongForDefaultValueSummary,
				g: () => SNIPPET_RENDERED,
				jq: () => getDocgenSection,
				p5: () => TypeSystem,
				rS: () => enhanceArgTypes,
			});
			var TypeSystem2,
				_storybook_core_events_preview_errors__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'@storybook/core-events/preview-errors',
					),
				lodash_mapValues_js__WEBPACK_IMPORTED_MODULE_1__ =
					__webpack_require__('./node_modules/lodash/mapValues.js'),
				lodash_mapValues_js__WEBPACK_IMPORTED_MODULE_1___default =
					__webpack_require__.n(
						lodash_mapValues_js__WEBPACK_IMPORTED_MODULE_1__,
					),
				doctrine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
					'./node_modules/doctrine/lib/doctrine.js',
				),
				_storybook_preview_api__WEBPACK_IMPORTED_MODULE_3__ =
					__webpack_require__('@storybook/preview-api'),
				QUOTE_REGEX = /^['"]|['"]$/g,
				parseLiteral = (str2) => {
					let trimmedValue = ((str2) =>
						str2.replace(QUOTE_REGEX, ''))(str2);
					return ((str2) => QUOTE_REGEX.test(str2))(str2) ||
						Number.isNaN(Number(trimmedValue))
						? trimmedValue
						: Number(trimmedValue);
				},
				convertSig = (type) => {
					switch (type.type) {
						case 'function':
							return { name: 'function' };
						case 'object':
							let values = {};
							return (
								type.signature.properties.forEach((prop) => {
									values[prop.key] = convert(prop.value);
								}),
								{ name: 'object', value: values }
							);
						default:
							throw new _storybook_core_events_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError(
								{ type, language: 'Typescript' },
							);
					}
				},
				convert = (type) => {
					let { name, raw } = type,
						base = {};
					switch ((typeof raw < 'u' && (base.raw = raw), type.name)) {
						case 'string':
						case 'number':
						case 'symbol':
						case 'boolean':
							return { ...base, name };
						case 'Array':
							return {
								...base,
								name: 'array',
								value: type.elements.map(convert),
							};
						case 'signature':
							return { ...base, ...convertSig(type) };
						case 'union':
							let result;
							return (
								(result = type.elements?.every(
									(element) => 'literal' === element.name,
								)
									? {
											...base,
											name: 'enum',
											value: type.elements?.map((v) =>
												parseLiteral(v.value),
											),
									  }
									: {
											...base,
											name,
											value: type.elements?.map(convert),
									  }),
								result
							);
						case 'intersection':
							return {
								...base,
								name,
								value: type.elements?.map(convert),
							};
						default:
							return { ...base, name: 'other', value: name };
					}
				},
				isLiteral = (type) => 'literal' === type.name,
				toEnumOption = (element) => element.value.replace(/['|"]/g, ''),
				convertSig2 = (type) => {
					switch (type.type) {
						case 'function':
							return { name: 'function' };
						case 'object':
							let values = {};
							return (
								type.signature.properties.forEach((prop) => {
									values[prop.key] = convert2(prop.value);
								}),
								{ name: 'object', value: values }
							);
						default:
							throw new _storybook_core_events_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError(
								{ type, language: 'Flow' },
							);
					}
				},
				convert2 = (type) => {
					let { name, raw } = type,
						base = {};
					switch ((typeof raw < 'u' && (base.raw = raw), type.name)) {
						case 'literal':
							return {
								...base,
								name: 'other',
								value: type.value,
							};
						case 'string':
						case 'number':
						case 'symbol':
						case 'boolean':
							return { ...base, name };
						case 'Array':
							return {
								...base,
								name: 'array',
								value: type.elements.map(convert2),
							};
						case 'signature':
							return { ...base, ...convertSig2(type) };
						case 'union':
							return type.elements?.every(isLiteral)
								? {
										...base,
										name: 'enum',
										value: type.elements?.map(toEnumOption),
								  }
								: {
										...base,
										name,
										value: type.elements?.map(convert2),
								  };
						case 'intersection':
							return {
								...base,
								name,
								value: type.elements?.map(convert2),
							};
						default:
							return { ...base, name: 'other', value: name };
					}
				},
				SIGNATURE_REGEXP = /^\(.*\) => /,
				convert3 = (type) => {
					let { name, raw, computed, value } = type,
						base = {};
					switch ((typeof raw < 'u' && (base.raw = raw), name)) {
						case 'enum': {
							let values2 = computed
								? value
								: value.map((v) => parseLiteral(v.value));
							return { ...base, name, value: values2 };
						}
						case 'string':
						case 'number':
						case 'symbol':
						case 'object':
							return { ...base, name };
						case 'func':
							return { ...base, name: 'function' };
						case 'bool':
						case 'boolean':
							return { ...base, name: 'boolean' };
						case 'arrayOf':
						case 'array':
							return {
								...base,
								name: 'array',
								value: value && convert3(value),
							};
						case 'objectOf':
							return { ...base, name, value: convert3(value) };
						case 'shape':
						case 'exact':
							let values =
								lodash_mapValues_js__WEBPACK_IMPORTED_MODULE_1___default()(
									value,
									(field) => convert3(field),
								);
							return { ...base, name: 'object', value: values };
						case 'union':
							return {
								...base,
								name: 'union',
								value: value.map((v) => convert3(v)),
							};
						default: {
							if (name?.indexOf('|') > 0)
								try {
									let literalValues = name
										.split('|')
										.map((v) => JSON.parse(v));
									return {
										...base,
										name: 'enum',
										value: literalValues,
									};
								} catch {}
							let otherVal = value ? `${name}(${value})` : name,
								otherName = SIGNATURE_REGEXP.test(name)
									? 'function'
									: 'other';
							return {
								...base,
								name: otherName,
								value: otherVal,
							};
						}
					}
				},
				convert4 = (docgenInfo) => {
					let { type, tsType, flowType } = docgenInfo;
					try {
						if (null != type) return convert3(type);
						if (null != tsType) return convert(tsType);
						if (null != flowType) return convert2(flowType);
					} catch (err) {
						console.error(err);
					}
					return null;
				},
				TypeSystem =
					(((TypeSystem2 = TypeSystem || {}).JAVASCRIPT =
						'JavaScript'),
					(TypeSystem2.FLOW = 'Flow'),
					(TypeSystem2.TYPESCRIPT = 'TypeScript'),
					(TypeSystem2.UNKNOWN = 'Unknown'),
					TypeSystem2),
				BLACKLIST = ['null', 'undefined'];
			function isDefaultValueBlacklisted(value) {
				return BLACKLIST.some((x) => x === value);
			}
			var str = (obj) => {
				if (!obj) return '';
				if ('string' == typeof obj) return obj;
				throw new Error(
					`Description: expected string, got: ${JSON.stringify(obj)}`,
				);
			};
			function hasDocgen(component) {
				return !!component.__docgenInfo;
			}
			function getDocgenSection(component, section) {
				return hasDocgen(component)
					? component.__docgenInfo[section]
					: null;
			}
			var DEFAULT_OPTIONS = {
					tags: [
						'param',
						'arg',
						'argument',
						'returns',
						'ignore',
						'deprecated',
					],
				},
				parseJsDoc = (value, options = DEFAULT_OPTIONS) => {
					if (
						!(function containsJsDoc(value) {
							return null != value && value.includes('@');
						})(value)
					)
						return { includesJsDoc: !1, ignore: !1 };
					let jsDocAst = (function parse(content, tags) {
							let ast;
							try {
								ast =
									doctrine__WEBPACK_IMPORTED_MODULE_2__.parse(
										content ?? '',
										{ tags, sloppy: !0 },
									);
							} catch (e) {
								throw (
									(console.error(e),
									new Error('Cannot parse JSDoc tags.'))
								);
							}
							return ast;
						})(value, options.tags),
						extractedTags = (function extractJsDocTags(ast) {
							let extractedTags = {
								params: null,
								deprecated: null,
								returns: null,
								ignore: !1,
							};
							for (let i = 0; i < ast.tags.length; i += 1) {
								let tag = ast.tags[i];
								if ('ignore' === tag.title) {
									extractedTags.ignore = !0;
									break;
								}
								switch (tag.title) {
									case 'param':
									case 'arg':
									case 'argument': {
										let paramTag = extractParam(tag);
										null != paramTag &&
											(null == extractedTags.params &&
												(extractedTags.params = []),
											extractedTags.params.push(
												paramTag,
											));
										break;
									}
									case 'deprecated': {
										let deprecatedTag =
											extractDeprecated(tag);
										null != deprecatedTag &&
											(extractedTags.deprecated =
												deprecatedTag);
										break;
									}
									case 'returns': {
										let returnsTag = extractReturns(tag);
										null != returnsTag &&
											(extractedTags.returns =
												returnsTag);
										break;
									}
								}
							}
							return extractedTags;
						})(jsDocAst);
					return extractedTags.ignore
						? { includesJsDoc: !0, ignore: !0 }
						: {
								includesJsDoc: !0,
								ignore: !1,
								description: jsDocAst.description,
								extractedTags,
						  };
				};
			function extractParam(tag) {
				let paramName = tag.name;
				return null != paramName && 'null-null' !== paramName
					? {
							name: tag.name,
							type: tag.type,
							description: tag.description,
							getPrettyName: () =>
								paramName.includes('null')
									? paramName
											.replace('-null', '')
											.replace('.null', '')
									: tag.name,
							getTypeName: () =>
								null != tag.type
									? extractTypeName(tag.type)
									: null,
					  }
					: null;
			}
			function extractDeprecated(tag) {
				return null != tag.title ? tag.description : null;
			}
			function extractReturns(tag) {
				return null != tag.type
					? {
							type: tag.type,
							description: tag.description,
							getTypeName: () => extractTypeName(tag.type),
					  }
					: null;
			}
			function extractTypeName(type) {
				return 'NameExpression' === type?.type
					? type.name
					: 'RecordType' === type?.type
					? `({${type.fields
							.map((field) => {
								if (
									'FieldType' === field.type &&
									null != field.value
								) {
									let valueTypeName = extractTypeName(
										field.value,
									);
									return `${field.key}: ${valueTypeName}`;
								}
								return field.key;
							})
							.join(', ')}})`
					: 'UnionType' === type?.type
					? `(${type.elements.map(extractTypeName).join('|')})`
					: 'ArrayType' === type?.type
					? '[]'
					: 'TypeApplication' === type?.type &&
					  null != type.expression &&
					  'Array' === type.expression.name
					? `${extractTypeName(type.applications[0])}[]`
					: 'NullableType' === type?.type ||
					  'NonNullableType' === type?.type ||
					  'OptionalType' === type?.type
					? extractTypeName(type.expression)
					: 'AllLiteral' === type?.type
					? 'any'
					: null;
			}
			function isTooLongForTypeSummary(value) {
				return value.length > 90;
			}
			function isTooLongForDefaultValueSummary(value) {
				return value.length > 50;
			}
			function createSummaryValue(summary, detail) {
				return summary === detail ? { summary } : { summary, detail };
			}
			function generateUnionElement({ name, value, elements, raw }) {
				return (
					value ??
					(null != elements
						? elements.map(generateUnionElement).join(' | ')
						: raw ?? name)
				);
			}
			function generateSignature(flowType) {
				let { type } = flowType;
				return 'object' === type
					? (function generateObjectSignature({ type, raw }) {
							return null != raw
								? isTooLongForTypeSummary(raw)
									? createSummaryValue(type, raw)
									: createSummaryValue(raw)
								: createSummaryValue(type);
					  })(flowType)
					: (function generateFuncSignature({ type, raw }) {
							return createSummaryValue(null != raw ? raw : type);
					  })(flowType);
			}
			function createType(type) {
				if (null == type) return null;
				switch (type.name) {
					case 'union':
						return (function generateUnion({
							name,
							raw,
							elements,
						}) {
							return createSummaryValue(
								null != elements
									? elements
											.map(generateUnionElement)
											.join(' | ')
									: null != raw
									? raw.replace(/^\|\s*/, '')
									: name,
							);
						})(type);
					case 'signature':
						return generateSignature(type);
					default:
						return (function generateDefault({ name, raw }) {
							return null != raw
								? isTooLongForTypeSummary(raw)
									? createSummaryValue(name, raw)
									: createSummaryValue(raw)
								: createSummaryValue(name);
						})(type);
				}
			}
			function createDefaultValue(defaultValue, type) {
				if (null != defaultValue) {
					let { value } = defaultValue;
					if (!isDefaultValueBlacklisted(value))
						return isTooLongForDefaultValueSummary(value)
							? createSummaryValue(type?.name, value)
							: createSummaryValue(value);
				}
				return null;
			}
			function createType2({ tsType, required }) {
				if (null == tsType) return null;
				let typeName = tsType.name;
				return (
					required ||
						(typeName = typeName.replace(' | undefined', '')),
					createSummaryValue(
						['Array', 'Record', 'signature'].includes(tsType.name)
							? tsType.raw
							: typeName,
					)
				);
			}
			function createDefaultValue2({ defaultValue }) {
				if (null != defaultValue) {
					let { value } = defaultValue;
					if (!isDefaultValueBlacklisted(value))
						return createSummaryValue(value);
				}
				return null;
			}
			function createType3(type) {
				return null != type ? createSummaryValue(type.name) : null;
			}
			function createDefaultValue3(defaultValue, type) {
				if (null != defaultValue) {
					let { value } = defaultValue;
					if (!isDefaultValueBlacklisted(value))
						return (function isReactDocgenTypescript(defaultValue) {
							let { computed, func } = defaultValue;
							return typeof computed > 'u' && typeof func > 'u';
						})(defaultValue) &&
							(function isStringValued(type) {
								return (
									!!type &&
									('string' === type.name ||
										('enum' === type.name &&
											Array.isArray(type.value) &&
											type.value.every(
												({ value: tv }) =>
													'string' == typeof tv &&
													'"' === tv[0] &&
													'"' === tv[tv.length - 1],
											)))
								);
							})(type)
							? createSummaryValue(JSON.stringify(value))
							: createSummaryValue(value);
				}
				return null;
			}
			function createBasicPropDef(name, type, docgenInfo) {
				let { description, required, defaultValue } = docgenInfo;
				return {
					name,
					type: createType3(type),
					required,
					description,
					defaultValue: createDefaultValue3(defaultValue, type),
				};
			}
			function applyJsDocResult(propDef, jsDocParsingResult) {
				if (jsDocParsingResult?.includesJsDoc) {
					let { description, extractedTags } = jsDocParsingResult;
					null != description &&
						(propDef.description = jsDocParsingResult.description);
					let value = {
						...extractedTags,
						params: extractedTags?.params?.map((x) => ({
							name: x.getPrettyName(),
							description: x.description,
						})),
					};
					Object.values(value).filter(Boolean).length > 0 &&
						(propDef.jsDocTags = value);
				}
				return propDef;
			}
			var javaScriptFactory = (
					propName,
					docgenInfo,
					jsDocParsingResult,
				) => {
					let propDef = createBasicPropDef(
						propName,
						docgenInfo.type,
						docgenInfo,
					);
					return (
						(propDef.sbType = convert4(docgenInfo)),
						applyJsDocResult(propDef, jsDocParsingResult)
					);
				},
				tsFactory = (propName, docgenInfo, jsDocParsingResult) => {
					let propDef = ((propName, docgenInfo) => {
						let { description, required } = docgenInfo;
						return {
							name: propName,
							type: createType2(docgenInfo),
							required,
							description,
							defaultValue: createDefaultValue2(docgenInfo),
						};
					})(propName, docgenInfo);
					return (
						(propDef.sbType = convert4(docgenInfo)),
						applyJsDocResult(propDef, jsDocParsingResult)
					);
				},
				flowFactory = (propName, docgenInfo, jsDocParsingResult) => {
					let propDef = ((propName, docgenInfo) => {
						let { flowType, description, required, defaultValue } =
							docgenInfo;
						return {
							name: propName,
							type: createType(flowType),
							required,
							description,
							defaultValue: createDefaultValue(
								defaultValue ?? null,
								flowType ?? null,
							),
						};
					})(propName, docgenInfo);
					return (
						(propDef.sbType = convert4(docgenInfo)),
						applyJsDocResult(propDef, jsDocParsingResult)
					);
				},
				unknownFactory = (propName, docgenInfo, jsDocParsingResult) =>
					applyJsDocResult(
						createBasicPropDef(
							propName,
							{ name: 'unknown' },
							docgenInfo,
						),
						jsDocParsingResult,
					),
				getPropDefFactory = (typeSystem) => {
					switch (typeSystem) {
						case 'JavaScript':
							return javaScriptFactory;
						case 'TypeScript':
							return tsFactory;
						case 'Flow':
							return flowFactory;
						default:
							return unknownFactory;
					}
				},
				getTypeSystem = (docgenInfo) =>
					null != docgenInfo.type
						? 'JavaScript'
						: null != docgenInfo.flowType
						? 'Flow'
						: null != docgenInfo.tsType
						? 'TypeScript'
						: 'Unknown',
				extractComponentProps = (component, section) => {
					let docgenSection = getDocgenSection(component, section);
					return (function isValidDocgenSection(docgenSection) {
						return (
							null != docgenSection &&
							Object.keys(docgenSection).length > 0
						);
					})(docgenSection)
						? Array.isArray(docgenSection)
							? ((docgenSection) => {
									let typeSystem = getTypeSystem(
											docgenSection[0],
										),
										createPropDef =
											getPropDefFactory(typeSystem);
									return docgenSection.map((item) => {
										let sanitizedItem = item;
										return (
											item.type?.elements &&
												(sanitizedItem = {
													...item,
													type: {
														...item.type,
														value: item.type
															.elements,
													},
												}),
											extractProp(
												sanitizedItem.name,
												sanitizedItem,
												typeSystem,
												createPropDef,
											)
										);
									});
							  })(docgenSection)
							: ((docgenSection) => {
									let docgenPropsKeys =
											Object.keys(docgenSection),
										typeSystem = getTypeSystem(
											docgenSection[docgenPropsKeys[0]],
										),
										createPropDef =
											getPropDefFactory(typeSystem);
									return docgenPropsKeys
										.map((propName) => {
											let docgenInfo =
												docgenSection[propName];
											return null != docgenInfo
												? extractProp(
														propName,
														docgenInfo,
														typeSystem,
														createPropDef,
												  )
												: null;
										})
										.filter(Boolean);
							  })(docgenSection)
						: [];
				};
			function extractProp(
				propName,
				docgenInfo,
				typeSystem,
				createPropDef,
			) {
				let jsDocParsingResult = parseJsDoc(docgenInfo.description);
				return jsDocParsingResult.includesJsDoc &&
					jsDocParsingResult.ignore
					? null
					: {
							propDef: createPropDef(
								propName,
								docgenInfo,
								jsDocParsingResult,
							),
							jsDocTags: jsDocParsingResult.extractedTags,
							docgenInfo,
							typeSystem,
					  };
			}
			function extractComponentDescription(component) {
				return null != component
					? (function getDocgenDescription(component) {
							return hasDocgen(component)
								? str(component.__docgenInfo.description)
								: '';
					  })(component)
					: '';
			}
			var SourceType2,
				enhanceArgTypes = (context) => {
					let {
							component,
							argTypes: userArgTypes,
							parameters: { docs = {} },
						} = context,
						{ extractArgTypes } = docs,
						extractedArgTypes =
							extractArgTypes && component
								? extractArgTypes(component)
								: {};
					return extractedArgTypes
						? (0,
						  _storybook_preview_api__WEBPACK_IMPORTED_MODULE_3__.combineParameters)(
								extractedArgTypes,
								userArgTypes,
						  )
						: userArgTypes;
				},
				SNIPPET_RENDERED = 'storybook/docs/snippet-rendered',
				SourceType =
					(((SourceType2 = SourceType || {}).AUTO = 'auto'),
					(SourceType2.CODE = 'code'),
					(SourceType2.DYNAMIC = 'dynamic'),
					SourceType2);
		},
		'./node_modules/@storybook/react-dom-shim/dist/react-18.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				K: () => unmountElement,
				l: () => renderElement,
			});
			var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
					'./node_modules/react/index.js',
				),
				react_dom_client__WEBPACK_IMPORTED_MODULE_1__ =
					__webpack_require__('./node_modules/react-dom/client.js'),
				nodes = new Map(),
				WithCallback = ({ callback, children }) => {
					let once = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
					return (
						(0,
						react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {
							once.current !== callback &&
								((once.current = callback), callback());
						}, [callback]),
						children
					);
				},
				renderElement = async (node, el, rootOptions) => {
					let root = await getReactRoot(el, rootOptions);
					return new Promise((resolve) => {
						root.render(
							react__WEBPACK_IMPORTED_MODULE_0__.createElement(
								WithCallback,
								{ callback: () => resolve(null) },
								node,
							),
						);
					});
				},
				unmountElement = (el, shouldUseNewRootApi) => {
					let root = nodes.get(el);
					root && (root.unmount(), nodes.delete(el));
				},
				getReactRoot = async (el, rootOptions) => {
					let root = nodes.get(el);
					return (
						root ||
							((root =
								react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot(
									el,
									rootOptions,
								)),
							nodes.set(el, root)),
						root
					);
				};
		},
		'./node_modules/@storybook/react/dist/chunk-JSBTCGGE.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, { r: () => __export });
			var __defProp = Object.defineProperty,
				__export = (target, all) => {
					for (var name in all)
						__defProp(target, name, {
							get: all[name],
							enumerable: !0,
						});
				};
		},
		'./node_modules/@storybook/react/dist/entry-preview-docs.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					applyDecorators: () => applyDecorators,
					argTypesEnhancers: () => argTypesEnhancers,
					decorators: () => decorators,
					parameters: () => parameters,
				});
			__webpack_require__(
				'./node_modules/@storybook/react/dist/chunk-JSBTCGGE.mjs',
			);
			var dist = __webpack_require__(
					'./node_modules/@storybook/docs-tools/dist/index.mjs',
				),
				prop_types = __webpack_require__(
					'./node_modules/prop-types/index.js',
				),
				prop_types_default = __webpack_require__.n(prop_types),
				html_tags = __webpack_require__(
					'./node_modules/html-tags/index.js',
				),
				escodegen = __webpack_require__(
					'./node_modules/escodegen/escodegen.js',
				),
				esm = __webpack_require__(
					'./node_modules/ts-dedent/esm/index.js',
				),
				acorn = __webpack_require__(
					'./node_modules/@storybook/react/node_modules/acorn/dist/acorn.mjs',
				),
				acorn_jsx = __webpack_require__(
					'./node_modules/@storybook/react/node_modules/acorn-jsx/index.js',
				),
				acorn_jsx_default = __webpack_require__.n(acorn_jsx);
			function simple(node, visitors, baseVisitor, state, override) {
				baseVisitor || (baseVisitor = base),
					(function c(node, st, override) {
						var type = override || node.type,
							found = visitors[type];
						baseVisitor[type](node, st, c),
							found && found(node, st);
					})(node, state, override);
			}
			Object.create;
			function skipThrough(node, st, c) {
				c(node, st);
			}
			function ignore(_node, _st, _c) {}
			var base = {};
			(base.Program = base.BlockStatement =
				function (node, st, c) {
					for (var i = 0, list = node.body; i < list.length; i += 1) {
						c(list[i], st, 'Statement');
					}
				}),
				(base.Statement = skipThrough),
				(base.EmptyStatement = ignore),
				(base.ExpressionStatement =
					base.ParenthesizedExpression =
					base.ChainExpression =
						function (node, st, c) {
							return c(node.expression, st, 'Expression');
						}),
				(base.IfStatement = function (node, st, c) {
					c(node.test, st, 'Expression'),
						c(node.consequent, st, 'Statement'),
						node.alternate && c(node.alternate, st, 'Statement');
				}),
				(base.LabeledStatement = function (node, st, c) {
					return c(node.body, st, 'Statement');
				}),
				(base.BreakStatement = base.ContinueStatement = ignore),
				(base.WithStatement = function (node, st, c) {
					c(node.object, st, 'Expression'),
						c(node.body, st, 'Statement');
				}),
				(base.SwitchStatement = function (node, st, c) {
					c(node.discriminant, st, 'Expression');
					for (
						var i$1 = 0, list$1 = node.cases;
						i$1 < list$1.length;
						i$1 += 1
					) {
						var cs = list$1[i$1];
						cs.test && c(cs.test, st, 'Expression');
						for (
							var i = 0, list = cs.consequent;
							i < list.length;
							i += 1
						) {
							c(list[i], st, 'Statement');
						}
					}
				}),
				(base.SwitchCase = function (node, st, c) {
					node.test && c(node.test, st, 'Expression');
					for (
						var i = 0, list = node.consequent;
						i < list.length;
						i += 1
					) {
						c(list[i], st, 'Statement');
					}
				}),
				(base.ReturnStatement =
					base.YieldExpression =
					base.AwaitExpression =
						function (node, st, c) {
							node.argument && c(node.argument, st, 'Expression');
						}),
				(base.ThrowStatement = base.SpreadElement =
					function (node, st, c) {
						return c(node.argument, st, 'Expression');
					}),
				(base.TryStatement = function (node, st, c) {
					c(node.block, st, 'Statement'),
						node.handler && c(node.handler, st),
						node.finalizer && c(node.finalizer, st, 'Statement');
				}),
				(base.CatchClause = function (node, st, c) {
					node.param && c(node.param, st, 'Pattern'),
						c(node.body, st, 'Statement');
				}),
				(base.WhileStatement = base.DoWhileStatement =
					function (node, st, c) {
						c(node.test, st, 'Expression'),
							c(node.body, st, 'Statement');
					}),
				(base.ForStatement = function (node, st, c) {
					node.init && c(node.init, st, 'ForInit'),
						node.test && c(node.test, st, 'Expression'),
						node.update && c(node.update, st, 'Expression'),
						c(node.body, st, 'Statement');
				}),
				(base.ForInStatement = base.ForOfStatement =
					function (node, st, c) {
						c(node.left, st, 'ForInit'),
							c(node.right, st, 'Expression'),
							c(node.body, st, 'Statement');
					}),
				(base.ForInit = function (node, st, c) {
					'VariableDeclaration' === node.type
						? c(node, st)
						: c(node, st, 'Expression');
				}),
				(base.DebuggerStatement = ignore),
				(base.FunctionDeclaration = function (node, st, c) {
					return c(node, st, 'Function');
				}),
				(base.VariableDeclaration = function (node, st, c) {
					for (
						var i = 0, list = node.declarations;
						i < list.length;
						i += 1
					) {
						c(list[i], st);
					}
				}),
				(base.VariableDeclarator = function (node, st, c) {
					c(node.id, st, 'Pattern'),
						node.init && c(node.init, st, 'Expression');
				}),
				(base.Function = function (node, st, c) {
					node.id && c(node.id, st, 'Pattern');
					for (
						var i = 0, list = node.params;
						i < list.length;
						i += 1
					) {
						c(list[i], st, 'Pattern');
					}
					c(
						node.body,
						st,
						node.expression ? 'Expression' : 'Statement',
					);
				}),
				(base.Pattern = function (node, st, c) {
					'Identifier' === node.type
						? c(node, st, 'VariablePattern')
						: 'MemberExpression' === node.type
						? c(node, st, 'MemberPattern')
						: c(node, st);
				}),
				(base.VariablePattern = ignore),
				(base.MemberPattern = skipThrough),
				(base.RestElement = function (node, st, c) {
					return c(node.argument, st, 'Pattern');
				}),
				(base.ArrayPattern = function (node, st, c) {
					for (
						var i = 0, list = node.elements;
						i < list.length;
						i += 1
					) {
						var elt = list[i];
						elt && c(elt, st, 'Pattern');
					}
				}),
				(base.ObjectPattern = function (node, st, c) {
					for (
						var i = 0, list = node.properties;
						i < list.length;
						i += 1
					) {
						var prop = list[i];
						'Property' === prop.type
							? (prop.computed && c(prop.key, st, 'Expression'),
							  c(prop.value, st, 'Pattern'))
							: 'RestElement' === prop.type &&
							  c(prop.argument, st, 'Pattern');
					}
				}),
				(base.Expression = skipThrough),
				(base.ThisExpression = base.Super = base.MetaProperty = ignore),
				(base.ArrayExpression = function (node, st, c) {
					for (
						var i = 0, list = node.elements;
						i < list.length;
						i += 1
					) {
						var elt = list[i];
						elt && c(elt, st, 'Expression');
					}
				}),
				(base.ObjectExpression = function (node, st, c) {
					for (
						var i = 0, list = node.properties;
						i < list.length;
						i += 1
					) {
						c(list[i], st);
					}
				}),
				(base.FunctionExpression = base.ArrowFunctionExpression =
					base.FunctionDeclaration),
				(base.SequenceExpression = function (node, st, c) {
					for (
						var i = 0, list = node.expressions;
						i < list.length;
						i += 1
					) {
						c(list[i], st, 'Expression');
					}
				}),
				(base.TemplateLiteral = function (node, st, c) {
					for (
						var i = 0, list = node.quasis;
						i < list.length;
						i += 1
					) {
						c(list[i], st);
					}
					for (
						var i$1 = 0, list$1 = node.expressions;
						i$1 < list$1.length;
						i$1 += 1
					) {
						c(list$1[i$1], st, 'Expression');
					}
				}),
				(base.TemplateElement = ignore),
				(base.UnaryExpression = base.UpdateExpression =
					function (node, st, c) {
						c(node.argument, st, 'Expression');
					}),
				(base.BinaryExpression = base.LogicalExpression =
					function (node, st, c) {
						c(node.left, st, 'Expression'),
							c(node.right, st, 'Expression');
					}),
				(base.AssignmentExpression = base.AssignmentPattern =
					function (node, st, c) {
						c(node.left, st, 'Pattern'),
							c(node.right, st, 'Expression');
					}),
				(base.ConditionalExpression = function (node, st, c) {
					c(node.test, st, 'Expression'),
						c(node.consequent, st, 'Expression'),
						c(node.alternate, st, 'Expression');
				}),
				(base.NewExpression = base.CallExpression =
					function (node, st, c) {
						if ((c(node.callee, st, 'Expression'), node.arguments))
							for (
								var i = 0, list = node.arguments;
								i < list.length;
								i += 1
							) {
								c(list[i], st, 'Expression');
							}
					}),
				(base.MemberExpression = function (node, st, c) {
					c(node.object, st, 'Expression'),
						node.computed && c(node.property, st, 'Expression');
				}),
				(base.ExportNamedDeclaration = base.ExportDefaultDeclaration =
					function (node, st, c) {
						node.declaration &&
							c(
								node.declaration,
								st,
								'ExportNamedDeclaration' === node.type ||
									node.declaration.id
									? 'Statement'
									: 'Expression',
							),
							node.source && c(node.source, st, 'Expression');
					}),
				(base.ExportAllDeclaration = function (node, st, c) {
					node.exported && c(node.exported, st),
						c(node.source, st, 'Expression');
				}),
				(base.ImportDeclaration = function (node, st, c) {
					for (
						var i = 0, list = node.specifiers;
						i < list.length;
						i += 1
					) {
						c(list[i], st);
					}
					c(node.source, st, 'Expression');
				}),
				(base.ImportExpression = function (node, st, c) {
					c(node.source, st, 'Expression');
				}),
				(base.ImportSpecifier =
					base.ImportDefaultSpecifier =
					base.ImportNamespaceSpecifier =
					base.Identifier =
					base.Literal =
						ignore),
				(base.TaggedTemplateExpression = function (node, st, c) {
					c(node.tag, st, 'Expression'),
						c(node.quasi, st, 'Expression');
				}),
				(base.ClassDeclaration = base.ClassExpression =
					function (node, st, c) {
						return c(node, st, 'Class');
					}),
				(base.Class = function (node, st, c) {
					node.id && c(node.id, st, 'Pattern'),
						node.superClass && c(node.superClass, st, 'Expression'),
						c(node.body, st);
				}),
				(base.ClassBody = function (node, st, c) {
					for (var i = 0, list = node.body; i < list.length; i += 1) {
						c(list[i], st);
					}
				}),
				(base.MethodDefinition = base.Property =
					function (node, st, c) {
						node.computed && c(node.key, st, 'Expression'),
							c(node.value, st, 'Expression');
					});
			var isPlainObject = __webpack_require__(
					'./node_modules/lodash/isPlainObject.js',
				),
				isPlainObject_default = __webpack_require__.n(isPlainObject),
				isFunction = __webpack_require__(
					'./node_modules/lodash/isFunction.js',
				),
				isFunction_default = __webpack_require__.n(isFunction),
				isString = __webpack_require__(
					'./node_modules/lodash/isString.js',
				),
				isString_default = __webpack_require__.n(isString),
				cjs = __webpack_require__(
					'./node_modules/react-element-to-jsx-string/dist/cjs/index.js',
				),
				react = __webpack_require__('./node_modules/react/index.js'),
				external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__(
					'@storybook/preview-api',
				),
				external_STORYBOOK_MODULE_CLIENT_LOGGER_ = __webpack_require__(
					'@storybook/client-logger',
				);
			function generateFuncSignature(params, returns) {
				let hasParams = null != params,
					hasReturns = null != returns;
				if (!hasParams && !hasReturns) return '';
				let funcParts = [];
				if (hasParams) {
					let funcParams = params.map((x) => {
						let prettyName = x.getPrettyName(),
							typeName = x.getTypeName();
						return null != typeName
							? `${prettyName}: ${typeName}`
							: prettyName;
					});
					funcParts.push(`(${funcParams.join(', ')})`);
				} else funcParts.push('()');
				return (
					hasReturns && funcParts.push(`=> ${returns.getTypeName()}`),
					funcParts.join(' ')
				);
			}
			function generateShortFuncSignature(params, returns) {
				let hasParams = null != params,
					hasReturns = null != returns;
				if (!hasParams && !hasReturns) return '';
				let funcParts = [];
				return (
					hasParams
						? funcParts.push('( ... )')
						: funcParts.push('()'),
					hasReturns && funcParts.push(`=> ${returns.getTypeName()}`),
					funcParts.join(' ')
				);
			}
			var CUSTOM_CAPTION = 'custom',
				OBJECT_CAPTION = 'object',
				ARRAY_CAPTION = 'array',
				CLASS_CAPTION = 'class',
				FUNCTION_CAPTION = 'func',
				ELEMENT_CAPTION = 'element';
			function isHtmlTag(tagName) {
				return html_tags.includes(tagName.toLowerCase());
			}
			var BASIC_OPTIONS = {
					format: { indent: { style: '  ' }, semicolons: !1 },
				},
				COMPACT_OPTIONS = { ...BASIC_OPTIONS, format: { newline: '' } },
				PRETTY_OPTIONS = { ...BASIC_OPTIONS };
			function generateCode(ast, compact = !1) {
				return (0, escodegen.R_)(
					ast,
					compact ? COMPACT_OPTIONS : PRETTY_OPTIONS,
				);
			}
			function generateObjectCode(ast, compact = !1) {
				return compact
					? (function generateCompactObjectCode(ast) {
							let result = generateCode(ast, !0);
							return (
								result.endsWith(' }') ||
									(result = `${result.slice(0, -1)} }`),
								result
							);
					  })(ast)
					: generateCode(ast);
			}
			function generateArrayCode(ast, compact = !1) {
				return compact
					? (function generateCompactArrayCode(ast) {
							let result = generateCode(ast, !0);
							return (
								result.startsWith('[    ') &&
									(result = result.replace('[    ', '[')),
								result
							);
					  })(ast)
					: (function generateMultilineArrayCode(ast) {
							let result = generateCode(ast);
							return (
								result.endsWith('  }]') &&
									(result = (0, esm.Z)(result)),
								result
							);
					  })(ast);
			}
			var isMemo = (component) =>
					component.$$typeof === Symbol.for('react.memo'),
				ACORN_WALK_VISITORS = { ...base, JSXElement: () => {} },
				acornParser = acorn.Parser.extend(acorn_jsx_default()());
			function extractIdentifierName(identifierNode) {
				return null != identifierNode ? identifierNode.name : null;
			}
			function filterAncestors(ancestors) {
				return ancestors.filter(
					(x) =>
						'ObjectExpression' === x.type ||
						'ArrayExpression' === x.type,
				);
			}
			function calculateNodeDepth(node) {
				let depths = [];
				return (
					(function ancestor(
						node,
						visitors,
						baseVisitor,
						state,
						override,
					) {
						var ancestors = [];
						baseVisitor || (baseVisitor = base),
							(function c(node, st, override) {
								var type = override || node.type,
									found = visitors[type],
									isNew =
										node !==
										ancestors[ancestors.length - 1];
								isNew && ancestors.push(node),
									baseVisitor[type](node, st, c),
									found &&
										found(node, st || ancestors, ancestors),
									isNew && ancestors.pop();
							})(node, state, override);
					})(
						node,
						{
							ObjectExpression(_, ancestors) {
								depths.push(filterAncestors(ancestors).length);
							},
							ArrayExpression(_, ancestors) {
								depths.push(filterAncestors(ancestors).length);
							},
						},
						ACORN_WALK_VISITORS,
					),
					Math.max(...depths)
				);
			}
			function parseObject(objectNode) {
				return {
					inferredType: {
						type: 'Object',
						depth: calculateNodeDepth(objectNode),
					},
					ast: objectNode,
				};
			}
			function parseExpression(expression) {
				switch (expression.type) {
					case 'Identifier':
						return (function parseIdentifier(identifierNode) {
							return {
								inferredType: {
									type: 'Identifier',
									identifier:
										extractIdentifierName(identifierNode),
								},
								ast: identifierNode,
							};
						})(expression);
					case 'Literal':
						return (function parseLiteral(literalNode) {
							return {
								inferredType: { type: 'Literal' },
								ast: literalNode,
							};
						})(expression);
					case 'FunctionExpression':
					case 'ArrowFunctionExpression':
						return (function parseFunction(funcNode) {
							let innerJsxElementNode;
							simple(
								funcNode.body,
								{
									JSXElement(node) {
										innerJsxElementNode = node;
									},
								},
								ACORN_WALK_VISITORS,
							);
							let inferredType = {
									type:
										null != innerJsxElementNode
											? 'Element'
											: 'Function',
									params: funcNode.params,
									hasParams: 0 !== funcNode.params.length,
								},
								identifierName = extractIdentifierName(
									funcNode.id,
								);
							return (
								null != identifierName &&
									(inferredType.identifier = identifierName),
								{ inferredType, ast: funcNode }
							);
						})(expression);
					case 'ClassExpression':
						return (function parseClass(classNode) {
							let innerJsxElementNode;
							return (
								simple(
									classNode.body,
									{
										JSXElement(node) {
											innerJsxElementNode = node;
										},
									},
									ACORN_WALK_VISITORS,
								),
								{
									inferredType: {
										type:
											null != innerJsxElementNode
												? 'Element'
												: 'Class',
										identifier: extractIdentifierName(
											classNode.id,
										),
									},
									ast: classNode,
								}
							);
						})(expression);
					case 'JSXElement':
						return (function parseJsxElement(jsxElementNode) {
							let inferredType = { type: 'Element' },
								identifierName = extractIdentifierName(
									jsxElementNode.openingElement.name,
								);
							return (
								null != identifierName &&
									(inferredType.identifier = identifierName),
								{ inferredType, ast: jsxElementNode }
							);
						})(expression);
					case 'CallExpression':
						return (function parseCall(callNode) {
							return 'shape' ===
								extractIdentifierName(
									'MemberExpression' === callNode.callee.type
										? callNode.callee.property
										: callNode.callee,
								)
								? parseObject(callNode.arguments[0])
								: null;
						})(expression);
					case 'ObjectExpression':
						return parseObject(expression);
					case 'ArrayExpression':
						return (function parseArray(arrayNode) {
							return {
								inferredType: {
									type: 'Array',
									depth: calculateNodeDepth(arrayNode),
								},
								ast: arrayNode,
							};
						})(expression);
					default:
						return null;
				}
			}
			function parse(value) {
				let ast = acornParser.parse(`(${value})`, {
						ecmaVersion: 2020,
					}),
					parsingResult = { inferredType: { type: 'Unknown' }, ast };
				if (null != ast.body[0]) {
					let rootNode = ast.body[0];
					switch (rootNode.type) {
						case 'ExpressionStatement': {
							let expressionResult = parseExpression(
								rootNode.expression,
							);
							null != expressionResult &&
								(parsingResult = expressionResult);
							break;
						}
					}
				}
				return parsingResult;
			}
			function inspectValue(value) {
				try {
					return { ...parse(value) };
				} catch {}
				return { inferredType: { type: 'Unknown' } };
			}
			var MAX_FUNC_LENGTH = 150;
			function createTypeDef({
				name,
				short,
				compact,
				full,
				inferredType,
			}) {
				return {
					name,
					short,
					compact,
					full: full ?? short,
					inferredType,
				};
			}
			function cleanPropTypes(value) {
				return value
					.replace(/PropTypes./g, '')
					.replace(/.isRequired/g, '');
			}
			function splitIntoLines(value) {
				return value.split(/\r?\n/);
			}
			function prettyObject(ast, compact = !1) {
				return cleanPropTypes(generateObjectCode(ast, compact));
			}
			function prettyArray(ast, compact = !1) {
				return cleanPropTypes(generateCode(ast, compact));
			}
			function generateTypeFromString(value, originalTypeName) {
				let short,
					compact,
					full,
					{ inferredType, ast } = inspectValue(value),
					{ type } = inferredType;
				switch (type) {
					case 'Identifier':
					case 'Literal':
						(short = value), (compact = value);
						break;
					case 'Object': {
						let { depth } = inferredType;
						(short = OBJECT_CAPTION),
							(compact =
								1 === depth ? prettyObject(ast, !0) : null),
							(full = prettyObject(ast));
						break;
					}
					case 'Element': {
						let { identifier } = inferredType;
						(short =
							null == identifier || isHtmlTag(identifier)
								? ELEMENT_CAPTION
								: identifier),
							(compact =
								1 === splitIntoLines(value).length
									? value
									: null),
							(full = value);
						break;
					}
					case 'Array': {
						let { depth } = inferredType;
						(short = ARRAY_CAPTION),
							(compact =
								depth <= 2 ? prettyArray(ast, !0) : null),
							(full = prettyArray(ast));
						break;
					}
					default:
						(short = (function getCaptionForInspectionType(type) {
							switch (type) {
								case 'Object':
									return OBJECT_CAPTION;
								case 'Array':
									return ARRAY_CAPTION;
								case 'Class':
									return CLASS_CAPTION;
								case 'Function':
									return FUNCTION_CAPTION;
								case 'Element':
									return ELEMENT_CAPTION;
								default:
									return CUSTOM_CAPTION;
							}
						})(type)),
							(compact =
								1 === splitIntoLines(value).length
									? value
									: null),
							(full = value);
				}
				return createTypeDef({
					name: originalTypeName,
					short,
					compact,
					full,
					inferredType: type,
				});
			}
			function objectOf(of) {
				return `objectOf(${of})`;
			}
			function generateEnum(type) {
				if (Array.isArray(type.value)) {
					let values = type.value.reduce(
						(acc, v) => {
							let { short, compact, full } =
								(function generateEnumValue({
									value,
									computed,
								}) {
									return computed
										? generateTypeFromString(
												value,
												'enumvalue',
										  )
										: createTypeDef({
												name: 'enumvalue',
												short: value,
												compact: value,
										  });
								})(v);
							return (
								acc.short.push(short),
								acc.compact.push(compact),
								acc.full.push(full),
								acc
							);
						},
						{ short: [], compact: [], full: [] },
					);
					return createTypeDef({
						name: 'enum',
						short: values.short.join(' | '),
						compact: values.compact.every((x) => null != x)
							? values.compact.join(' | ')
							: null,
						full: values.full.join(' | '),
					});
				}
				return createTypeDef({
					name: 'enum',
					short: type.value,
					compact: type.value,
				});
			}
			function braceAfter(of) {
				return `${of}[]`;
			}
			function braceAround(of) {
				return `[${of}]`;
			}
			function createArrayOfObjectTypeDef(short, compact, full) {
				return createTypeDef({
					name: 'arrayOf',
					short: braceAfter(short),
					compact: null != compact ? braceAround(compact) : null,
					full: full && braceAround(full),
				});
			}
			function generateType(type, extractedProp) {
				try {
					switch (type.name) {
						case 'custom':
							return (function generateCustom({ raw }) {
								return null != raw
									? generateTypeFromString(raw, 'custom')
									: createTypeDef({
											name: 'custom',
											short: CUSTOM_CAPTION,
											compact: CUSTOM_CAPTION,
									  });
							})(type);
						case 'func':
							return (function generateFunc(extractedProp) {
								let { jsDocTags } = extractedProp;
								return null == jsDocTags ||
									(null == jsDocTags.params &&
										null == jsDocTags.returns)
									? createTypeDef({
											name: 'func',
											short: FUNCTION_CAPTION,
											compact: FUNCTION_CAPTION,
									  })
									: createTypeDef({
											name: 'func',
											short: generateShortFuncSignature(
												jsDocTags.params,
												jsDocTags.returns,
											),
											compact: null,
											full: generateFuncSignature(
												jsDocTags.params,
												jsDocTags.returns,
											),
									  });
							})(extractedProp);
						case 'shape':
							return (function generateShape(
								type,
								extractedProp,
							) {
								let fields = Object.keys(type.value)
										.map(
											(key) =>
												`${key}: ${
													generateType(
														type.value[key],
														extractedProp,
													).full
												}`,
										)
										.join(', '),
									{ inferredType, ast } = inspectValue(
										`{ ${fields} }`,
									),
									{ depth } = inferredType;
								return createTypeDef({
									name: 'shape',
									short: OBJECT_CAPTION,
									compact:
										1 === depth && ast
											? prettyObject(ast, !0)
											: null,
									full: ast ? prettyObject(ast) : null,
								});
							})(type, extractedProp);
						case 'instanceOf':
							return createTypeDef({
								name: 'instanceOf',
								short: type.value,
								compact: type.value,
							});
						case 'objectOf':
							return (function generateObjectOf(
								type,
								extractedProp,
							) {
								let { short, compact, full } = generateType(
									type.value,
									extractedProp,
								);
								return createTypeDef({
									name: 'objectOf',
									short: objectOf(short),
									compact:
										null != compact
											? objectOf(compact)
											: null,
									full: full && objectOf(full),
								});
							})(type, extractedProp);
						case 'union':
							return (function generateUnion(
								type,
								extractedProp,
							) {
								if (Array.isArray(type.value)) {
									let values = type.value.reduce(
										(acc, v) => {
											let { short, compact, full } =
												generateType(v, extractedProp);
											return (
												acc.short.push(short),
												acc.compact.push(compact),
												acc.full.push(full),
												acc
											);
										},
										{ short: [], compact: [], full: [] },
									);
									return createTypeDef({
										name: 'union',
										short: values.short.join(' | '),
										compact: values.compact.every(
											(x) => null != x,
										)
											? values.compact.join(' | ')
											: null,
										full: values.full.join(' | '),
									});
								}
								return createTypeDef({
									name: 'union',
									short: type.value,
									compact: null,
								});
							})(type, extractedProp);
						case 'enum':
							return generateEnum(type);
						case 'arrayOf':
							return (function generateArray(
								type,
								extractedProp,
							) {
								let {
									name,
									short,
									compact,
									full,
									inferredType,
								} = generateType(type.value, extractedProp);
								if ('custom' === name) {
									if ('Object' === inferredType)
										return createArrayOfObjectTypeDef(
											short,
											compact,
											full,
										);
								} else if ('shape' === name)
									return createArrayOfObjectTypeDef(
										short,
										compact,
										full,
									);
								return createTypeDef({
									name: 'arrayOf',
									short: braceAfter(short),
									compact: braceAfter(short),
								});
							})(type, extractedProp);
						default:
							return createTypeDef({
								name: type.name,
								short: type.name,
								compact: type.name,
							});
					}
				} catch (e) {
					console.error(e);
				}
				return createTypeDef({
					name: 'unknown',
					short: 'unknown',
					compact: 'unknown',
				});
			}
			function generateObject({ inferredType, ast }) {
				let { depth } = inferredType;
				if (1 === depth) {
					let compactObject = generateObjectCode(ast, !0);
					if (!(0, dist.fW)(compactObject))
						return (0, dist.Ir)(compactObject);
				}
				return (0, dist.Ir)(OBJECT_CAPTION, generateObjectCode(ast));
			}
			function generateArray2({ inferredType, ast }) {
				let { depth } = inferredType;
				if (depth <= 2) {
					let compactArray = generateArrayCode(ast, !0);
					if (!(0, dist.fW)(compactArray))
						return (0, dist.Ir)(compactArray);
				}
				return (0, dist.Ir)(ARRAY_CAPTION, generateArrayCode(ast));
			}
			function getPrettyFuncIdentifier(identifier, hasArguments) {
				return hasArguments
					? `${identifier}( ... )`
					: `${identifier}()`;
			}
			function getPrettyElementIdentifier(identifier) {
				return `<${identifier} />`;
			}
			function getPrettyIdentifier(inferredType) {
				let { type, identifier } = inferredType;
				switch (type) {
					case 'Function':
						return getPrettyFuncIdentifier(
							identifier,
							inferredType.hasParams,
						);
					case 'Element':
						return getPrettyElementIdentifier(identifier);
					default:
						return identifier;
				}
			}
			function createDefaultValue(defaultValue) {
				try {
					let inspectionResult = inspectValue(defaultValue);
					switch (inspectionResult.inferredType.type) {
						case 'Object':
							return generateObject(inspectionResult);
						case 'Function':
							return (function generateFunc2({
								inferredType,
								ast,
							}) {
								let { identifier } = inferredType;
								if (null != identifier)
									return (0, dist.Ir)(
										getPrettyIdentifier(inferredType),
										generateCode(ast),
									);
								let prettyCaption = generateCode(ast, !0);
								return (0, dist.fW)(prettyCaption)
									? (0, dist.Ir)(
											FUNCTION_CAPTION,
											generateCode(ast),
									  )
									: (0, dist.Ir)(prettyCaption);
							})(inspectionResult);
						case 'Element':
							return (function generateElement(
								defaultValue,
								inspectionResult,
							) {
								let { inferredType } = inspectionResult,
									{ identifier } = inferredType;
								if (
									null != identifier &&
									!isHtmlTag(identifier)
								) {
									let prettyIdentifier =
										getPrettyIdentifier(inferredType);
									return (0, dist.Ir)(
										prettyIdentifier,
										defaultValue,
									);
								}
								return (0, dist.fW)(defaultValue)
									? (0, dist.Ir)(
											ELEMENT_CAPTION,
											defaultValue,
									  )
									: (0, dist.Ir)(defaultValue);
							})(defaultValue, inspectionResult);
						case 'Array':
							return generateArray2(inspectionResult);
						default:
							return null;
					}
				} catch (e) {
					console.error(e);
				}
				return null;
			}
			function isReactElement(element) {
				return null != element.$$typeof;
			}
			function extractFunctionName(func, propName) {
				let { name } = func;
				return '' !== name && 'anonymous' !== name && name !== propName
					? name
					: null;
			}
			var DEFAULT_TYPE_RESOLVERS = {
				string: (rawDefaultProp) =>
					(0, dist.Ir)(JSON.stringify(rawDefaultProp)),
				object: (rawDefaultProp) => {
					if (
						isReactElement(rawDefaultProp) &&
						null != rawDefaultProp.type
					)
						return (function generateReactObject(rawDefaultProp) {
							let { type } = rawDefaultProp,
								{ displayName } = type,
								jsx2 = (0, cjs.ZP)(rawDefaultProp, {});
							if (null != displayName) {
								let prettyIdentifier =
									getPrettyElementIdentifier(displayName);
								return (0, dist.Ir)(prettyIdentifier, jsx2);
							}
							if (isString_default()(type) && isHtmlTag(type)) {
								let jsxSummary = (0, cjs.ZP)(rawDefaultProp, {
									tabStop: 0,
								}).replace(/\r?\n|\r/g, '');
								if (!(0, dist.fW)(jsxSummary))
									return (0, dist.Ir)(jsxSummary);
							}
							return (0, dist.Ir)(ELEMENT_CAPTION, jsx2);
						})(rawDefaultProp);
					if (isPlainObject_default()(rawDefaultProp)) {
						return generateObject(
							inspectValue(JSON.stringify(rawDefaultProp)),
						);
					}
					if (Array.isArray(rawDefaultProp)) {
						return generateArray2(
							inspectValue(JSON.stringify(rawDefaultProp)),
						);
					}
					return (0, dist.Ir)(OBJECT_CAPTION);
				},
				function: (rawDefaultProp, propDef) => {
					let inspectionResult,
						isElement = !1;
					if (isFunction_default()(rawDefaultProp.render))
						isElement = !0;
					else if (
						null != rawDefaultProp.prototype &&
						isFunction_default()(rawDefaultProp.prototype.render)
					)
						isElement = !0;
					else {
						let innerElement;
						try {
							inspectionResult = inspectValue(
								rawDefaultProp.toString(),
							);
							let { hasParams, params } =
								inspectionResult.inferredType;
							hasParams
								? 1 === params.length &&
								  'ObjectPattern' === params[0].type &&
								  (innerElement = rawDefaultProp({}))
								: (innerElement = rawDefaultProp()),
								null != innerElement &&
									isReactElement(innerElement) &&
									(isElement = !0);
						} catch {}
					}
					let funcName = extractFunctionName(
						rawDefaultProp,
						propDef.name,
					);
					if (null != funcName) {
						if (isElement)
							return (0, dist.Ir)(
								getPrettyElementIdentifier(funcName),
							);
						null != inspectionResult &&
							(inspectionResult = inspectValue(
								rawDefaultProp.toString(),
							));
						let { hasParams } = inspectionResult.inferredType;
						return (0, dist.Ir)(
							getPrettyFuncIdentifier(funcName, hasParams),
						);
					}
					return (0, dist.Ir)(
						isElement ? ELEMENT_CAPTION : FUNCTION_CAPTION,
					);
				},
				default: (rawDefaultProp) =>
					(0, dist.Ir)(rawDefaultProp.toString()),
			};
			function createDefaultValueFromRawDefaultProp(
				rawDefaultProp,
				propDef,
				typeResolvers = DEFAULT_TYPE_RESOLVERS,
			) {
				try {
					switch (typeof rawDefaultProp) {
						case 'string':
							return typeResolvers.string(
								rawDefaultProp,
								propDef,
							);
						case 'object':
							return typeResolvers.object(
								rawDefaultProp,
								propDef,
							);
						case 'function':
							return typeResolvers.function(
								rawDefaultProp,
								propDef,
							);
						default:
							return typeResolvers.default(
								rawDefaultProp,
								propDef,
							);
					}
				} catch (e) {
					console.error(e);
				}
				return null;
			}
			var rawDefaultPropTypeResolvers = (function createTypeResolvers(
				customResolvers = {},
			) {
				return { ...DEFAULT_TYPE_RESOLVERS, ...customResolvers };
			})({
				function: (rawDefaultProp, { name, type }) => {
					let isElement =
							'element' === type?.summary ||
							'elementType' === type?.summary,
						funcName = extractFunctionName(rawDefaultProp, name);
					if (null != funcName) {
						if (isElement)
							return (0, dist.Ir)(
								getPrettyElementIdentifier(funcName),
							);
						let { hasParams } = inspectValue(
							rawDefaultProp.toString(),
						).inferredType;
						return (0, dist.Ir)(
							getPrettyFuncIdentifier(funcName, hasParams),
						);
					}
					return (0, dist.Ir)(
						isElement ? ELEMENT_CAPTION : FUNCTION_CAPTION,
					);
				},
			});
			function enhancePropTypesProp(extractedProp, rawDefaultProp) {
				let { propDef } = extractedProp,
					newtype = (function createType(extractedProp) {
						let { type } = extractedProp.docgenInfo;
						if (null == type) return null;
						try {
							switch (type.name) {
								case 'custom':
								case 'shape':
								case 'instanceOf':
								case 'objectOf':
								case 'union':
								case 'enum':
								case 'arrayOf': {
									let { short, compact, full } = generateType(
										type,
										extractedProp,
									);
									return null == compact ||
										(0, dist._A)(compact)
										? full
											? (0, dist.Ir)(short, full)
											: (0, dist.Ir)(short)
										: (0, dist.Ir)(compact);
								}
								case 'func': {
									let detail,
										{ short, full } = generateType(
											type,
											extractedProp,
										),
										summary = short;
									return (
										full && full.length < MAX_FUNC_LENGTH
											? (summary = full)
											: full &&
											  (detail =
													(function toMultilineSignature(
														signature,
													) {
														return signature.replace(
															/,/g,
															',\r\n',
														);
													})(full)),
										(0, dist.Ir)(summary, detail)
									);
								}
								default:
									return null;
							}
						} catch (e) {
							console.error(e);
						}
						return null;
					})(extractedProp);
				null != newtype && (propDef.type = newtype);
				let { defaultValue } = extractedProp.docgenInfo;
				if (null != defaultValue && null != defaultValue.value) {
					let newDefaultValue = createDefaultValue(
						defaultValue.value,
					);
					null != newDefaultValue &&
						(propDef.defaultValue = newDefaultValue);
				} else if (null != rawDefaultProp) {
					let newDefaultValue = createDefaultValueFromRawDefaultProp(
						rawDefaultProp,
						propDef,
						rawDefaultPropTypeResolvers,
					);
					null != newDefaultValue &&
						(propDef.defaultValue = newDefaultValue);
				}
				return propDef;
			}
			function enhancePropTypesProps(extractedProps, component) {
				let rawDefaultProps =
					null != component.defaultProps
						? component.defaultProps
						: {};
				return (function keepOriginalDefinitionOrder(
					extractedProps,
					component,
				) {
					let { propTypes } = component;
					return null != propTypes
						? Object.keys(propTypes)
								.map((x) =>
									extractedProps.find((y) => y.name === x),
								)
								.filter(Boolean)
						: extractedProps;
				})(
					extractedProps.map((x) =>
						enhancePropTypesProp(
							x,
							rawDefaultProps[x.propDef.name],
						),
					),
					component,
				);
			}
			function enhanceTypeScriptProps(extractedProps) {
				return extractedProps.map((prop) =>
					(function enhanceTypeScriptProp(
						extractedProp,
						rawDefaultProp,
					) {
						let { propDef } = extractedProp,
							{ defaultValue } = extractedProp.docgenInfo;
						if (
							null != defaultValue &&
							null != defaultValue.value
						) {
							let newDefaultValue = createDefaultValue(
								defaultValue.value,
							);
							null != newDefaultValue &&
								(propDef.defaultValue = newDefaultValue);
						} else if (null != rawDefaultProp) {
							let newDefaultValue =
								createDefaultValueFromRawDefaultProp(
									rawDefaultProp,
									propDef,
								);
							null != newDefaultValue &&
								(propDef.defaultValue = newDefaultValue);
						}
						return propDef;
					})(prop),
				);
			}
			var propTypesMap = new Map();
			function getPropDefs(component, section) {
				let processedComponent = component;
				!(0, dist.Px)(component) &&
					!component.propTypes &&
					isMemo(component) &&
					(processedComponent = component.type);
				let extractedProps = (0, dist.Je)(processedComponent, section);
				if (0 === extractedProps.length) return [];
				switch (extractedProps[0].typeSystem) {
					case dist.p5.JAVASCRIPT:
						return enhancePropTypesProps(extractedProps, component);
					case dist.p5.TYPESCRIPT:
						return enhanceTypeScriptProps(extractedProps);
					default:
						return extractedProps.map((x) => x.propDef);
				}
			}
			Object.keys(prop_types_default()).forEach((typeName) => {
				let type = prop_types_default()[typeName];
				propTypesMap.set(type, typeName),
					propTypesMap.set(type.isRequired, typeName);
			});
			var toPascalCase = (str) =>
				str.charAt(0).toUpperCase() + str.slice(1);
			function simplifyNodeForStringify(node) {
				if ((0, react.isValidElement)(node)) {
					let props = Object.keys(node.props).reduce(
						(acc, cur) => (
							(acc[cur] = simplifyNodeForStringify(
								node.props[cur],
							)),
							acc
						),
						{},
					);
					return { ...node, props, _owner: null };
				}
				return Array.isArray(node)
					? node.map(simplifyNodeForStringify)
					: node;
			}
			var renderJsx = (code, options) => {
					if (typeof code > 'u')
						return (
							external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn(
								'Too many skip or undefined component',
							),
							null
						);
					let displayNameDefaults,
						renderedJSX = code,
						Type = renderedJSX.type;
					for (let i = 0; i < options?.skip; i += 1) {
						if (typeof renderedJSX > 'u')
							return (
								external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn(
									'Cannot skip undefined element',
								),
								null
							);
						if (react.Children.count(renderedJSX) > 1)
							return (
								external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn(
									'Trying to skip an array of elements',
								),
								null
							);
						typeof renderedJSX.props.children > 'u'
							? (external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn(
									'Not enough children to skip elements.',
							  ),
							  'function' == typeof renderedJSX.type &&
									'' === renderedJSX.type.name &&
									(renderedJSX = react.createElement(Type, {
										...renderedJSX.props,
									})))
							: (renderedJSX =
									'function' ==
									typeof renderedJSX.props.children
										? renderedJSX.props.children()
										: renderedJSX.props.children);
					}
					displayNameDefaults =
						'string' == typeof options?.displayName
							? {
									showFunctions: !0,
									displayName: () => options.displayName,
							  }
							: {
									displayName: (el) => {
										return el.type.displayName
											? el.type.displayName
											: (0, dist.jq)(
													el.type,
													'displayName',
											  )
											? (0, dist.jq)(
													el.type,
													'displayName',
											  )
											: el.type.render?.displayName
											? el.type.render.displayName
											: 'symbol' == typeof el.type ||
											  (el.type.$$typeof &&
													'symbol' ==
														typeof el.type.$$typeof)
											? (
													(elementType = el.type)
														.$$typeof || elementType
											  )
													.toString()
													.replace(
														/^Symbol\((.*)\)$/,
														'$1',
													)
													.split('.')
													.map((segment) =>
														segment
															.split('_')
															.map(toPascalCase)
															.join(''),
													)
													.join('.')
											: el.type.name &&
											  '_default' !== el.type.name
											? el.type.name
											: 'function' == typeof el.type
											? 'No Display Name'
											: el.type.$$typeof ===
											  Symbol.for('react.forward_ref')
											? el.type.render.name
											: isMemo(el.type)
											? el.type.type.name
											: el.type;
										var elementType;
									},
							  };
					let opts = {
						...displayNameDefaults,
						filterProps: (value, key) => void 0 !== value,
						...options,
					};
					return react.Children.map(code, (c) => {
						let child = 'number' == typeof c ? c.toString() : c,
							string = (
								'function' == typeof cjs.ZP
									? cjs.ZP
									: cjs.ZP.default
							)(simplifyNodeForStringify(child), opts);
						if (string.indexOf('&quot;') > -1) {
							let matches = string.match(/\S+=\\"([^"]*)\\"/g);
							matches &&
								matches.forEach((match) => {
									string = string.replace(
										match,
										match.replace(/&quot;/g, "'"),
									);
								});
						}
						return string;
					})
						.join('\n')
						.replace(
							/function\s+noRefCheck\(\)\s*\{\}/g,
							'() => {}',
						);
				},
				defaultOpts = {
					skip: 0,
					showFunctions: !1,
					enableBeautify: !0,
					showDefaultProps: !1,
				},
				mdxToJsx = (node) => {
					if (
						!((node) =>
							'MDXCreateElement' === node.type?.displayName &&
							!!node.props?.mdxType)(node)
					)
						return node;
					let { mdxType, originalType, children, ...rest } =
							node.props,
						jsxChildren = [];
					return (
						children &&
							(jsxChildren = (
								Array.isArray(children) ? children : [children]
							).map(mdxToJsx)),
						(0, react.createElement)(
							originalType,
							rest,
							...jsxChildren,
						)
					);
				},
				jsxDecorator = (storyFn, context) => {
					let channel =
							external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),
						skip = ((context) => {
							let sourceParams = context?.parameters.docs?.source,
								isArgsStory = context?.parameters.__isArgsStory;
							return (
								sourceParams?.type !== dist.PO.DYNAMIC &&
								(!isArgsStory ||
									sourceParams?.code ||
									sourceParams?.type === dist.PO.CODE)
							);
						})(context),
						jsx2 = '';
					(0, external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(
						() => {
							if (!skip) {
								let { id, unmappedArgs } = context;
								channel.emit(dist.g, {
									id,
									source: jsx2,
									args: unmappedArgs,
								});
							}
						},
					);
					let story = storyFn();
					if (skip) return story;
					let options = {
							...defaultOpts,
							...(context?.parameters.jsx || {}),
						},
						storyJsx = context?.parameters.docs?.source
							?.excludeDecorators
							? context.originalStoryFn(context.args, context)
							: story,
						sourceJsx = mdxToJsx(storyJsx),
						rendered = renderJsx(sourceJsx, options);
					return rendered && (jsx2 = rendered), story;
				},
				applyDecorators = (storyFn, decorators2) => {
					let jsxIndex = decorators2.findIndex(
							(d) => d.originalFn === jsxDecorator,
						),
						reorderedDecorators =
							-1 === jsxIndex
								? decorators2
								: [
										...decorators2.splice(jsxIndex, 1),
										...decorators2,
								  ];
					return (0,
					external_STORYBOOK_MODULE_PREVIEW_API_.defaultDecorateStory)(
						storyFn,
						reorderedDecorators,
					);
				},
				parameters = {
					docs: {
						story: { inline: !0 },
						extractArgTypes: (component) => {
							if (component) {
								let { rows } = ((component) => ({
									rows: getPropDefs(component, 'props'),
								}))(component);
								if (rows)
									return rows.reduce((acc, row) => {
										let {
											name,
											description,
											type,
											sbType,
											defaultValue: defaultSummary,
											jsDocTags,
											required,
										} = row;
										return (
											(acc[name] = {
												name,
												description,
												type: { required, ...sbType },
												table: {
													type: type ?? void 0,
													jsDocTags,
													defaultValue:
														defaultSummary ??
														void 0,
												},
											}),
											acc
										);
									}, {});
							}
							return null;
						},
						extractComponentDescription: dist.VF,
					},
				},
				decorators = [jsxDecorator],
				argTypesEnhancers = [dist.rS];
		},
		'./node_modules/@storybook/react/dist/entry-preview.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					parameters: () => parameters,
					render: () => render,
					renderToCanvas: () => renderToCanvas,
				});
			var chunk_JSBTCGGE = __webpack_require__(
					'./node_modules/@storybook/react/dist/chunk-JSBTCGGE.mjs',
				),
				react = __webpack_require__('./node_modules/react/index.js'),
				external_STORYBOOK_MODULE_GLOBAL_ =
					__webpack_require__('@storybook/global'),
				react_18 = __webpack_require__(
					'./node_modules/@storybook/react-dom-shim/dist/react-18.mjs',
				);
			(0, chunk_JSBTCGGE.r)(
				{},
				{
					parameters: () => parameters,
					render: () => render,
					renderToCanvas: () => renderToCanvas,
				},
			);
			var render = (args, context) => {
					let { id, component: Component } = context;
					if (!Component)
						throw new Error(
							`Unable to render story ${id} as the component annotation is missing from the default export`,
						);
					return react.createElement(Component, { ...args });
				},
				{ FRAMEWORK_OPTIONS } =
					external_STORYBOOK_MODULE_GLOBAL_.global,
				ErrorBoundary = class extends react.Component {
					constructor() {
						super(...arguments), (this.state = { hasError: !1 });
					}
					static getDerivedStateFromError() {
						return { hasError: !0 };
					}
					componentDidMount() {
						let { hasError } = this.state,
							{ showMain } = this.props;
						hasError || showMain();
					}
					componentDidCatch(err) {
						let { showException } = this.props;
						showException(err);
					}
					render() {
						let { hasError } = this.state,
							{ children } = this.props;
						return hasError ? null : children;
					}
				},
				Wrapper = FRAMEWORK_OPTIONS?.strictMode
					? react.StrictMode
					: react.Fragment;
			async function renderToCanvas(
				{
					storyContext,
					unboundStoryFn,
					showMain,
					showException,
					forceRemount,
				},
				canvasElement,
			) {
				let content = react.createElement(
						ErrorBoundary,
						{ showMain, showException },
						react.createElement(unboundStoryFn, {
							...storyContext,
						}),
					),
					element = Wrapper
						? react.createElement(Wrapper, null, content)
						: content;
				return (
					forceRemount && (0, react_18.K)(canvasElement),
					await (0, react_18.l)(
						element,
						canvasElement,
						storyContext?.parameters?.react?.rootOptions,
					),
					() => (0, react_18.K)(canvasElement)
				);
			}
			var parameters = { renderer: 'react' };
		},
		'./node_modules/@storybook/react/node_modules/acorn-jsx/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			const XHTMLEntities = __webpack_require__(
					'./node_modules/@storybook/react/node_modules/acorn-jsx/xhtml.js',
				),
				hexNumber = /^[\da-fA-F]+$/,
				decimalNumber = /^\d+$/,
				acornJsxMap = new WeakMap();
			function getJsxTokens(acorn) {
				acorn = acorn.Parser.acorn || acorn;
				let acornJsx = acornJsxMap.get(acorn);
				if (!acornJsx) {
					const tt = acorn.tokTypes,
						TokContext = acorn.TokContext,
						TokenType = acorn.TokenType,
						tc_oTag = new TokContext('<tag', !1),
						tc_cTag = new TokContext('</tag', !1),
						tc_expr = new TokContext('<tag>...</tag>', !0, !0),
						tokContexts = { tc_oTag, tc_cTag, tc_expr },
						tokTypes = {
							jsxName: new TokenType('jsxName'),
							jsxText: new TokenType('jsxText', {
								beforeExpr: !0,
							}),
							jsxTagStart: new TokenType('jsxTagStart', {
								startsExpr: !0,
							}),
							jsxTagEnd: new TokenType('jsxTagEnd'),
						};
					(tokTypes.jsxTagStart.updateContext = function () {
						this.context.push(tc_expr),
							this.context.push(tc_oTag),
							(this.exprAllowed = !1);
					}),
						(tokTypes.jsxTagEnd.updateContext = function (
							prevType,
						) {
							let out = this.context.pop();
							(out === tc_oTag && prevType === tt.slash) ||
							out === tc_cTag
								? (this.context.pop(),
								  (this.exprAllowed =
										this.curContext() === tc_expr))
								: (this.exprAllowed = !0);
						}),
						(acornJsx = { tokContexts, tokTypes }),
						acornJsxMap.set(acorn, acornJsx);
				}
				return acornJsx;
			}
			function getQualifiedJSXName(object) {
				return object
					? 'JSXIdentifier' === object.type
						? object.name
						: 'JSXNamespacedName' === object.type
						? object.namespace.name + ':' + object.name.name
						: 'JSXMemberExpression' === object.type
						? getQualifiedJSXName(object.object) +
						  '.' +
						  getQualifiedJSXName(object.property)
						: void 0
					: object;
			}
			(module.exports = function (options) {
				return (
					(options = options || {}),
					function (Parser) {
						return (function plugin(options, Parser) {
							const acorn =
									Parser.acorn ||
									__webpack_require__(
										'./node_modules/@storybook/react/node_modules/acorn/dist/acorn.mjs',
									),
								acornJsx = getJsxTokens(acorn),
								tt = acorn.tokTypes,
								tok = acornJsx.tokTypes,
								tokContexts = acorn.tokContexts,
								tc_oTag = acornJsx.tokContexts.tc_oTag,
								tc_cTag = acornJsx.tokContexts.tc_cTag,
								tc_expr = acornJsx.tokContexts.tc_expr,
								isNewLine = acorn.isNewLine,
								isIdentifierStart = acorn.isIdentifierStart,
								isIdentifierChar = acorn.isIdentifierChar;
							return class extends Parser {
								static get acornJsx() {
									return acornJsx;
								}
								jsx_readToken() {
									let out = '',
										chunkStart = this.pos;
									for (;;) {
										this.pos >= this.input.length &&
											this.raise(
												this.start,
												'Unterminated JSX contents',
											);
										let ch = this.input.charCodeAt(
											this.pos,
										);
										switch (ch) {
											case 60:
											case 123:
												return this.pos === this.start
													? 60 === ch &&
													  this.exprAllowed
														? (++this.pos,
														  this.finishToken(
																tok.jsxTagStart,
														  ))
														: this.getTokenFromCode(
																ch,
														  )
													: ((out += this.input.slice(
															chunkStart,
															this.pos,
													  )),
													  this.finishToken(
															tok.jsxText,
															out,
													  ));
											case 38:
												(out += this.input.slice(
													chunkStart,
													this.pos,
												)),
													(out +=
														this.jsx_readEntity()),
													(chunkStart = this.pos);
												break;
											case 62:
											case 125:
												this.raise(
													this.pos,
													'Unexpected token `' +
														this.input[this.pos] +
														'`. Did you mean `' +
														(62 === ch
															? '&gt;'
															: '&rbrace;') +
														'` or `{"' +
														this.input[this.pos] +
														'"}`?',
												);
											default:
												isNewLine(ch)
													? ((out += this.input.slice(
															chunkStart,
															this.pos,
													  )),
													  (out +=
															this.jsx_readNewLine(
																!0,
															)),
													  (chunkStart = this.pos))
													: ++this.pos;
										}
									}
								}
								jsx_readNewLine(normalizeCRLF) {
									let out,
										ch = this.input.charCodeAt(this.pos);
									return (
										++this.pos,
										13 === ch &&
										10 === this.input.charCodeAt(this.pos)
											? (++this.pos,
											  (out = normalizeCRLF
													? '\n'
													: '\r\n'))
											: (out = String.fromCharCode(ch)),
										this.options.locations &&
											(++this.curLine,
											(this.lineStart = this.pos)),
										out
									);
								}
								jsx_readString(quote) {
									let out = '',
										chunkStart = ++this.pos;
									for (;;) {
										this.pos >= this.input.length &&
											this.raise(
												this.start,
												'Unterminated string constant',
											);
										let ch = this.input.charCodeAt(
											this.pos,
										);
										if (ch === quote) break;
										38 === ch
											? ((out += this.input.slice(
													chunkStart,
													this.pos,
											  )),
											  (out += this.jsx_readEntity()),
											  (chunkStart = this.pos))
											: isNewLine(ch)
											? ((out += this.input.slice(
													chunkStart,
													this.pos,
											  )),
											  (out += this.jsx_readNewLine(!1)),
											  (chunkStart = this.pos))
											: ++this.pos;
									}
									return (
										(out += this.input.slice(
											chunkStart,
											this.pos++,
										)),
										this.finishToken(tt.string, out)
									);
								}
								jsx_readEntity() {
									let entity,
										str = '',
										count = 0,
										ch = this.input[this.pos];
									'&' !== ch &&
										this.raise(
											this.pos,
											'Entity must start with an ampersand',
										);
									let startPos = ++this.pos;
									for (
										;
										this.pos < this.input.length &&
										count++ < 10;

									) {
										if (
											((ch = this.input[this.pos++]),
											';' === ch)
										) {
											'#' === str[0]
												? 'x' === str[1]
													? ((str = str.substr(2)),
													  hexNumber.test(str) &&
															(entity =
																String.fromCharCode(
																	parseInt(
																		str,
																		16,
																	),
																)))
													: ((str = str.substr(1)),
													  decimalNumber.test(str) &&
															(entity =
																String.fromCharCode(
																	parseInt(
																		str,
																		10,
																	),
																)))
												: (entity = XHTMLEntities[str]);
											break;
										}
										str += ch;
									}
									return (
										entity || ((this.pos = startPos), '&')
									);
								}
								jsx_readWord() {
									let ch,
										start = this.pos;
									do {
										ch = this.input.charCodeAt(++this.pos);
									} while (isIdentifierChar(ch) || 45 === ch);
									return this.finishToken(
										tok.jsxName,
										this.input.slice(start, this.pos),
									);
								}
								jsx_parseIdentifier() {
									let node = this.startNode();
									return (
										this.type === tok.jsxName
											? (node.name = this.value)
											: this.type.keyword
											? (node.name = this.type.keyword)
											: this.unexpected(),
										this.next(),
										this.finishNode(node, 'JSXIdentifier')
									);
								}
								jsx_parseNamespacedName() {
									let startPos = this.start,
										startLoc = this.startLoc,
										name = this.jsx_parseIdentifier();
									if (
										!options.allowNamespaces ||
										!this.eat(tt.colon)
									)
										return name;
									var node = this.startNodeAt(
										startPos,
										startLoc,
									);
									return (
										(node.namespace = name),
										(node.name =
											this.jsx_parseIdentifier()),
										this.finishNode(
											node,
											'JSXNamespacedName',
										)
									);
								}
								jsx_parseElementName() {
									if (this.type === tok.jsxTagEnd) return '';
									let startPos = this.start,
										startLoc = this.startLoc,
										node = this.jsx_parseNamespacedName();
									for (
										this.type !== tt.dot ||
										'JSXNamespacedName' !== node.type ||
										options.allowNamespacedObjects ||
										this.unexpected();
										this.eat(tt.dot);

									) {
										let newNode = this.startNodeAt(
											startPos,
											startLoc,
										);
										(newNode.object = node),
											(newNode.property =
												this.jsx_parseIdentifier()),
											(node = this.finishNode(
												newNode,
												'JSXMemberExpression',
											));
									}
									return node;
								}
								jsx_parseAttributeValue() {
									switch (this.type) {
										case tt.braceL:
											let node =
												this.jsx_parseExpressionContainer();
											return (
												'JSXEmptyExpression' ===
													node.expression.type &&
													this.raise(
														node.start,
														'JSX attributes must only be assigned a non-empty expression',
													),
												node
											);
										case tok.jsxTagStart:
										case tt.string:
											return this.parseExprAtom();
										default:
											this.raise(
												this.start,
												'JSX value should be either an expression or a quoted JSX text',
											);
									}
								}
								jsx_parseEmptyExpression() {
									let node = this.startNodeAt(
										this.lastTokEnd,
										this.lastTokEndLoc,
									);
									return this.finishNodeAt(
										node,
										'JSXEmptyExpression',
										this.start,
										this.startLoc,
									);
								}
								jsx_parseExpressionContainer() {
									let node = this.startNode();
									return (
										this.next(),
										(node.expression =
											this.type === tt.braceR
												? this.jsx_parseEmptyExpression()
												: this.parseExpression()),
										this.expect(tt.braceR),
										this.finishNode(
											node,
											'JSXExpressionContainer',
										)
									);
								}
								jsx_parseAttribute() {
									let node = this.startNode();
									return this.eat(tt.braceL)
										? (this.expect(tt.ellipsis),
										  (node.argument =
												this.parseMaybeAssign()),
										  this.expect(tt.braceR),
										  this.finishNode(
												node,
												'JSXSpreadAttribute',
										  ))
										: ((node.name =
												this.jsx_parseNamespacedName()),
										  (node.value = this.eat(tt.eq)
												? this.jsx_parseAttributeValue()
												: null),
										  this.finishNode(
												node,
												'JSXAttribute',
										  ));
								}
								jsx_parseOpeningElementAt(startPos, startLoc) {
									let node = this.startNodeAt(
										startPos,
										startLoc,
									);
									node.attributes = [];
									let nodeName = this.jsx_parseElementName();
									for (
										nodeName && (node.name = nodeName);
										this.type !== tt.slash &&
										this.type !== tok.jsxTagEnd;

									)
										node.attributes.push(
											this.jsx_parseAttribute(),
										);
									return (
										(node.selfClosing = this.eat(tt.slash)),
										this.expect(tok.jsxTagEnd),
										this.finishNode(
											node,
											nodeName
												? 'JSXOpeningElement'
												: 'JSXOpeningFragment',
										)
									);
								}
								jsx_parseClosingElementAt(startPos, startLoc) {
									let node = this.startNodeAt(
											startPos,
											startLoc,
										),
										nodeName = this.jsx_parseElementName();
									return (
										nodeName && (node.name = nodeName),
										this.expect(tok.jsxTagEnd),
										this.finishNode(
											node,
											nodeName
												? 'JSXClosingElement'
												: 'JSXClosingFragment',
										)
									);
								}
								jsx_parseElementAt(startPos, startLoc) {
									let node = this.startNodeAt(
											startPos,
											startLoc,
										),
										children = [],
										openingElement =
											this.jsx_parseOpeningElementAt(
												startPos,
												startLoc,
											),
										closingElement = null;
									if (!openingElement.selfClosing) {
										contents: for (;;)
											switch (this.type) {
												case tok.jsxTagStart:
													if (
														((startPos =
															this.start),
														(startLoc =
															this.startLoc),
														this.next(),
														this.eat(tt.slash))
													) {
														closingElement =
															this.jsx_parseClosingElementAt(
																startPos,
																startLoc,
															);
														break contents;
													}
													children.push(
														this.jsx_parseElementAt(
															startPos,
															startLoc,
														),
													);
													break;
												case tok.jsxText:
													children.push(
														this.parseExprAtom(),
													);
													break;
												case tt.braceL:
													children.push(
														this.jsx_parseExpressionContainer(),
													);
													break;
												default:
													this.unexpected();
											}
										getQualifiedJSXName(
											closingElement.name,
										) !==
											getQualifiedJSXName(
												openingElement.name,
											) &&
											this.raise(
												closingElement.start,
												'Expected corresponding JSX closing tag for <' +
													getQualifiedJSXName(
														openingElement.name,
													) +
													'>',
											);
									}
									let fragmentOrElement = openingElement.name
										? 'Element'
										: 'Fragment';
									return (
										(node['opening' + fragmentOrElement] =
											openingElement),
										(node['closing' + fragmentOrElement] =
											closingElement),
										(node.children = children),
										this.type === tt.relational &&
											'<' === this.value &&
											this.raise(
												this.start,
												'Adjacent JSX elements must be wrapped in an enclosing tag',
											),
										this.finishNode(
											node,
											'JSX' + fragmentOrElement,
										)
									);
								}
								jsx_parseText() {
									let node = this.parseLiteral(this.value);
									return (node.type = 'JSXText'), node;
								}
								jsx_parseElement() {
									let startPos = this.start,
										startLoc = this.startLoc;
									return (
										this.next(),
										this.jsx_parseElementAt(
											startPos,
											startLoc,
										)
									);
								}
								parseExprAtom(refShortHandDefaultPos) {
									return this.type === tok.jsxText
										? this.jsx_parseText()
										: this.type === tok.jsxTagStart
										? this.jsx_parseElement()
										: super.parseExprAtom(
												refShortHandDefaultPos,
										  );
								}
								readToken(code) {
									let context = this.curContext();
									if (context === tc_expr)
										return this.jsx_readToken();
									if (
										context === tc_oTag ||
										context === tc_cTag
									) {
										if (isIdentifierStart(code))
											return this.jsx_readWord();
										if (62 == code)
											return (
												++this.pos,
												this.finishToken(tok.jsxTagEnd)
											);
										if (
											(34 === code || 39 === code) &&
											context == tc_oTag
										)
											return this.jsx_readString(code);
									}
									return 60 === code &&
										this.exprAllowed &&
										33 !==
											this.input.charCodeAt(this.pos + 1)
										? (++this.pos,
										  this.finishToken(tok.jsxTagStart))
										: super.readToken(code);
								}
								updateContext(prevType) {
									if (this.type == tt.braceL) {
										var curContext = this.curContext();
										curContext == tc_oTag
											? this.context.push(
													tokContexts.b_expr,
											  )
											: curContext == tc_expr
											? this.context.push(
													tokContexts.b_tmpl,
											  )
											: super.updateContext(prevType),
											(this.exprAllowed = !0);
									} else {
										if (
											this.type !== tt.slash ||
											prevType !== tok.jsxTagStart
										)
											return super.updateContext(
												prevType,
											);
										(this.context.length -= 2),
											this.context.push(tc_cTag),
											(this.exprAllowed = !1);
									}
								}
							};
						})(
							{
								allowNamespaces: !1 !== options.allowNamespaces,
								allowNamespacedObjects:
									!!options.allowNamespacedObjects,
							},
							Parser,
						);
					}
				);
			}),
				Object.defineProperty(module.exports, 'tokTypes', {
					get: function get_tokTypes() {
						return getJsxTokens(
							__webpack_require__(
								'./node_modules/@storybook/react/node_modules/acorn/dist/acorn.mjs',
							),
						).tokTypes;
					},
					configurable: !0,
					enumerable: !0,
				});
		},
		'./node_modules/@storybook/react/node_modules/acorn-jsx/xhtml.js': (
			module,
		) => {
			module.exports = {
				quot: '"',
				amp: '&',
				apos: "'",
				lt: '<',
				gt: '>',
				nbsp: ' ',
				iexcl: '¡',
				cent: '¢',
				pound: '£',
				curren: '¤',
				yen: '¥',
				brvbar: '¦',
				sect: '§',
				uml: '¨',
				copy: '©',
				ordf: 'ª',
				laquo: '«',
				not: '¬',
				shy: '­',
				reg: '®',
				macr: '¯',
				deg: '°',
				plusmn: '±',
				sup2: '²',
				sup3: '³',
				acute: '´',
				micro: 'µ',
				para: '¶',
				middot: '·',
				cedil: '¸',
				sup1: '¹',
				ordm: 'º',
				raquo: '»',
				frac14: '¼',
				frac12: '½',
				frac34: '¾',
				iquest: '¿',
				Agrave: 'À',
				Aacute: 'Á',
				Acirc: 'Â',
				Atilde: 'Ã',
				Auml: 'Ä',
				Aring: 'Å',
				AElig: 'Æ',
				Ccedil: 'Ç',
				Egrave: 'È',
				Eacute: 'É',
				Ecirc: 'Ê',
				Euml: 'Ë',
				Igrave: 'Ì',
				Iacute: 'Í',
				Icirc: 'Î',
				Iuml: 'Ï',
				ETH: 'Ð',
				Ntilde: 'Ñ',
				Ograve: 'Ò',
				Oacute: 'Ó',
				Ocirc: 'Ô',
				Otilde: 'Õ',
				Ouml: 'Ö',
				times: '×',
				Oslash: 'Ø',
				Ugrave: 'Ù',
				Uacute: 'Ú',
				Ucirc: 'Û',
				Uuml: 'Ü',
				Yacute: 'Ý',
				THORN: 'Þ',
				szlig: 'ß',
				agrave: 'à',
				aacute: 'á',
				acirc: 'â',
				atilde: 'ã',
				auml: 'ä',
				aring: 'å',
				aelig: 'æ',
				ccedil: 'ç',
				egrave: 'è',
				eacute: 'é',
				ecirc: 'ê',
				euml: 'ë',
				igrave: 'ì',
				iacute: 'í',
				icirc: 'î',
				iuml: 'ï',
				eth: 'ð',
				ntilde: 'ñ',
				ograve: 'ò',
				oacute: 'ó',
				ocirc: 'ô',
				otilde: 'õ',
				ouml: 'ö',
				divide: '÷',
				oslash: 'ø',
				ugrave: 'ù',
				uacute: 'ú',
				ucirc: 'û',
				uuml: 'ü',
				yacute: 'ý',
				thorn: 'þ',
				yuml: 'ÿ',
				OElig: 'Œ',
				oelig: 'œ',
				Scaron: 'Š',
				scaron: 'š',
				Yuml: 'Ÿ',
				fnof: 'ƒ',
				circ: 'ˆ',
				tilde: '˜',
				Alpha: 'Α',
				Beta: 'Β',
				Gamma: 'Γ',
				Delta: 'Δ',
				Epsilon: 'Ε',
				Zeta: 'Ζ',
				Eta: 'Η',
				Theta: 'Θ',
				Iota: 'Ι',
				Kappa: 'Κ',
				Lambda: 'Λ',
				Mu: 'Μ',
				Nu: 'Ν',
				Xi: 'Ξ',
				Omicron: 'Ο',
				Pi: 'Π',
				Rho: 'Ρ',
				Sigma: 'Σ',
				Tau: 'Τ',
				Upsilon: 'Υ',
				Phi: 'Φ',
				Chi: 'Χ',
				Psi: 'Ψ',
				Omega: 'Ω',
				alpha: 'α',
				beta: 'β',
				gamma: 'γ',
				delta: 'δ',
				epsilon: 'ε',
				zeta: 'ζ',
				eta: 'η',
				theta: 'θ',
				iota: 'ι',
				kappa: 'κ',
				lambda: 'λ',
				mu: 'μ',
				nu: 'ν',
				xi: 'ξ',
				omicron: 'ο',
				pi: 'π',
				rho: 'ρ',
				sigmaf: 'ς',
				sigma: 'σ',
				tau: 'τ',
				upsilon: 'υ',
				phi: 'φ',
				chi: 'χ',
				psi: 'ψ',
				omega: 'ω',
				thetasym: 'ϑ',
				upsih: 'ϒ',
				piv: 'ϖ',
				ensp: ' ',
				emsp: ' ',
				thinsp: ' ',
				zwnj: '‌',
				zwj: '‍',
				lrm: '‎',
				rlm: '‏',
				ndash: '–',
				mdash: '—',
				lsquo: '‘',
				rsquo: '’',
				sbquo: '‚',
				ldquo: '“',
				rdquo: '”',
				bdquo: '„',
				dagger: '†',
				Dagger: '‡',
				bull: '•',
				hellip: '…',
				permil: '‰',
				prime: '′',
				Prime: '″',
				lsaquo: '‹',
				rsaquo: '›',
				oline: '‾',
				frasl: '⁄',
				euro: '€',
				image: 'ℑ',
				weierp: '℘',
				real: 'ℜ',
				trade: '™',
				alefsym: 'ℵ',
				larr: '←',
				uarr: '↑',
				rarr: '→',
				darr: '↓',
				harr: '↔',
				crarr: '↵',
				lArr: '⇐',
				uArr: '⇑',
				rArr: '⇒',
				dArr: '⇓',
				hArr: '⇔',
				forall: '∀',
				part: '∂',
				exist: '∃',
				empty: '∅',
				nabla: '∇',
				isin: '∈',
				notin: '∉',
				ni: '∋',
				prod: '∏',
				sum: '∑',
				minus: '−',
				lowast: '∗',
				radic: '√',
				prop: '∝',
				infin: '∞',
				ang: '∠',
				and: '∧',
				or: '∨',
				cap: '∩',
				cup: '∪',
				int: '∫',
				there4: '∴',
				sim: '∼',
				cong: '≅',
				asymp: '≈',
				ne: '≠',
				equiv: '≡',
				le: '≤',
				ge: '≥',
				sub: '⊂',
				sup: '⊃',
				nsub: '⊄',
				sube: '⊆',
				supe: '⊇',
				oplus: '⊕',
				otimes: '⊗',
				perp: '⊥',
				sdot: '⋅',
				lceil: '⌈',
				rceil: '⌉',
				lfloor: '⌊',
				rfloor: '⌋',
				lang: '〈',
				rang: '〉',
				loz: '◊',
				spades: '♠',
				clubs: '♣',
				hearts: '♥',
				diams: '♦',
			};
		},
		'./node_modules/@storybook/react/node_modules/acorn/dist/acorn.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.r(__webpack_exports__),
				__webpack_require__.d(__webpack_exports__, {
					Node: () => Node,
					Parser: () => Parser,
					Position: () => Position,
					SourceLocation: () => SourceLocation,
					TokContext: () => TokContext,
					Token: () => Token,
					TokenType: () => TokenType,
					defaultOptions: () => defaultOptions,
					getLineInfo: () => getLineInfo,
					isIdentifierChar: () => isIdentifierChar,
					isIdentifierStart: () => isIdentifierStart,
					isNewLine: () => isNewLine,
					keywordTypes: () => keywords$1,
					lineBreak: () => lineBreak,
					lineBreakG: () => lineBreakG,
					nonASCIIwhitespace: () => nonASCIIwhitespace,
					parse: () => parse,
					parseExpressionAt: () => parseExpressionAt,
					tokContexts: () => types$1,
					tokTypes: () => types,
					tokenizer: () => tokenizer,
					version: () => version,
				});
			var reservedWords = {
					3: 'abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile',
					5: 'class enum extends super const export import',
					6: 'enum',
					strict: 'implements interface let package private protected public static yield',
					strictBind: 'eval arguments',
				},
				ecma5AndLessKeywords =
					'break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this',
				keywords = {
					5: ecma5AndLessKeywords,
					'5module': ecma5AndLessKeywords + ' export import',
					6:
						ecma5AndLessKeywords +
						' const class extends export import super',
				},
				keywordRelationalOperator = /^in(stanceof)?$/,
				nonASCIIidentifierStartChars =
					'ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ',
				nonASCIIidentifierChars =
					'‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿',
				nonASCIIidentifierStart = new RegExp(
					'[' + nonASCIIidentifierStartChars + ']',
				),
				nonASCIIidentifier = new RegExp(
					'[' +
						nonASCIIidentifierStartChars +
						nonASCIIidentifierChars +
						']',
				);
			nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
			var astralIdentifierStartCodes = [
					0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52,
					268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7,
					2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10,
					21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22,
					10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0,
					16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11,
					21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349,
					41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76,
					44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3,
					22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9,
					8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0,
					13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46,
					42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117,
					63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3,
					38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0,
					35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37,
					22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921,
					103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30,
					114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6,
					0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286,
					50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991,
					84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64,
					2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3,
					24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30,
					2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60,
					67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2,
					0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2,
					0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2,
					0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148,
					12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938,
				],
				astralIdentifierCodes = [
					509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2,
					5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14,
					32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45,
					0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9,
					7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4,
					193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1,
					83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9,
					71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0,
					29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17,
					9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49,
					4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9,
					1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5,
					9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0,
					15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262,
					6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719,
					239,
				];
			function isInAstralSet(code, set) {
				for (var pos = 65536, i = 0; i < set.length; i += 2) {
					if ((pos += set[i]) > code) return !1;
					if ((pos += set[i + 1]) >= code) return !0;
				}
			}
			function isIdentifierStart(code, astral) {
				return code < 65
					? 36 === code
					: code < 91 ||
							(code < 97
								? 95 === code
								: code < 123 ||
								  (code <= 65535
										? code >= 170 &&
										  nonASCIIidentifierStart.test(
												String.fromCharCode(code),
										  )
										: !1 !== astral &&
										  isInAstralSet(
												code,
												astralIdentifierStartCodes,
										  )));
			}
			function isIdentifierChar(code, astral) {
				return code < 48
					? 36 === code
					: code < 58 ||
							(!(code < 65) &&
								(code < 91 ||
									(code < 97
										? 95 === code
										: code < 123 ||
										  (code <= 65535
												? code >= 170 &&
												  nonASCIIidentifier.test(
														String.fromCharCode(
															code,
														),
												  )
												: !1 !== astral &&
												  (isInAstralSet(
														code,
														astralIdentifierStartCodes,
												  ) ||
														isInAstralSet(
															code,
															astralIdentifierCodes,
														))))));
			}
			var TokenType = function TokenType(label, conf) {
				void 0 === conf && (conf = {}),
					(this.label = label),
					(this.keyword = conf.keyword),
					(this.beforeExpr = !!conf.beforeExpr),
					(this.startsExpr = !!conf.startsExpr),
					(this.isLoop = !!conf.isLoop),
					(this.isAssign = !!conf.isAssign),
					(this.prefix = !!conf.prefix),
					(this.postfix = !!conf.postfix),
					(this.binop = conf.binop || null),
					(this.updateContext = null);
			};
			function binop(name, prec) {
				return new TokenType(name, { beforeExpr: !0, binop: prec });
			}
			var beforeExpr = { beforeExpr: !0 },
				startsExpr = { startsExpr: !0 },
				keywords$1 = {};
			function kw(name, options) {
				return (
					void 0 === options && (options = {}),
					(options.keyword = name),
					(keywords$1[name] = new TokenType(name, options))
				);
			}
			var types = {
					num: new TokenType('num', startsExpr),
					regexp: new TokenType('regexp', startsExpr),
					string: new TokenType('string', startsExpr),
					name: new TokenType('name', startsExpr),
					eof: new TokenType('eof'),
					bracketL: new TokenType('[', {
						beforeExpr: !0,
						startsExpr: !0,
					}),
					bracketR: new TokenType(']'),
					braceL: new TokenType('{', {
						beforeExpr: !0,
						startsExpr: !0,
					}),
					braceR: new TokenType('}'),
					parenL: new TokenType('(', {
						beforeExpr: !0,
						startsExpr: !0,
					}),
					parenR: new TokenType(')'),
					comma: new TokenType(',', beforeExpr),
					semi: new TokenType(';', beforeExpr),
					colon: new TokenType(':', beforeExpr),
					dot: new TokenType('.'),
					question: new TokenType('?', beforeExpr),
					questionDot: new TokenType('?.'),
					arrow: new TokenType('=>', beforeExpr),
					template: new TokenType('template'),
					invalidTemplate: new TokenType('invalidTemplate'),
					ellipsis: new TokenType('...', beforeExpr),
					backQuote: new TokenType('`', startsExpr),
					dollarBraceL: new TokenType('${', {
						beforeExpr: !0,
						startsExpr: !0,
					}),
					eq: new TokenType('=', { beforeExpr: !0, isAssign: !0 }),
					assign: new TokenType('_=', {
						beforeExpr: !0,
						isAssign: !0,
					}),
					incDec: new TokenType('++/--', {
						prefix: !0,
						postfix: !0,
						startsExpr: !0,
					}),
					prefix: new TokenType('!/~', {
						beforeExpr: !0,
						prefix: !0,
						startsExpr: !0,
					}),
					logicalOR: binop('||', 1),
					logicalAND: binop('&&', 2),
					bitwiseOR: binop('|', 3),
					bitwiseXOR: binop('^', 4),
					bitwiseAND: binop('&', 5),
					equality: binop('==/!=/===/!==', 6),
					relational: binop('</>/<=/>=', 7),
					bitShift: binop('<</>>/>>>', 8),
					plusMin: new TokenType('+/-', {
						beforeExpr: !0,
						binop: 9,
						prefix: !0,
						startsExpr: !0,
					}),
					modulo: binop('%', 10),
					star: binop('*', 10),
					slash: binop('/', 10),
					starstar: new TokenType('**', { beforeExpr: !0 }),
					coalesce: binop('??', 1),
					_break: kw('break'),
					_case: kw('case', beforeExpr),
					_catch: kw('catch'),
					_continue: kw('continue'),
					_debugger: kw('debugger'),
					_default: kw('default', beforeExpr),
					_do: kw('do', { isLoop: !0, beforeExpr: !0 }),
					_else: kw('else', beforeExpr),
					_finally: kw('finally'),
					_for: kw('for', { isLoop: !0 }),
					_function: kw('function', startsExpr),
					_if: kw('if'),
					_return: kw('return', beforeExpr),
					_switch: kw('switch'),
					_throw: kw('throw', beforeExpr),
					_try: kw('try'),
					_var: kw('var'),
					_const: kw('const'),
					_while: kw('while', { isLoop: !0 }),
					_with: kw('with'),
					_new: kw('new', { beforeExpr: !0, startsExpr: !0 }),
					_this: kw('this', startsExpr),
					_super: kw('super', startsExpr),
					_class: kw('class', startsExpr),
					_extends: kw('extends', beforeExpr),
					_export: kw('export'),
					_import: kw('import', startsExpr),
					_null: kw('null', startsExpr),
					_true: kw('true', startsExpr),
					_false: kw('false', startsExpr),
					_in: kw('in', { beforeExpr: !0, binop: 7 }),
					_instanceof: kw('instanceof', { beforeExpr: !0, binop: 7 }),
					_typeof: kw('typeof', {
						beforeExpr: !0,
						prefix: !0,
						startsExpr: !0,
					}),
					_void: kw('void', {
						beforeExpr: !0,
						prefix: !0,
						startsExpr: !0,
					}),
					_delete: kw('delete', {
						beforeExpr: !0,
						prefix: !0,
						startsExpr: !0,
					}),
				},
				lineBreak = /\r\n?|\n|\u2028|\u2029/,
				lineBreakG = new RegExp(lineBreak.source, 'g');
			function isNewLine(code, ecma2019String) {
				return (
					10 === code ||
					13 === code ||
					(!ecma2019String && (8232 === code || 8233 === code))
				);
			}
			var nonASCIIwhitespace =
					/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
				skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,
				ref = Object.prototype,
				hasOwnProperty = ref.hasOwnProperty,
				toString = ref.toString;
			function has(obj, propName) {
				return hasOwnProperty.call(obj, propName);
			}
			var isArray =
				Array.isArray ||
				function (obj) {
					return '[object Array]' === toString.call(obj);
				};
			function wordsRegexp(words) {
				return new RegExp('^(?:' + words.replace(/ /g, '|') + ')$');
			}
			var Position = function Position(line, col) {
				(this.line = line), (this.column = col);
			};
			Position.prototype.offset = function offset(n) {
				return new Position(this.line, this.column + n);
			};
			var SourceLocation = function SourceLocation(p, start, end) {
				(this.start = start),
					(this.end = end),
					null !== p.sourceFile && (this.source = p.sourceFile);
			};
			function getLineInfo(input, offset) {
				for (var line = 1, cur = 0; ; ) {
					lineBreakG.lastIndex = cur;
					var match = lineBreakG.exec(input);
					if (!(match && match.index < offset))
						return new Position(line, offset - cur);
					++line, (cur = match.index + match[0].length);
				}
			}
			var defaultOptions = {
				ecmaVersion: 10,
				sourceType: 'script',
				onInsertedSemicolon: null,
				onTrailingComma: null,
				allowReserved: null,
				allowReturnOutsideFunction: !1,
				allowImportExportEverywhere: !1,
				allowAwaitOutsideFunction: !1,
				allowHashBang: !1,
				locations: !1,
				onToken: null,
				onComment: null,
				ranges: !1,
				program: null,
				sourceFile: null,
				directSourceFile: null,
				preserveParens: !1,
			};
			function getOptions(opts) {
				var options = {};
				for (var opt in defaultOptions)
					options[opt] =
						opts && has(opts, opt)
							? opts[opt]
							: defaultOptions[opt];
				if (
					(options.ecmaVersion >= 2015 &&
						(options.ecmaVersion -= 2009),
					null == options.allowReserved &&
						(options.allowReserved = options.ecmaVersion < 5),
					isArray(options.onToken))
				) {
					var tokens = options.onToken;
					options.onToken = function (token) {
						return tokens.push(token);
					};
				}
				return (
					isArray(options.onComment) &&
						(options.onComment = (function pushComment(
							options,
							array,
						) {
							return function (
								block,
								text,
								start,
								end,
								startLoc,
								endLoc,
							) {
								var comment = {
									type: block ? 'Block' : 'Line',
									value: text,
									start,
									end,
								};
								options.locations &&
									(comment.loc = new SourceLocation(
										this,
										startLoc,
										endLoc,
									)),
									options.ranges &&
										(comment.range = [start, end]),
									array.push(comment);
							};
						})(options, options.onComment)),
					options
				);
			}
			function functionFlags(async, generator) {
				return 2 | (async ? 4 : 0) | (generator ? 8 : 0);
			}
			var Parser = function Parser(options, input, startPos) {
					(this.options = options = getOptions(options)),
						(this.sourceFile = options.sourceFile),
						(this.keywords = wordsRegexp(
							keywords[
								options.ecmaVersion >= 6
									? 6
									: 'module' === options.sourceType
									? '5module'
									: 5
							],
						));
					var reserved = '';
					if (!0 !== options.allowReserved) {
						for (
							var v = options.ecmaVersion;
							!(reserved = reservedWords[v]);
							v--
						);
						'module' === options.sourceType &&
							(reserved += ' await');
					}
					this.reservedWords = wordsRegexp(reserved);
					var reservedStrict =
						(reserved ? reserved + ' ' : '') + reservedWords.strict;
					(this.reservedWordsStrict = wordsRegexp(reservedStrict)),
						(this.reservedWordsStrictBind = wordsRegexp(
							reservedStrict + ' ' + reservedWords.strictBind,
						)),
						(this.input = String(input)),
						(this.containsEsc = !1),
						startPos
							? ((this.pos = startPos),
							  (this.lineStart =
									this.input.lastIndexOf('\n', startPos - 1) +
									1),
							  (this.curLine = this.input
									.slice(0, this.lineStart)
									.split(lineBreak).length))
							: ((this.pos = this.lineStart = 0),
							  (this.curLine = 1)),
						(this.type = types.eof),
						(this.value = null),
						(this.start = this.end = this.pos),
						(this.startLoc = this.endLoc = this.curPosition()),
						(this.lastTokEndLoc = this.lastTokStartLoc = null),
						(this.lastTokStart = this.lastTokEnd = this.pos),
						(this.context = this.initialContext()),
						(this.exprAllowed = !0),
						(this.inModule = 'module' === options.sourceType),
						(this.strict =
							this.inModule || this.strictDirective(this.pos)),
						(this.potentialArrowAt = -1),
						(this.yieldPos =
							this.awaitPos =
							this.awaitIdentPos =
								0),
						(this.labels = []),
						(this.undefinedExports = {}),
						0 === this.pos &&
							options.allowHashBang &&
							'#!' === this.input.slice(0, 2) &&
							this.skipLineComment(2),
						(this.scopeStack = []),
						this.enterScope(1),
						(this.regexpState = null);
				},
				prototypeAccessors = {
					inFunction: { configurable: !0 },
					inGenerator: { configurable: !0 },
					inAsync: { configurable: !0 },
					allowSuper: { configurable: !0 },
					allowDirectSuper: { configurable: !0 },
					treatFunctionsAsVar: { configurable: !0 },
				};
			(Parser.prototype.parse = function parse() {
				var node = this.options.program || this.startNode();
				return this.nextToken(), this.parseTopLevel(node);
			}),
				(prototypeAccessors.inFunction.get = function () {
					return (2 & this.currentVarScope().flags) > 0;
				}),
				(prototypeAccessors.inGenerator.get = function () {
					return (8 & this.currentVarScope().flags) > 0;
				}),
				(prototypeAccessors.inAsync.get = function () {
					return (4 & this.currentVarScope().flags) > 0;
				}),
				(prototypeAccessors.allowSuper.get = function () {
					return (64 & this.currentThisScope().flags) > 0;
				}),
				(prototypeAccessors.allowDirectSuper.get = function () {
					return (128 & this.currentThisScope().flags) > 0;
				}),
				(prototypeAccessors.treatFunctionsAsVar.get = function () {
					return this.treatFunctionsAsVarInScope(this.currentScope());
				}),
				(Parser.prototype.inNonArrowFunction =
					function inNonArrowFunction() {
						return (2 & this.currentThisScope().flags) > 0;
					}),
				(Parser.extend = function extend() {
					for (var plugins = [], len = arguments.length; len--; )
						plugins[len] = arguments[len];
					for (var cls = this, i = 0; i < plugins.length; i++)
						cls = plugins[i](cls);
					return cls;
				}),
				(Parser.parse = function parse(input, options) {
					return new this(options, input).parse();
				}),
				(Parser.parseExpressionAt = function parseExpressionAt(
					input,
					pos,
					options,
				) {
					var parser = new this(options, input, pos);
					return parser.nextToken(), parser.parseExpression();
				}),
				(Parser.tokenizer = function tokenizer(input, options) {
					return new this(options, input);
				}),
				Object.defineProperties(Parser.prototype, prototypeAccessors);
			var pp = Parser.prototype,
				literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
			function DestructuringErrors() {
				this.shorthandAssign =
					this.trailingComma =
					this.parenthesizedAssign =
					this.parenthesizedBind =
					this.doubleProto =
						-1;
			}
			(pp.strictDirective = function (start) {
				for (;;) {
					(skipWhiteSpace.lastIndex = start),
						(start += skipWhiteSpace.exec(this.input)[0].length);
					var match = literal.exec(this.input.slice(start));
					if (!match) return !1;
					if ('use strict' === (match[1] || match[2])) {
						skipWhiteSpace.lastIndex = start + match[0].length;
						var spaceAfter = skipWhiteSpace.exec(this.input),
							end = spaceAfter.index + spaceAfter[0].length,
							next = this.input.charAt(end);
						return (
							';' === next ||
							'}' === next ||
							(lineBreak.test(spaceAfter[0]) &&
								!(
									/[(`.[+\-/*%<>=,?^&]/.test(next) ||
									('!' === next &&
										'=' === this.input.charAt(end + 1))
								))
						);
					}
					(start += match[0].length),
						(skipWhiteSpace.lastIndex = start),
						(start += skipWhiteSpace.exec(this.input)[0].length),
						';' === this.input[start] && start++;
				}
			}),
				(pp.eat = function (type) {
					return this.type === type && (this.next(), !0);
				}),
				(pp.isContextual = function (name) {
					return (
						this.type === types.name &&
						this.value === name &&
						!this.containsEsc
					);
				}),
				(pp.eatContextual = function (name) {
					return !!this.isContextual(name) && (this.next(), !0);
				}),
				(pp.expectContextual = function (name) {
					this.eatContextual(name) || this.unexpected();
				}),
				(pp.canInsertSemicolon = function () {
					return (
						this.type === types.eof ||
						this.type === types.braceR ||
						lineBreak.test(
							this.input.slice(this.lastTokEnd, this.start),
						)
					);
				}),
				(pp.insertSemicolon = function () {
					if (this.canInsertSemicolon())
						return (
							this.options.onInsertedSemicolon &&
								this.options.onInsertedSemicolon(
									this.lastTokEnd,
									this.lastTokEndLoc,
								),
							!0
						);
				}),
				(pp.semicolon = function () {
					this.eat(types.semi) ||
						this.insertSemicolon() ||
						this.unexpected();
				}),
				(pp.afterTrailingComma = function (tokType, notNext) {
					if (this.type === tokType)
						return (
							this.options.onTrailingComma &&
								this.options.onTrailingComma(
									this.lastTokStart,
									this.lastTokStartLoc,
								),
							notNext || this.next(),
							!0
						);
				}),
				(pp.expect = function (type) {
					this.eat(type) || this.unexpected();
				}),
				(pp.unexpected = function (pos) {
					this.raise(
						null != pos ? pos : this.start,
						'Unexpected token',
					);
				}),
				(pp.checkPatternErrors = function (
					refDestructuringErrors,
					isAssign,
				) {
					if (refDestructuringErrors) {
						refDestructuringErrors.trailingComma > -1 &&
							this.raiseRecoverable(
								refDestructuringErrors.trailingComma,
								'Comma is not permitted after the rest element',
							);
						var parens = isAssign
							? refDestructuringErrors.parenthesizedAssign
							: refDestructuringErrors.parenthesizedBind;
						parens > -1 &&
							this.raiseRecoverable(
								parens,
								'Parenthesized pattern',
							);
					}
				}),
				(pp.checkExpressionErrors = function (
					refDestructuringErrors,
					andThrow,
				) {
					if (!refDestructuringErrors) return !1;
					var shorthandAssign =
							refDestructuringErrors.shorthandAssign,
						doubleProto = refDestructuringErrors.doubleProto;
					if (!andThrow)
						return shorthandAssign >= 0 || doubleProto >= 0;
					shorthandAssign >= 0 &&
						this.raise(
							shorthandAssign,
							'Shorthand property assignments are valid only in destructuring patterns',
						),
						doubleProto >= 0 &&
							this.raiseRecoverable(
								doubleProto,
								'Redefinition of __proto__ property',
							);
				}),
				(pp.checkYieldAwaitInDefaultParams = function () {
					this.yieldPos &&
						(!this.awaitPos || this.yieldPos < this.awaitPos) &&
						this.raise(
							this.yieldPos,
							'Yield expression cannot be a default value',
						),
						this.awaitPos &&
							this.raise(
								this.awaitPos,
								'Await expression cannot be a default value',
							);
				}),
				(pp.isSimpleAssignTarget = function (expr) {
					return 'ParenthesizedExpression' === expr.type
						? this.isSimpleAssignTarget(expr.expression)
						: 'Identifier' === expr.type ||
								'MemberExpression' === expr.type;
				});
			var pp$1 = Parser.prototype;
			pp$1.parseTopLevel = function (node) {
				var exports = {};
				for (node.body || (node.body = []); this.type !== types.eof; ) {
					var stmt = this.parseStatement(null, !0, exports);
					node.body.push(stmt);
				}
				if (this.inModule)
					for (
						var i = 0, list = Object.keys(this.undefinedExports);
						i < list.length;
						i += 1
					) {
						var name = list[i];
						this.raiseRecoverable(
							this.undefinedExports[name].start,
							"Export '" + name + "' is not defined",
						);
					}
				return (
					this.adaptDirectivePrologue(node.body),
					this.next(),
					(node.sourceType = this.options.sourceType),
					this.finishNode(node, 'Program')
				);
			};
			var loopLabel = { kind: 'loop' },
				switchLabel = { kind: 'switch' };
			(pp$1.isLet = function (context) {
				if (this.options.ecmaVersion < 6 || !this.isContextual('let'))
					return !1;
				skipWhiteSpace.lastIndex = this.pos;
				var skip = skipWhiteSpace.exec(this.input),
					next = this.pos + skip[0].length,
					nextCh = this.input.charCodeAt(next);
				if (91 === nextCh) return !0;
				if (context) return !1;
				if (123 === nextCh) return !0;
				if (isIdentifierStart(nextCh, !0)) {
					for (
						var pos = next + 1;
						isIdentifierChar(this.input.charCodeAt(pos), !0);

					)
						++pos;
					var ident = this.input.slice(next, pos);
					if (!keywordRelationalOperator.test(ident)) return !0;
				}
				return !1;
			}),
				(pp$1.isAsyncFunction = function () {
					if (
						this.options.ecmaVersion < 8 ||
						!this.isContextual('async')
					)
						return !1;
					skipWhiteSpace.lastIndex = this.pos;
					var skip = skipWhiteSpace.exec(this.input),
						next = this.pos + skip[0].length;
					return !(
						lineBreak.test(this.input.slice(this.pos, next)) ||
						'function' !== this.input.slice(next, next + 8) ||
						(next + 8 !== this.input.length &&
							isIdentifierChar(this.input.charAt(next + 8)))
					);
				}),
				(pp$1.parseStatement = function (context, topLevel, exports) {
					var kind,
						starttype = this.type,
						node = this.startNode();
					switch (
						(this.isLet(context) &&
							((starttype = types._var), (kind = 'let')),
						starttype)
					) {
						case types._break:
						case types._continue:
							return this.parseBreakContinueStatement(
								node,
								starttype.keyword,
							);
						case types._debugger:
							return this.parseDebuggerStatement(node);
						case types._do:
							return this.parseDoStatement(node);
						case types._for:
							return this.parseForStatement(node);
						case types._function:
							return (
								context &&
									(this.strict ||
										('if' !== context &&
											'label' !== context)) &&
									this.options.ecmaVersion >= 6 &&
									this.unexpected(),
								this.parseFunctionStatement(node, !1, !context)
							);
						case types._class:
							return (
								context && this.unexpected(),
								this.parseClass(node, !0)
							);
						case types._if:
							return this.parseIfStatement(node);
						case types._return:
							return this.parseReturnStatement(node);
						case types._switch:
							return this.parseSwitchStatement(node);
						case types._throw:
							return this.parseThrowStatement(node);
						case types._try:
							return this.parseTryStatement(node);
						case types._const:
						case types._var:
							return (
								(kind = kind || this.value),
								context && 'var' !== kind && this.unexpected(),
								this.parseVarStatement(node, kind)
							);
						case types._while:
							return this.parseWhileStatement(node);
						case types._with:
							return this.parseWithStatement(node);
						case types.braceL:
							return this.parseBlock(!0, node);
						case types.semi:
							return this.parseEmptyStatement(node);
						case types._export:
						case types._import:
							if (
								this.options.ecmaVersion > 10 &&
								starttype === types._import
							) {
								skipWhiteSpace.lastIndex = this.pos;
								var skip = skipWhiteSpace.exec(this.input),
									next = this.pos + skip[0].length,
									nextCh = this.input.charCodeAt(next);
								if (40 === nextCh || 46 === nextCh)
									return this.parseExpressionStatement(
										node,
										this.parseExpression(),
									);
							}
							return (
								this.options.allowImportExportEverywhere ||
									(topLevel ||
										this.raise(
											this.start,
											"'import' and 'export' may only appear at the top level",
										),
									this.inModule ||
										this.raise(
											this.start,
											"'import' and 'export' may appear only with 'sourceType: module'",
										)),
								starttype === types._import
									? this.parseImport(node)
									: this.parseExport(node, exports)
							);
						default:
							if (this.isAsyncFunction())
								return (
									context && this.unexpected(),
									this.next(),
									this.parseFunctionStatement(
										node,
										!0,
										!context,
									)
								);
							var maybeName = this.value,
								expr = this.parseExpression();
							return starttype === types.name &&
								'Identifier' === expr.type &&
								this.eat(types.colon)
								? this.parseLabeledStatement(
										node,
										maybeName,
										expr,
										context,
								  )
								: this.parseExpressionStatement(node, expr);
					}
				}),
				(pp$1.parseBreakContinueStatement = function (node, keyword) {
					var isBreak = 'break' === keyword;
					this.next(),
						this.eat(types.semi) || this.insertSemicolon()
							? (node.label = null)
							: this.type !== types.name
							? this.unexpected()
							: ((node.label = this.parseIdent()),
							  this.semicolon());
					for (var i = 0; i < this.labels.length; ++i) {
						var lab = this.labels[i];
						if (
							null == node.label ||
							lab.name === node.label.name
						) {
							if (
								null != lab.kind &&
								(isBreak || 'loop' === lab.kind)
							)
								break;
							if (node.label && isBreak) break;
						}
					}
					return (
						i === this.labels.length &&
							this.raise(node.start, 'Unsyntactic ' + keyword),
						this.finishNode(
							node,
							isBreak ? 'BreakStatement' : 'ContinueStatement',
						)
					);
				}),
				(pp$1.parseDebuggerStatement = function (node) {
					return (
						this.next(),
						this.semicolon(),
						this.finishNode(node, 'DebuggerStatement')
					);
				}),
				(pp$1.parseDoStatement = function (node) {
					return (
						this.next(),
						this.labels.push(loopLabel),
						(node.body = this.parseStatement('do')),
						this.labels.pop(),
						this.expect(types._while),
						(node.test = this.parseParenExpression()),
						this.options.ecmaVersion >= 6
							? this.eat(types.semi)
							: this.semicolon(),
						this.finishNode(node, 'DoWhileStatement')
					);
				}),
				(pp$1.parseForStatement = function (node) {
					this.next();
					var awaitAt =
						this.options.ecmaVersion >= 9 &&
						(this.inAsync ||
							(!this.inFunction &&
								this.options.allowAwaitOutsideFunction)) &&
						this.eatContextual('await')
							? this.lastTokStart
							: -1;
					if (
						(this.labels.push(loopLabel),
						this.enterScope(0),
						this.expect(types.parenL),
						this.type === types.semi)
					)
						return (
							awaitAt > -1 && this.unexpected(awaitAt),
							this.parseFor(node, null)
						);
					var isLet = this.isLet();
					if (
						this.type === types._var ||
						this.type === types._const ||
						isLet
					) {
						var init$1 = this.startNode(),
							kind = isLet ? 'let' : this.value;
						return (
							this.next(),
							this.parseVar(init$1, !0, kind),
							this.finishNode(init$1, 'VariableDeclaration'),
							(this.type === types._in ||
								(this.options.ecmaVersion >= 6 &&
									this.isContextual('of'))) &&
							1 === init$1.declarations.length
								? (this.options.ecmaVersion >= 9 &&
										(this.type === types._in
											? awaitAt > -1 &&
											  this.unexpected(awaitAt)
											: (node.await = awaitAt > -1)),
								  this.parseForIn(node, init$1))
								: (awaitAt > -1 && this.unexpected(awaitAt),
								  this.parseFor(node, init$1))
						);
					}
					var refDestructuringErrors = new DestructuringErrors(),
						init = this.parseExpression(!0, refDestructuringErrors);
					return this.type === types._in ||
						(this.options.ecmaVersion >= 6 &&
							this.isContextual('of'))
						? (this.options.ecmaVersion >= 9 &&
								(this.type === types._in
									? awaitAt > -1 && this.unexpected(awaitAt)
									: (node.await = awaitAt > -1)),
						  this.toAssignable(init, !1, refDestructuringErrors),
						  this.checkLVal(init),
						  this.parseForIn(node, init))
						: (this.checkExpressionErrors(
								refDestructuringErrors,
								!0,
						  ),
						  awaitAt > -1 && this.unexpected(awaitAt),
						  this.parseFor(node, init));
				}),
				(pp$1.parseFunctionStatement = function (
					node,
					isAsync,
					declarationPosition,
				) {
					return (
						this.next(),
						this.parseFunction(
							node,
							FUNC_STATEMENT |
								(declarationPosition
									? 0
									: FUNC_HANGING_STATEMENT),
							!1,
							isAsync,
						)
					);
				}),
				(pp$1.parseIfStatement = function (node) {
					return (
						this.next(),
						(node.test = this.parseParenExpression()),
						(node.consequent = this.parseStatement('if')),
						(node.alternate = this.eat(types._else)
							? this.parseStatement('if')
							: null),
						this.finishNode(node, 'IfStatement')
					);
				}),
				(pp$1.parseReturnStatement = function (node) {
					return (
						this.inFunction ||
							this.options.allowReturnOutsideFunction ||
							this.raise(
								this.start,
								"'return' outside of function",
							),
						this.next(),
						this.eat(types.semi) || this.insertSemicolon()
							? (node.argument = null)
							: ((node.argument = this.parseExpression()),
							  this.semicolon()),
						this.finishNode(node, 'ReturnStatement')
					);
				}),
				(pp$1.parseSwitchStatement = function (node) {
					var cur;
					this.next(),
						(node.discriminant = this.parseParenExpression()),
						(node.cases = []),
						this.expect(types.braceL),
						this.labels.push(switchLabel),
						this.enterScope(0);
					for (var sawDefault = !1; this.type !== types.braceR; )
						if (
							this.type === types._case ||
							this.type === types._default
						) {
							var isCase = this.type === types._case;
							cur && this.finishNode(cur, 'SwitchCase'),
								node.cases.push((cur = this.startNode())),
								(cur.consequent = []),
								this.next(),
								isCase
									? (cur.test = this.parseExpression())
									: (sawDefault &&
											this.raiseRecoverable(
												this.lastTokStart,
												'Multiple default clauses',
											),
									  (sawDefault = !0),
									  (cur.test = null)),
								this.expect(types.colon);
						} else
							cur || this.unexpected(),
								cur.consequent.push(this.parseStatement(null));
					return (
						this.exitScope(),
						cur && this.finishNode(cur, 'SwitchCase'),
						this.next(),
						this.labels.pop(),
						this.finishNode(node, 'SwitchStatement')
					);
				}),
				(pp$1.parseThrowStatement = function (node) {
					return (
						this.next(),
						lineBreak.test(
							this.input.slice(this.lastTokEnd, this.start),
						) &&
							this.raise(
								this.lastTokEnd,
								'Illegal newline after throw',
							),
						(node.argument = this.parseExpression()),
						this.semicolon(),
						this.finishNode(node, 'ThrowStatement')
					);
				});
			var empty = [];
			(pp$1.parseTryStatement = function (node) {
				if (
					(this.next(),
					(node.block = this.parseBlock()),
					(node.handler = null),
					this.type === types._catch)
				) {
					var clause = this.startNode();
					if ((this.next(), this.eat(types.parenL))) {
						clause.param = this.parseBindingAtom();
						var simple = 'Identifier' === clause.param.type;
						this.enterScope(simple ? 32 : 0),
							this.checkLVal(clause.param, simple ? 4 : 2),
							this.expect(types.parenR);
					} else
						this.options.ecmaVersion < 10 && this.unexpected(),
							(clause.param = null),
							this.enterScope(0);
					(clause.body = this.parseBlock(!1)),
						this.exitScope(),
						(node.handler = this.finishNode(clause, 'CatchClause'));
				}
				return (
					(node.finalizer = this.eat(types._finally)
						? this.parseBlock()
						: null),
					node.handler ||
						node.finalizer ||
						this.raise(
							node.start,
							'Missing catch or finally clause',
						),
					this.finishNode(node, 'TryStatement')
				);
			}),
				(pp$1.parseVarStatement = function (node, kind) {
					return (
						this.next(),
						this.parseVar(node, !1, kind),
						this.semicolon(),
						this.finishNode(node, 'VariableDeclaration')
					);
				}),
				(pp$1.parseWhileStatement = function (node) {
					return (
						this.next(),
						(node.test = this.parseParenExpression()),
						this.labels.push(loopLabel),
						(node.body = this.parseStatement('while')),
						this.labels.pop(),
						this.finishNode(node, 'WhileStatement')
					);
				}),
				(pp$1.parseWithStatement = function (node) {
					return (
						this.strict &&
							this.raise(this.start, "'with' in strict mode"),
						this.next(),
						(node.object = this.parseParenExpression()),
						(node.body = this.parseStatement('with')),
						this.finishNode(node, 'WithStatement')
					);
				}),
				(pp$1.parseEmptyStatement = function (node) {
					return this.next(), this.finishNode(node, 'EmptyStatement');
				}),
				(pp$1.parseLabeledStatement = function (
					node,
					maybeName,
					expr,
					context,
				) {
					for (
						var i$1 = 0, list = this.labels;
						i$1 < list.length;
						i$1 += 1
					) {
						list[i$1].name === maybeName &&
							this.raise(
								expr.start,
								"Label '" + maybeName + "' is already declared",
							);
					}
					for (
						var kind = this.type.isLoop
								? 'loop'
								: this.type === types._switch
								? 'switch'
								: null,
							i = this.labels.length - 1;
						i >= 0;
						i--
					) {
						var label$1 = this.labels[i];
						if (label$1.statementStart !== node.start) break;
						(label$1.statementStart = this.start),
							(label$1.kind = kind);
					}
					return (
						this.labels.push({
							name: maybeName,
							kind,
							statementStart: this.start,
						}),
						(node.body = this.parseStatement(
							context
								? -1 === context.indexOf('label')
									? context + 'label'
									: context
								: 'label',
						)),
						this.labels.pop(),
						(node.label = expr),
						this.finishNode(node, 'LabeledStatement')
					);
				}),
				(pp$1.parseExpressionStatement = function (node, expr) {
					return (
						(node.expression = expr),
						this.semicolon(),
						this.finishNode(node, 'ExpressionStatement')
					);
				}),
				(pp$1.parseBlock = function (
					createNewLexicalScope,
					node,
					exitStrict,
				) {
					for (
						void 0 === createNewLexicalScope &&
							(createNewLexicalScope = !0),
							void 0 === node && (node = this.startNode()),
							node.body = [],
							this.expect(types.braceL),
							createNewLexicalScope && this.enterScope(0);
						this.type !== types.braceR;

					) {
						var stmt = this.parseStatement(null);
						node.body.push(stmt);
					}
					return (
						exitStrict && (this.strict = !1),
						this.next(),
						createNewLexicalScope && this.exitScope(),
						this.finishNode(node, 'BlockStatement')
					);
				}),
				(pp$1.parseFor = function (node, init) {
					return (
						(node.init = init),
						this.expect(types.semi),
						(node.test =
							this.type === types.semi
								? null
								: this.parseExpression()),
						this.expect(types.semi),
						(node.update =
							this.type === types.parenR
								? null
								: this.parseExpression()),
						this.expect(types.parenR),
						(node.body = this.parseStatement('for')),
						this.exitScope(),
						this.labels.pop(),
						this.finishNode(node, 'ForStatement')
					);
				}),
				(pp$1.parseForIn = function (node, init) {
					var isForIn = this.type === types._in;
					return (
						this.next(),
						'VariableDeclaration' === init.type &&
						null != init.declarations[0].init &&
						(!isForIn ||
							this.options.ecmaVersion < 8 ||
							this.strict ||
							'var' !== init.kind ||
							'Identifier' !== init.declarations[0].id.type)
							? this.raise(
									init.start,
									(isForIn ? 'for-in' : 'for-of') +
										' loop variable declaration may not have an initializer',
							  )
							: 'AssignmentPattern' === init.type &&
							  this.raise(
									init.start,
									'Invalid left-hand side in for-loop',
							  ),
						(node.left = init),
						(node.right = isForIn
							? this.parseExpression()
							: this.parseMaybeAssign()),
						this.expect(types.parenR),
						(node.body = this.parseStatement('for')),
						this.exitScope(),
						this.labels.pop(),
						this.finishNode(
							node,
							isForIn ? 'ForInStatement' : 'ForOfStatement',
						)
					);
				}),
				(pp$1.parseVar = function (node, isFor, kind) {
					for (node.declarations = [], node.kind = kind; ; ) {
						var decl = this.startNode();
						if (
							(this.parseVarId(decl, kind),
							this.eat(types.eq)
								? (decl.init = this.parseMaybeAssign(isFor))
								: 'const' !== kind ||
								  this.type === types._in ||
								  (this.options.ecmaVersion >= 6 &&
										this.isContextual('of'))
								? 'Identifier' === decl.id.type ||
								  (isFor &&
										(this.type === types._in ||
											this.isContextual('of')))
									? (decl.init = null)
									: this.raise(
											this.lastTokEnd,
											'Complex binding patterns require an initialization value',
									  )
								: this.unexpected(),
							node.declarations.push(
								this.finishNode(decl, 'VariableDeclarator'),
							),
							!this.eat(types.comma))
						)
							break;
					}
					return node;
				}),
				(pp$1.parseVarId = function (decl, kind) {
					(decl.id = this.parseBindingAtom()),
						this.checkLVal(decl.id, 'var' === kind ? 1 : 2, !1);
				});
			var FUNC_STATEMENT = 1,
				FUNC_HANGING_STATEMENT = 2;
			(pp$1.parseFunction = function (
				node,
				statement,
				allowExpressionBody,
				isAsync,
			) {
				this.initFunction(node),
					(this.options.ecmaVersion >= 9 ||
						(this.options.ecmaVersion >= 6 && !isAsync)) &&
						(this.type === types.star &&
							statement & FUNC_HANGING_STATEMENT &&
							this.unexpected(),
						(node.generator = this.eat(types.star))),
					this.options.ecmaVersion >= 8 && (node.async = !!isAsync),
					statement & FUNC_STATEMENT &&
						((node.id =
							4 & statement && this.type !== types.name
								? null
								: this.parseIdent()),
						!node.id ||
							statement & FUNC_HANGING_STATEMENT ||
							this.checkLVal(
								node.id,
								this.strict || node.generator || node.async
									? this.treatFunctionsAsVar
										? 1
										: 2
									: 3,
							));
				var oldYieldPos = this.yieldPos,
					oldAwaitPos = this.awaitPos,
					oldAwaitIdentPos = this.awaitIdentPos;
				return (
					(this.yieldPos = 0),
					(this.awaitPos = 0),
					(this.awaitIdentPos = 0),
					this.enterScope(functionFlags(node.async, node.generator)),
					statement & FUNC_STATEMENT ||
						(node.id =
							this.type === types.name
								? this.parseIdent()
								: null),
					this.parseFunctionParams(node),
					this.parseFunctionBody(node, allowExpressionBody, !1),
					(this.yieldPos = oldYieldPos),
					(this.awaitPos = oldAwaitPos),
					(this.awaitIdentPos = oldAwaitIdentPos),
					this.finishNode(
						node,
						statement & FUNC_STATEMENT
							? 'FunctionDeclaration'
							: 'FunctionExpression',
					)
				);
			}),
				(pp$1.parseFunctionParams = function (node) {
					this.expect(types.parenL),
						(node.params = this.parseBindingList(
							types.parenR,
							!1,
							this.options.ecmaVersion >= 8,
						)),
						this.checkYieldAwaitInDefaultParams();
				}),
				(pp$1.parseClass = function (node, isStatement) {
					this.next();
					var oldStrict = this.strict;
					(this.strict = !0),
						this.parseClassId(node, isStatement),
						this.parseClassSuper(node);
					var classBody = this.startNode(),
						hadConstructor = !1;
					for (
						classBody.body = [], this.expect(types.braceL);
						this.type !== types.braceR;

					) {
						var element = this.parseClassElement(
							null !== node.superClass,
						);
						element &&
							(classBody.body.push(element),
							'MethodDefinition' === element.type &&
								'constructor' === element.kind &&
								(hadConstructor &&
									this.raise(
										element.start,
										'Duplicate constructor in the same class',
									),
								(hadConstructor = !0)));
					}
					return (
						(this.strict = oldStrict),
						this.next(),
						(node.body = this.finishNode(classBody, 'ClassBody')),
						this.finishNode(
							node,
							isStatement
								? 'ClassDeclaration'
								: 'ClassExpression',
						)
					);
				}),
				(pp$1.parseClassElement = function (constructorAllowsSuper) {
					var this$1 = this;
					if (this.eat(types.semi)) return null;
					var method = this.startNode(),
						tryContextual = function (k, noLineBreak) {
							void 0 === noLineBreak && (noLineBreak = !1);
							var start = this$1.start,
								startLoc = this$1.startLoc;
							return (
								!!this$1.eatContextual(k) &&
								(!(
									this$1.type === types.parenL ||
									(noLineBreak && this$1.canInsertSemicolon())
								) ||
									(method.key && this$1.unexpected(),
									(method.computed = !1),
									(method.key = this$1.startNodeAt(
										start,
										startLoc,
									)),
									(method.key.name = k),
									this$1.finishNode(method.key, 'Identifier'),
									!1))
							);
						};
					(method.kind = 'method'),
						(method.static = tryContextual('static'));
					var isGenerator = this.eat(types.star),
						isAsync = !1;
					isGenerator ||
						(this.options.ecmaVersion >= 8 &&
						tryContextual('async', !0)
							? ((isAsync = !0),
							  (isGenerator =
									this.options.ecmaVersion >= 9 &&
									this.eat(types.star)))
							: tryContextual('get')
							? (method.kind = 'get')
							: tryContextual('set') && (method.kind = 'set')),
						method.key || this.parsePropertyName(method);
					var key = method.key,
						allowsDirectSuper = !1;
					return (
						method.computed ||
						method.static ||
						!(
							('Identifier' === key.type &&
								'constructor' === key.name) ||
							('Literal' === key.type &&
								'constructor' === key.value)
						)
							? method.static &&
							  'Identifier' === key.type &&
							  'prototype' === key.name &&
							  this.raise(
									key.start,
									'Classes may not have a static property named prototype',
							  )
							: ('method' !== method.kind &&
									this.raise(
										key.start,
										"Constructor can't have get/set modifier",
									),
							  isGenerator &&
									this.raise(
										key.start,
										"Constructor can't be a generator",
									),
							  isAsync &&
									this.raise(
										key.start,
										"Constructor can't be an async method",
									),
							  (method.kind = 'constructor'),
							  (allowsDirectSuper = constructorAllowsSuper)),
						this.parseClassMethod(
							method,
							isGenerator,
							isAsync,
							allowsDirectSuper,
						),
						'get' === method.kind &&
							0 !== method.value.params.length &&
							this.raiseRecoverable(
								method.value.start,
								'getter should have no params',
							),
						'set' === method.kind &&
							1 !== method.value.params.length &&
							this.raiseRecoverable(
								method.value.start,
								'setter should have exactly one param',
							),
						'set' === method.kind &&
							'RestElement' === method.value.params[0].type &&
							this.raiseRecoverable(
								method.value.params[0].start,
								'Setter cannot use rest params',
							),
						method
					);
				}),
				(pp$1.parseClassMethod = function (
					method,
					isGenerator,
					isAsync,
					allowsDirectSuper,
				) {
					return (
						(method.value = this.parseMethod(
							isGenerator,
							isAsync,
							allowsDirectSuper,
						)),
						this.finishNode(method, 'MethodDefinition')
					);
				}),
				(pp$1.parseClassId = function (node, isStatement) {
					this.type === types.name
						? ((node.id = this.parseIdent()),
						  isStatement && this.checkLVal(node.id, 2, !1))
						: (!0 === isStatement && this.unexpected(),
						  (node.id = null));
				}),
				(pp$1.parseClassSuper = function (node) {
					node.superClass = this.eat(types._extends)
						? this.parseExprSubscripts()
						: null;
				}),
				(pp$1.parseExport = function (node, exports) {
					if ((this.next(), this.eat(types.star)))
						return (
							this.options.ecmaVersion >= 11 &&
								(this.eatContextual('as')
									? ((node.exported = this.parseIdent(!0)),
									  this.checkExport(
											exports,
											node.exported.name,
											this.lastTokStart,
									  ))
									: (node.exported = null)),
							this.expectContextual('from'),
							this.type !== types.string && this.unexpected(),
							(node.source = this.parseExprAtom()),
							this.semicolon(),
							this.finishNode(node, 'ExportAllDeclaration')
						);
					if (this.eat(types._default)) {
						var isAsync;
						if (
							(this.checkExport(
								exports,
								'default',
								this.lastTokStart,
							),
							this.type === types._function ||
								(isAsync = this.isAsyncFunction()))
						) {
							var fNode = this.startNode();
							this.next(),
								isAsync && this.next(),
								(node.declaration = this.parseFunction(
									fNode,
									4 | FUNC_STATEMENT,
									!1,
									isAsync,
								));
						} else if (this.type === types._class) {
							var cNode = this.startNode();
							node.declaration = this.parseClass(
								cNode,
								'nullableID',
							);
						} else
							(node.declaration = this.parseMaybeAssign()),
								this.semicolon();
						return this.finishNode(
							node,
							'ExportDefaultDeclaration',
						);
					}
					if (this.shouldParseExportStatement())
						(node.declaration = this.parseStatement(null)),
							'VariableDeclaration' === node.declaration.type
								? this.checkVariableExport(
										exports,
										node.declaration.declarations,
								  )
								: this.checkExport(
										exports,
										node.declaration.id.name,
										node.declaration.id.start,
								  ),
							(node.specifiers = []),
							(node.source = null);
					else {
						if (
							((node.declaration = null),
							(node.specifiers =
								this.parseExportSpecifiers(exports)),
							this.eatContextual('from'))
						)
							this.type !== types.string && this.unexpected(),
								(node.source = this.parseExprAtom());
						else {
							for (
								var i = 0, list = node.specifiers;
								i < list.length;
								i += 1
							) {
								var spec = list[i];
								this.checkUnreserved(spec.local),
									this.checkLocalExport(spec.local);
							}
							node.source = null;
						}
						this.semicolon();
					}
					return this.finishNode(node, 'ExportNamedDeclaration');
				}),
				(pp$1.checkExport = function (exports, name, pos) {
					exports &&
						(has(exports, name) &&
							this.raiseRecoverable(
								pos,
								"Duplicate export '" + name + "'",
							),
						(exports[name] = !0));
				}),
				(pp$1.checkPatternExport = function (exports, pat) {
					var type = pat.type;
					if ('Identifier' === type)
						this.checkExport(exports, pat.name, pat.start);
					else if ('ObjectPattern' === type)
						for (
							var i = 0, list = pat.properties;
							i < list.length;
							i += 1
						) {
							var prop = list[i];
							this.checkPatternExport(exports, prop);
						}
					else if ('ArrayPattern' === type)
						for (
							var i$1 = 0, list$1 = pat.elements;
							i$1 < list$1.length;
							i$1 += 1
						) {
							var elt = list$1[i$1];
							elt && this.checkPatternExport(exports, elt);
						}
					else
						'Property' === type
							? this.checkPatternExport(exports, pat.value)
							: 'AssignmentPattern' === type
							? this.checkPatternExport(exports, pat.left)
							: 'RestElement' === type
							? this.checkPatternExport(exports, pat.argument)
							: 'ParenthesizedExpression' === type &&
							  this.checkPatternExport(exports, pat.expression);
				}),
				(pp$1.checkVariableExport = function (exports, decls) {
					if (exports)
						for (var i = 0, list = decls; i < list.length; i += 1) {
							var decl = list[i];
							this.checkPatternExport(exports, decl.id);
						}
				}),
				(pp$1.shouldParseExportStatement = function () {
					return (
						'var' === this.type.keyword ||
						'const' === this.type.keyword ||
						'class' === this.type.keyword ||
						'function' === this.type.keyword ||
						this.isLet() ||
						this.isAsyncFunction()
					);
				}),
				(pp$1.parseExportSpecifiers = function (exports) {
					var nodes = [],
						first = !0;
					for (this.expect(types.braceL); !this.eat(types.braceR); ) {
						if (first) first = !1;
						else if (
							(this.expect(types.comma),
							this.afterTrailingComma(types.braceR))
						)
							break;
						var node = this.startNode();
						(node.local = this.parseIdent(!0)),
							(node.exported = this.eatContextual('as')
								? this.parseIdent(!0)
								: node.local),
							this.checkExport(
								exports,
								node.exported.name,
								node.exported.start,
							),
							nodes.push(
								this.finishNode(node, 'ExportSpecifier'),
							);
					}
					return nodes;
				}),
				(pp$1.parseImport = function (node) {
					return (
						this.next(),
						this.type === types.string
							? ((node.specifiers = empty),
							  (node.source = this.parseExprAtom()))
							: ((node.specifiers = this.parseImportSpecifiers()),
							  this.expectContextual('from'),
							  (node.source =
									this.type === types.string
										? this.parseExprAtom()
										: this.unexpected())),
						this.semicolon(),
						this.finishNode(node, 'ImportDeclaration')
					);
				}),
				(pp$1.parseImportSpecifiers = function () {
					var nodes = [],
						first = !0;
					if (this.type === types.name) {
						var node = this.startNode();
						if (
							((node.local = this.parseIdent()),
							this.checkLVal(node.local, 2),
							nodes.push(
								this.finishNode(node, 'ImportDefaultSpecifier'),
							),
							!this.eat(types.comma))
						)
							return nodes;
					}
					if (this.type === types.star) {
						var node$1 = this.startNode();
						return (
							this.next(),
							this.expectContextual('as'),
							(node$1.local = this.parseIdent()),
							this.checkLVal(node$1.local, 2),
							nodes.push(
								this.finishNode(
									node$1,
									'ImportNamespaceSpecifier',
								),
							),
							nodes
						);
					}
					for (this.expect(types.braceL); !this.eat(types.braceR); ) {
						if (first) first = !1;
						else if (
							(this.expect(types.comma),
							this.afterTrailingComma(types.braceR))
						)
							break;
						var node$2 = this.startNode();
						(node$2.imported = this.parseIdent(!0)),
							this.eatContextual('as')
								? (node$2.local = this.parseIdent())
								: (this.checkUnreserved(node$2.imported),
								  (node$2.local = node$2.imported)),
							this.checkLVal(node$2.local, 2),
							nodes.push(
								this.finishNode(node$2, 'ImportSpecifier'),
							);
					}
					return nodes;
				}),
				(pp$1.adaptDirectivePrologue = function (statements) {
					for (
						var i = 0;
						i < statements.length &&
						this.isDirectiveCandidate(statements[i]);
						++i
					)
						statements[i].directive = statements[
							i
						].expression.raw.slice(1, -1);
				}),
				(pp$1.isDirectiveCandidate = function (statement) {
					return (
						'ExpressionStatement' === statement.type &&
						'Literal' === statement.expression.type &&
						'string' == typeof statement.expression.value &&
						('"' === this.input[statement.start] ||
							"'" === this.input[statement.start])
					);
				});
			var pp$2 = Parser.prototype;
			(pp$2.toAssignable = function (
				node,
				isBinding,
				refDestructuringErrors,
			) {
				if (this.options.ecmaVersion >= 6 && node)
					switch (node.type) {
						case 'Identifier':
							this.inAsync &&
								'await' === node.name &&
								this.raise(
									node.start,
									"Cannot use 'await' as identifier inside an async function",
								);
							break;
						case 'ObjectPattern':
						case 'ArrayPattern':
						case 'RestElement':
							break;
						case 'ObjectExpression':
							(node.type = 'ObjectPattern'),
								refDestructuringErrors &&
									this.checkPatternErrors(
										refDestructuringErrors,
										!0,
									);
							for (
								var i = 0, list = node.properties;
								i < list.length;
								i += 1
							) {
								var prop = list[i];
								this.toAssignable(prop, isBinding),
									'RestElement' !== prop.type ||
										('ArrayPattern' !==
											prop.argument.type &&
											'ObjectPattern' !==
												prop.argument.type) ||
										this.raise(
											prop.argument.start,
											'Unexpected token',
										);
							}
							break;
						case 'Property':
							'init' !== node.kind &&
								this.raise(
									node.key.start,
									"Object pattern can't contain getter or setter",
								),
								this.toAssignable(node.value, isBinding);
							break;
						case 'ArrayExpression':
							(node.type = 'ArrayPattern'),
								refDestructuringErrors &&
									this.checkPatternErrors(
										refDestructuringErrors,
										!0,
									),
								this.toAssignableList(node.elements, isBinding);
							break;
						case 'SpreadElement':
							(node.type = 'RestElement'),
								this.toAssignable(node.argument, isBinding),
								'AssignmentPattern' === node.argument.type &&
									this.raise(
										node.argument.start,
										'Rest elements cannot have a default value',
									);
							break;
						case 'AssignmentExpression':
							'=' !== node.operator &&
								this.raise(
									node.left.end,
									"Only '=' operator can be used for specifying default value.",
								),
								(node.type = 'AssignmentPattern'),
								delete node.operator,
								this.toAssignable(node.left, isBinding);
						case 'AssignmentPattern':
							break;
						case 'ParenthesizedExpression':
							this.toAssignable(
								node.expression,
								isBinding,
								refDestructuringErrors,
							);
							break;
						case 'ChainExpression':
							this.raiseRecoverable(
								node.start,
								'Optional chaining cannot appear in left-hand side',
							);
							break;
						case 'MemberExpression':
							if (!isBinding) break;
						default:
							this.raise(node.start, 'Assigning to rvalue');
					}
				else
					refDestructuringErrors &&
						this.checkPatternErrors(refDestructuringErrors, !0);
				return node;
			}),
				(pp$2.toAssignableList = function (exprList, isBinding) {
					for (var end = exprList.length, i = 0; i < end; i++) {
						var elt = exprList[i];
						elt && this.toAssignable(elt, isBinding);
					}
					if (end) {
						var last = exprList[end - 1];
						6 === this.options.ecmaVersion &&
							isBinding &&
							last &&
							'RestElement' === last.type &&
							'Identifier' !== last.argument.type &&
							this.unexpected(last.argument.start);
					}
					return exprList;
				}),
				(pp$2.parseSpread = function (refDestructuringErrors) {
					var node = this.startNode();
					return (
						this.next(),
						(node.argument = this.parseMaybeAssign(
							!1,
							refDestructuringErrors,
						)),
						this.finishNode(node, 'SpreadElement')
					);
				}),
				(pp$2.parseRestBinding = function () {
					var node = this.startNode();
					return (
						this.next(),
						6 === this.options.ecmaVersion &&
							this.type !== types.name &&
							this.unexpected(),
						(node.argument = this.parseBindingAtom()),
						this.finishNode(node, 'RestElement')
					);
				}),
				(pp$2.parseBindingAtom = function () {
					if (this.options.ecmaVersion >= 6)
						switch (this.type) {
							case types.bracketL:
								var node = this.startNode();
								return (
									this.next(),
									(node.elements = this.parseBindingList(
										types.bracketR,
										!0,
										!0,
									)),
									this.finishNode(node, 'ArrayPattern')
								);
							case types.braceL:
								return this.parseObj(!0);
						}
					return this.parseIdent();
				}),
				(pp$2.parseBindingList = function (
					close,
					allowEmpty,
					allowTrailingComma,
				) {
					for (var elts = [], first = !0; !this.eat(close); )
						if (
							(first ? (first = !1) : this.expect(types.comma),
							allowEmpty && this.type === types.comma)
						)
							elts.push(null);
						else {
							if (
								allowTrailingComma &&
								this.afterTrailingComma(close)
							)
								break;
							if (this.type === types.ellipsis) {
								var rest = this.parseRestBinding();
								this.parseBindingListItem(rest),
									elts.push(rest),
									this.type === types.comma &&
										this.raise(
											this.start,
											'Comma is not permitted after the rest element',
										),
									this.expect(close);
								break;
							}
							var elem = this.parseMaybeDefault(
								this.start,
								this.startLoc,
							);
							this.parseBindingListItem(elem), elts.push(elem);
						}
					return elts;
				}),
				(pp$2.parseBindingListItem = function (param) {
					return param;
				}),
				(pp$2.parseMaybeDefault = function (startPos, startLoc, left) {
					if (
						((left = left || this.parseBindingAtom()),
						this.options.ecmaVersion < 6 || !this.eat(types.eq))
					)
						return left;
					var node = this.startNodeAt(startPos, startLoc);
					return (
						(node.left = left),
						(node.right = this.parseMaybeAssign()),
						this.finishNode(node, 'AssignmentPattern')
					);
				}),
				(pp$2.checkLVal = function (expr, bindingType, checkClashes) {
					switch (
						(void 0 === bindingType && (bindingType = 0), expr.type)
					) {
						case 'Identifier':
							2 === bindingType &&
								'let' === expr.name &&
								this.raiseRecoverable(
									expr.start,
									'let is disallowed as a lexically bound name',
								),
								this.strict &&
									this.reservedWordsStrictBind.test(
										expr.name,
									) &&
									this.raiseRecoverable(
										expr.start,
										(bindingType
											? 'Binding '
											: 'Assigning to ') +
											expr.name +
											' in strict mode',
									),
								checkClashes &&
									(has(checkClashes, expr.name) &&
										this.raiseRecoverable(
											expr.start,
											'Argument name clash',
										),
									(checkClashes[expr.name] = !0)),
								0 !== bindingType &&
									5 !== bindingType &&
									this.declareName(
										expr.name,
										bindingType,
										expr.start,
									);
							break;
						case 'ChainExpression':
							this.raiseRecoverable(
								expr.start,
								'Optional chaining cannot appear in left-hand side',
							);
							break;
						case 'MemberExpression':
							bindingType &&
								this.raiseRecoverable(
									expr.start,
									'Binding member expression',
								);
							break;
						case 'ObjectPattern':
							for (
								var i = 0, list = expr.properties;
								i < list.length;
								i += 1
							) {
								var prop = list[i];
								this.checkLVal(prop, bindingType, checkClashes);
							}
							break;
						case 'Property':
							this.checkLVal(
								expr.value,
								bindingType,
								checkClashes,
							);
							break;
						case 'ArrayPattern':
							for (
								var i$1 = 0, list$1 = expr.elements;
								i$1 < list$1.length;
								i$1 += 1
							) {
								var elem = list$1[i$1];
								elem &&
									this.checkLVal(
										elem,
										bindingType,
										checkClashes,
									);
							}
							break;
						case 'AssignmentPattern':
							this.checkLVal(
								expr.left,
								bindingType,
								checkClashes,
							);
							break;
						case 'RestElement':
							this.checkLVal(
								expr.argument,
								bindingType,
								checkClashes,
							);
							break;
						case 'ParenthesizedExpression':
							this.checkLVal(
								expr.expression,
								bindingType,
								checkClashes,
							);
							break;
						default:
							this.raise(
								expr.start,
								(bindingType ? 'Binding' : 'Assigning to') +
									' rvalue',
							);
					}
				});
			var pp$3 = Parser.prototype;
			(pp$3.checkPropClash = function (
				prop,
				propHash,
				refDestructuringErrors,
			) {
				if (
					!(
						(this.options.ecmaVersion >= 9 &&
							'SpreadElement' === prop.type) ||
						(this.options.ecmaVersion >= 6 &&
							(prop.computed || prop.method || prop.shorthand))
					)
				) {
					var name,
						key = prop.key;
					switch (key.type) {
						case 'Identifier':
							name = key.name;
							break;
						case 'Literal':
							name = String(key.value);
							break;
						default:
							return;
					}
					var kind = prop.kind;
					if (this.options.ecmaVersion >= 6)
						'__proto__' === name &&
							'init' === kind &&
							(propHash.proto &&
								(refDestructuringErrors
									? refDestructuringErrors.doubleProto < 0 &&
									  (refDestructuringErrors.doubleProto =
											key.start)
									: this.raiseRecoverable(
											key.start,
											'Redefinition of __proto__ property',
									  )),
							(propHash.proto = !0));
					else {
						var other = propHash[(name = '$' + name)];
						if (other)
							('init' === kind
								? (this.strict && other.init) ||
								  other.get ||
								  other.set
								: other.init || other[kind]) &&
								this.raiseRecoverable(
									key.start,
									'Redefinition of property',
								);
						else
							other = propHash[name] = {
								init: !1,
								get: !1,
								set: !1,
							};
						other[kind] = !0;
					}
				}
			}),
				(pp$3.parseExpression = function (
					noIn,
					refDestructuringErrors,
				) {
					var startPos = this.start,
						startLoc = this.startLoc,
						expr = this.parseMaybeAssign(
							noIn,
							refDestructuringErrors,
						);
					if (this.type === types.comma) {
						var node = this.startNodeAt(startPos, startLoc);
						for (node.expressions = [expr]; this.eat(types.comma); )
							node.expressions.push(
								this.parseMaybeAssign(
									noIn,
									refDestructuringErrors,
								),
							);
						return this.finishNode(node, 'SequenceExpression');
					}
					return expr;
				}),
				(pp$3.parseMaybeAssign = function (
					noIn,
					refDestructuringErrors,
					afterLeftParse,
				) {
					if (this.isContextual('yield')) {
						if (this.inGenerator) return this.parseYield(noIn);
						this.exprAllowed = !1;
					}
					var ownDestructuringErrors = !1,
						oldParenAssign = -1,
						oldTrailingComma = -1;
					refDestructuringErrors
						? ((oldParenAssign =
								refDestructuringErrors.parenthesizedAssign),
						  (oldTrailingComma =
								refDestructuringErrors.trailingComma),
						  (refDestructuringErrors.parenthesizedAssign =
								refDestructuringErrors.trailingComma =
									-1))
						: ((refDestructuringErrors = new DestructuringErrors()),
						  (ownDestructuringErrors = !0));
					var startPos = this.start,
						startLoc = this.startLoc;
					(this.type !== types.parenL && this.type !== types.name) ||
						(this.potentialArrowAt = this.start);
					var left = this.parseMaybeConditional(
						noIn,
						refDestructuringErrors,
					);
					if (
						(afterLeftParse &&
							(left = afterLeftParse.call(
								this,
								left,
								startPos,
								startLoc,
							)),
						this.type.isAssign)
					) {
						var node = this.startNodeAt(startPos, startLoc);
						return (
							(node.operator = this.value),
							(node.left =
								this.type === types.eq
									? this.toAssignable(
											left,
											!1,
											refDestructuringErrors,
									  )
									: left),
							ownDestructuringErrors ||
								(refDestructuringErrors.parenthesizedAssign =
									refDestructuringErrors.trailingComma =
									refDestructuringErrors.doubleProto =
										-1),
							refDestructuringErrors.shorthandAssign >=
								node.left.start &&
								(refDestructuringErrors.shorthandAssign = -1),
							this.checkLVal(left),
							this.next(),
							(node.right = this.parseMaybeAssign(noIn)),
							this.finishNode(node, 'AssignmentExpression')
						);
					}
					return (
						ownDestructuringErrors &&
							this.checkExpressionErrors(
								refDestructuringErrors,
								!0,
							),
						oldParenAssign > -1 &&
							(refDestructuringErrors.parenthesizedAssign =
								oldParenAssign),
						oldTrailingComma > -1 &&
							(refDestructuringErrors.trailingComma =
								oldTrailingComma),
						left
					);
				}),
				(pp$3.parseMaybeConditional = function (
					noIn,
					refDestructuringErrors,
				) {
					var startPos = this.start,
						startLoc = this.startLoc,
						expr = this.parseExprOps(noIn, refDestructuringErrors);
					if (this.checkExpressionErrors(refDestructuringErrors))
						return expr;
					if (this.eat(types.question)) {
						var node = this.startNodeAt(startPos, startLoc);
						return (
							(node.test = expr),
							(node.consequent = this.parseMaybeAssign()),
							this.expect(types.colon),
							(node.alternate = this.parseMaybeAssign(noIn)),
							this.finishNode(node, 'ConditionalExpression')
						);
					}
					return expr;
				}),
				(pp$3.parseExprOps = function (noIn, refDestructuringErrors) {
					var startPos = this.start,
						startLoc = this.startLoc,
						expr = this.parseMaybeUnary(refDestructuringErrors, !1);
					return this.checkExpressionErrors(refDestructuringErrors) ||
						(expr.start === startPos &&
							'ArrowFunctionExpression' === expr.type)
						? expr
						: this.parseExprOp(expr, startPos, startLoc, -1, noIn);
				}),
				(pp$3.parseExprOp = function (
					left,
					leftStartPos,
					leftStartLoc,
					minPrec,
					noIn,
				) {
					var prec = this.type.binop;
					if (
						null != prec &&
						(!noIn || this.type !== types._in) &&
						prec > minPrec
					) {
						var logical =
								this.type === types.logicalOR ||
								this.type === types.logicalAND,
							coalesce = this.type === types.coalesce;
						coalesce && (prec = types.logicalAND.binop);
						var op = this.value;
						this.next();
						var startPos = this.start,
							startLoc = this.startLoc,
							right = this.parseExprOp(
								this.parseMaybeUnary(null, !1),
								startPos,
								startLoc,
								prec,
								noIn,
							),
							node = this.buildBinary(
								leftStartPos,
								leftStartLoc,
								left,
								right,
								op,
								logical || coalesce,
							);
						return (
							((logical && this.type === types.coalesce) ||
								(coalesce &&
									(this.type === types.logicalOR ||
										this.type === types.logicalAND))) &&
								this.raiseRecoverable(
									this.start,
									'Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses',
								),
							this.parseExprOp(
								node,
								leftStartPos,
								leftStartLoc,
								minPrec,
								noIn,
							)
						);
					}
					return left;
				}),
				(pp$3.buildBinary = function (
					startPos,
					startLoc,
					left,
					right,
					op,
					logical,
				) {
					var node = this.startNodeAt(startPos, startLoc);
					return (
						(node.left = left),
						(node.operator = op),
						(node.right = right),
						this.finishNode(
							node,
							logical ? 'LogicalExpression' : 'BinaryExpression',
						)
					);
				}),
				(pp$3.parseMaybeUnary = function (
					refDestructuringErrors,
					sawUnary,
				) {
					var expr,
						startPos = this.start,
						startLoc = this.startLoc;
					if (
						this.isContextual('await') &&
						(this.inAsync ||
							(!this.inFunction &&
								this.options.allowAwaitOutsideFunction))
					)
						(expr = this.parseAwait()), (sawUnary = !0);
					else if (this.type.prefix) {
						var node = this.startNode(),
							update = this.type === types.incDec;
						(node.operator = this.value),
							(node.prefix = !0),
							this.next(),
							(node.argument = this.parseMaybeUnary(null, !0)),
							this.checkExpressionErrors(
								refDestructuringErrors,
								!0,
							),
							update
								? this.checkLVal(node.argument)
								: this.strict &&
								  'delete' === node.operator &&
								  'Identifier' === node.argument.type
								? this.raiseRecoverable(
										node.start,
										'Deleting local variable in strict mode',
								  )
								: (sawUnary = !0),
							(expr = this.finishNode(
								node,
								update ? 'UpdateExpression' : 'UnaryExpression',
							));
					} else {
						if (
							((expr = this.parseExprSubscripts(
								refDestructuringErrors,
							)),
							this.checkExpressionErrors(refDestructuringErrors))
						)
							return expr;
						for (
							;
							this.type.postfix && !this.canInsertSemicolon();

						) {
							var node$1 = this.startNodeAt(startPos, startLoc);
							(node$1.operator = this.value),
								(node$1.prefix = !1),
								(node$1.argument = expr),
								this.checkLVal(expr),
								this.next(),
								(expr = this.finishNode(
									node$1,
									'UpdateExpression',
								));
						}
					}
					return !sawUnary && this.eat(types.starstar)
						? this.buildBinary(
								startPos,
								startLoc,
								expr,
								this.parseMaybeUnary(null, !1),
								'**',
								!1,
						  )
						: expr;
				}),
				(pp$3.parseExprSubscripts = function (refDestructuringErrors) {
					var startPos = this.start,
						startLoc = this.startLoc,
						expr = this.parseExprAtom(refDestructuringErrors);
					if (
						'ArrowFunctionExpression' === expr.type &&
						')' !==
							this.input.slice(this.lastTokStart, this.lastTokEnd)
					)
						return expr;
					var result = this.parseSubscripts(expr, startPos, startLoc);
					return (
						refDestructuringErrors &&
							'MemberExpression' === result.type &&
							(refDestructuringErrors.parenthesizedAssign >=
								result.start &&
								(refDestructuringErrors.parenthesizedAssign =
									-1),
							refDestructuringErrors.parenthesizedBind >=
								result.start &&
								(refDestructuringErrors.parenthesizedBind =
									-1)),
						result
					);
				}),
				(pp$3.parseSubscripts = function (
					base,
					startPos,
					startLoc,
					noCalls,
				) {
					for (
						var maybeAsyncArrow =
								this.options.ecmaVersion >= 8 &&
								'Identifier' === base.type &&
								'async' === base.name &&
								this.lastTokEnd === base.end &&
								!this.canInsertSemicolon() &&
								base.end - base.start == 5 &&
								this.potentialArrowAt === base.start,
							optionalChained = !1;
						;

					) {
						var element = this.parseSubscript(
							base,
							startPos,
							startLoc,
							noCalls,
							maybeAsyncArrow,
							optionalChained,
						);
						if (
							(element.optional && (optionalChained = !0),
							element === base ||
								'ArrowFunctionExpression' === element.type)
						) {
							if (optionalChained) {
								var chainNode = this.startNodeAt(
									startPos,
									startLoc,
								);
								(chainNode.expression = element),
									(element = this.finishNode(
										chainNode,
										'ChainExpression',
									));
							}
							return element;
						}
						base = element;
					}
				}),
				(pp$3.parseSubscript = function (
					base,
					startPos,
					startLoc,
					noCalls,
					maybeAsyncArrow,
					optionalChained,
				) {
					var optionalSupported = this.options.ecmaVersion >= 11,
						optional =
							optionalSupported && this.eat(types.questionDot);
					noCalls &&
						optional &&
						this.raise(
							this.lastTokStart,
							'Optional chaining cannot appear in the callee of new expressions',
						);
					var computed = this.eat(types.bracketL);
					if (
						computed ||
						(optional &&
							this.type !== types.parenL &&
							this.type !== types.backQuote) ||
						this.eat(types.dot)
					) {
						var node = this.startNodeAt(startPos, startLoc);
						(node.object = base),
							(node.property = computed
								? this.parseExpression()
								: this.parseIdent(
										'never' !== this.options.allowReserved,
								  )),
							(node.computed = !!computed),
							computed && this.expect(types.bracketR),
							optionalSupported && (node.optional = optional),
							(base = this.finishNode(node, 'MemberExpression'));
					} else if (!noCalls && this.eat(types.parenL)) {
						var refDestructuringErrors = new DestructuringErrors(),
							oldYieldPos = this.yieldPos,
							oldAwaitPos = this.awaitPos,
							oldAwaitIdentPos = this.awaitIdentPos;
						(this.yieldPos = 0),
							(this.awaitPos = 0),
							(this.awaitIdentPos = 0);
						var exprList = this.parseExprList(
							types.parenR,
							this.options.ecmaVersion >= 8,
							!1,
							refDestructuringErrors,
						);
						if (
							maybeAsyncArrow &&
							!optional &&
							!this.canInsertSemicolon() &&
							this.eat(types.arrow)
						)
							return (
								this.checkPatternErrors(
									refDestructuringErrors,
									!1,
								),
								this.checkYieldAwaitInDefaultParams(),
								this.awaitIdentPos > 0 &&
									this.raise(
										this.awaitIdentPos,
										"Cannot use 'await' as identifier inside an async function",
									),
								(this.yieldPos = oldYieldPos),
								(this.awaitPos = oldAwaitPos),
								(this.awaitIdentPos = oldAwaitIdentPos),
								this.parseArrowExpression(
									this.startNodeAt(startPos, startLoc),
									exprList,
									!0,
								)
							);
						this.checkExpressionErrors(refDestructuringErrors, !0),
							(this.yieldPos = oldYieldPos || this.yieldPos),
							(this.awaitPos = oldAwaitPos || this.awaitPos),
							(this.awaitIdentPos =
								oldAwaitIdentPos || this.awaitIdentPos);
						var node$1 = this.startNodeAt(startPos, startLoc);
						(node$1.callee = base),
							(node$1.arguments = exprList),
							optionalSupported && (node$1.optional = optional),
							(base = this.finishNode(node$1, 'CallExpression'));
					} else if (this.type === types.backQuote) {
						(optional || optionalChained) &&
							this.raise(
								this.start,
								'Optional chaining cannot appear in the tag of tagged template expressions',
							);
						var node$2 = this.startNodeAt(startPos, startLoc);
						(node$2.tag = base),
							(node$2.quasi = this.parseTemplate({
								isTagged: !0,
							})),
							(base = this.finishNode(
								node$2,
								'TaggedTemplateExpression',
							));
					}
					return base;
				}),
				(pp$3.parseExprAtom = function (refDestructuringErrors) {
					this.type === types.slash && this.readRegexp();
					var node,
						canBeArrow = this.potentialArrowAt === this.start;
					switch (this.type) {
						case types._super:
							return (
								this.allowSuper ||
									this.raise(
										this.start,
										"'super' keyword outside a method",
									),
								(node = this.startNode()),
								this.next(),
								this.type !== types.parenL ||
									this.allowDirectSuper ||
									this.raise(
										node.start,
										'super() call outside constructor of a subclass',
									),
								this.type !== types.dot &&
									this.type !== types.bracketL &&
									this.type !== types.parenL &&
									this.unexpected(),
								this.finishNode(node, 'Super')
							);
						case types._this:
							return (
								(node = this.startNode()),
								this.next(),
								this.finishNode(node, 'ThisExpression')
							);
						case types.name:
							var startPos = this.start,
								startLoc = this.startLoc,
								containsEsc = this.containsEsc,
								id = this.parseIdent(!1);
							if (
								this.options.ecmaVersion >= 8 &&
								!containsEsc &&
								'async' === id.name &&
								!this.canInsertSemicolon() &&
								this.eat(types._function)
							)
								return this.parseFunction(
									this.startNodeAt(startPos, startLoc),
									0,
									!1,
									!0,
								);
							if (canBeArrow && !this.canInsertSemicolon()) {
								if (this.eat(types.arrow))
									return this.parseArrowExpression(
										this.startNodeAt(startPos, startLoc),
										[id],
										!1,
									);
								if (
									this.options.ecmaVersion >= 8 &&
									'async' === id.name &&
									this.type === types.name &&
									!containsEsc
								)
									return (
										(id = this.parseIdent(!1)),
										(!this.canInsertSemicolon() &&
											this.eat(types.arrow)) ||
											this.unexpected(),
										this.parseArrowExpression(
											this.startNodeAt(
												startPos,
												startLoc,
											),
											[id],
											!0,
										)
									);
							}
							return id;
						case types.regexp:
							var value = this.value;
							return (
								((node = this.parseLiteral(value.value)).regex =
									{
										pattern: value.pattern,
										flags: value.flags,
									}),
								node
							);
						case types.num:
						case types.string:
							return this.parseLiteral(this.value);
						case types._null:
						case types._true:
						case types._false:
							return (
								((node = this.startNode()).value =
									this.type === types._null
										? null
										: this.type === types._true),
								(node.raw = this.type.keyword),
								this.next(),
								this.finishNode(node, 'Literal')
							);
						case types.parenL:
							var start = this.start,
								expr =
									this.parseParenAndDistinguishExpression(
										canBeArrow,
									);
							return (
								refDestructuringErrors &&
									(refDestructuringErrors.parenthesizedAssign <
										0 &&
										!this.isSimpleAssignTarget(expr) &&
										(refDestructuringErrors.parenthesizedAssign =
											start),
									refDestructuringErrors.parenthesizedBind <
										0 &&
										(refDestructuringErrors.parenthesizedBind =
											start)),
								expr
							);
						case types.bracketL:
							return (
								(node = this.startNode()),
								this.next(),
								(node.elements = this.parseExprList(
									types.bracketR,
									!0,
									!0,
									refDestructuringErrors,
								)),
								this.finishNode(node, 'ArrayExpression')
							);
						case types.braceL:
							return this.parseObj(!1, refDestructuringErrors);
						case types._function:
							return (
								(node = this.startNode()),
								this.next(),
								this.parseFunction(node, 0)
							);
						case types._class:
							return this.parseClass(this.startNode(), !1);
						case types._new:
							return this.parseNew();
						case types.backQuote:
							return this.parseTemplate();
						case types._import:
							return this.options.ecmaVersion >= 11
								? this.parseExprImport()
								: this.unexpected();
						default:
							this.unexpected();
					}
				}),
				(pp$3.parseExprImport = function () {
					var node = this.startNode();
					this.containsEsc &&
						this.raiseRecoverable(
							this.start,
							'Escape sequence in keyword import',
						);
					var meta = this.parseIdent(!0);
					switch (this.type) {
						case types.parenL:
							return this.parseDynamicImport(node);
						case types.dot:
							return (
								(node.meta = meta), this.parseImportMeta(node)
							);
						default:
							this.unexpected();
					}
				}),
				(pp$3.parseDynamicImport = function (node) {
					if (
						(this.next(),
						(node.source = this.parseMaybeAssign()),
						!this.eat(types.parenR))
					) {
						var errorPos = this.start;
						this.eat(types.comma) && this.eat(types.parenR)
							? this.raiseRecoverable(
									errorPos,
									'Trailing comma is not allowed in import()',
							  )
							: this.unexpected(errorPos);
					}
					return this.finishNode(node, 'ImportExpression');
				}),
				(pp$3.parseImportMeta = function (node) {
					this.next();
					var containsEsc = this.containsEsc;
					return (
						(node.property = this.parseIdent(!0)),
						'meta' !== node.property.name &&
							this.raiseRecoverable(
								node.property.start,
								"The only valid meta property for import is 'import.meta'",
							),
						containsEsc &&
							this.raiseRecoverable(
								node.start,
								"'import.meta' must not contain escaped characters",
							),
						'module' !== this.options.sourceType &&
							this.raiseRecoverable(
								node.start,
								"Cannot use 'import.meta' outside a module",
							),
						this.finishNode(node, 'MetaProperty')
					);
				}),
				(pp$3.parseLiteral = function (value) {
					var node = this.startNode();
					return (
						(node.value = value),
						(node.raw = this.input.slice(this.start, this.end)),
						110 === node.raw.charCodeAt(node.raw.length - 1) &&
							(node.bigint = node.raw
								.slice(0, -1)
								.replace(/_/g, '')),
						this.next(),
						this.finishNode(node, 'Literal')
					);
				}),
				(pp$3.parseParenExpression = function () {
					this.expect(types.parenL);
					var val = this.parseExpression();
					return this.expect(types.parenR), val;
				}),
				(pp$3.parseParenAndDistinguishExpression = function (
					canBeArrow,
				) {
					var val,
						startPos = this.start,
						startLoc = this.startLoc,
						allowTrailingComma = this.options.ecmaVersion >= 8;
					if (this.options.ecmaVersion >= 6) {
						this.next();
						var spreadStart,
							innerStartPos = this.start,
							innerStartLoc = this.startLoc,
							exprList = [],
							first = !0,
							lastIsComma = !1,
							refDestructuringErrors = new DestructuringErrors(),
							oldYieldPos = this.yieldPos,
							oldAwaitPos = this.awaitPos;
						for (
							this.yieldPos = 0, this.awaitPos = 0;
							this.type !== types.parenR;

						) {
							if (
								(first
									? (first = !1)
									: this.expect(types.comma),
								allowTrailingComma &&
									this.afterTrailingComma(types.parenR, !0))
							) {
								lastIsComma = !0;
								break;
							}
							if (this.type === types.ellipsis) {
								(spreadStart = this.start),
									exprList.push(
										this.parseParenItem(
											this.parseRestBinding(),
										),
									),
									this.type === types.comma &&
										this.raise(
											this.start,
											'Comma is not permitted after the rest element',
										);
								break;
							}
							exprList.push(
								this.parseMaybeAssign(
									!1,
									refDestructuringErrors,
									this.parseParenItem,
								),
							);
						}
						var innerEndPos = this.start,
							innerEndLoc = this.startLoc;
						if (
							(this.expect(types.parenR),
							canBeArrow &&
								!this.canInsertSemicolon() &&
								this.eat(types.arrow))
						)
							return (
								this.checkPatternErrors(
									refDestructuringErrors,
									!1,
								),
								this.checkYieldAwaitInDefaultParams(),
								(this.yieldPos = oldYieldPos),
								(this.awaitPos = oldAwaitPos),
								this.parseParenArrowList(
									startPos,
									startLoc,
									exprList,
								)
							);
						(exprList.length && !lastIsComma) ||
							this.unexpected(this.lastTokStart),
							spreadStart && this.unexpected(spreadStart),
							this.checkExpressionErrors(
								refDestructuringErrors,
								!0,
							),
							(this.yieldPos = oldYieldPos || this.yieldPos),
							(this.awaitPos = oldAwaitPos || this.awaitPos),
							exprList.length > 1
								? (((val = this.startNodeAt(
										innerStartPos,
										innerStartLoc,
								  )).expressions = exprList),
								  this.finishNodeAt(
										val,
										'SequenceExpression',
										innerEndPos,
										innerEndLoc,
								  ))
								: (val = exprList[0]);
					} else val = this.parseParenExpression();
					if (this.options.preserveParens) {
						var par = this.startNodeAt(startPos, startLoc);
						return (
							(par.expression = val),
							this.finishNode(par, 'ParenthesizedExpression')
						);
					}
					return val;
				}),
				(pp$3.parseParenItem = function (item) {
					return item;
				}),
				(pp$3.parseParenArrowList = function (
					startPos,
					startLoc,
					exprList,
				) {
					return this.parseArrowExpression(
						this.startNodeAt(startPos, startLoc),
						exprList,
					);
				});
			var empty$1 = [];
			(pp$3.parseNew = function () {
				this.containsEsc &&
					this.raiseRecoverable(
						this.start,
						'Escape sequence in keyword new',
					);
				var node = this.startNode(),
					meta = this.parseIdent(!0);
				if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {
					node.meta = meta;
					var containsEsc = this.containsEsc;
					return (
						(node.property = this.parseIdent(!0)),
						'target' !== node.property.name &&
							this.raiseRecoverable(
								node.property.start,
								"The only valid meta property for new is 'new.target'",
							),
						containsEsc &&
							this.raiseRecoverable(
								node.start,
								"'new.target' must not contain escaped characters",
							),
						this.inNonArrowFunction() ||
							this.raiseRecoverable(
								node.start,
								"'new.target' can only be used in functions",
							),
						this.finishNode(node, 'MetaProperty')
					);
				}
				var startPos = this.start,
					startLoc = this.startLoc,
					isImport = this.type === types._import;
				return (
					(node.callee = this.parseSubscripts(
						this.parseExprAtom(),
						startPos,
						startLoc,
						!0,
					)),
					isImport &&
						'ImportExpression' === node.callee.type &&
						this.raise(startPos, 'Cannot use new with import()'),
					this.eat(types.parenL)
						? (node.arguments = this.parseExprList(
								types.parenR,
								this.options.ecmaVersion >= 8,
								!1,
						  ))
						: (node.arguments = empty$1),
					this.finishNode(node, 'NewExpression')
				);
			}),
				(pp$3.parseTemplateElement = function (ref) {
					var isTagged = ref.isTagged,
						elem = this.startNode();
					return (
						this.type === types.invalidTemplate
							? (isTagged ||
									this.raiseRecoverable(
										this.start,
										'Bad escape sequence in untagged template literal',
									),
							  (elem.value = { raw: this.value, cooked: null }))
							: (elem.value = {
									raw: this.input
										.slice(this.start, this.end)
										.replace(/\r\n?/g, '\n'),
									cooked: this.value,
							  }),
						this.next(),
						(elem.tail = this.type === types.backQuote),
						this.finishNode(elem, 'TemplateElement')
					);
				}),
				(pp$3.parseTemplate = function (ref) {
					void 0 === ref && (ref = {});
					var isTagged = ref.isTagged;
					void 0 === isTagged && (isTagged = !1);
					var node = this.startNode();
					this.next(), (node.expressions = []);
					var curElt = this.parseTemplateElement({ isTagged });
					for (node.quasis = [curElt]; !curElt.tail; )
						this.type === types.eof &&
							this.raise(
								this.pos,
								'Unterminated template literal',
							),
							this.expect(types.dollarBraceL),
							node.expressions.push(this.parseExpression()),
							this.expect(types.braceR),
							node.quasis.push(
								(curElt = this.parseTemplateElement({
									isTagged,
								})),
							);
					return (
						this.next(), this.finishNode(node, 'TemplateLiteral')
					);
				}),
				(pp$3.isAsyncProp = function (prop) {
					return (
						!prop.computed &&
						'Identifier' === prop.key.type &&
						'async' === prop.key.name &&
						(this.type === types.name ||
							this.type === types.num ||
							this.type === types.string ||
							this.type === types.bracketL ||
							this.type.keyword ||
							(this.options.ecmaVersion >= 9 &&
								this.type === types.star)) &&
						!lineBreak.test(
							this.input.slice(this.lastTokEnd, this.start),
						)
					);
				}),
				(pp$3.parseObj = function (isPattern, refDestructuringErrors) {
					var node = this.startNode(),
						first = !0,
						propHash = {};
					for (
						node.properties = [], this.next();
						!this.eat(types.braceR);

					) {
						if (first) first = !1;
						else if (
							(this.expect(types.comma),
							this.options.ecmaVersion >= 5 &&
								this.afterTrailingComma(types.braceR))
						)
							break;
						var prop = this.parseProperty(
							isPattern,
							refDestructuringErrors,
						);
						isPattern ||
							this.checkPropClash(
								prop,
								propHash,
								refDestructuringErrors,
							),
							node.properties.push(prop);
					}
					return this.finishNode(
						node,
						isPattern ? 'ObjectPattern' : 'ObjectExpression',
					);
				}),
				(pp$3.parseProperty = function (
					isPattern,
					refDestructuringErrors,
				) {
					var isGenerator,
						isAsync,
						startPos,
						startLoc,
						prop = this.startNode();
					if (
						this.options.ecmaVersion >= 9 &&
						this.eat(types.ellipsis)
					)
						return isPattern
							? ((prop.argument = this.parseIdent(!1)),
							  this.type === types.comma &&
									this.raise(
										this.start,
										'Comma is not permitted after the rest element',
									),
							  this.finishNode(prop, 'RestElement'))
							: (this.type === types.parenL &&
									refDestructuringErrors &&
									(refDestructuringErrors.parenthesizedAssign <
										0 &&
										(refDestructuringErrors.parenthesizedAssign =
											this.start),
									refDestructuringErrors.parenthesizedBind <
										0 &&
										(refDestructuringErrors.parenthesizedBind =
											this.start)),
							  (prop.argument = this.parseMaybeAssign(
									!1,
									refDestructuringErrors,
							  )),
							  this.type === types.comma &&
									refDestructuringErrors &&
									refDestructuringErrors.trailingComma < 0 &&
									(refDestructuringErrors.trailingComma =
										this.start),
							  this.finishNode(prop, 'SpreadElement'));
					this.options.ecmaVersion >= 6 &&
						((prop.method = !1),
						(prop.shorthand = !1),
						(isPattern || refDestructuringErrors) &&
							((startPos = this.start),
							(startLoc = this.startLoc)),
						isPattern || (isGenerator = this.eat(types.star)));
					var containsEsc = this.containsEsc;
					return (
						this.parsePropertyName(prop),
						!isPattern &&
						!containsEsc &&
						this.options.ecmaVersion >= 8 &&
						!isGenerator &&
						this.isAsyncProp(prop)
							? ((isAsync = !0),
							  (isGenerator =
									this.options.ecmaVersion >= 9 &&
									this.eat(types.star)),
							  this.parsePropertyName(
									prop,
									refDestructuringErrors,
							  ))
							: (isAsync = !1),
						this.parsePropertyValue(
							prop,
							isPattern,
							isGenerator,
							isAsync,
							startPos,
							startLoc,
							refDestructuringErrors,
							containsEsc,
						),
						this.finishNode(prop, 'Property')
					);
				}),
				(pp$3.parsePropertyValue = function (
					prop,
					isPattern,
					isGenerator,
					isAsync,
					startPos,
					startLoc,
					refDestructuringErrors,
					containsEsc,
				) {
					if (
						((isGenerator || isAsync) &&
							this.type === types.colon &&
							this.unexpected(),
						this.eat(types.colon))
					)
						(prop.value = isPattern
							? this.parseMaybeDefault(this.start, this.startLoc)
							: this.parseMaybeAssign(
									!1,
									refDestructuringErrors,
							  )),
							(prop.kind = 'init');
					else if (
						this.options.ecmaVersion >= 6 &&
						this.type === types.parenL
					)
						isPattern && this.unexpected(),
							(prop.kind = 'init'),
							(prop.method = !0),
							(prop.value = this.parseMethod(
								isGenerator,
								isAsync,
							));
					else if (
						isPattern ||
						containsEsc ||
						!(this.options.ecmaVersion >= 5) ||
						prop.computed ||
						'Identifier' !== prop.key.type ||
						('get' !== prop.key.name && 'set' !== prop.key.name) ||
						this.type === types.comma ||
						this.type === types.braceR ||
						this.type === types.eq
					)
						this.options.ecmaVersion >= 6 &&
						!prop.computed &&
						'Identifier' === prop.key.type
							? ((isGenerator || isAsync) && this.unexpected(),
							  this.checkUnreserved(prop.key),
							  'await' !== prop.key.name ||
									this.awaitIdentPos ||
									(this.awaitIdentPos = startPos),
							  (prop.kind = 'init'),
							  isPattern
									? (prop.value = this.parseMaybeDefault(
											startPos,
											startLoc,
											prop.key,
									  ))
									: this.type === types.eq &&
									  refDestructuringErrors
									? (refDestructuringErrors.shorthandAssign <
											0 &&
											(refDestructuringErrors.shorthandAssign =
												this.start),
									  (prop.value = this.parseMaybeDefault(
											startPos,
											startLoc,
											prop.key,
									  )))
									: (prop.value = prop.key),
							  (prop.shorthand = !0))
							: this.unexpected();
					else {
						(isGenerator || isAsync) && this.unexpected(),
							(prop.kind = prop.key.name),
							this.parsePropertyName(prop),
							(prop.value = this.parseMethod(!1));
						var paramCount = 'get' === prop.kind ? 0 : 1;
						if (prop.value.params.length !== paramCount) {
							var start = prop.value.start;
							'get' === prop.kind
								? this.raiseRecoverable(
										start,
										'getter should have no params',
								  )
								: this.raiseRecoverable(
										start,
										'setter should have exactly one param',
								  );
						} else
							'set' === prop.kind &&
								'RestElement' === prop.value.params[0].type &&
								this.raiseRecoverable(
									prop.value.params[0].start,
									'Setter cannot use rest params',
								);
					}
				}),
				(pp$3.parsePropertyName = function (prop) {
					if (this.options.ecmaVersion >= 6) {
						if (this.eat(types.bracketL))
							return (
								(prop.computed = !0),
								(prop.key = this.parseMaybeAssign()),
								this.expect(types.bracketR),
								prop.key
							);
						prop.computed = !1;
					}
					return (prop.key =
						this.type === types.num || this.type === types.string
							? this.parseExprAtom()
							: this.parseIdent(
									'never' !== this.options.allowReserved,
							  ));
				}),
				(pp$3.initFunction = function (node) {
					(node.id = null),
						this.options.ecmaVersion >= 6 &&
							(node.generator = node.expression = !1),
						this.options.ecmaVersion >= 8 && (node.async = !1);
				}),
				(pp$3.parseMethod = function (
					isGenerator,
					isAsync,
					allowDirectSuper,
				) {
					var node = this.startNode(),
						oldYieldPos = this.yieldPos,
						oldAwaitPos = this.awaitPos,
						oldAwaitIdentPos = this.awaitIdentPos;
					return (
						this.initFunction(node),
						this.options.ecmaVersion >= 6 &&
							(node.generator = isGenerator),
						this.options.ecmaVersion >= 8 &&
							(node.async = !!isAsync),
						(this.yieldPos = 0),
						(this.awaitPos = 0),
						(this.awaitIdentPos = 0),
						this.enterScope(
							64 |
								functionFlags(isAsync, node.generator) |
								(allowDirectSuper ? 128 : 0),
						),
						this.expect(types.parenL),
						(node.params = this.parseBindingList(
							types.parenR,
							!1,
							this.options.ecmaVersion >= 8,
						)),
						this.checkYieldAwaitInDefaultParams(),
						this.parseFunctionBody(node, !1, !0),
						(this.yieldPos = oldYieldPos),
						(this.awaitPos = oldAwaitPos),
						(this.awaitIdentPos = oldAwaitIdentPos),
						this.finishNode(node, 'FunctionExpression')
					);
				}),
				(pp$3.parseArrowExpression = function (node, params, isAsync) {
					var oldYieldPos = this.yieldPos,
						oldAwaitPos = this.awaitPos,
						oldAwaitIdentPos = this.awaitIdentPos;
					return (
						this.enterScope(16 | functionFlags(isAsync, !1)),
						this.initFunction(node),
						this.options.ecmaVersion >= 8 &&
							(node.async = !!isAsync),
						(this.yieldPos = 0),
						(this.awaitPos = 0),
						(this.awaitIdentPos = 0),
						(node.params = this.toAssignableList(params, !0)),
						this.parseFunctionBody(node, !0, !1),
						(this.yieldPos = oldYieldPos),
						(this.awaitPos = oldAwaitPos),
						(this.awaitIdentPos = oldAwaitIdentPos),
						this.finishNode(node, 'ArrowFunctionExpression')
					);
				}),
				(pp$3.parseFunctionBody = function (
					node,
					isArrowFunction,
					isMethod,
				) {
					var isExpression =
							isArrowFunction && this.type !== types.braceL,
						oldStrict = this.strict,
						useStrict = !1;
					if (isExpression)
						(node.body = this.parseMaybeAssign()),
							(node.expression = !0),
							this.checkParams(node, !1);
					else {
						var nonSimple =
							this.options.ecmaVersion >= 7 &&
							!this.isSimpleParamList(node.params);
						(oldStrict && !nonSimple) ||
							((useStrict = this.strictDirective(this.end)) &&
								nonSimple &&
								this.raiseRecoverable(
									node.start,
									"Illegal 'use strict' directive in function with non-simple parameter list",
								));
						var oldLabels = this.labels;
						(this.labels = []),
							useStrict && (this.strict = !0),
							this.checkParams(
								node,
								!oldStrict &&
									!useStrict &&
									!isArrowFunction &&
									!isMethod &&
									this.isSimpleParamList(node.params),
							),
							this.strict &&
								node.id &&
								this.checkLVal(node.id, 5),
							(node.body = this.parseBlock(
								!1,
								void 0,
								useStrict && !oldStrict,
							)),
							(node.expression = !1),
							this.adaptDirectivePrologue(node.body.body),
							(this.labels = oldLabels);
					}
					this.exitScope();
				}),
				(pp$3.isSimpleParamList = function (params) {
					for (var i = 0, list = params; i < list.length; i += 1) {
						if ('Identifier' !== list[i].type) return !1;
					}
					return !0;
				}),
				(pp$3.checkParams = function (node, allowDuplicates) {
					for (
						var nameHash = {}, i = 0, list = node.params;
						i < list.length;
						i += 1
					) {
						var param = list[i];
						this.checkLVal(
							param,
							1,
							allowDuplicates ? null : nameHash,
						);
					}
				}),
				(pp$3.parseExprList = function (
					close,
					allowTrailingComma,
					allowEmpty,
					refDestructuringErrors,
				) {
					for (var elts = [], first = !0; !this.eat(close); ) {
						if (first) first = !1;
						else if (
							(this.expect(types.comma),
							allowTrailingComma &&
								this.afterTrailingComma(close))
						)
							break;
						var elt = void 0;
						allowEmpty && this.type === types.comma
							? (elt = null)
							: this.type === types.ellipsis
							? ((elt = this.parseSpread(refDestructuringErrors)),
							  refDestructuringErrors &&
									this.type === types.comma &&
									refDestructuringErrors.trailingComma < 0 &&
									(refDestructuringErrors.trailingComma =
										this.start))
							: (elt = this.parseMaybeAssign(
									!1,
									refDestructuringErrors,
							  )),
							elts.push(elt);
					}
					return elts;
				}),
				(pp$3.checkUnreserved = function (ref) {
					var start = ref.start,
						end = ref.end,
						name = ref.name;
					(this.inGenerator &&
						'yield' === name &&
						this.raiseRecoverable(
							start,
							"Cannot use 'yield' as identifier inside a generator",
						),
					this.inAsync &&
						'await' === name &&
						this.raiseRecoverable(
							start,
							"Cannot use 'await' as identifier inside an async function",
						),
					this.keywords.test(name) &&
						this.raise(start, "Unexpected keyword '" + name + "'"),
					this.options.ecmaVersion < 6 &&
						-1 !== this.input.slice(start, end).indexOf('\\')) ||
						((this.strict
							? this.reservedWordsStrict
							: this.reservedWords
						).test(name) &&
							(this.inAsync ||
								'await' !== name ||
								this.raiseRecoverable(
									start,
									"Cannot use keyword 'await' outside an async function",
								),
							this.raiseRecoverable(
								start,
								"The keyword '" + name + "' is reserved",
							)));
				}),
				(pp$3.parseIdent = function (liberal, isBinding) {
					var node = this.startNode();
					return (
						this.type === types.name
							? (node.name = this.value)
							: this.type.keyword
							? ((node.name = this.type.keyword),
							  ('class' !== node.name &&
									'function' !== node.name) ||
									(this.lastTokEnd ===
										this.lastTokStart + 1 &&
										46 ===
											this.input.charCodeAt(
												this.lastTokStart,
											)) ||
									this.context.pop())
							: this.unexpected(),
						this.next(!!liberal),
						this.finishNode(node, 'Identifier'),
						liberal ||
							(this.checkUnreserved(node),
							'await' !== node.name ||
								this.awaitIdentPos ||
								(this.awaitIdentPos = node.start)),
						node
					);
				}),
				(pp$3.parseYield = function (noIn) {
					this.yieldPos || (this.yieldPos = this.start);
					var node = this.startNode();
					return (
						this.next(),
						this.type === types.semi ||
						this.canInsertSemicolon() ||
						(this.type !== types.star && !this.type.startsExpr)
							? ((node.delegate = !1), (node.argument = null))
							: ((node.delegate = this.eat(types.star)),
							  (node.argument = this.parseMaybeAssign(noIn))),
						this.finishNode(node, 'YieldExpression')
					);
				}),
				(pp$3.parseAwait = function () {
					this.awaitPos || (this.awaitPos = this.start);
					var node = this.startNode();
					return (
						this.next(),
						(node.argument = this.parseMaybeUnary(null, !1)),
						this.finishNode(node, 'AwaitExpression')
					);
				});
			var pp$4 = Parser.prototype;
			(pp$4.raise = function (pos, message) {
				var loc = getLineInfo(this.input, pos);
				message += ' (' + loc.line + ':' + loc.column + ')';
				var err = new SyntaxError(message);
				throw (
					((err.pos = pos),
					(err.loc = loc),
					(err.raisedAt = this.pos),
					err)
				);
			}),
				(pp$4.raiseRecoverable = pp$4.raise),
				(pp$4.curPosition = function () {
					if (this.options.locations)
						return new Position(
							this.curLine,
							this.pos - this.lineStart,
						);
				});
			var pp$5 = Parser.prototype,
				Scope = function Scope(flags) {
					(this.flags = flags),
						(this.var = []),
						(this.lexical = []),
						(this.functions = []);
				};
			(pp$5.enterScope = function (flags) {
				this.scopeStack.push(new Scope(flags));
			}),
				(pp$5.exitScope = function () {
					this.scopeStack.pop();
				}),
				(pp$5.treatFunctionsAsVarInScope = function (scope) {
					return (
						2 & scope.flags || (!this.inModule && 1 & scope.flags)
					);
				}),
				(pp$5.declareName = function (name, bindingType, pos) {
					var redeclared = !1;
					if (2 === bindingType) {
						var scope = this.currentScope();
						(redeclared =
							scope.lexical.indexOf(name) > -1 ||
							scope.functions.indexOf(name) > -1 ||
							scope.var.indexOf(name) > -1),
							scope.lexical.push(name),
							this.inModule &&
								1 & scope.flags &&
								delete this.undefinedExports[name];
					} else if (4 === bindingType) {
						this.currentScope().lexical.push(name);
					} else if (3 === bindingType) {
						var scope$2 = this.currentScope();
						(redeclared = this.treatFunctionsAsVar
							? scope$2.lexical.indexOf(name) > -1
							: scope$2.lexical.indexOf(name) > -1 ||
							  scope$2.var.indexOf(name) > -1),
							scope$2.functions.push(name);
					} else
						for (var i = this.scopeStack.length - 1; i >= 0; --i) {
							var scope$3 = this.scopeStack[i];
							if (
								(scope$3.lexical.indexOf(name) > -1 &&
									!(
										32 & scope$3.flags &&
										scope$3.lexical[0] === name
									)) ||
								(!this.treatFunctionsAsVarInScope(scope$3) &&
									scope$3.functions.indexOf(name) > -1)
							) {
								redeclared = !0;
								break;
							}
							if (
								(scope$3.var.push(name),
								this.inModule &&
									1 & scope$3.flags &&
									delete this.undefinedExports[name],
								3 & scope$3.flags)
							)
								break;
						}
					redeclared &&
						this.raiseRecoverable(
							pos,
							"Identifier '" +
								name +
								"' has already been declared",
						);
				}),
				(pp$5.checkLocalExport = function (id) {
					-1 === this.scopeStack[0].lexical.indexOf(id.name) &&
						-1 === this.scopeStack[0].var.indexOf(id.name) &&
						(this.undefinedExports[id.name] = id);
				}),
				(pp$5.currentScope = function () {
					return this.scopeStack[this.scopeStack.length - 1];
				}),
				(pp$5.currentVarScope = function () {
					for (var i = this.scopeStack.length - 1; ; i--) {
						var scope = this.scopeStack[i];
						if (3 & scope.flags) return scope;
					}
				}),
				(pp$5.currentThisScope = function () {
					for (var i = this.scopeStack.length - 1; ; i--) {
						var scope = this.scopeStack[i];
						if (3 & scope.flags && !(16 & scope.flags))
							return scope;
					}
				});
			var Node = function Node(parser, pos, loc) {
					(this.type = ''),
						(this.start = pos),
						(this.end = 0),
						parser.options.locations &&
							(this.loc = new SourceLocation(parser, loc)),
						parser.options.directSourceFile &&
							(this.sourceFile = parser.options.directSourceFile),
						parser.options.ranges && (this.range = [pos, 0]);
				},
				pp$6 = Parser.prototype;
			function finishNodeAt(node, type, pos, loc) {
				return (
					(node.type = type),
					(node.end = pos),
					this.options.locations && (node.loc.end = loc),
					this.options.ranges && (node.range[1] = pos),
					node
				);
			}
			(pp$6.startNode = function () {
				return new Node(this, this.start, this.startLoc);
			}),
				(pp$6.startNodeAt = function (pos, loc) {
					return new Node(this, pos, loc);
				}),
				(pp$6.finishNode = function (node, type) {
					return finishNodeAt.call(
						this,
						node,
						type,
						this.lastTokEnd,
						this.lastTokEndLoc,
					);
				}),
				(pp$6.finishNodeAt = function (node, type, pos, loc) {
					return finishNodeAt.call(this, node, type, pos, loc);
				});
			var TokContext = function TokContext(
					token,
					isExpr,
					preserveSpace,
					override,
					generator,
				) {
					(this.token = token),
						(this.isExpr = !!isExpr),
						(this.preserveSpace = !!preserveSpace),
						(this.override = override),
						(this.generator = !!generator);
				},
				types$1 = {
					b_stat: new TokContext('{', !1),
					b_expr: new TokContext('{', !0),
					b_tmpl: new TokContext('${', !1),
					p_stat: new TokContext('(', !1),
					p_expr: new TokContext('(', !0),
					q_tmpl: new TokContext('`', !0, !0, function (p) {
						return p.tryReadTemplateToken();
					}),
					f_stat: new TokContext('function', !1),
					f_expr: new TokContext('function', !0),
					f_expr_gen: new TokContext('function', !0, !1, null, !0),
					f_gen: new TokContext('function', !1, !1, null, !0),
				},
				pp$7 = Parser.prototype;
			(pp$7.initialContext = function () {
				return [types$1.b_stat];
			}),
				(pp$7.braceIsBlock = function (prevType) {
					var parent = this.curContext();
					return (
						parent === types$1.f_expr ||
						parent === types$1.f_stat ||
						(prevType !== types.colon ||
						(parent !== types$1.b_stat && parent !== types$1.b_expr)
							? prevType === types._return ||
							  (prevType === types.name && this.exprAllowed)
								? lineBreak.test(
										this.input.slice(
											this.lastTokEnd,
											this.start,
										),
								  )
								: prevType === types._else ||
								  prevType === types.semi ||
								  prevType === types.eof ||
								  prevType === types.parenR ||
								  prevType === types.arrow ||
								  (prevType === types.braceL
										? parent === types$1.b_stat
										: prevType !== types._var &&
										  prevType !== types._const &&
										  prevType !== types.name &&
										  !this.exprAllowed)
							: !parent.isExpr)
					);
				}),
				(pp$7.inGeneratorContext = function () {
					for (var i = this.context.length - 1; i >= 1; i--) {
						var context = this.context[i];
						if ('function' === context.token)
							return context.generator;
					}
					return !1;
				}),
				(pp$7.updateContext = function (prevType) {
					var update,
						type = this.type;
					type.keyword && prevType === types.dot
						? (this.exprAllowed = !1)
						: (update = type.updateContext)
						? update.call(this, prevType)
						: (this.exprAllowed = type.beforeExpr);
				}),
				(types.parenR.updateContext = types.braceR.updateContext =
					function () {
						if (1 !== this.context.length) {
							var out = this.context.pop();
							out === types$1.b_stat &&
								'function' === this.curContext().token &&
								(out = this.context.pop()),
								(this.exprAllowed = !out.isExpr);
						} else this.exprAllowed = !0;
					}),
				(types.braceL.updateContext = function (prevType) {
					this.context.push(
						this.braceIsBlock(prevType)
							? types$1.b_stat
							: types$1.b_expr,
					),
						(this.exprAllowed = !0);
				}),
				(types.dollarBraceL.updateContext = function () {
					this.context.push(types$1.b_tmpl), (this.exprAllowed = !0);
				}),
				(types.parenL.updateContext = function (prevType) {
					var statementParens =
						prevType === types._if ||
						prevType === types._for ||
						prevType === types._with ||
						prevType === types._while;
					this.context.push(
						statementParens ? types$1.p_stat : types$1.p_expr,
					),
						(this.exprAllowed = !0);
				}),
				(types.incDec.updateContext = function () {}),
				(types._function.updateContext = types._class.updateContext =
					function (prevType) {
						!prevType.beforeExpr ||
						prevType === types.semi ||
						prevType === types._else ||
						(prevType === types._return &&
							lineBreak.test(
								this.input.slice(this.lastTokEnd, this.start),
							)) ||
						((prevType === types.colon ||
							prevType === types.braceL) &&
							this.curContext() === types$1.b_stat)
							? this.context.push(types$1.f_stat)
							: this.context.push(types$1.f_expr),
							(this.exprAllowed = !1);
					}),
				(types.backQuote.updateContext = function () {
					this.curContext() === types$1.q_tmpl
						? this.context.pop()
						: this.context.push(types$1.q_tmpl),
						(this.exprAllowed = !1);
				}),
				(types.star.updateContext = function (prevType) {
					if (prevType === types._function) {
						var index = this.context.length - 1;
						this.context[index] === types$1.f_expr
							? (this.context[index] = types$1.f_expr_gen)
							: (this.context[index] = types$1.f_gen);
					}
					this.exprAllowed = !0;
				}),
				(types.name.updateContext = function (prevType) {
					var allowed = !1;
					this.options.ecmaVersion >= 6 &&
						prevType !== types.dot &&
						(('of' === this.value && !this.exprAllowed) ||
							('yield' === this.value &&
								this.inGeneratorContext())) &&
						(allowed = !0),
						(this.exprAllowed = allowed);
				});
			var ecma9BinaryProperties =
					'ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS',
				ecma10BinaryProperties =
					ecma9BinaryProperties + ' Extended_Pictographic',
				unicodeBinaryProperties = {
					9: ecma9BinaryProperties,
					10: ecma10BinaryProperties,
					11: ecma10BinaryProperties,
				},
				unicodeGeneralCategoryValues =
					'Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu',
				ecma9ScriptValues =
					'Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb',
				ecma10ScriptValues =
					ecma9ScriptValues +
					' Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd',
				unicodeScriptValues = {
					9: ecma9ScriptValues,
					10: ecma10ScriptValues,
					11:
						ecma10ScriptValues +
						' Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho',
				},
				data = {};
			function buildUnicodeData(ecmaVersion) {
				var d = (data[ecmaVersion] = {
					binary: wordsRegexp(
						unicodeBinaryProperties[ecmaVersion] +
							' ' +
							unicodeGeneralCategoryValues,
					),
					nonBinary: {
						General_Category: wordsRegexp(
							unicodeGeneralCategoryValues,
						),
						Script: wordsRegexp(unicodeScriptValues[ecmaVersion]),
					},
				});
				(d.nonBinary.Script_Extensions = d.nonBinary.Script),
					(d.nonBinary.gc = d.nonBinary.General_Category),
					(d.nonBinary.sc = d.nonBinary.Script),
					(d.nonBinary.scx = d.nonBinary.Script_Extensions);
			}
			buildUnicodeData(9), buildUnicodeData(10), buildUnicodeData(11);
			var pp$8 = Parser.prototype,
				RegExpValidationState = function RegExpValidationState(parser) {
					(this.parser = parser),
						(this.validFlags =
							'gim' +
							(parser.options.ecmaVersion >= 6 ? 'uy' : '') +
							(parser.options.ecmaVersion >= 9 ? 's' : '')),
						(this.unicodeProperties =
							data[
								parser.options.ecmaVersion >= 11
									? 11
									: parser.options.ecmaVersion
							]),
						(this.source = ''),
						(this.flags = ''),
						(this.start = 0),
						(this.switchU = !1),
						(this.switchN = !1),
						(this.pos = 0),
						(this.lastIntValue = 0),
						(this.lastStringValue = ''),
						(this.lastAssertionIsQuantifiable = !1),
						(this.numCapturingParens = 0),
						(this.maxBackReference = 0),
						(this.groupNames = []),
						(this.backReferenceNames = []);
				};
			function codePointToString(ch) {
				return ch <= 65535
					? String.fromCharCode(ch)
					: ((ch -= 65536),
					  String.fromCharCode(
							55296 + (ch >> 10),
							56320 + (1023 & ch),
					  ));
			}
			function isSyntaxCharacter(ch) {
				return (
					36 === ch ||
					(ch >= 40 && ch <= 43) ||
					46 === ch ||
					63 === ch ||
					(ch >= 91 && ch <= 94) ||
					(ch >= 123 && ch <= 125)
				);
			}
			function isControlLetter(ch) {
				return (ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122);
			}
			function isUnicodePropertyNameCharacter(ch) {
				return isControlLetter(ch) || 95 === ch;
			}
			function isUnicodePropertyValueCharacter(ch) {
				return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
			}
			function isDecimalDigit(ch) {
				return ch >= 48 && ch <= 57;
			}
			function isHexDigit(ch) {
				return (
					(ch >= 48 && ch <= 57) ||
					(ch >= 65 && ch <= 70) ||
					(ch >= 97 && ch <= 102)
				);
			}
			function hexToInt(ch) {
				return ch >= 65 && ch <= 70
					? ch - 65 + 10
					: ch >= 97 && ch <= 102
					? ch - 97 + 10
					: ch - 48;
			}
			function isOctalDigit(ch) {
				return ch >= 48 && ch <= 55;
			}
			(RegExpValidationState.prototype.reset = function reset(
				start,
				pattern,
				flags,
			) {
				var unicode = -1 !== flags.indexOf('u');
				(this.start = 0 | start),
					(this.source = pattern + ''),
					(this.flags = flags),
					(this.switchU =
						unicode && this.parser.options.ecmaVersion >= 6),
					(this.switchN =
						unicode && this.parser.options.ecmaVersion >= 9);
			}),
				(RegExpValidationState.prototype.raise = function raise(
					message,
				) {
					this.parser.raiseRecoverable(
						this.start,
						'Invalid regular expression: /' +
							this.source +
							'/: ' +
							message,
					);
				}),
				(RegExpValidationState.prototype.at = function at(i, forceU) {
					void 0 === forceU && (forceU = !1);
					var s = this.source,
						l = s.length;
					if (i >= l) return -1;
					var c = s.charCodeAt(i);
					if (
						(!forceU && !this.switchU) ||
						c <= 55295 ||
						c >= 57344 ||
						i + 1 >= l
					)
						return c;
					var next = s.charCodeAt(i + 1);
					return next >= 56320 && next <= 57343
						? (c << 10) + next - 56613888
						: c;
				}),
				(RegExpValidationState.prototype.nextIndex = function nextIndex(
					i,
					forceU,
				) {
					void 0 === forceU && (forceU = !1);
					var s = this.source,
						l = s.length;
					if (i >= l) return l;
					var next,
						c = s.charCodeAt(i);
					return (!forceU && !this.switchU) ||
						c <= 55295 ||
						c >= 57344 ||
						i + 1 >= l ||
						(next = s.charCodeAt(i + 1)) < 56320 ||
						next > 57343
						? i + 1
						: i + 2;
				}),
				(RegExpValidationState.prototype.current = function current(
					forceU,
				) {
					return (
						void 0 === forceU && (forceU = !1),
						this.at(this.pos, forceU)
					);
				}),
				(RegExpValidationState.prototype.lookahead = function lookahead(
					forceU,
				) {
					return (
						void 0 === forceU && (forceU = !1),
						this.at(this.nextIndex(this.pos, forceU), forceU)
					);
				}),
				(RegExpValidationState.prototype.advance = function advance(
					forceU,
				) {
					void 0 === forceU && (forceU = !1),
						(this.pos = this.nextIndex(this.pos, forceU));
				}),
				(RegExpValidationState.prototype.eat = function eat(
					ch,
					forceU,
				) {
					return (
						void 0 === forceU && (forceU = !1),
						this.current(forceU) === ch &&
							(this.advance(forceU), !0)
					);
				}),
				(pp$8.validateRegExpFlags = function (state) {
					for (
						var validFlags = state.validFlags,
							flags = state.flags,
							i = 0;
						i < flags.length;
						i++
					) {
						var flag = flags.charAt(i);
						-1 === validFlags.indexOf(flag) &&
							this.raise(
								state.start,
								'Invalid regular expression flag',
							),
							flags.indexOf(flag, i + 1) > -1 &&
								this.raise(
									state.start,
									'Duplicate regular expression flag',
								);
					}
				}),
				(pp$8.validateRegExpPattern = function (state) {
					this.regexp_pattern(state),
						!state.switchN &&
							this.options.ecmaVersion >= 9 &&
							state.groupNames.length > 0 &&
							((state.switchN = !0), this.regexp_pattern(state));
				}),
				(pp$8.regexp_pattern = function (state) {
					(state.pos = 0),
						(state.lastIntValue = 0),
						(state.lastStringValue = ''),
						(state.lastAssertionIsQuantifiable = !1),
						(state.numCapturingParens = 0),
						(state.maxBackReference = 0),
						(state.groupNames.length = 0),
						(state.backReferenceNames.length = 0),
						this.regexp_disjunction(state),
						state.pos !== state.source.length &&
							(state.eat(41) && state.raise("Unmatched ')'"),
							(state.eat(93) || state.eat(125)) &&
								state.raise('Lone quantifier brackets')),
						state.maxBackReference > state.numCapturingParens &&
							state.raise('Invalid escape');
					for (
						var i = 0, list = state.backReferenceNames;
						i < list.length;
						i += 1
					) {
						var name = list[i];
						-1 === state.groupNames.indexOf(name) &&
							state.raise('Invalid named capture referenced');
					}
				}),
				(pp$8.regexp_disjunction = function (state) {
					for (this.regexp_alternative(state); state.eat(124); )
						this.regexp_alternative(state);
					this.regexp_eatQuantifier(state, !0) &&
						state.raise('Nothing to repeat'),
						state.eat(123) &&
							state.raise('Lone quantifier brackets');
				}),
				(pp$8.regexp_alternative = function (state) {
					for (
						;
						state.pos < state.source.length &&
						this.regexp_eatTerm(state);

					);
				}),
				(pp$8.regexp_eatTerm = function (state) {
					return this.regexp_eatAssertion(state)
						? (state.lastAssertionIsQuantifiable &&
								this.regexp_eatQuantifier(state) &&
								state.switchU &&
								state.raise('Invalid quantifier'),
						  !0)
						: !!(state.switchU
								? this.regexp_eatAtom(state)
								: this.regexp_eatExtendedAtom(state)) &&
								(this.regexp_eatQuantifier(state), !0);
				}),
				(pp$8.regexp_eatAssertion = function (state) {
					var start = state.pos;
					if (
						((state.lastAssertionIsQuantifiable = !1),
						state.eat(94) || state.eat(36))
					)
						return !0;
					if (state.eat(92)) {
						if (state.eat(66) || state.eat(98)) return !0;
						state.pos = start;
					}
					if (state.eat(40) && state.eat(63)) {
						var lookbehind = !1;
						if (
							(this.options.ecmaVersion >= 9 &&
								(lookbehind = state.eat(60)),
							state.eat(61) || state.eat(33))
						)
							return (
								this.regexp_disjunction(state),
								state.eat(41) ||
									state.raise('Unterminated group'),
								(state.lastAssertionIsQuantifiable =
									!lookbehind),
								!0
							);
					}
					return (state.pos = start), !1;
				}),
				(pp$8.regexp_eatQuantifier = function (state, noError) {
					return (
						void 0 === noError && (noError = !1),
						!!this.regexp_eatQuantifierPrefix(state, noError) &&
							(state.eat(63), !0)
					);
				}),
				(pp$8.regexp_eatQuantifierPrefix = function (state, noError) {
					return (
						state.eat(42) ||
						state.eat(43) ||
						state.eat(63) ||
						this.regexp_eatBracedQuantifier(state, noError)
					);
				}),
				(pp$8.regexp_eatBracedQuantifier = function (state, noError) {
					var start = state.pos;
					if (state.eat(123)) {
						var min = 0,
							max = -1;
						if (
							this.regexp_eatDecimalDigits(state) &&
							((min = state.lastIntValue),
							state.eat(44) &&
								this.regexp_eatDecimalDigits(state) &&
								(max = state.lastIntValue),
							state.eat(125))
						)
							return (
								-1 !== max &&
									max < min &&
									!noError &&
									state.raise(
										'numbers out of order in {} quantifier',
									),
								!0
							);
						state.switchU &&
							!noError &&
							state.raise('Incomplete quantifier'),
							(state.pos = start);
					}
					return !1;
				}),
				(pp$8.regexp_eatAtom = function (state) {
					return (
						this.regexp_eatPatternCharacters(state) ||
						state.eat(46) ||
						this.regexp_eatReverseSolidusAtomEscape(state) ||
						this.regexp_eatCharacterClass(state) ||
						this.regexp_eatUncapturingGroup(state) ||
						this.regexp_eatCapturingGroup(state)
					);
				}),
				(pp$8.regexp_eatReverseSolidusAtomEscape = function (state) {
					var start = state.pos;
					if (state.eat(92)) {
						if (this.regexp_eatAtomEscape(state)) return !0;
						state.pos = start;
					}
					return !1;
				}),
				(pp$8.regexp_eatUncapturingGroup = function (state) {
					var start = state.pos;
					if (state.eat(40)) {
						if (state.eat(63) && state.eat(58)) {
							if ((this.regexp_disjunction(state), state.eat(41)))
								return !0;
							state.raise('Unterminated group');
						}
						state.pos = start;
					}
					return !1;
				}),
				(pp$8.regexp_eatCapturingGroup = function (state) {
					if (state.eat(40)) {
						if (
							(this.options.ecmaVersion >= 9
								? this.regexp_groupSpecifier(state)
								: 63 === state.current() &&
								  state.raise('Invalid group'),
							this.regexp_disjunction(state),
							state.eat(41))
						)
							return (state.numCapturingParens += 1), !0;
						state.raise('Unterminated group');
					}
					return !1;
				}),
				(pp$8.regexp_eatExtendedAtom = function (state) {
					return (
						state.eat(46) ||
						this.regexp_eatReverseSolidusAtomEscape(state) ||
						this.regexp_eatCharacterClass(state) ||
						this.regexp_eatUncapturingGroup(state) ||
						this.regexp_eatCapturingGroup(state) ||
						this.regexp_eatInvalidBracedQuantifier(state) ||
						this.regexp_eatExtendedPatternCharacter(state)
					);
				}),
				(pp$8.regexp_eatInvalidBracedQuantifier = function (state) {
					return (
						this.regexp_eatBracedQuantifier(state, !0) &&
							state.raise('Nothing to repeat'),
						!1
					);
				}),
				(pp$8.regexp_eatSyntaxCharacter = function (state) {
					var ch = state.current();
					return (
						!!isSyntaxCharacter(ch) &&
						((state.lastIntValue = ch), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatPatternCharacters = function (state) {
					for (
						var start = state.pos, ch = 0;
						-1 !== (ch = state.current()) && !isSyntaxCharacter(ch);

					)
						state.advance();
					return state.pos !== start;
				}),
				(pp$8.regexp_eatExtendedPatternCharacter = function (state) {
					var ch = state.current();
					return (
						!(
							-1 === ch ||
							36 === ch ||
							(ch >= 40 && ch <= 43) ||
							46 === ch ||
							63 === ch ||
							91 === ch ||
							94 === ch ||
							124 === ch
						) && (state.advance(), !0)
					);
				}),
				(pp$8.regexp_groupSpecifier = function (state) {
					if (state.eat(63)) {
						if (this.regexp_eatGroupName(state))
							return (
								-1 !==
									state.groupNames.indexOf(
										state.lastStringValue,
									) &&
									state.raise('Duplicate capture group name'),
								void state.groupNames.push(
									state.lastStringValue,
								)
							);
						state.raise('Invalid group');
					}
				}),
				(pp$8.regexp_eatGroupName = function (state) {
					if (((state.lastStringValue = ''), state.eat(60))) {
						if (
							this.regexp_eatRegExpIdentifierName(state) &&
							state.eat(62)
						)
							return !0;
						state.raise('Invalid capture group name');
					}
					return !1;
				}),
				(pp$8.regexp_eatRegExpIdentifierName = function (state) {
					if (
						((state.lastStringValue = ''),
						this.regexp_eatRegExpIdentifierStart(state))
					) {
						for (
							state.lastStringValue += codePointToString(
								state.lastIntValue,
							);
							this.regexp_eatRegExpIdentifierPart(state);

						)
							state.lastStringValue += codePointToString(
								state.lastIntValue,
							);
						return !0;
					}
					return !1;
				}),
				(pp$8.regexp_eatRegExpIdentifierStart = function (state) {
					var start = state.pos,
						forceU = this.options.ecmaVersion >= 11,
						ch = state.current(forceU);
					return (
						state.advance(forceU),
						92 === ch &&
							this.regexp_eatRegExpUnicodeEscapeSequence(
								state,
								forceU,
							) &&
							(ch = state.lastIntValue),
						(function isRegExpIdentifierStart(ch) {
							return (
								isIdentifierStart(ch, !0) ||
								36 === ch ||
								95 === ch
							);
						})(ch)
							? ((state.lastIntValue = ch), !0)
							: ((state.pos = start), !1)
					);
				}),
				(pp$8.regexp_eatRegExpIdentifierPart = function (state) {
					var start = state.pos,
						forceU = this.options.ecmaVersion >= 11,
						ch = state.current(forceU);
					return (
						state.advance(forceU),
						92 === ch &&
							this.regexp_eatRegExpUnicodeEscapeSequence(
								state,
								forceU,
							) &&
							(ch = state.lastIntValue),
						(function isRegExpIdentifierPart(ch) {
							return (
								isIdentifierChar(ch, !0) ||
								36 === ch ||
								95 === ch ||
								8204 === ch ||
								8205 === ch
							);
						})(ch)
							? ((state.lastIntValue = ch), !0)
							: ((state.pos = start), !1)
					);
				}),
				(pp$8.regexp_eatAtomEscape = function (state) {
					return (
						!!(
							this.regexp_eatBackReference(state) ||
							this.regexp_eatCharacterClassEscape(state) ||
							this.regexp_eatCharacterEscape(state) ||
							(state.switchN && this.regexp_eatKGroupName(state))
						) ||
						(state.switchU &&
							(99 === state.current() &&
								state.raise('Invalid unicode escape'),
							state.raise('Invalid escape')),
						!1)
					);
				}),
				(pp$8.regexp_eatBackReference = function (state) {
					var start = state.pos;
					if (this.regexp_eatDecimalEscape(state)) {
						var n = state.lastIntValue;
						if (state.switchU)
							return (
								n > state.maxBackReference &&
									(state.maxBackReference = n),
								!0
							);
						if (n <= state.numCapturingParens) return !0;
						state.pos = start;
					}
					return !1;
				}),
				(pp$8.regexp_eatKGroupName = function (state) {
					if (state.eat(107)) {
						if (this.regexp_eatGroupName(state))
							return (
								state.backReferenceNames.push(
									state.lastStringValue,
								),
								!0
							);
						state.raise('Invalid named reference');
					}
					return !1;
				}),
				(pp$8.regexp_eatCharacterEscape = function (state) {
					return (
						this.regexp_eatControlEscape(state) ||
						this.regexp_eatCControlLetter(state) ||
						this.regexp_eatZero(state) ||
						this.regexp_eatHexEscapeSequence(state) ||
						this.regexp_eatRegExpUnicodeEscapeSequence(state, !1) ||
						(!state.switchU &&
							this.regexp_eatLegacyOctalEscapeSequence(state)) ||
						this.regexp_eatIdentityEscape(state)
					);
				}),
				(pp$8.regexp_eatCControlLetter = function (state) {
					var start = state.pos;
					if (state.eat(99)) {
						if (this.regexp_eatControlLetter(state)) return !0;
						state.pos = start;
					}
					return !1;
				}),
				(pp$8.regexp_eatZero = function (state) {
					return (
						48 === state.current() &&
						!isDecimalDigit(state.lookahead()) &&
						((state.lastIntValue = 0), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatControlEscape = function (state) {
					var ch = state.current();
					return 116 === ch
						? ((state.lastIntValue = 9), state.advance(), !0)
						: 110 === ch
						? ((state.lastIntValue = 10), state.advance(), !0)
						: 118 === ch
						? ((state.lastIntValue = 11), state.advance(), !0)
						: 102 === ch
						? ((state.lastIntValue = 12), state.advance(), !0)
						: 114 === ch &&
						  ((state.lastIntValue = 13), state.advance(), !0);
				}),
				(pp$8.regexp_eatControlLetter = function (state) {
					var ch = state.current();
					return (
						!!isControlLetter(ch) &&
						((state.lastIntValue = ch % 32), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatRegExpUnicodeEscapeSequence = function (
					state,
					forceU,
				) {
					void 0 === forceU && (forceU = !1);
					var start = state.pos,
						switchU = forceU || state.switchU;
					if (state.eat(117)) {
						if (this.regexp_eatFixedHexDigits(state, 4)) {
							var lead = state.lastIntValue;
							if (switchU && lead >= 55296 && lead <= 56319) {
								var leadSurrogateEnd = state.pos;
								if (
									state.eat(92) &&
									state.eat(117) &&
									this.regexp_eatFixedHexDigits(state, 4)
								) {
									var trail = state.lastIntValue;
									if (trail >= 56320 && trail <= 57343)
										return (
											(state.lastIntValue =
												1024 * (lead - 55296) +
												(trail - 56320) +
												65536),
											!0
										);
								}
								(state.pos = leadSurrogateEnd),
									(state.lastIntValue = lead);
							}
							return !0;
						}
						if (
							switchU &&
							state.eat(123) &&
							this.regexp_eatHexDigits(state) &&
							state.eat(125) &&
							(function isValidUnicode(ch) {
								return ch >= 0 && ch <= 1114111;
							})(state.lastIntValue)
						)
							return !0;
						switchU && state.raise('Invalid unicode escape'),
							(state.pos = start);
					}
					return !1;
				}),
				(pp$8.regexp_eatIdentityEscape = function (state) {
					if (state.switchU)
						return (
							!!this.regexp_eatSyntaxCharacter(state) ||
							(!!state.eat(47) && ((state.lastIntValue = 47), !0))
						);
					var ch = state.current();
					return (
						!(99 === ch || (state.switchN && 107 === ch)) &&
						((state.lastIntValue = ch), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatDecimalEscape = function (state) {
					state.lastIntValue = 0;
					var ch = state.current();
					if (ch >= 49 && ch <= 57) {
						do {
							(state.lastIntValue =
								10 * state.lastIntValue + (ch - 48)),
								state.advance();
						} while ((ch = state.current()) >= 48 && ch <= 57);
						return !0;
					}
					return !1;
				}),
				(pp$8.regexp_eatCharacterClassEscape = function (state) {
					var ch = state.current();
					if (
						(function isCharacterClassEscape(ch) {
							return (
								100 === ch ||
								68 === ch ||
								115 === ch ||
								83 === ch ||
								119 === ch ||
								87 === ch
							);
						})(ch)
					)
						return (state.lastIntValue = -1), state.advance(), !0;
					if (
						state.switchU &&
						this.options.ecmaVersion >= 9 &&
						(80 === ch || 112 === ch)
					) {
						if (
							((state.lastIntValue = -1),
							state.advance(),
							state.eat(123) &&
								this.regexp_eatUnicodePropertyValueExpression(
									state,
								) &&
								state.eat(125))
						)
							return !0;
						state.raise('Invalid property name');
					}
					return !1;
				}),
				(pp$8.regexp_eatUnicodePropertyValueExpression = function (
					state,
				) {
					var start = state.pos;
					if (
						this.regexp_eatUnicodePropertyName(state) &&
						state.eat(61)
					) {
						var name = state.lastStringValue;
						if (this.regexp_eatUnicodePropertyValue(state)) {
							var value = state.lastStringValue;
							return (
								this.regexp_validateUnicodePropertyNameAndValue(
									state,
									name,
									value,
								),
								!0
							);
						}
					}
					if (
						((state.pos = start),
						this.regexp_eatLoneUnicodePropertyNameOrValue(state))
					) {
						var nameOrValue = state.lastStringValue;
						return (
							this.regexp_validateUnicodePropertyNameOrValue(
								state,
								nameOrValue,
							),
							!0
						);
					}
					return !1;
				}),
				(pp$8.regexp_validateUnicodePropertyNameAndValue = function (
					state,
					name,
					value,
				) {
					has(state.unicodeProperties.nonBinary, name) ||
						state.raise('Invalid property name'),
						state.unicodeProperties.nonBinary[name].test(value) ||
							state.raise('Invalid property value');
				}),
				(pp$8.regexp_validateUnicodePropertyNameOrValue = function (
					state,
					nameOrValue,
				) {
					state.unicodeProperties.binary.test(nameOrValue) ||
						state.raise('Invalid property name');
				}),
				(pp$8.regexp_eatUnicodePropertyName = function (state) {
					var ch = 0;
					for (
						state.lastStringValue = '';
						isUnicodePropertyNameCharacter((ch = state.current()));

					)
						(state.lastStringValue += codePointToString(ch)),
							state.advance();
					return '' !== state.lastStringValue;
				}),
				(pp$8.regexp_eatUnicodePropertyValue = function (state) {
					var ch = 0;
					for (
						state.lastStringValue = '';
						isUnicodePropertyValueCharacter((ch = state.current()));

					)
						(state.lastStringValue += codePointToString(ch)),
							state.advance();
					return '' !== state.lastStringValue;
				}),
				(pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function (
					state,
				) {
					return this.regexp_eatUnicodePropertyValue(state);
				}),
				(pp$8.regexp_eatCharacterClass = function (state) {
					if (state.eat(91)) {
						if (
							(state.eat(94),
							this.regexp_classRanges(state),
							state.eat(93))
						)
							return !0;
						state.raise('Unterminated character class');
					}
					return !1;
				}),
				(pp$8.regexp_classRanges = function (state) {
					for (; this.regexp_eatClassAtom(state); ) {
						var left = state.lastIntValue;
						if (state.eat(45) && this.regexp_eatClassAtom(state)) {
							var right = state.lastIntValue;
							!state.switchU ||
								(-1 !== left && -1 !== right) ||
								state.raise('Invalid character class'),
								-1 !== left &&
									-1 !== right &&
									left > right &&
									state.raise(
										'Range out of order in character class',
									);
						}
					}
				}),
				(pp$8.regexp_eatClassAtom = function (state) {
					var start = state.pos;
					if (state.eat(92)) {
						if (this.regexp_eatClassEscape(state)) return !0;
						if (state.switchU) {
							var ch$1 = state.current();
							(99 === ch$1 || isOctalDigit(ch$1)) &&
								state.raise('Invalid class escape'),
								state.raise('Invalid escape');
						}
						state.pos = start;
					}
					var ch = state.current();
					return (
						93 !== ch &&
						((state.lastIntValue = ch), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatClassEscape = function (state) {
					var start = state.pos;
					if (state.eat(98)) return (state.lastIntValue = 8), !0;
					if (state.switchU && state.eat(45))
						return (state.lastIntValue = 45), !0;
					if (!state.switchU && state.eat(99)) {
						if (this.regexp_eatClassControlLetter(state)) return !0;
						state.pos = start;
					}
					return (
						this.regexp_eatCharacterClassEscape(state) ||
						this.regexp_eatCharacterEscape(state)
					);
				}),
				(pp$8.regexp_eatClassControlLetter = function (state) {
					var ch = state.current();
					return (
						!(!isDecimalDigit(ch) && 95 !== ch) &&
						((state.lastIntValue = ch % 32), state.advance(), !0)
					);
				}),
				(pp$8.regexp_eatHexEscapeSequence = function (state) {
					var start = state.pos;
					if (state.eat(120)) {
						if (this.regexp_eatFixedHexDigits(state, 2)) return !0;
						state.switchU && state.raise('Invalid escape'),
							(state.pos = start);
					}
					return !1;
				}),
				(pp$8.regexp_eatDecimalDigits = function (state) {
					var start = state.pos,
						ch = 0;
					for (
						state.lastIntValue = 0;
						isDecimalDigit((ch = state.current()));

					)
						(state.lastIntValue =
							10 * state.lastIntValue + (ch - 48)),
							state.advance();
					return state.pos !== start;
				}),
				(pp$8.regexp_eatHexDigits = function (state) {
					var start = state.pos,
						ch = 0;
					for (
						state.lastIntValue = 0;
						isHexDigit((ch = state.current()));

					)
						(state.lastIntValue =
							16 * state.lastIntValue + hexToInt(ch)),
							state.advance();
					return state.pos !== start;
				}),
				(pp$8.regexp_eatLegacyOctalEscapeSequence = function (state) {
					if (this.regexp_eatOctalDigit(state)) {
						var n1 = state.lastIntValue;
						if (this.regexp_eatOctalDigit(state)) {
							var n2 = state.lastIntValue;
							n1 <= 3 && this.regexp_eatOctalDigit(state)
								? (state.lastIntValue =
										64 * n1 + 8 * n2 + state.lastIntValue)
								: (state.lastIntValue = 8 * n1 + n2);
						} else state.lastIntValue = n1;
						return !0;
					}
					return !1;
				}),
				(pp$8.regexp_eatOctalDigit = function (state) {
					var ch = state.current();
					return isOctalDigit(ch)
						? ((state.lastIntValue = ch - 48), state.advance(), !0)
						: ((state.lastIntValue = 0), !1);
				}),
				(pp$8.regexp_eatFixedHexDigits = function (state, length) {
					var start = state.pos;
					state.lastIntValue = 0;
					for (var i = 0; i < length; ++i) {
						var ch = state.current();
						if (!isHexDigit(ch)) return (state.pos = start), !1;
						(state.lastIntValue =
							16 * state.lastIntValue + hexToInt(ch)),
							state.advance();
					}
					return !0;
				});
			var Token = function Token(p) {
					(this.type = p.type),
						(this.value = p.value),
						(this.start = p.start),
						(this.end = p.end),
						p.options.locations &&
							(this.loc = new SourceLocation(
								p,
								p.startLoc,
								p.endLoc,
							)),
						p.options.ranges && (this.range = [p.start, p.end]);
				},
				pp$9 = Parser.prototype;
			function stringToBigInt(str) {
				return 'function' != typeof BigInt
					? null
					: BigInt(str.replace(/_/g, ''));
			}
			function codePointToString$1(code) {
				return code <= 65535
					? String.fromCharCode(code)
					: ((code -= 65536),
					  String.fromCharCode(
							55296 + (code >> 10),
							56320 + (1023 & code),
					  ));
			}
			(pp$9.next = function (ignoreEscapeSequenceInKeyword) {
				!ignoreEscapeSequenceInKeyword &&
					this.type.keyword &&
					this.containsEsc &&
					this.raiseRecoverable(
						this.start,
						'Escape sequence in keyword ' + this.type.keyword,
					),
					this.options.onToken &&
						this.options.onToken(new Token(this)),
					(this.lastTokEnd = this.end),
					(this.lastTokStart = this.start),
					(this.lastTokEndLoc = this.endLoc),
					(this.lastTokStartLoc = this.startLoc),
					this.nextToken();
			}),
				(pp$9.getToken = function () {
					return this.next(), new Token(this);
				}),
				'undefined' != typeof Symbol &&
					(pp$9[Symbol.iterator] = function () {
						var this$1 = this;
						return {
							next: function () {
								var token = this$1.getToken();
								return {
									done: token.type === types.eof,
									value: token,
								};
							},
						};
					}),
				(pp$9.curContext = function () {
					return this.context[this.context.length - 1];
				}),
				(pp$9.nextToken = function () {
					var curContext = this.curContext();
					return (
						(curContext && curContext.preserveSpace) ||
							this.skipSpace(),
						(this.start = this.pos),
						this.options.locations &&
							(this.startLoc = this.curPosition()),
						this.pos >= this.input.length
							? this.finishToken(types.eof)
							: curContext.override
							? curContext.override(this)
							: void this.readToken(this.fullCharCodeAtPos())
					);
				}),
				(pp$9.readToken = function (code) {
					return isIdentifierStart(
						code,
						this.options.ecmaVersion >= 6,
					) || 92 === code
						? this.readWord()
						: this.getTokenFromCode(code);
				}),
				(pp$9.fullCharCodeAtPos = function () {
					var code = this.input.charCodeAt(this.pos);
					return code <= 55295 || code >= 57344
						? code
						: (code << 10) +
								this.input.charCodeAt(this.pos + 1) -
								56613888;
				}),
				(pp$9.skipBlockComment = function () {
					var match,
						startLoc = this.options.onComment && this.curPosition(),
						start = this.pos,
						end = this.input.indexOf('*/', (this.pos += 2));
					if (
						(-1 === end &&
							this.raise(this.pos - 2, 'Unterminated comment'),
						(this.pos = end + 2),
						this.options.locations)
					)
						for (
							lineBreakG.lastIndex = start;
							(match = lineBreakG.exec(this.input)) &&
							match.index < this.pos;

						)
							++this.curLine,
								(this.lineStart =
									match.index + match[0].length);
					this.options.onComment &&
						this.options.onComment(
							!0,
							this.input.slice(start + 2, end),
							start,
							this.pos,
							startLoc,
							this.curPosition(),
						);
				}),
				(pp$9.skipLineComment = function (startSkip) {
					for (
						var start = this.pos,
							startLoc =
								this.options.onComment && this.curPosition(),
							ch = this.input.charCodeAt((this.pos += startSkip));
						this.pos < this.input.length && !isNewLine(ch);

					)
						ch = this.input.charCodeAt(++this.pos);
					this.options.onComment &&
						this.options.onComment(
							!1,
							this.input.slice(start + startSkip, this.pos),
							start,
							this.pos,
							startLoc,
							this.curPosition(),
						);
				}),
				(pp$9.skipSpace = function () {
					loop: for (; this.pos < this.input.length; ) {
						var ch = this.input.charCodeAt(this.pos);
						switch (ch) {
							case 32:
							case 160:
								++this.pos;
								break;
							case 13:
								10 === this.input.charCodeAt(this.pos + 1) &&
									++this.pos;
							case 10:
							case 8232:
							case 8233:
								++this.pos,
									this.options.locations &&
										(++this.curLine,
										(this.lineStart = this.pos));
								break;
							case 47:
								switch (this.input.charCodeAt(this.pos + 1)) {
									case 42:
										this.skipBlockComment();
										break;
									case 47:
										this.skipLineComment(2);
										break;
									default:
										break loop;
								}
								break;
							default:
								if (
									!(
										(ch > 8 && ch < 14) ||
										(ch >= 5760 &&
											nonASCIIwhitespace.test(
												String.fromCharCode(ch),
											))
									)
								)
									break loop;
								++this.pos;
						}
					}
				}),
				(pp$9.finishToken = function (type, val) {
					(this.end = this.pos),
						this.options.locations &&
							(this.endLoc = this.curPosition());
					var prevType = this.type;
					(this.type = type),
						(this.value = val),
						this.updateContext(prevType);
				}),
				(pp$9.readToken_dot = function () {
					var next = this.input.charCodeAt(this.pos + 1);
					if (next >= 48 && next <= 57) return this.readNumber(!0);
					var next2 = this.input.charCodeAt(this.pos + 2);
					return this.options.ecmaVersion >= 6 &&
						46 === next &&
						46 === next2
						? ((this.pos += 3), this.finishToken(types.ellipsis))
						: (++this.pos, this.finishToken(types.dot));
				}),
				(pp$9.readToken_slash = function () {
					var next = this.input.charCodeAt(this.pos + 1);
					return this.exprAllowed
						? (++this.pos, this.readRegexp())
						: 61 === next
						? this.finishOp(types.assign, 2)
						: this.finishOp(types.slash, 1);
				}),
				(pp$9.readToken_mult_modulo_exp = function (code) {
					var next = this.input.charCodeAt(this.pos + 1),
						size = 1,
						tokentype = 42 === code ? types.star : types.modulo;
					return (
						this.options.ecmaVersion >= 7 &&
							42 === code &&
							42 === next &&
							(++size,
							(tokentype = types.starstar),
							(next = this.input.charCodeAt(this.pos + 2))),
						61 === next
							? this.finishOp(types.assign, size + 1)
							: this.finishOp(tokentype, size)
					);
				}),
				(pp$9.readToken_pipe_amp = function (code) {
					var next = this.input.charCodeAt(this.pos + 1);
					if (next === code) {
						if (this.options.ecmaVersion >= 12)
							if (61 === this.input.charCodeAt(this.pos + 2))
								return this.finishOp(types.assign, 3);
						return this.finishOp(
							124 === code ? types.logicalOR : types.logicalAND,
							2,
						);
					}
					return 61 === next
						? this.finishOp(types.assign, 2)
						: this.finishOp(
								124 === code
									? types.bitwiseOR
									: types.bitwiseAND,
								1,
						  );
				}),
				(pp$9.readToken_caret = function () {
					return 61 === this.input.charCodeAt(this.pos + 1)
						? this.finishOp(types.assign, 2)
						: this.finishOp(types.bitwiseXOR, 1);
				}),
				(pp$9.readToken_plus_min = function (code) {
					var next = this.input.charCodeAt(this.pos + 1);
					return next === code
						? 45 !== next ||
						  this.inModule ||
						  62 !== this.input.charCodeAt(this.pos + 2) ||
						  (0 !== this.lastTokEnd &&
								!lineBreak.test(
									this.input.slice(this.lastTokEnd, this.pos),
								))
							? this.finishOp(types.incDec, 2)
							: (this.skipLineComment(3),
							  this.skipSpace(),
							  this.nextToken())
						: 61 === next
						? this.finishOp(types.assign, 2)
						: this.finishOp(types.plusMin, 1);
				}),
				(pp$9.readToken_lt_gt = function (code) {
					var next = this.input.charCodeAt(this.pos + 1),
						size = 1;
					return next === code
						? ((size =
								62 === code &&
								62 === this.input.charCodeAt(this.pos + 2)
									? 3
									: 2),
						  61 === this.input.charCodeAt(this.pos + size)
								? this.finishOp(types.assign, size + 1)
								: this.finishOp(types.bitShift, size))
						: 33 !== next ||
						  60 !== code ||
						  this.inModule ||
						  45 !== this.input.charCodeAt(this.pos + 2) ||
						  45 !== this.input.charCodeAt(this.pos + 3)
						? (61 === next && (size = 2),
						  this.finishOp(types.relational, size))
						: (this.skipLineComment(4),
						  this.skipSpace(),
						  this.nextToken());
				}),
				(pp$9.readToken_eq_excl = function (code) {
					var next = this.input.charCodeAt(this.pos + 1);
					return 61 === next
						? this.finishOp(
								types.equality,
								61 === this.input.charCodeAt(this.pos + 2)
									? 3
									: 2,
						  )
						: 61 === code &&
						  62 === next &&
						  this.options.ecmaVersion >= 6
						? ((this.pos += 2), this.finishToken(types.arrow))
						: this.finishOp(
								61 === code ? types.eq : types.prefix,
								1,
						  );
				}),
				(pp$9.readToken_question = function () {
					var ecmaVersion = this.options.ecmaVersion;
					if (ecmaVersion >= 11) {
						var next = this.input.charCodeAt(this.pos + 1);
						if (46 === next) {
							var next2 = this.input.charCodeAt(this.pos + 2);
							if (next2 < 48 || next2 > 57)
								return this.finishOp(types.questionDot, 2);
						}
						if (63 === next) {
							if (ecmaVersion >= 12)
								if (61 === this.input.charCodeAt(this.pos + 2))
									return this.finishOp(types.assign, 3);
							return this.finishOp(types.coalesce, 2);
						}
					}
					return this.finishOp(types.question, 1);
				}),
				(pp$9.getTokenFromCode = function (code) {
					switch (code) {
						case 46:
							return this.readToken_dot();
						case 40:
							return ++this.pos, this.finishToken(types.parenL);
						case 41:
							return ++this.pos, this.finishToken(types.parenR);
						case 59:
							return ++this.pos, this.finishToken(types.semi);
						case 44:
							return ++this.pos, this.finishToken(types.comma);
						case 91:
							return ++this.pos, this.finishToken(types.bracketL);
						case 93:
							return ++this.pos, this.finishToken(types.bracketR);
						case 123:
							return ++this.pos, this.finishToken(types.braceL);
						case 125:
							return ++this.pos, this.finishToken(types.braceR);
						case 58:
							return ++this.pos, this.finishToken(types.colon);
						case 96:
							if (this.options.ecmaVersion < 6) break;
							return (
								++this.pos, this.finishToken(types.backQuote)
							);
						case 48:
							var next = this.input.charCodeAt(this.pos + 1);
							if (120 === next || 88 === next)
								return this.readRadixNumber(16);
							if (this.options.ecmaVersion >= 6) {
								if (111 === next || 79 === next)
									return this.readRadixNumber(8);
								if (98 === next || 66 === next)
									return this.readRadixNumber(2);
							}
						case 49:
						case 50:
						case 51:
						case 52:
						case 53:
						case 54:
						case 55:
						case 56:
						case 57:
							return this.readNumber(!1);
						case 34:
						case 39:
							return this.readString(code);
						case 47:
							return this.readToken_slash();
						case 37:
						case 42:
							return this.readToken_mult_modulo_exp(code);
						case 124:
						case 38:
							return this.readToken_pipe_amp(code);
						case 94:
							return this.readToken_caret();
						case 43:
						case 45:
							return this.readToken_plus_min(code);
						case 60:
						case 62:
							return this.readToken_lt_gt(code);
						case 61:
						case 33:
							return this.readToken_eq_excl(code);
						case 63:
							return this.readToken_question();
						case 126:
							return this.finishOp(types.prefix, 1);
					}
					this.raise(
						this.pos,
						"Unexpected character '" +
							codePointToString$1(code) +
							"'",
					);
				}),
				(pp$9.finishOp = function (type, size) {
					var str = this.input.slice(this.pos, this.pos + size);
					return (this.pos += size), this.finishToken(type, str);
				}),
				(pp$9.readRegexp = function () {
					for (var escaped, inClass, start = this.pos; ; ) {
						this.pos >= this.input.length &&
							this.raise(
								start,
								'Unterminated regular expression',
							);
						var ch = this.input.charAt(this.pos);
						if (
							(lineBreak.test(ch) &&
								this.raise(
									start,
									'Unterminated regular expression',
								),
							escaped)
						)
							escaped = !1;
						else {
							if ('[' === ch) inClass = !0;
							else if (']' === ch && inClass) inClass = !1;
							else if ('/' === ch && !inClass) break;
							escaped = '\\' === ch;
						}
						++this.pos;
					}
					var pattern = this.input.slice(start, this.pos);
					++this.pos;
					var flagsStart = this.pos,
						flags = this.readWord1();
					this.containsEsc && this.unexpected(flagsStart);
					var state =
						this.regexpState ||
						(this.regexpState = new RegExpValidationState(this));
					state.reset(start, pattern, flags),
						this.validateRegExpFlags(state),
						this.validateRegExpPattern(state);
					var value = null;
					try {
						value = new RegExp(pattern, flags);
					} catch (e) {}
					return this.finishToken(types.regexp, {
						pattern,
						flags,
						value,
					});
				}),
				(pp$9.readInt = function (
					radix,
					len,
					maybeLegacyOctalNumericLiteral,
				) {
					for (
						var allowSeparators =
								this.options.ecmaVersion >= 12 &&
								void 0 === len,
							isLegacyOctalNumericLiteral =
								maybeLegacyOctalNumericLiteral &&
								48 === this.input.charCodeAt(this.pos),
							start = this.pos,
							total = 0,
							lastCode = 0,
							i = 0,
							e = null == len ? 1 / 0 : len;
						i < e;
						++i, ++this.pos
					) {
						var code = this.input.charCodeAt(this.pos),
							val = void 0;
						if (allowSeparators && 95 === code)
							isLegacyOctalNumericLiteral &&
								this.raiseRecoverable(
									this.pos,
									'Numeric separator is not allowed in legacy octal numeric literals',
								),
								95 === lastCode &&
									this.raiseRecoverable(
										this.pos,
										'Numeric separator must be exactly one underscore',
									),
								0 === i &&
									this.raiseRecoverable(
										this.pos,
										'Numeric separator is not allowed at the first of digits',
									),
								(lastCode = code);
						else {
							if (
								(val =
									code >= 97
										? code - 97 + 10
										: code >= 65
										? code - 65 + 10
										: code >= 48 && code <= 57
										? code - 48
										: 1 / 0) >= radix
							)
								break;
							(lastCode = code), (total = total * radix + val);
						}
					}
					return (
						allowSeparators &&
							95 === lastCode &&
							this.raiseRecoverable(
								this.pos - 1,
								'Numeric separator is not allowed at the last of digits',
							),
						this.pos === start ||
						(null != len && this.pos - start !== len)
							? null
							: total
					);
				}),
				(pp$9.readRadixNumber = function (radix) {
					var start = this.pos;
					this.pos += 2;
					var val = this.readInt(radix);
					return (
						null == val &&
							this.raise(
								this.start + 2,
								'Expected number in radix ' + radix,
							),
						this.options.ecmaVersion >= 11 &&
						110 === this.input.charCodeAt(this.pos)
							? ((val = stringToBigInt(
									this.input.slice(start, this.pos),
							  )),
							  ++this.pos)
							: isIdentifierStart(this.fullCharCodeAtPos()) &&
							  this.raise(
									this.pos,
									'Identifier directly after number',
							  ),
						this.finishToken(types.num, val)
					);
				}),
				(pp$9.readNumber = function (startsWithDot) {
					var start = this.pos;
					startsWithDot ||
						null !== this.readInt(10, void 0, !0) ||
						this.raise(start, 'Invalid number');
					var octal =
						this.pos - start >= 2 &&
						48 === this.input.charCodeAt(start);
					octal && this.strict && this.raise(start, 'Invalid number');
					var next = this.input.charCodeAt(this.pos);
					if (
						!octal &&
						!startsWithDot &&
						this.options.ecmaVersion >= 11 &&
						110 === next
					) {
						var val$1 = stringToBigInt(
							this.input.slice(start, this.pos),
						);
						return (
							++this.pos,
							isIdentifierStart(this.fullCharCodeAtPos()) &&
								this.raise(
									this.pos,
									'Identifier directly after number',
								),
							this.finishToken(types.num, val$1)
						);
					}
					octal &&
						/[89]/.test(this.input.slice(start, this.pos)) &&
						(octal = !1),
						46 !== next ||
							octal ||
							(++this.pos,
							this.readInt(10),
							(next = this.input.charCodeAt(this.pos))),
						(69 !== next && 101 !== next) ||
							octal ||
							((43 !==
								(next = this.input.charCodeAt(++this.pos)) &&
								45 !== next) ||
								++this.pos,
							null === this.readInt(10) &&
								this.raise(start, 'Invalid number')),
						isIdentifierStart(this.fullCharCodeAtPos()) &&
							this.raise(
								this.pos,
								'Identifier directly after number',
							);
					var val = (function stringToNumber(
						str,
						isLegacyOctalNumericLiteral,
					) {
						return isLegacyOctalNumericLiteral
							? parseInt(str, 8)
							: parseFloat(str.replace(/_/g, ''));
					})(this.input.slice(start, this.pos), octal);
					return this.finishToken(types.num, val);
				}),
				(pp$9.readCodePoint = function () {
					var code;
					if (123 === this.input.charCodeAt(this.pos)) {
						this.options.ecmaVersion < 6 && this.unexpected();
						var codePos = ++this.pos;
						(code = this.readHexChar(
							this.input.indexOf('}', this.pos) - this.pos,
						)),
							++this.pos,
							code > 1114111 &&
								this.invalidStringToken(
									codePos,
									'Code point out of bounds',
								);
					} else code = this.readHexChar(4);
					return code;
				}),
				(pp$9.readString = function (quote) {
					for (var out = '', chunkStart = ++this.pos; ; ) {
						this.pos >= this.input.length &&
							this.raise(
								this.start,
								'Unterminated string constant',
							);
						var ch = this.input.charCodeAt(this.pos);
						if (ch === quote) break;
						92 === ch
							? ((out += this.input.slice(chunkStart, this.pos)),
							  (out += this.readEscapedChar(!1)),
							  (chunkStart = this.pos))
							: (isNewLine(ch, this.options.ecmaVersion >= 10) &&
									this.raise(
										this.start,
										'Unterminated string constant',
									),
							  ++this.pos);
					}
					return (
						(out += this.input.slice(chunkStart, this.pos++)),
						this.finishToken(types.string, out)
					);
				});
			var INVALID_TEMPLATE_ESCAPE_ERROR = {};
			(pp$9.tryReadTemplateToken = function () {
				this.inTemplateElement = !0;
				try {
					this.readTmplToken();
				} catch (err) {
					if (err !== INVALID_TEMPLATE_ESCAPE_ERROR) throw err;
					this.readInvalidTemplateToken();
				}
				this.inTemplateElement = !1;
			}),
				(pp$9.invalidStringToken = function (position, message) {
					if (this.inTemplateElement && this.options.ecmaVersion >= 9)
						throw INVALID_TEMPLATE_ESCAPE_ERROR;
					this.raise(position, message);
				}),
				(pp$9.readTmplToken = function () {
					for (var out = '', chunkStart = this.pos; ; ) {
						this.pos >= this.input.length &&
							this.raise(this.start, 'Unterminated template');
						var ch = this.input.charCodeAt(this.pos);
						if (
							96 === ch ||
							(36 === ch &&
								123 === this.input.charCodeAt(this.pos + 1))
						)
							return this.pos !== this.start ||
								(this.type !== types.template &&
									this.type !== types.invalidTemplate)
								? ((out += this.input.slice(
										chunkStart,
										this.pos,
								  )),
								  this.finishToken(types.template, out))
								: 36 === ch
								? ((this.pos += 2),
								  this.finishToken(types.dollarBraceL))
								: (++this.pos,
								  this.finishToken(types.backQuote));
						if (92 === ch)
							(out += this.input.slice(chunkStart, this.pos)),
								(out += this.readEscapedChar(!0)),
								(chunkStart = this.pos);
						else if (isNewLine(ch)) {
							switch (
								((out += this.input.slice(
									chunkStart,
									this.pos,
								)),
								++this.pos,
								ch)
							) {
								case 13:
									10 === this.input.charCodeAt(this.pos) &&
										++this.pos;
								case 10:
									out += '\n';
									break;
								default:
									out += String.fromCharCode(ch);
							}
							this.options.locations &&
								(++this.curLine, (this.lineStart = this.pos)),
								(chunkStart = this.pos);
						} else ++this.pos;
					}
				}),
				(pp$9.readInvalidTemplateToken = function () {
					for (; this.pos < this.input.length; this.pos++)
						switch (this.input[this.pos]) {
							case '\\':
								++this.pos;
								break;
							case '$':
								if ('{' !== this.input[this.pos + 1]) break;
							case '`':
								return this.finishToken(
									types.invalidTemplate,
									this.input.slice(this.start, this.pos),
								);
						}
					this.raise(this.start, 'Unterminated template');
				}),
				(pp$9.readEscapedChar = function (inTemplate) {
					var ch = this.input.charCodeAt(++this.pos);
					switch ((++this.pos, ch)) {
						case 110:
							return '\n';
						case 114:
							return '\r';
						case 120:
							return String.fromCharCode(this.readHexChar(2));
						case 117:
							return codePointToString$1(this.readCodePoint());
						case 116:
							return '\t';
						case 98:
							return '\b';
						case 118:
							return '\v';
						case 102:
							return '\f';
						case 13:
							10 === this.input.charCodeAt(this.pos) &&
								++this.pos;
						case 10:
							return (
								this.options.locations &&
									((this.lineStart = this.pos),
									++this.curLine),
								''
							);
						case 56:
						case 57:
							if (inTemplate) {
								var codePos = this.pos - 1;
								return (
									this.invalidStringToken(
										codePos,
										'Invalid escape sequence in template string',
									),
									null
								);
							}
						default:
							if (ch >= 48 && ch <= 55) {
								var octalStr = this.input
										.substr(this.pos - 1, 3)
										.match(/^[0-7]+/)[0],
									octal = parseInt(octalStr, 8);
								return (
									octal > 255 &&
										((octalStr = octalStr.slice(0, -1)),
										(octal = parseInt(octalStr, 8))),
									(this.pos += octalStr.length - 1),
									(ch = this.input.charCodeAt(this.pos)),
									('0' === octalStr &&
										56 !== ch &&
										57 !== ch) ||
										(!this.strict && !inTemplate) ||
										this.invalidStringToken(
											this.pos - 1 - octalStr.length,
											inTemplate
												? 'Octal literal in template string'
												: 'Octal literal in strict mode',
										),
									String.fromCharCode(octal)
								);
							}
							return isNewLine(ch) ? '' : String.fromCharCode(ch);
					}
				}),
				(pp$9.readHexChar = function (len) {
					var codePos = this.pos,
						n = this.readInt(16, len);
					return (
						null === n &&
							this.invalidStringToken(
								codePos,
								'Bad character escape sequence',
							),
						n
					);
				}),
				(pp$9.readWord1 = function () {
					this.containsEsc = !1;
					for (
						var word = '',
							first = !0,
							chunkStart = this.pos,
							astral = this.options.ecmaVersion >= 6;
						this.pos < this.input.length;

					) {
						var ch = this.fullCharCodeAtPos();
						if (isIdentifierChar(ch, astral))
							this.pos += ch <= 65535 ? 1 : 2;
						else {
							if (92 !== ch) break;
							(this.containsEsc = !0),
								(word += this.input.slice(
									chunkStart,
									this.pos,
								));
							var escStart = this.pos;
							117 !== this.input.charCodeAt(++this.pos) &&
								this.invalidStringToken(
									this.pos,
									'Expecting Unicode escape sequence \\uXXXX',
								),
								++this.pos;
							var esc = this.readCodePoint();
							(first ? isIdentifierStart : isIdentifierChar)(
								esc,
								astral,
							) ||
								this.invalidStringToken(
									escStart,
									'Invalid Unicode escape',
								),
								(word += codePointToString$1(esc)),
								(chunkStart = this.pos);
						}
						first = !1;
					}
					return word + this.input.slice(chunkStart, this.pos);
				}),
				(pp$9.readWord = function () {
					var word = this.readWord1(),
						type = types.name;
					return (
						this.keywords.test(word) && (type = keywords$1[word]),
						this.finishToken(type, word)
					);
				});
			var version = '7.4.1';
			function parse(input, options) {
				return Parser.parse(input, options);
			}
			function parseExpressionAt(input, pos, options) {
				return Parser.parseExpressionAt(input, pos, options);
			}
			function tokenizer(input, options) {
				return Parser.tokenizer(input, options);
			}
			Parser.acorn = {
				Parser,
				version,
				defaultOptions,
				Position,
				SourceLocation,
				getLineInfo,
				Node,
				TokenType,
				tokTypes: types,
				keywordTypes: keywords$1,
				TokContext,
				tokContexts: types$1,
				isIdentifierChar,
				isIdentifierStart,
				Token,
				isNewLine,
				lineBreak,
				lineBreakG,
				nonASCIIwhitespace,
			};
		},
		'./node_modules/assert/build/assert.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var process = __webpack_require__(
				'./node_modules/process/browser.js',
			);
			function _typeof(o) {
				return (
					(_typeof =
						'function' == typeof Symbol &&
						'symbol' == typeof Symbol.iterator
							? function (o) {
									return typeof o;
							  }
							: function (o) {
									return o &&
										'function' == typeof Symbol &&
										o.constructor === Symbol &&
										o !== Symbol.prototype
										? 'symbol'
										: typeof o;
							  }),
					_typeof(o)
				);
			}
			function _defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					(descriptor.enumerable = descriptor.enumerable || !1),
						(descriptor.configurable = !0),
						'value' in descriptor && (descriptor.writable = !0),
						Object.defineProperty(
							target,
							((arg = descriptor.key),
							(key = void 0),
							(key = (function _toPrimitive(input, hint) {
								if (
									'object' !== _typeof(input) ||
									null === input
								)
									return input;
								var prim = input[Symbol.toPrimitive];
								if (void 0 !== prim) {
									var res = prim.call(
										input,
										hint || 'default',
									);
									if ('object' !== _typeof(res)) return res;
									throw new TypeError(
										'@@toPrimitive must return a primitive value.',
									);
								}
								return ('string' === hint ? String : Number)(
									input,
								);
							})(arg, 'string')),
							'symbol' === _typeof(key) ? key : String(key)),
							descriptor,
						);
				}
				var arg, key;
			}
			function _createClass(Constructor, protoProps, staticProps) {
				return (
					protoProps &&
						_defineProperties(Constructor.prototype, protoProps),
					staticProps && _defineProperties(Constructor, staticProps),
					Object.defineProperty(Constructor, 'prototype', {
						writable: !1,
					}),
					Constructor
				);
			}
			var isDeepEqual,
				isDeepStrictEqual,
				_require$codes = __webpack_require__(
					'./node_modules/assert/build/internal/errors.js',
				).codes,
				ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,
				ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
				ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,
				ERR_INVALID_RETURN_VALUE =
					_require$codes.ERR_INVALID_RETURN_VALUE,
				ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
				AssertionError = __webpack_require__(
					'./node_modules/assert/build/internal/assert/assertion_error.js',
				),
				inspect = __webpack_require__(
					'./node_modules/util/util.js',
				).inspect,
				_require$types = __webpack_require__(
					'./node_modules/util/util.js',
				).types,
				isPromise = _require$types.isPromise,
				isRegExp = _require$types.isRegExp,
				objectAssign = __webpack_require__(
					'./node_modules/object.assign/polyfill.js',
				)(),
				objectIs = __webpack_require__(
					'./node_modules/object-is/polyfill.js',
				)(),
				RegExpPrototypeTest = __webpack_require__(
					'./node_modules/assert/node_modules/call-bind/callBound.js',
				)('RegExp.prototype.test');
			new Map();
			function lazyLoadComparison() {
				var comparison = __webpack_require__(
					'./node_modules/assert/build/internal/util/comparisons.js',
				);
				(isDeepEqual = comparison.isDeepEqual),
					(isDeepStrictEqual = comparison.isDeepStrictEqual);
			}
			var warned = !1,
				assert = (module.exports = ok),
				NO_EXCEPTION_SENTINEL = {};
			function innerFail(obj) {
				if (obj.message instanceof Error) throw obj.message;
				throw new AssertionError(obj);
			}
			function innerOk(fn, argLen, value, message) {
				if (!value) {
					var generatedMessage = !1;
					if (0 === argLen)
						(generatedMessage = !0),
							(message =
								'No value argument passed to `assert.ok()`');
					else if (message instanceof Error) throw message;
					var err = new AssertionError({
						actual: value,
						expected: !0,
						message,
						operator: '==',
						stackStartFn: fn,
					});
					throw ((err.generatedMessage = generatedMessage), err);
				}
			}
			function ok() {
				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				)
					args[_key] = arguments[_key];
				innerOk.apply(void 0, [ok, args.length].concat(args));
			}
			(assert.fail = function fail(
				actual,
				expected,
				message,
				operator,
				stackStartFn,
			) {
				var internalMessage,
					argsLen = arguments.length;
				if (0 === argsLen) internalMessage = 'Failed';
				else if (1 === argsLen) (message = actual), (actual = void 0);
				else {
					if (!1 === warned)
						(warned = !0),
							(process.emitWarning
								? process.emitWarning
								: console.warn.bind(console))(
								'assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.',
								'DeprecationWarning',
								'DEP0094',
							);
					2 === argsLen && (operator = '!=');
				}
				if (message instanceof Error) throw message;
				var errArgs = {
					actual,
					expected,
					operator: void 0 === operator ? 'fail' : operator,
					stackStartFn: stackStartFn || fail,
				};
				void 0 !== message && (errArgs.message = message);
				var err = new AssertionError(errArgs);
				throw (
					(internalMessage &&
						((err.message = internalMessage),
						(err.generatedMessage = !0)),
					err)
				);
			}),
				(assert.AssertionError = AssertionError),
				(assert.ok = ok),
				(assert.equal = function equal(actual, expected, message) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					actual != expected &&
						innerFail({
							actual,
							expected,
							message,
							operator: '==',
							stackStartFn: equal,
						});
				}),
				(assert.notEqual = function notEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					actual == expected &&
						innerFail({
							actual,
							expected,
							message,
							operator: '!=',
							stackStartFn: notEqual,
						});
				}),
				(assert.deepEqual = function deepEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					void 0 === isDeepEqual && lazyLoadComparison(),
						isDeepEqual(actual, expected) ||
							innerFail({
								actual,
								expected,
								message,
								operator: 'deepEqual',
								stackStartFn: deepEqual,
							});
				}),
				(assert.notDeepEqual = function notDeepEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					void 0 === isDeepEqual && lazyLoadComparison(),
						isDeepEqual(actual, expected) &&
							innerFail({
								actual,
								expected,
								message,
								operator: 'notDeepEqual',
								stackStartFn: notDeepEqual,
							});
				}),
				(assert.deepStrictEqual = function deepStrictEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					void 0 === isDeepEqual && lazyLoadComparison(),
						isDeepStrictEqual(actual, expected) ||
							innerFail({
								actual,
								expected,
								message,
								operator: 'deepStrictEqual',
								stackStartFn: deepStrictEqual,
							});
				}),
				(assert.notDeepStrictEqual = function notDeepStrictEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					void 0 === isDeepEqual && lazyLoadComparison();
					isDeepStrictEqual(actual, expected) &&
						innerFail({
							actual,
							expected,
							message,
							operator: 'notDeepStrictEqual',
							stackStartFn: notDeepStrictEqual,
						});
				}),
				(assert.strictEqual = function strictEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					objectIs(actual, expected) ||
						innerFail({
							actual,
							expected,
							message,
							operator: 'strictEqual',
							stackStartFn: strictEqual,
						});
				}),
				(assert.notStrictEqual = function notStrictEqual(
					actual,
					expected,
					message,
				) {
					if (arguments.length < 2)
						throw new ERR_MISSING_ARGS('actual', 'expected');
					objectIs(actual, expected) &&
						innerFail({
							actual,
							expected,
							message,
							operator: 'notStrictEqual',
							stackStartFn: notStrictEqual,
						});
				});
			var Comparison = _createClass(function Comparison(
				obj,
				keys,
				actual,
			) {
				var _this = this;
				!(function _classCallCheck(instance, Constructor) {
					if (!(instance instanceof Constructor))
						throw new TypeError(
							'Cannot call a class as a function',
						);
				})(this, Comparison),
					keys.forEach(function (key) {
						key in obj &&
							(void 0 !== actual &&
							'string' == typeof actual[key] &&
							isRegExp(obj[key]) &&
							RegExpPrototypeTest(obj[key], actual[key])
								? (_this[key] = actual[key])
								: (_this[key] = obj[key]));
					});
			});
			function expectedException(actual, expected, msg, fn) {
				if ('function' != typeof expected) {
					if (isRegExp(expected))
						return RegExpPrototypeTest(expected, actual);
					if (2 === arguments.length)
						throw new ERR_INVALID_ARG_TYPE(
							'expected',
							['Function', 'RegExp'],
							expected,
						);
					if ('object' !== _typeof(actual) || null === actual) {
						var err = new AssertionError({
							actual,
							expected,
							message: msg,
							operator: 'deepStrictEqual',
							stackStartFn: fn,
						});
						throw ((err.operator = fn.name), err);
					}
					var keys = Object.keys(expected);
					if (expected instanceof Error) keys.push('name', 'message');
					else if (0 === keys.length)
						throw new ERR_INVALID_ARG_VALUE(
							'error',
							expected,
							'may not be an empty object',
						);
					return (
						void 0 === isDeepEqual && lazyLoadComparison(),
						keys.forEach(function (key) {
							('string' == typeof actual[key] &&
								isRegExp(expected[key]) &&
								RegExpPrototypeTest(
									expected[key],
									actual[key],
								)) ||
								(function compareExceptionKey(
									actual,
									expected,
									key,
									message,
									keys,
									fn,
								) {
									if (
										!(key in actual) ||
										!isDeepStrictEqual(
											actual[key],
											expected[key],
										)
									) {
										if (!message) {
											var a = new Comparison(
													actual,
													keys,
												),
												b = new Comparison(
													expected,
													keys,
													actual,
												),
												err = new AssertionError({
													actual: a,
													expected: b,
													operator: 'deepStrictEqual',
													stackStartFn: fn,
												});
											throw (
												((err.actual = actual),
												(err.expected = expected),
												(err.operator = fn.name),
												err)
											);
										}
										innerFail({
											actual,
											expected,
											message,
											operator: fn.name,
											stackStartFn: fn,
										});
									}
								})(actual, expected, key, msg, keys, fn);
						}),
						!0
					);
				}
				return (
					(void 0 !== expected.prototype &&
						actual instanceof expected) ||
					(!Error.isPrototypeOf(expected) &&
						!0 === expected.call({}, actual))
				);
			}
			function getActual(fn) {
				if ('function' != typeof fn)
					throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);
				try {
					fn();
				} catch (e) {
					return e;
				}
				return NO_EXCEPTION_SENTINEL;
			}
			function checkIsPromise(obj) {
				return (
					isPromise(obj) ||
					(null !== obj &&
						'object' === _typeof(obj) &&
						'function' == typeof obj.then &&
						'function' == typeof obj.catch)
				);
			}
			function waitForActual(promiseFn) {
				return Promise.resolve().then(function () {
					var resultPromise;
					if ('function' == typeof promiseFn) {
						if (!checkIsPromise((resultPromise = promiseFn())))
							throw new ERR_INVALID_RETURN_VALUE(
								'instance of Promise',
								'promiseFn',
								resultPromise,
							);
					} else {
						if (!checkIsPromise(promiseFn))
							throw new ERR_INVALID_ARG_TYPE(
								'promiseFn',
								['Function', 'Promise'],
								promiseFn,
							);
						resultPromise = promiseFn;
					}
					return Promise.resolve()
						.then(function () {
							return resultPromise;
						})
						.then(function () {
							return NO_EXCEPTION_SENTINEL;
						})
						.catch(function (e) {
							return e;
						});
				});
			}
			function expectsError(stackStartFn, actual, error, message) {
				if ('string' == typeof error) {
					if (4 === arguments.length)
						throw new ERR_INVALID_ARG_TYPE(
							'error',
							['Object', 'Error', 'Function', 'RegExp'],
							error,
						);
					if ('object' === _typeof(actual) && null !== actual) {
						if (actual.message === error)
							throw new ERR_AMBIGUOUS_ARGUMENT(
								'error/message',
								'The error message "'.concat(
									actual.message,
									'" is identical to the message.',
								),
							);
					} else if (actual === error)
						throw new ERR_AMBIGUOUS_ARGUMENT(
							'error/message',
							'The error "'.concat(
								actual,
								'" is identical to the message.',
							),
						);
					(message = error), (error = void 0);
				} else if (
					null != error &&
					'object' !== _typeof(error) &&
					'function' != typeof error
				)
					throw new ERR_INVALID_ARG_TYPE(
						'error',
						['Object', 'Error', 'Function', 'RegExp'],
						error,
					);
				if (actual === NO_EXCEPTION_SENTINEL) {
					var details = '';
					error &&
						error.name &&
						(details += ' ('.concat(error.name, ')')),
						(details += message ? ': '.concat(message) : '.');
					var fnType =
						'rejects' === stackStartFn.name
							? 'rejection'
							: 'exception';
					innerFail({
						actual: void 0,
						expected: error,
						operator: stackStartFn.name,
						message: 'Missing expected '
							.concat(fnType)
							.concat(details),
						stackStartFn,
					});
				}
				if (
					error &&
					!expectedException(actual, error, message, stackStartFn)
				)
					throw actual;
			}
			function expectsNoError(stackStartFn, actual, error, message) {
				if (actual !== NO_EXCEPTION_SENTINEL) {
					if (
						('string' == typeof error &&
							((message = error), (error = void 0)),
						!error || expectedException(actual, error))
					) {
						var details = message ? ': '.concat(message) : '.',
							fnType =
								'doesNotReject' === stackStartFn.name
									? 'rejection'
									: 'exception';
						innerFail({
							actual,
							expected: error,
							operator: stackStartFn.name,
							message:
								'Got unwanted '
									.concat(fnType)
									.concat(details, '\n') +
								'Actual message: "'.concat(
									actual && actual.message,
									'"',
								),
							stackStartFn,
						});
					}
					throw actual;
				}
			}
			function internalMatch(string, regexp, message, fn, fnName) {
				if (!isRegExp(regexp))
					throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);
				var match = 'match' === fnName;
				if (
					'string' != typeof string ||
					RegExpPrototypeTest(regexp, string) !== match
				) {
					if (message instanceof Error) throw message;
					var generatedMessage = !message;
					message =
						message ||
						('string' != typeof string
							? 'The "string" argument must be of type string. Received type ' +
							  ''
									.concat(_typeof(string), ' (')
									.concat(inspect(string), ')')
							: (match
									? 'The input did not match the regular expression '
									: 'The input was expected to not match the regular expression ') +
							  ''
									.concat(inspect(regexp), '. Input:\n\n')
									.concat(inspect(string), '\n'));
					var err = new AssertionError({
						actual: string,
						expected: regexp,
						message,
						operator: fnName,
						stackStartFn: fn,
					});
					throw ((err.generatedMessage = generatedMessage), err);
				}
			}
			function strict() {
				for (
					var _len6 = arguments.length,
						args = new Array(_len6),
						_key6 = 0;
					_key6 < _len6;
					_key6++
				)
					args[_key6] = arguments[_key6];
				innerOk.apply(void 0, [strict, args.length].concat(args));
			}
			(assert.throws = function throws(promiseFn) {
				for (
					var _len2 = arguments.length,
						args = new Array(_len2 > 1 ? _len2 - 1 : 0),
						_key2 = 1;
					_key2 < _len2;
					_key2++
				)
					args[_key2 - 1] = arguments[_key2];
				expectsError.apply(
					void 0,
					[throws, getActual(promiseFn)].concat(args),
				);
			}),
				(assert.rejects = function rejects(promiseFn) {
					for (
						var _len3 = arguments.length,
							args = new Array(_len3 > 1 ? _len3 - 1 : 0),
							_key3 = 1;
						_key3 < _len3;
						_key3++
					)
						args[_key3 - 1] = arguments[_key3];
					return waitForActual(promiseFn).then(function (result) {
						return expectsError.apply(
							void 0,
							[rejects, result].concat(args),
						);
					});
				}),
				(assert.doesNotThrow = function doesNotThrow(fn) {
					for (
						var _len4 = arguments.length,
							args = new Array(_len4 > 1 ? _len4 - 1 : 0),
							_key4 = 1;
						_key4 < _len4;
						_key4++
					)
						args[_key4 - 1] = arguments[_key4];
					expectsNoError.apply(
						void 0,
						[doesNotThrow, getActual(fn)].concat(args),
					);
				}),
				(assert.doesNotReject = function doesNotReject(fn) {
					for (
						var _len5 = arguments.length,
							args = new Array(_len5 > 1 ? _len5 - 1 : 0),
							_key5 = 1;
						_key5 < _len5;
						_key5++
					)
						args[_key5 - 1] = arguments[_key5];
					return waitForActual(fn).then(function (result) {
						return expectsNoError.apply(
							void 0,
							[doesNotReject, result].concat(args),
						);
					});
				}),
				(assert.ifError = function ifError(err) {
					if (null != err) {
						var message = 'ifError got unwanted exception: ';
						'object' === _typeof(err) &&
						'string' == typeof err.message
							? 0 === err.message.length && err.constructor
								? (message += err.constructor.name)
								: (message += err.message)
							: (message += inspect(err));
						var newErr = new AssertionError({
								actual: err,
								expected: null,
								operator: 'ifError',
								message,
								stackStartFn: ifError,
							}),
							origStack = err.stack;
						if ('string' == typeof origStack) {
							var tmp2 = origStack.split('\n');
							tmp2.shift();
							for (
								var tmp1 = newErr.stack.split('\n'), i = 0;
								i < tmp2.length;
								i++
							) {
								var pos = tmp1.indexOf(tmp2[i]);
								if (-1 !== pos) {
									tmp1 = tmp1.slice(0, pos);
									break;
								}
							}
							newErr.stack = ''
								.concat(tmp1.join('\n'), '\n')
								.concat(tmp2.join('\n'));
						}
						throw newErr;
					}
				}),
				(assert.match = function match(string, regexp, message) {
					internalMatch(string, regexp, message, match, 'match');
				}),
				(assert.doesNotMatch = function doesNotMatch(
					string,
					regexp,
					message,
				) {
					internalMatch(
						string,
						regexp,
						message,
						doesNotMatch,
						'doesNotMatch',
					);
				}),
				(assert.strict = objectAssign(strict, assert, {
					equal: assert.strictEqual,
					deepEqual: assert.deepStrictEqual,
					notEqual: assert.notStrictEqual,
					notDeepEqual: assert.notDeepStrictEqual,
				})),
				(assert.strict.strict = assert.strict);
		},
		'./node_modules/assert/build/internal/assert/assertion_error.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var process = __webpack_require__(
				'./node_modules/process/browser.js',
			);
			function ownKeys(e, r) {
				var t = Object.keys(e);
				if (Object.getOwnPropertySymbols) {
					var o = Object.getOwnPropertySymbols(e);
					r &&
						(o = o.filter(function (r) {
							return Object.getOwnPropertyDescriptor(
								e,
								r,
							).enumerable;
						})),
						t.push.apply(t, o);
				}
				return t;
			}
			function _objectSpread(e) {
				for (var r = 1; r < arguments.length; r++) {
					var t = null != arguments[r] ? arguments[r] : {};
					r % 2
						? ownKeys(Object(t), !0).forEach(function (r) {
								_defineProperty(e, r, t[r]);
						  })
						: Object.getOwnPropertyDescriptors
						? Object.defineProperties(
								e,
								Object.getOwnPropertyDescriptors(t),
						  )
						: ownKeys(Object(t)).forEach(function (r) {
								Object.defineProperty(
									e,
									r,
									Object.getOwnPropertyDescriptor(t, r),
								);
						  });
				}
				return e;
			}
			function _defineProperty(obj, key, value) {
				return (
					(key = _toPropertyKey(key)) in obj
						? Object.defineProperty(obj, key, {
								value,
								enumerable: !0,
								configurable: !0,
								writable: !0,
						  })
						: (obj[key] = value),
					obj
				);
			}
			function _defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					(descriptor.enumerable = descriptor.enumerable || !1),
						(descriptor.configurable = !0),
						'value' in descriptor && (descriptor.writable = !0),
						Object.defineProperty(
							target,
							_toPropertyKey(descriptor.key),
							descriptor,
						);
				}
			}
			function _toPropertyKey(arg) {
				var key = (function _toPrimitive(input, hint) {
					if ('object' !== _typeof(input) || null === input)
						return input;
					var prim = input[Symbol.toPrimitive];
					if (void 0 !== prim) {
						var res = prim.call(input, hint || 'default');
						if ('object' !== _typeof(res)) return res;
						throw new TypeError(
							'@@toPrimitive must return a primitive value.',
						);
					}
					return ('string' === hint ? String : Number)(input);
				})(arg, 'string');
				return 'symbol' === _typeof(key) ? key : String(key);
			}
			function _possibleConstructorReturn(self, call) {
				if (
					call &&
					('object' === _typeof(call) || 'function' == typeof call)
				)
					return call;
				if (void 0 !== call)
					throw new TypeError(
						'Derived constructors may only return object or undefined',
					);
				return _assertThisInitialized(self);
			}
			function _assertThisInitialized(self) {
				if (void 0 === self)
					throw new ReferenceError(
						"this hasn't been initialised - super() hasn't been called",
					);
				return self;
			}
			function _wrapNativeSuper(Class) {
				var _cache = 'function' == typeof Map ? new Map() : void 0;
				return (
					(_wrapNativeSuper = function _wrapNativeSuper(Class) {
						if (
							null === Class ||
							!(function _isNativeFunction(fn) {
								return (
									-1 !==
									Function.toString
										.call(fn)
										.indexOf('[native code]')
								);
							})(Class)
						)
							return Class;
						if ('function' != typeof Class)
							throw new TypeError(
								'Super expression must either be null or a function',
							);
						if (void 0 !== _cache) {
							if (_cache.has(Class)) return _cache.get(Class);
							_cache.set(Class, Wrapper);
						}
						function Wrapper() {
							return _construct(
								Class,
								arguments,
								_getPrototypeOf(this).constructor,
							);
						}
						return (
							(Wrapper.prototype = Object.create(
								Class.prototype,
								{
									constructor: {
										value: Wrapper,
										enumerable: !1,
										writable: !0,
										configurable: !0,
									},
								},
							)),
							_setPrototypeOf(Wrapper, Class)
						);
					}),
					_wrapNativeSuper(Class)
				);
			}
			function _construct(Parent, args, Class) {
				return (
					(_construct = _isNativeReflectConstruct()
						? Reflect.construct.bind()
						: function _construct(Parent, args, Class) {
								var a = [null];
								a.push.apply(a, args);
								var instance = new (Function.bind.apply(
									Parent,
									a,
								))();
								return (
									Class &&
										_setPrototypeOf(
											instance,
											Class.prototype,
										),
									instance
								);
						  }),
					_construct.apply(null, arguments)
				);
			}
			function _isNativeReflectConstruct() {
				if ('undefined' == typeof Reflect || !Reflect.construct)
					return !1;
				if (Reflect.construct.sham) return !1;
				if ('function' == typeof Proxy) return !0;
				try {
					return (
						Boolean.prototype.valueOf.call(
							Reflect.construct(Boolean, [], function () {}),
						),
						!0
					);
				} catch (e) {
					return !1;
				}
			}
			function _setPrototypeOf(o, p) {
				return (
					(_setPrototypeOf = Object.setPrototypeOf
						? Object.setPrototypeOf.bind()
						: function _setPrototypeOf(o, p) {
								return (o.__proto__ = p), o;
						  }),
					_setPrototypeOf(o, p)
				);
			}
			function _getPrototypeOf(o) {
				return (
					(_getPrototypeOf = Object.setPrototypeOf
						? Object.getPrototypeOf.bind()
						: function _getPrototypeOf(o) {
								return o.__proto__ || Object.getPrototypeOf(o);
						  }),
					_getPrototypeOf(o)
				);
			}
			function _typeof(o) {
				return (
					(_typeof =
						'function' == typeof Symbol &&
						'symbol' == typeof Symbol.iterator
							? function (o) {
									return typeof o;
							  }
							: function (o) {
									return o &&
										'function' == typeof Symbol &&
										o.constructor === Symbol &&
										o !== Symbol.prototype
										? 'symbol'
										: typeof o;
							  }),
					_typeof(o)
				);
			}
			var inspect = __webpack_require__(
					'./node_modules/util/util.js',
				).inspect,
				ERR_INVALID_ARG_TYPE = __webpack_require__(
					'./node_modules/assert/build/internal/errors.js',
				).codes.ERR_INVALID_ARG_TYPE;
			function endsWith(str, search, this_len) {
				return (
					(void 0 === this_len || this_len > str.length) &&
						(this_len = str.length),
					str.substring(this_len - search.length, this_len) === search
				);
			}
			var blue = '',
				green = '',
				red = '',
				white = '',
				kReadableOperator = {
					deepStrictEqual:
						'Expected values to be strictly deep-equal:',
					strictEqual: 'Expected values to be strictly equal:',
					strictEqualObject:
						'Expected "actual" to be reference-equal to "expected":',
					deepEqual: 'Expected values to be loosely deep-equal:',
					equal: 'Expected values to be loosely equal:',
					notDeepStrictEqual:
						'Expected "actual" not to be strictly deep-equal to:',
					notStrictEqual:
						'Expected "actual" to be strictly unequal to:',
					notStrictEqualObject:
						'Expected "actual" not to be reference-equal to "expected":',
					notDeepEqual:
						'Expected "actual" not to be loosely deep-equal to:',
					notEqual: 'Expected "actual" to be loosely unequal to:',
					notIdentical: 'Values identical but not reference-equal:',
				};
			function copyError(source) {
				var keys = Object.keys(source),
					target = Object.create(Object.getPrototypeOf(source));
				return (
					keys.forEach(function (key) {
						target[key] = source[key];
					}),
					Object.defineProperty(target, 'message', {
						value: source.message,
					}),
					target
				);
			}
			function inspectValue(val) {
				return inspect(val, {
					compact: !1,
					customInspect: !1,
					depth: 1e3,
					maxArrayLength: 1 / 0,
					showHidden: !1,
					breakLength: 1 / 0,
					showProxy: !1,
					sorted: !0,
					getters: !0,
				});
			}
			function createErrDiff(actual, expected, operator) {
				var other = '',
					res = '',
					lastPos = 0,
					end = '',
					skipped = !1,
					actualInspected = inspectValue(actual),
					actualLines = actualInspected.split('\n'),
					expectedLines = inspectValue(expected).split('\n'),
					i = 0,
					indicator = '';
				if (
					('strictEqual' === operator &&
						'object' === _typeof(actual) &&
						'object' === _typeof(expected) &&
						null !== actual &&
						null !== expected &&
						(operator = 'strictEqualObject'),
					1 === actualLines.length &&
						1 === expectedLines.length &&
						actualLines[0] !== expectedLines[0])
				) {
					var inputLength =
						actualLines[0].length + expectedLines[0].length;
					if (inputLength <= 10) {
						if (
							!(
								('object' === _typeof(actual) &&
									null !== actual) ||
								('object' === _typeof(expected) &&
									null !== expected) ||
								(0 === actual && 0 === expected)
							)
						)
							return (
								''.concat(kReadableOperator[operator], '\n\n') +
								''
									.concat(actualLines[0], ' !== ')
									.concat(expectedLines[0], '\n')
							);
					} else if ('strictEqualObject' !== operator) {
						if (
							inputLength <
							(process.stderr && process.stderr.isTTY
								? process.stderr.columns
								: 80)
						) {
							for (; actualLines[0][i] === expectedLines[0][i]; )
								i++;
							i > 2 &&
								((indicator = '\n  '.concat(
									(function repeat(str, count) {
										if (
											((count = Math.floor(count)),
											0 == str.length || 0 == count)
										)
											return '';
										var maxCount = str.length * count;
										for (
											count = Math.floor(
												Math.log(count) / Math.log(2),
											);
											count;

										)
											(str += str), count--;
										return (
											str +
											str.substring(
												0,
												maxCount - str.length,
											)
										);
									})(' ', i),
									'^',
								)),
								(i = 0));
						}
					}
				}
				for (
					var a = actualLines[actualLines.length - 1],
						b = expectedLines[expectedLines.length - 1];
					a === b &&
					(i++ < 2
						? (end = '\n  '.concat(a).concat(end))
						: (other = a),
					actualLines.pop(),
					expectedLines.pop(),
					0 !== actualLines.length && 0 !== expectedLines.length);

				)
					(a = actualLines[actualLines.length - 1]),
						(b = expectedLines[expectedLines.length - 1]);
				var maxLines = Math.max(
					actualLines.length,
					expectedLines.length,
				);
				if (0 === maxLines) {
					var _actualLines = actualInspected.split('\n');
					if (_actualLines.length > 30)
						for (
							_actualLines[26] = ''
								.concat(blue, '...')
								.concat(white);
							_actualLines.length > 27;

						)
							_actualLines.pop();
					return ''
						.concat(kReadableOperator.notIdentical, '\n\n')
						.concat(_actualLines.join('\n'), '\n');
				}
				i > 3 &&
					((end = '\n'.concat(blue, '...').concat(white).concat(end)),
					(skipped = !0)),
					'' !== other &&
						((end = '\n  '.concat(other).concat(end)),
						(other = ''));
				var printedLines = 0,
					msg =
						kReadableOperator[operator] +
						'\n'
							.concat(green, '+ actual')
							.concat(white, ' ')
							.concat(red, '- expected')
							.concat(white),
					skippedMsg = ' '
						.concat(blue, '...')
						.concat(white, ' Lines skipped');
				for (i = 0; i < maxLines; i++) {
					var cur = i - lastPos;
					if (actualLines.length < i + 1)
						cur > 1 &&
							i > 2 &&
							(cur > 4
								? ((res += '\n'
										.concat(blue, '...')
										.concat(white)),
								  (skipped = !0))
								: cur > 3 &&
								  ((res += '\n  '.concat(expectedLines[i - 2])),
								  printedLines++),
							(res += '\n  '.concat(expectedLines[i - 1])),
							printedLines++),
							(lastPos = i),
							(other += '\n'
								.concat(red, '-')
								.concat(white, ' ')
								.concat(expectedLines[i])),
							printedLines++;
					else if (expectedLines.length < i + 1)
						cur > 1 &&
							i > 2 &&
							(cur > 4
								? ((res += '\n'
										.concat(blue, '...')
										.concat(white)),
								  (skipped = !0))
								: cur > 3 &&
								  ((res += '\n  '.concat(actualLines[i - 2])),
								  printedLines++),
							(res += '\n  '.concat(actualLines[i - 1])),
							printedLines++),
							(lastPos = i),
							(res += '\n'
								.concat(green, '+')
								.concat(white, ' ')
								.concat(actualLines[i])),
							printedLines++;
					else {
						var expectedLine = expectedLines[i],
							actualLine = actualLines[i],
							divergingLines =
								actualLine !== expectedLine &&
								(!endsWith(actualLine, ',') ||
									actualLine.slice(0, -1) !== expectedLine);
						divergingLines &&
							endsWith(expectedLine, ',') &&
							expectedLine.slice(0, -1) === actualLine &&
							((divergingLines = !1), (actualLine += ',')),
							divergingLines
								? (cur > 1 &&
										i > 2 &&
										(cur > 4
											? ((res += '\n'
													.concat(blue, '...')
													.concat(white)),
											  (skipped = !0))
											: cur > 3 &&
											  ((res += '\n  '.concat(
													actualLines[i - 2],
											  )),
											  printedLines++),
										(res += '\n  '.concat(
											actualLines[i - 1],
										)),
										printedLines++),
								  (lastPos = i),
								  (res += '\n'
										.concat(green, '+')
										.concat(white, ' ')
										.concat(actualLine)),
								  (other += '\n'
										.concat(red, '-')
										.concat(white, ' ')
										.concat(expectedLine)),
								  (printedLines += 2))
								: ((res += other),
								  (other = ''),
								  (1 !== cur && 0 !== i) ||
										((res += '\n  '.concat(actualLine)),
										printedLines++));
					}
					if (printedLines > 20 && i < maxLines - 2)
						return (
							''
								.concat(msg)
								.concat(skippedMsg, '\n')
								.concat(res, '\n')
								.concat(blue, '...')
								.concat(white)
								.concat(other, '\n') +
							''.concat(blue, '...').concat(white)
						);
				}
				return ''
					.concat(msg)
					.concat(skipped ? skippedMsg : '', '\n')
					.concat(res)
					.concat(other)
					.concat(end)
					.concat(indicator);
			}
			var AssertionError = (function (_Error, _inspect$custom) {
				!(function _inherits(subClass, superClass) {
					if ('function' != typeof superClass && null !== superClass)
						throw new TypeError(
							'Super expression must either be null or a function',
						);
					(subClass.prototype = Object.create(
						superClass && superClass.prototype,
						{
							constructor: {
								value: subClass,
								writable: !0,
								configurable: !0,
							},
						},
					)),
						Object.defineProperty(subClass, 'prototype', {
							writable: !1,
						}),
						superClass && _setPrototypeOf(subClass, superClass);
				})(AssertionError, _Error);
				var _super = (function _createSuper(Derived) {
					var hasNativeReflectConstruct = _isNativeReflectConstruct();
					return function _createSuperInternal() {
						var result,
							Super = _getPrototypeOf(Derived);
						if (hasNativeReflectConstruct) {
							var NewTarget = _getPrototypeOf(this).constructor;
							result = Reflect.construct(
								Super,
								arguments,
								NewTarget,
							);
						} else result = Super.apply(this, arguments);
						return _possibleConstructorReturn(this, result);
					};
				})(AssertionError);
				function AssertionError(options) {
					var _this;
					if (
						((function _classCallCheck(instance, Constructor) {
							if (!(instance instanceof Constructor))
								throw new TypeError(
									'Cannot call a class as a function',
								);
						})(this, AssertionError),
						'object' !== _typeof(options) || null === options)
					)
						throw new ERR_INVALID_ARG_TYPE(
							'options',
							'Object',
							options,
						);
					var message = options.message,
						operator = options.operator,
						stackStartFn = options.stackStartFn,
						actual = options.actual,
						expected = options.expected,
						limit = Error.stackTraceLimit;
					if (((Error.stackTraceLimit = 0), null != message))
						_this = _super.call(this, String(message));
					else if (
						(process.stderr &&
							process.stderr.isTTY &&
							(process.stderr &&
							process.stderr.getColorDepth &&
							1 !== process.stderr.getColorDepth()
								? ((blue = '[34m'),
								  (green = '[32m'),
								  (white = '[39m'),
								  (red = '[31m'))
								: ((blue = ''),
								  (green = ''),
								  (white = ''),
								  (red = ''))),
						'object' === _typeof(actual) &&
							null !== actual &&
							'object' === _typeof(expected) &&
							null !== expected &&
							'stack' in actual &&
							actual instanceof Error &&
							'stack' in expected &&
							expected instanceof Error &&
							((actual = copyError(actual)),
							(expected = copyError(expected))),
						'deepStrictEqual' === operator ||
							'strictEqual' === operator)
					)
						_this = _super.call(
							this,
							createErrDiff(actual, expected, operator),
						);
					else if (
						'notDeepStrictEqual' === operator ||
						'notStrictEqual' === operator
					) {
						var base = kReadableOperator[operator],
							res = inspectValue(actual).split('\n');
						if (
							('notStrictEqual' === operator &&
								'object' === _typeof(actual) &&
								null !== actual &&
								(base = kReadableOperator.notStrictEqualObject),
							res.length > 30)
						)
							for (
								res[26] = ''.concat(blue, '...').concat(white);
								res.length > 27;

							)
								res.pop();
						_this =
							1 === res.length
								? _super.call(
										this,
										''.concat(base, ' ').concat(res[0]),
								  )
								: _super.call(
										this,
										''
											.concat(base, '\n\n')
											.concat(res.join('\n'), '\n'),
								  );
					} else {
						var _res = inspectValue(actual),
							other = '',
							knownOperators = kReadableOperator[operator];
						'notDeepEqual' === operator || 'notEqual' === operator
							? (_res = ''
									.concat(kReadableOperator[operator], '\n\n')
									.concat(_res)).length > 1024 &&
							  (_res = ''.concat(_res.slice(0, 1021), '...'))
							: ((other = ''.concat(inspectValue(expected))),
							  _res.length > 512 &&
									(_res = ''.concat(
										_res.slice(0, 509),
										'...',
									)),
							  other.length > 512 &&
									(other = ''.concat(
										other.slice(0, 509),
										'...',
									)),
							  'deepEqual' === operator || 'equal' === operator
									? (_res = ''
											.concat(knownOperators, '\n\n')
											.concat(
												_res,
												'\n\nshould equal\n\n',
											))
									: (other = ' '
											.concat(operator, ' ')
											.concat(other))),
							(_this = _super.call(
								this,
								''.concat(_res).concat(other),
							));
					}
					return (
						(Error.stackTraceLimit = limit),
						(_this.generatedMessage = !message),
						Object.defineProperty(
							_assertThisInitialized(_this),
							'name',
							{
								value: 'AssertionError [ERR_ASSERTION]',
								enumerable: !1,
								writable: !0,
								configurable: !0,
							},
						),
						(_this.code = 'ERR_ASSERTION'),
						(_this.actual = actual),
						(_this.expected = expected),
						(_this.operator = operator),
						Error.captureStackTrace &&
							Error.captureStackTrace(
								_assertThisInitialized(_this),
								stackStartFn,
							),
						_this.stack,
						(_this.name = 'AssertionError'),
						_possibleConstructorReturn(_this)
					);
				}
				return (
					(function _createClass(
						Constructor,
						protoProps,
						staticProps,
					) {
						return (
							protoProps &&
								_defineProperties(
									Constructor.prototype,
									protoProps,
								),
							staticProps &&
								_defineProperties(Constructor, staticProps),
							Object.defineProperty(Constructor, 'prototype', {
								writable: !1,
							}),
							Constructor
						);
					})(AssertionError, [
						{
							key: 'toString',
							value: function toString() {
								return ''
									.concat(this.name, ' [')
									.concat(this.code, ']: ')
									.concat(this.message);
							},
						},
						{
							key: _inspect$custom,
							value: function value(recurseTimes, ctx) {
								return inspect(
									this,
									_objectSpread(
										_objectSpread({}, ctx),
										{},
										{ customInspect: !1, depth: 0 },
									),
								);
							},
						},
					]),
					AssertionError
				);
			})(_wrapNativeSuper(Error), inspect.custom);
			module.exports = AssertionError;
		},
		'./node_modules/assert/build/internal/errors.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			function _typeof(o) {
				return (
					(_typeof =
						'function' == typeof Symbol &&
						'symbol' == typeof Symbol.iterator
							? function (o) {
									return typeof o;
							  }
							: function (o) {
									return o &&
										'function' == typeof Symbol &&
										o.constructor === Symbol &&
										o !== Symbol.prototype
										? 'symbol'
										: typeof o;
							  }),
					_typeof(o)
				);
			}
			function _defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];
					(descriptor.enumerable = descriptor.enumerable || !1),
						(descriptor.configurable = !0),
						'value' in descriptor && (descriptor.writable = !0),
						Object.defineProperty(
							target,
							((arg = descriptor.key),
							(key = void 0),
							(key = (function _toPrimitive(input, hint) {
								if (
									'object' !== _typeof(input) ||
									null === input
								)
									return input;
								var prim = input[Symbol.toPrimitive];
								if (void 0 !== prim) {
									var res = prim.call(
										input,
										hint || 'default',
									);
									if ('object' !== _typeof(res)) return res;
									throw new TypeError(
										'@@toPrimitive must return a primitive value.',
									);
								}
								return ('string' === hint ? String : Number)(
									input,
								);
							})(arg, 'string')),
							'symbol' === _typeof(key) ? key : String(key)),
							descriptor,
						);
				}
				var arg, key;
			}
			function _setPrototypeOf(o, p) {
				return (
					(_setPrototypeOf = Object.setPrototypeOf
						? Object.setPrototypeOf.bind()
						: function _setPrototypeOf(o, p) {
								return (o.__proto__ = p), o;
						  }),
					_setPrototypeOf(o, p)
				);
			}
			function _createSuper(Derived) {
				var hasNativeReflectConstruct =
					(function _isNativeReflectConstruct() {
						if ('undefined' == typeof Reflect || !Reflect.construct)
							return !1;
						if (Reflect.construct.sham) return !1;
						if ('function' == typeof Proxy) return !0;
						try {
							return (
								Boolean.prototype.valueOf.call(
									Reflect.construct(
										Boolean,
										[],
										function () {},
									),
								),
								!0
							);
						} catch (e) {
							return !1;
						}
					})();
				return function _createSuperInternal() {
					var result,
						Super = _getPrototypeOf(Derived);
					if (hasNativeReflectConstruct) {
						var NewTarget = _getPrototypeOf(this).constructor;
						result = Reflect.construct(Super, arguments, NewTarget);
					} else result = Super.apply(this, arguments);
					return (function _possibleConstructorReturn(self, call) {
						if (
							call &&
							('object' === _typeof(call) ||
								'function' == typeof call)
						)
							return call;
						if (void 0 !== call)
							throw new TypeError(
								'Derived constructors may only return object or undefined',
							);
						return (function _assertThisInitialized(self) {
							if (void 0 === self)
								throw new ReferenceError(
									"this hasn't been initialised - super() hasn't been called",
								);
							return self;
						})(self);
					})(this, result);
				};
			}
			function _getPrototypeOf(o) {
				return (
					(_getPrototypeOf = Object.setPrototypeOf
						? Object.getPrototypeOf.bind()
						: function _getPrototypeOf(o) {
								return o.__proto__ || Object.getPrototypeOf(o);
						  }),
					_getPrototypeOf(o)
				);
			}
			var assert,
				util,
				codes = {};
			function createErrorType(code, message, Base) {
				Base || (Base = Error);
				var NodeError = (function (_Base) {
					!(function _inherits(subClass, superClass) {
						if (
							'function' != typeof superClass &&
							null !== superClass
						)
							throw new TypeError(
								'Super expression must either be null or a function',
							);
						(subClass.prototype = Object.create(
							superClass && superClass.prototype,
							{
								constructor: {
									value: subClass,
									writable: !0,
									configurable: !0,
								},
							},
						)),
							Object.defineProperty(subClass, 'prototype', {
								writable: !1,
							}),
							superClass && _setPrototypeOf(subClass, superClass);
					})(NodeError, _Base);
					var _super = _createSuper(NodeError);
					function NodeError(arg1, arg2, arg3) {
						var _this;
						return (
							(function _classCallCheck(instance, Constructor) {
								if (!(instance instanceof Constructor))
									throw new TypeError(
										'Cannot call a class as a function',
									);
							})(this, NodeError),
							(_this = _super.call(
								this,
								(function getMessage(arg1, arg2, arg3) {
									return 'string' == typeof message
										? message
										: message(arg1, arg2, arg3);
								})(arg1, arg2, arg3),
							)),
							(_this.code = code),
							_this
						);
					}
					return (function _createClass(
						Constructor,
						protoProps,
						staticProps,
					) {
						return (
							protoProps &&
								_defineProperties(
									Constructor.prototype,
									protoProps,
								),
							staticProps &&
								_defineProperties(Constructor, staticProps),
							Object.defineProperty(Constructor, 'prototype', {
								writable: !1,
							}),
							Constructor
						);
					})(NodeError);
				})(Base);
				codes[code] = NodeError;
			}
			function oneOf(expected, thing) {
				if (Array.isArray(expected)) {
					var len = expected.length;
					return (
						(expected = expected.map(function (i) {
							return String(i);
						})),
						len > 2
							? 'one of '
									.concat(thing, ' ')
									.concat(
										expected.slice(0, len - 1).join(', '),
										', or ',
									) + expected[len - 1]
							: 2 === len
							? 'one of '
									.concat(thing, ' ')
									.concat(expected[0], ' or ')
									.concat(expected[1])
							: 'of '.concat(thing, ' ').concat(expected[0])
					);
				}
				return 'of '.concat(thing, ' ').concat(String(expected));
			}
			createErrorType(
				'ERR_AMBIGUOUS_ARGUMENT',
				'The "%s" argument is ambiguous. %s',
				TypeError,
			),
				createErrorType(
					'ERR_INVALID_ARG_TYPE',
					function (name, expected, actual) {
						var determiner, msg;
						if (
							(void 0 === assert &&
								(assert = __webpack_require__(
									'./node_modules/assert/build/assert.js',
								)),
							assert(
								'string' == typeof name,
								"'name' must be a string",
							),
							'string' == typeof expected &&
							(function startsWith(str, search, pos) {
								return (
									str.substr(
										!pos || pos < 0 ? 0 : +pos,
										search.length,
									) === search
								);
							})(expected, 'not ')
								? ((determiner = 'must not be'),
								  (expected = expected.replace(/^not /, '')))
								: (determiner = 'must be'),
							(function endsWith(str, search, this_len) {
								return (
									(void 0 === this_len ||
										this_len > str.length) &&
										(this_len = str.length),
									str.substring(
										this_len - search.length,
										this_len,
									) === search
								);
							})(name, ' argument'))
						)
							msg = 'The '
								.concat(name, ' ')
								.concat(determiner, ' ')
								.concat(oneOf(expected, 'type'));
						else {
							var type = (function includes(str, search, start) {
								return (
									'number' != typeof start && (start = 0),
									!(start + search.length > str.length) &&
										-1 !== str.indexOf(search, start)
								);
							})(name, '.')
								? 'property'
								: 'argument';
							msg = 'The "'
								.concat(name, '" ')
								.concat(type, ' ')
								.concat(determiner, ' ')
								.concat(oneOf(expected, 'type'));
						}
						return (msg += '. Received type '.concat(
							_typeof(actual),
						));
					},
					TypeError,
				),
				createErrorType(
					'ERR_INVALID_ARG_VALUE',
					function (name, value) {
						var reason =
							arguments.length > 2 && void 0 !== arguments[2]
								? arguments[2]
								: 'is invalid';
						void 0 === util &&
							(util = __webpack_require__(
								'./node_modules/util/util.js',
							));
						var inspected = util.inspect(value);
						return (
							inspected.length > 128 &&
								(inspected = ''.concat(
									inspected.slice(0, 128),
									'...',
								)),
							"The argument '"
								.concat(name, "' ")
								.concat(reason, '. Received ')
								.concat(inspected)
						);
					},
					TypeError,
					RangeError,
				),
				createErrorType(
					'ERR_INVALID_RETURN_VALUE',
					function (input, name, value) {
						var type;
						return (
							(type =
								value &&
								value.constructor &&
								value.constructor.name
									? 'instance of '.concat(
											value.constructor.name,
									  )
									: 'type '.concat(_typeof(value))),
							'Expected '
								.concat(input, ' to be returned from the "')
								.concat(name, '"') +
								' function but got '.concat(type, '.')
						);
					},
					TypeError,
				),
				createErrorType(
					'ERR_MISSING_ARGS',
					function () {
						for (
							var _len = arguments.length,
								args = new Array(_len),
								_key = 0;
							_key < _len;
							_key++
						)
							args[_key] = arguments[_key];
						void 0 === assert &&
							(assert = __webpack_require__(
								'./node_modules/assert/build/assert.js',
							)),
							assert(
								args.length > 0,
								'At least one arg needs to be specified',
							);
						var msg = 'The ',
							len = args.length;
						switch (
							((args = args.map(function (a) {
								return '"'.concat(a, '"');
							})),
							len)
						) {
							case 1:
								msg += ''.concat(args[0], ' argument');
								break;
							case 2:
								msg += ''
									.concat(args[0], ' and ')
									.concat(args[1], ' arguments');
								break;
							default:
								(msg += args.slice(0, len - 1).join(', ')),
									(msg += ', and '.concat(
										args[len - 1],
										' arguments',
									));
						}
						return ''.concat(msg, ' must be specified');
					},
					TypeError,
				),
				(module.exports.codes = codes);
		},
		'./node_modules/assert/build/internal/util/comparisons.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			function _slicedToArray(arr, i) {
				return (
					(function _arrayWithHoles(arr) {
						if (Array.isArray(arr)) return arr;
					})(arr) ||
					(function _iterableToArrayLimit(r, l) {
						var t =
							null == r
								? null
								: ('undefined' != typeof Symbol &&
										r[Symbol.iterator]) ||
								  r['@@iterator'];
						if (null != t) {
							var e,
								n,
								i,
								u,
								a = [],
								f = !0,
								o = !1;
							try {
								if (((i = (t = t.call(r)).next), 0 === l)) {
									if (Object(t) !== t) return;
									f = !1;
								} else
									for (
										;
										!(f = (e = i.call(t)).done) &&
										(a.push(e.value), a.length !== l);
										f = !0
									);
							} catch (r) {
								(o = !0), (n = r);
							} finally {
								try {
									if (
										!f &&
										null != t.return &&
										((u = t.return()), Object(u) !== u)
									)
										return;
								} finally {
									if (o) throw n;
								}
							}
							return a;
						}
					})(arr, i) ||
					(function _unsupportedIterableToArray(o, minLen) {
						if (!o) return;
						if ('string' == typeof o)
							return _arrayLikeToArray(o, minLen);
						var n = Object.prototype.toString.call(o).slice(8, -1);
						'Object' === n &&
							o.constructor &&
							(n = o.constructor.name);
						if ('Map' === n || 'Set' === n) return Array.from(o);
						if (
							'Arguments' === n ||
							/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
						)
							return _arrayLikeToArray(o, minLen);
					})(arr, i) ||
					(function _nonIterableRest() {
						throw new TypeError(
							'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
						);
					})()
				);
			}
			function _arrayLikeToArray(arr, len) {
				(null == len || len > arr.length) && (len = arr.length);
				for (var i = 0, arr2 = new Array(len); i < len; i++)
					arr2[i] = arr[i];
				return arr2;
			}
			function _typeof(o) {
				return (
					(_typeof =
						'function' == typeof Symbol &&
						'symbol' == typeof Symbol.iterator
							? function (o) {
									return typeof o;
							  }
							: function (o) {
									return o &&
										'function' == typeof Symbol &&
										o.constructor === Symbol &&
										o !== Symbol.prototype
										? 'symbol'
										: typeof o;
							  }),
					_typeof(o)
				);
			}
			var regexFlagsSupported = void 0 !== /a/g.flags,
				arrayFromSet = function arrayFromSet(set) {
					var array = [];
					return (
						set.forEach(function (value) {
							return array.push(value);
						}),
						array
					);
				},
				arrayFromMap = function arrayFromMap(map) {
					var array = [];
					return (
						map.forEach(function (value, key) {
							return array.push([key, value]);
						}),
						array
					);
				},
				objectIs = Object.is
					? Object.is
					: __webpack_require__('./node_modules/object-is/index.js'),
				objectGetOwnPropertySymbols = Object.getOwnPropertySymbols
					? Object.getOwnPropertySymbols
					: function () {
							return [];
					  },
				numberIsNaN = Number.isNaN
					? Number.isNaN
					: __webpack_require__('./node_modules/is-nan/index.js');
			function uncurryThis(f) {
				return f.call.bind(f);
			}
			var hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty),
				propertyIsEnumerable = uncurryThis(
					Object.prototype.propertyIsEnumerable,
				),
				objectToString = uncurryThis(Object.prototype.toString),
				_require$types = __webpack_require__(
					'./node_modules/util/util.js',
				).types,
				isAnyArrayBuffer = _require$types.isAnyArrayBuffer,
				isArrayBufferView = _require$types.isArrayBufferView,
				isDate = _require$types.isDate,
				isMap = _require$types.isMap,
				isRegExp = _require$types.isRegExp,
				isSet = _require$types.isSet,
				isNativeError = _require$types.isNativeError,
				isBoxedPrimitive = _require$types.isBoxedPrimitive,
				isNumberObject = _require$types.isNumberObject,
				isStringObject = _require$types.isStringObject,
				isBooleanObject = _require$types.isBooleanObject,
				isBigIntObject = _require$types.isBigIntObject,
				isSymbolObject = _require$types.isSymbolObject,
				isFloat32Array = _require$types.isFloat32Array,
				isFloat64Array = _require$types.isFloat64Array;
			function isNonIndex(key) {
				if (0 === key.length || key.length > 10) return !0;
				for (var i = 0; i < key.length; i++) {
					var code = key.charCodeAt(i);
					if (code < 48 || code > 57) return !0;
				}
				return 10 === key.length && key >= Math.pow(2, 32);
			}
			function getOwnNonIndexProperties(value) {
				return Object.keys(value)
					.filter(isNonIndex)
					.concat(
						objectGetOwnPropertySymbols(value).filter(
							Object.prototype.propertyIsEnumerable.bind(value),
						),
					);
			}
			function compare(a, b) {
				if (a === b) return 0;
				for (
					var x = a.length, y = b.length, i = 0, len = Math.min(x, y);
					i < len;
					++i
				)
					if (a[i] !== b[i]) {
						(x = a[i]), (y = b[i]);
						break;
					}
				return x < y ? -1 : y < x ? 1 : 0;
			}
			var kNoIterator = 0,
				kIsArray = 1,
				kIsSet = 2,
				kIsMap = 3;
			function innerDeepEqual(val1, val2, strict, memos) {
				if (val1 === val2)
					return 0 !== val1 || !strict || objectIs(val1, val2);
				if (strict) {
					if ('object' !== _typeof(val1))
						return (
							'number' == typeof val1 &&
							numberIsNaN(val1) &&
							numberIsNaN(val2)
						);
					if (
						'object' !== _typeof(val2) ||
						null === val1 ||
						null === val2
					)
						return !1;
					if (
						Object.getPrototypeOf(val1) !==
						Object.getPrototypeOf(val2)
					)
						return !1;
				} else {
					if (null === val1 || 'object' !== _typeof(val1))
						return (
							(null === val2 || 'object' !== _typeof(val2)) &&
							val1 == val2
						);
					if (null === val2 || 'object' !== _typeof(val2)) return !1;
				}
				var val1Tag = objectToString(val1);
				if (val1Tag !== objectToString(val2)) return !1;
				if (Array.isArray(val1)) {
					if (val1.length !== val2.length) return !1;
					var keys1 = getOwnNonIndexProperties(val1),
						keys2 = getOwnNonIndexProperties(val2);
					return (
						keys1.length === keys2.length &&
						keyCheck(val1, val2, strict, memos, kIsArray, keys1)
					);
				}
				if (
					'[object Object]' === val1Tag &&
					((!isMap(val1) && isMap(val2)) ||
						(!isSet(val1) && isSet(val2)))
				)
					return !1;
				if (isDate(val1)) {
					if (
						!isDate(val2) ||
						Date.prototype.getTime.call(val1) !==
							Date.prototype.getTime.call(val2)
					)
						return !1;
				} else if (isRegExp(val1)) {
					if (
						!isRegExp(val2) ||
						!(function areSimilarRegExps(a, b) {
							return regexFlagsSupported
								? a.source === b.source && a.flags === b.flags
								: RegExp.prototype.toString.call(a) ===
										RegExp.prototype.toString.call(b);
						})(val1, val2)
					)
						return !1;
				} else if (isNativeError(val1) || val1 instanceof Error) {
					if (
						val1.message !== val2.message ||
						val1.name !== val2.name
					)
						return !1;
				} else {
					if (isArrayBufferView(val1)) {
						if (
							strict ||
							(!isFloat32Array(val1) && !isFloat64Array(val1))
						) {
							if (
								!(function areSimilarTypedArrays(a, b) {
									return (
										a.byteLength === b.byteLength &&
										0 ===
											compare(
												new Uint8Array(
													a.buffer,
													a.byteOffset,
													a.byteLength,
												),
												new Uint8Array(
													b.buffer,
													b.byteOffset,
													b.byteLength,
												),
											)
									);
								})(val1, val2)
							)
								return !1;
						} else if (
							!(function areSimilarFloatArrays(a, b) {
								if (a.byteLength !== b.byteLength) return !1;
								for (
									var offset = 0;
									offset < a.byteLength;
									offset++
								)
									if (a[offset] !== b[offset]) return !1;
								return !0;
							})(val1, val2)
						)
							return !1;
						var _keys = getOwnNonIndexProperties(val1),
							_keys2 = getOwnNonIndexProperties(val2);
						return (
							_keys.length === _keys2.length &&
							keyCheck(
								val1,
								val2,
								strict,
								memos,
								kNoIterator,
								_keys,
							)
						);
					}
					if (isSet(val1))
						return (
							!(!isSet(val2) || val1.size !== val2.size) &&
							keyCheck(val1, val2, strict, memos, kIsSet)
						);
					if (isMap(val1))
						return (
							!(!isMap(val2) || val1.size !== val2.size) &&
							keyCheck(val1, val2, strict, memos, kIsMap)
						);
					if (isAnyArrayBuffer(val1)) {
						if (
							!(function areEqualArrayBuffers(buf1, buf2) {
								return (
									buf1.byteLength === buf2.byteLength &&
									0 ===
										compare(
											new Uint8Array(buf1),
											new Uint8Array(buf2),
										)
								);
							})(val1, val2)
						)
							return !1;
					} else if (
						isBoxedPrimitive(val1) &&
						!(function isEqualBoxedPrimitive(val1, val2) {
							return isNumberObject(val1)
								? isNumberObject(val2) &&
										objectIs(
											Number.prototype.valueOf.call(val1),
											Number.prototype.valueOf.call(val2),
										)
								: isStringObject(val1)
								? isStringObject(val2) &&
								  String.prototype.valueOf.call(val1) ===
										String.prototype.valueOf.call(val2)
								: isBooleanObject(val1)
								? isBooleanObject(val2) &&
								  Boolean.prototype.valueOf.call(val1) ===
										Boolean.prototype.valueOf.call(val2)
								: isBigIntObject(val1)
								? isBigIntObject(val2) &&
								  BigInt.prototype.valueOf.call(val1) ===
										BigInt.prototype.valueOf.call(val2)
								: isSymbolObject(val2) &&
								  Symbol.prototype.valueOf.call(val1) ===
										Symbol.prototype.valueOf.call(val2);
						})(val1, val2)
					)
						return !1;
				}
				return keyCheck(val1, val2, strict, memos, kNoIterator);
			}
			function getEnumerables(val, keys) {
				return keys.filter(function (k) {
					return propertyIsEnumerable(val, k);
				});
			}
			function keyCheck(val1, val2, strict, memos, iterationType, aKeys) {
				if (5 === arguments.length) {
					aKeys = Object.keys(val1);
					var bKeys = Object.keys(val2);
					if (aKeys.length !== bKeys.length) return !1;
				}
				for (var i = 0; i < aKeys.length; i++)
					if (!hasOwnProperty(val2, aKeys[i])) return !1;
				if (strict && 5 === arguments.length) {
					var symbolKeysA = objectGetOwnPropertySymbols(val1);
					if (0 !== symbolKeysA.length) {
						var count = 0;
						for (i = 0; i < symbolKeysA.length; i++) {
							var key = symbolKeysA[i];
							if (propertyIsEnumerable(val1, key)) {
								if (!propertyIsEnumerable(val2, key)) return !1;
								aKeys.push(key), count++;
							} else if (propertyIsEnumerable(val2, key))
								return !1;
						}
						var symbolKeysB = objectGetOwnPropertySymbols(val2);
						if (
							symbolKeysA.length !== symbolKeysB.length &&
							getEnumerables(val2, symbolKeysB).length !== count
						)
							return !1;
					} else {
						var _symbolKeysB = objectGetOwnPropertySymbols(val2);
						if (
							0 !== _symbolKeysB.length &&
							0 !== getEnumerables(val2, _symbolKeysB).length
						)
							return !1;
					}
				}
				if (
					0 === aKeys.length &&
					(iterationType === kNoIterator ||
						(iterationType === kIsArray && 0 === val1.length) ||
						0 === val1.size)
				)
					return !0;
				if (void 0 === memos)
					memos = { val1: new Map(), val2: new Map(), position: 0 };
				else {
					var val2MemoA = memos.val1.get(val1);
					if (void 0 !== val2MemoA) {
						var val2MemoB = memos.val2.get(val2);
						if (void 0 !== val2MemoB)
							return val2MemoA === val2MemoB;
					}
					memos.position++;
				}
				memos.val1.set(val1, memos.position),
					memos.val2.set(val2, memos.position);
				var areEq = (function objEquiv(
					a,
					b,
					strict,
					keys,
					memos,
					iterationType,
				) {
					var i = 0;
					if (iterationType === kIsSet) {
						if (
							!(function setEquiv(a, b, strict, memo) {
								for (
									var set = null,
										aValues = arrayFromSet(a),
										i = 0;
									i < aValues.length;
									i++
								) {
									var val = aValues[i];
									if (
										'object' === _typeof(val) &&
										null !== val
									)
										null === set && (set = new Set()),
											set.add(val);
									else if (!b.has(val)) {
										if (strict) return !1;
										if (!setMightHaveLoosePrim(a, b, val))
											return !1;
										null === set && (set = new Set()),
											set.add(val);
									}
								}
								if (null !== set) {
									for (
										var bValues = arrayFromSet(b), _i = 0;
										_i < bValues.length;
										_i++
									) {
										var _val = bValues[_i];
										if (
											'object' === _typeof(_val) &&
											null !== _val
										) {
											if (
												!setHasEqualElement(
													set,
													_val,
													strict,
													memo,
												)
											)
												return !1;
										} else if (
											!strict &&
											!a.has(_val) &&
											!setHasEqualElement(
												set,
												_val,
												strict,
												memo,
											)
										)
											return !1;
									}
									return 0 === set.size;
								}
								return !0;
							})(a, b, strict, memos)
						)
							return !1;
					} else if (iterationType === kIsMap) {
						if (
							!(function mapEquiv(a, b, strict, memo) {
								for (
									var set = null,
										aEntries = arrayFromMap(a),
										i = 0;
									i < aEntries.length;
									i++
								) {
									var _aEntries$i = _slicedToArray(
											aEntries[i],
											2,
										),
										key = _aEntries$i[0],
										item1 = _aEntries$i[1];
									if (
										'object' === _typeof(key) &&
										null !== key
									)
										null === set && (set = new Set()),
											set.add(key);
									else {
										var item2 = b.get(key);
										if (
											(void 0 === item2 && !b.has(key)) ||
											!innerDeepEqual(
												item1,
												item2,
												strict,
												memo,
											)
										) {
											if (strict) return !1;
											if (
												!mapMightHaveLoosePrim(
													a,
													b,
													key,
													item1,
													memo,
												)
											)
												return !1;
											null === set && (set = new Set()),
												set.add(key);
										}
									}
								}
								if (null !== set) {
									for (
										var bEntries = arrayFromMap(b), _i2 = 0;
										_i2 < bEntries.length;
										_i2++
									) {
										var _bEntries$_i = _slicedToArray(
												bEntries[_i2],
												2,
											),
											_key = _bEntries$_i[0],
											item = _bEntries$_i[1];
										if (
											'object' === _typeof(_key) &&
											null !== _key
										) {
											if (
												!mapHasEqualEntry(
													set,
													a,
													_key,
													item,
													strict,
													memo,
												)
											)
												return !1;
										} else if (
											!(
												strict ||
												(a.has(_key) &&
													innerDeepEqual(
														a.get(_key),
														item,
														!1,
														memo,
													)) ||
												mapHasEqualEntry(
													set,
													a,
													_key,
													item,
													!1,
													memo,
												)
											)
										)
											return !1;
									}
									return 0 === set.size;
								}
								return !0;
							})(a, b, strict, memos)
						)
							return !1;
					} else if (iterationType === kIsArray)
						for (; i < a.length; i++) {
							if (!hasOwnProperty(a, i)) {
								if (hasOwnProperty(b, i)) return !1;
								for (
									var keysA = Object.keys(a);
									i < keysA.length;
									i++
								) {
									var key = keysA[i];
									if (
										!hasOwnProperty(b, key) ||
										!innerDeepEqual(
											a[key],
											b[key],
											strict,
											memos,
										)
									)
										return !1;
								}
								return keysA.length === Object.keys(b).length;
							}
							if (
								!hasOwnProperty(b, i) ||
								!innerDeepEqual(a[i], b[i], strict, memos)
							)
								return !1;
						}
					for (i = 0; i < keys.length; i++) {
						var _key2 = keys[i];
						if (!innerDeepEqual(a[_key2], b[_key2], strict, memos))
							return !1;
					}
					return !0;
				})(val1, val2, strict, aKeys, memos, iterationType);
				return memos.val1.delete(val1), memos.val2.delete(val2), areEq;
			}
			function setHasEqualElement(set, val1, strict, memo) {
				for (
					var setValues = arrayFromSet(set), i = 0;
					i < setValues.length;
					i++
				) {
					var val2 = setValues[i];
					if (innerDeepEqual(val1, val2, strict, memo))
						return set.delete(val2), !0;
				}
				return !1;
			}
			function findLooseMatchingPrimitives(prim) {
				switch (_typeof(prim)) {
					case 'undefined':
						return null;
					case 'object':
						return;
					case 'symbol':
						return !1;
					case 'string':
						prim = +prim;
					case 'number':
						if (numberIsNaN(prim)) return !1;
				}
				return !0;
			}
			function setMightHaveLoosePrim(a, b, prim) {
				var altValue = findLooseMatchingPrimitives(prim);
				return null != altValue
					? altValue
					: b.has(altValue) && !a.has(altValue);
			}
			function mapMightHaveLoosePrim(a, b, prim, item, memo) {
				var altValue = findLooseMatchingPrimitives(prim);
				if (null != altValue) return altValue;
				var curB = b.get(altValue);
				return (
					!(
						(void 0 === curB && !b.has(altValue)) ||
						!innerDeepEqual(item, curB, !1, memo)
					) &&
					!a.has(altValue) &&
					innerDeepEqual(item, curB, !1, memo)
				);
			}
			function mapHasEqualEntry(set, map, key1, item1, strict, memo) {
				for (
					var setValues = arrayFromSet(set), i = 0;
					i < setValues.length;
					i++
				) {
					var key2 = setValues[i];
					if (
						innerDeepEqual(key1, key2, strict, memo) &&
						innerDeepEqual(item1, map.get(key2), strict, memo)
					)
						return set.delete(key2), !0;
				}
				return !1;
			}
			module.exports = {
				isDeepEqual: function isDeepEqual(val1, val2) {
					return innerDeepEqual(val1, val2, false);
				},
				isDeepStrictEqual: function isDeepStrictEqual(val1, val2) {
					return innerDeepEqual(val1, val2, true);
				},
			};
		},
		'./node_modules/assert/node_modules/call-bind/callBound.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/assert/node_modules/call-bind/index.js',
				),
				$indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
			module.exports = function callBoundIntrinsic(name, allowMissing) {
				var intrinsic = GetIntrinsic(name, !!allowMissing);
				return 'function' == typeof intrinsic &&
					$indexOf(name, '.prototype.') > -1
					? callBind(intrinsic)
					: intrinsic;
			};
		},
		'./node_modules/assert/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/chromatic/isChromatic.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			function isChromatic(windowArgument) {
				const windowToCheck =
					windowArgument || ('undefined' != typeof window && window);
				return !(
					!windowToCheck ||
					(!/Chromatic/.test(windowToCheck.navigator.userAgent) &&
						!/chromatic=true/.test(windowToCheck.location.href))
				);
			}
			__webpack_require__.d(__webpack_exports__, {
				Z: () => isChromatic,
			});
		},
		'./node_modules/define-properties/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var keys = __webpack_require__(
					'./node_modules/object-keys/index.js',
				),
				hasSymbols =
					'function' == typeof Symbol &&
					'symbol' == typeof Symbol('foo'),
				toStr = Object.prototype.toString,
				concat = Array.prototype.concat,
				defineDataProperty = __webpack_require__(
					'./node_modules/define-properties/node_modules/define-data-property/index.js',
				),
				supportsDescriptors = __webpack_require__(
					'./node_modules/define-properties/node_modules/has-property-descriptors/index.js',
				)(),
				defineProperty = function (object, name, value, predicate) {
					if (name in object)
						if (!0 === predicate) {
							if (object[name] === value) return;
						} else if (
							'function' != typeof (fn = predicate) ||
							'[object Function]' !== toStr.call(fn) ||
							!predicate()
						)
							return;
					var fn;
					supportsDescriptors
						? defineDataProperty(object, name, value, !0)
						: defineDataProperty(object, name, value);
				},
				defineProperties = function (object, map) {
					var predicates = arguments.length > 2 ? arguments[2] : {},
						props = keys(map);
					hasSymbols &&
						(props = concat.call(
							props,
							Object.getOwnPropertySymbols(map),
						));
					for (var i = 0; i < props.length; i += 1)
						defineProperty(
							object,
							props[i],
							map[props[i]],
							predicates[props[i]],
						);
				};
			(defineProperties.supportsDescriptors = !!supportsDescriptors),
				(module.exports = defineProperties);
		},
		'./node_modules/define-properties/node_modules/define-data-property/index.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var hasPropertyDescriptors = __webpack_require__(
						'./node_modules/define-properties/node_modules/has-property-descriptors/index.js',
					)(),
					GetIntrinsic = __webpack_require__(
						'./node_modules/get-intrinsic/index.js',
					),
					$defineProperty =
						hasPropertyDescriptors &&
						GetIntrinsic('%Object.defineProperty%', !0);
				if ($defineProperty)
					try {
						$defineProperty({}, 'a', { value: 1 });
					} catch (e) {
						$defineProperty = !1;
					}
				var $SyntaxError = GetIntrinsic('%SyntaxError%'),
					$TypeError = GetIntrinsic('%TypeError%'),
					gopd = __webpack_require__('./node_modules/gopd/index.js');
				module.exports = function defineDataProperty(
					obj,
					property,
					value,
				) {
					if (
						!obj ||
						('object' != typeof obj && 'function' != typeof obj)
					)
						throw new $TypeError(
							'`obj` must be an object or a function`',
						);
					if (
						'string' != typeof property &&
						'symbol' != typeof property
					)
						throw new $TypeError(
							'`property` must be a string or a symbol`',
						);
					if (
						arguments.length > 3 &&
						'boolean' != typeof arguments[3] &&
						null !== arguments[3]
					)
						throw new $TypeError(
							'`nonEnumerable`, if provided, must be a boolean or null',
						);
					if (
						arguments.length > 4 &&
						'boolean' != typeof arguments[4] &&
						null !== arguments[4]
					)
						throw new $TypeError(
							'`nonWritable`, if provided, must be a boolean or null',
						);
					if (
						arguments.length > 5 &&
						'boolean' != typeof arguments[5] &&
						null !== arguments[5]
					)
						throw new $TypeError(
							'`nonConfigurable`, if provided, must be a boolean or null',
						);
					if (
						arguments.length > 6 &&
						'boolean' != typeof arguments[6]
					)
						throw new $TypeError(
							'`loose`, if provided, must be a boolean',
						);
					var nonEnumerable =
							arguments.length > 3 ? arguments[3] : null,
						nonWritable =
							arguments.length > 4 ? arguments[4] : null,
						nonConfigurable =
							arguments.length > 5 ? arguments[5] : null,
						loose = arguments.length > 6 && arguments[6],
						desc = !!gopd && gopd(obj, property);
					if ($defineProperty)
						$defineProperty(obj, property, {
							configurable:
								null === nonConfigurable && desc
									? desc.configurable
									: !nonConfigurable,
							enumerable:
								null === nonEnumerable && desc
									? desc.enumerable
									: !nonEnumerable,
							value,
							writable:
								null === nonWritable && desc
									? desc.writable
									: !nonWritable,
						});
					else {
						if (
							!loose &&
							(nonEnumerable || nonWritable || nonConfigurable)
						)
							throw new $SyntaxError(
								'This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.',
							);
						obj[property] = value;
					}
				};
			},
		'./node_modules/define-properties/node_modules/has-property-descriptors/index.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var $defineProperty = __webpack_require__(
						'./node_modules/get-intrinsic/index.js',
					)('%Object.defineProperty%', !0),
					hasPropertyDescriptors = function hasPropertyDescriptors() {
						if ($defineProperty)
							try {
								return (
									$defineProperty({}, 'a', { value: 1 }), !0
								);
							} catch (e) {
								return !1;
							}
						return !1;
					};
				(hasPropertyDescriptors.hasArrayLengthDefineBug =
					function hasArrayLengthDefineBug() {
						if (!hasPropertyDescriptors()) return null;
						try {
							return (
								1 !==
								$defineProperty([], 'length', { value: 1 })
									.length
							);
						} catch (e) {
							return !0;
						}
					}),
					(module.exports = hasPropertyDescriptors);
			},
		'./node_modules/doctrine/lib/doctrine.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				var typed, utility, jsdoc, esutils, hasOwnProperty, func;
				function sliceSource(source, index, last) {
					return source.slice(index, last);
				}
				function isParamTitle(title) {
					return (
						'param' === title ||
						'argument' === title ||
						'arg' === title
					);
				}
				function isReturnTitle(title) {
					return 'return' === title || 'returns' === title;
				}
				function isProperty(title) {
					return 'property' === title || 'prop' === title;
				}
				function isNameParameterRequired(title) {
					return (
						isParamTitle(title) ||
						isProperty(title) ||
						'alias' === title ||
						'this' === title ||
						'mixes' === title ||
						'requires' === title
					);
				}
				function isAllowedOptional(title) {
					return isProperty(title) || isParamTitle(title);
				}
				function isTypeParameterRequired(title) {
					return (
						isParamTitle(title) ||
						isReturnTitle(title) ||
						'define' === title ||
						'enum' === title ||
						'implements' === title ||
						'this' === title ||
						'type' === title ||
						'typedef' === title ||
						isProperty(title)
					);
				}
				(esutils = __webpack_require__(
					'./node_modules/esutils/lib/utils.js',
				)),
					(typed = __webpack_require__(
						'./node_modules/doctrine/lib/typed.js',
					)),
					(utility = __webpack_require__(
						'./node_modules/doctrine/lib/utility.js',
					)),
					(func = Object.prototype.hasOwnProperty),
					(hasOwnProperty = function hasOwnProperty(obj, name) {
						return func.call(obj, name);
					});
				var WHITESPACE =
						'[ \\f\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]',
					STAR_MATCHER =
						'(' +
						WHITESPACE +
						'*(?:\\*' +
						WHITESPACE +
						'?)?)(.+|[\r\n\u2028\u2029])';
				function unwrapComment(doc) {
					return doc
						.replace(/^\/\*\*?/, '')
						.replace(/\*\/$/, '')
						.replace(new RegExp(STAR_MATCHER, 'g'), '$2')
						.replace(/\s*$/, '');
				}
				!(function (exports) {
					var Rules,
						index,
						lineNumber,
						length,
						source,
						originalSource,
						recoverable,
						sloppy,
						strict;
					function advance() {
						var ch = source.charCodeAt(index);
						return (
							(index += 1),
							!esutils.code.isLineTerminator(ch) ||
								(13 === ch &&
									10 === source.charCodeAt(index)) ||
								(lineNumber += 1),
							String.fromCharCode(ch)
						);
					}
					function parseType(title, last, addRange) {
						for (
							var ch, brace, type, startIndex, direct = !1;
							index < last;

						) {
							if (
								((ch = source.charCodeAt(index)),
								!esutils.code.isWhiteSpace(ch))
							) {
								if (123 === ch) {
									advance();
									break;
								}
								direct = !0;
								break;
							}
							advance();
						}
						if (direct) return null;
						for (brace = 1, type = ''; index < last; )
							if (
								((ch = source.charCodeAt(index)),
								esutils.code.isLineTerminator(ch))
							)
								advance();
							else {
								if (125 === ch) {
									if (0 === (brace -= 1)) {
										advance();
										break;
									}
								} else 123 === ch && (brace += 1);
								'' === type && (startIndex = index),
									(type += advance());
							}
						return 0 !== brace
							? utility.throwError('Braces are not balanced')
							: isAllowedOptional(title)
							? typed.parseParamType(type, {
									startIndex: convertIndex(startIndex),
									range: addRange,
							  })
							: typed.parseType(type, {
									startIndex: convertIndex(startIndex),
									range: addRange,
							  });
					}
					function scanIdentifier(last) {
						var identifier;
						if (
							!esutils.code.isIdentifierStartES5(
								source.charCodeAt(index),
							) &&
							!source[index].match(/[0-9]/)
						)
							return null;
						for (
							identifier = advance();
							index < last &&
							esutils.code.isIdentifierPartES5(
								source.charCodeAt(index),
							);

						)
							identifier += advance();
						return identifier;
					}
					function skipWhiteSpace(last) {
						for (
							;
							index < last &&
							(esutils.code.isWhiteSpace(
								source.charCodeAt(index),
							) ||
								esutils.code.isLineTerminator(
									source.charCodeAt(index),
								));

						)
							advance();
					}
					function parseName(last, allowBrackets, allowNestedParams) {
						var useBrackets,
							insideString,
							name = '';
						if ((skipWhiteSpace(last), index >= last)) return null;
						if (91 === source.charCodeAt(index)) {
							if (!allowBrackets) return null;
							(useBrackets = !0), (name = advance());
						}
						if (((name += scanIdentifier(last)), allowNestedParams))
							for (
								58 !== source.charCodeAt(index) ||
									('module' !== name &&
										'external' !== name &&
										'event' !== name) ||
									((name += advance()),
									(name += scanIdentifier(last))),
									91 === source.charCodeAt(index) &&
										93 === source.charCodeAt(index + 1) &&
										((name += advance()),
										(name += advance()));
								46 === source.charCodeAt(index) ||
								47 === source.charCodeAt(index) ||
								35 === source.charCodeAt(index) ||
								45 === source.charCodeAt(index) ||
								126 === source.charCodeAt(index);

							)
								(name += advance()),
									(name += scanIdentifier(last));
						if (useBrackets) {
							if (
								(skipWhiteSpace(last),
								61 === source.charCodeAt(index))
							) {
								var ch;
								(name += advance()), skipWhiteSpace(last);
								for (var bracketDepth = 1; index < last; ) {
									if (
										((ch = source.charCodeAt(index)),
										esutils.code.isWhiteSpace(ch) &&
											(insideString ||
												(skipWhiteSpace(last),
												(ch =
													source.charCodeAt(index)))),
										39 === ch &&
											(insideString
												? "'" === insideString &&
												  (insideString = '')
												: (insideString = "'")),
										34 === ch &&
											(insideString
												? '"' === insideString &&
												  (insideString = '')
												: (insideString = '"')),
										91 === ch)
									)
										bracketDepth++;
									else if (93 === ch && 0 == --bracketDepth)
										break;
									name += advance();
								}
							}
							if (
								(skipWhiteSpace(last),
								index >= last ||
									93 !== source.charCodeAt(index))
							)
								return null;
							name += advance();
						}
						return name;
					}
					function convertIndex(rangeIndex) {
						return source === originalSource
							? rangeIndex
							: (function convertUnwrappedCommentIndex(
									originalSource,
									unwrappedIndex,
							  ) {
									for (
										var match,
											replacedSource =
												originalSource.replace(
													/^\/\*\*?/,
													'',
												),
											numSkippedChars = 0,
											matcher = new RegExp(
												STAR_MATCHER,
												'g',
											);
										(match = matcher.exec(replacedSource));

									)
										if (
											((numSkippedChars +=
												match[1].length),
											match.index + match[0].length >
												unwrappedIndex +
													numSkippedChars)
										)
											return (
												unwrappedIndex +
												numSkippedChars +
												originalSource.length -
												replacedSource.length
											);
									return originalSource
										.replace(/\*\/$/, '')
										.replace(/\s*$/, '').length;
							  })(originalSource, rangeIndex);
					}
					function TagParser(options, title) {
						(this._options = options),
							(this._title = title.toLowerCase()),
							(this._tag = { title, description: null }),
							this._options.lineNumbers &&
								(this._tag.lineNumber = lineNumber),
							(this._first = index - title.length - 1),
							(this._last = 0),
							(this._extra = {});
					}
					function parseTag(options) {
						var parser, tag;
						if (
							!(function skipToTag() {
								for (
									;
									index < length &&
									64 !== source.charCodeAt(index);

								)
									advance();
								return !(
									index >= length ||
									(utility.assert(
										64 === source.charCodeAt(index),
									),
									0)
								);
							})()
						)
							return null;
						for (
							tag = (parser = new TagParser(
								options,
								(function scanTitle() {
									var ch,
										title = '';
									for (
										advance();
										index < length &&
										(((ch = source.charCodeAt(index)) >=
											97 &&
											ch <= 122) ||
											(ch >= 65 && ch <= 90) ||
											(ch >= 48 && ch <= 57));

									)
										title += advance();
									return title;
								})(),
							)).parse();
							index < parser._last;

						)
							advance();
						return tag;
					}
					(TagParser.prototype.addError = function addError(
						errorText,
					) {
						var args = Array.prototype.slice.call(arguments, 1),
							msg = errorText.replace(
								/%(\d)/g,
								function (whole, index) {
									return (
										utility.assert(
											index < args.length,
											'Message reference must be in range',
										),
										args[index]
									);
								},
							);
						return (
							this._tag.errors || (this._tag.errors = []),
							strict && utility.throwError(msg),
							this._tag.errors.push(msg),
							recoverable
						);
					}),
						(TagParser.prototype.parseType = function () {
							if (isTypeParameterRequired(this._title))
								try {
									if (
										((this._tag.type = parseType(
											this._title,
											this._last,
											this._options.range,
										)),
										!(
											this._tag.type ||
											isParamTitle(this._title) ||
											isReturnTitle(this._title) ||
											this.addError(
												'Missing or invalid tag type',
											)
										))
									)
										return !1;
								} catch (error) {
									if (
										((this._tag.type = null),
										!this.addError(error.message))
									)
										return !1;
								}
							else if (
								(function isAllowedType(title) {
									return (
										isTypeParameterRequired(title) ||
										'throws' === title ||
										'const' === title ||
										'constant' === title ||
										'namespace' === title ||
										'member' === title ||
										'var' === title ||
										'module' === title ||
										'constructor' === title ||
										'class' === title ||
										'extends' === title ||
										'augments' === title ||
										'public' === title ||
										'private' === title ||
										'protected' === title
									);
								})(this._title)
							)
								try {
									this._tag.type = parseType(
										this._title,
										this._last,
										this._options.range,
									);
								} catch (e) {}
							return !0;
						}),
						(TagParser.prototype._parseNamePath = function (
							optional,
						) {
							var name;
							return (
								!!(
									(name = parseName(
										this._last,
										sloppy &&
											isAllowedOptional(this._title),
										!0,
									)) ||
									optional ||
									this.addError('Missing or invalid tag name')
								) && ((this._tag.name = name), !0)
							);
						}),
						(TagParser.prototype.parseNamePath = function () {
							return this._parseNamePath(!1);
						}),
						(TagParser.prototype.parseNamePathOptional =
							function () {
								return this._parseNamePath(!0);
							}),
						(TagParser.prototype.parseName = function () {
							var assign, name;
							if (
								(function isAllowedName(title) {
									return (
										isNameParameterRequired(title) ||
										'const' === title ||
										'constant' === title
									);
								})(this._title)
							)
								if (
									((this._tag.name = parseName(
										this._last,
										sloppy &&
											isAllowedOptional(this._title),
										(function isAllowedNested(title) {
											return (
												isProperty(title) ||
												isParamTitle(title)
											);
										})(this._title),
									)),
									this._tag.name)
								)
									'[' === (name = this._tag.name).charAt(0) &&
										']' === name.charAt(name.length - 1) &&
										((assign = name
											.substring(1, name.length - 1)
											.split('=')).length > 1 &&
											(this._tag.default = assign
												.slice(1)
												.join('=')),
										(this._tag.name = assign[0]),
										this._tag.type &&
											'OptionalType' !==
												this._tag.type.type &&
											(this._tag.type = {
												type: 'OptionalType',
												expression: this._tag.type,
											}));
								else {
									if (!isNameParameterRequired(this._title))
										return !0;
									if (
										isParamTitle(this._title) &&
										this._tag.type &&
										this._tag.type.name
									)
										(this._extra.name = this._tag.type),
											(this._tag.name =
												this._tag.type.name),
											(this._tag.type = null);
									else if (
										!this.addError(
											'Missing or invalid tag name',
										)
									)
										return !1;
								}
							return !0;
						}),
						(TagParser.prototype.parseDescription =
							function parseDescription() {
								var description = sliceSource(
									source,
									index,
									this._last,
								).trim();
								return (
									description &&
										(/^-\s+/.test(description) &&
											(description =
												description.substring(2)),
										(this._tag.description = description)),
									!0
								);
							}),
						(TagParser.prototype.parseCaption =
							function parseDescription() {
								var description = sliceSource(
										source,
										index,
										this._last,
									).trim(),
									captionStart =
										description.indexOf('<caption>'),
									captionEnd =
										description.indexOf('</caption>');
								return (
									captionStart >= 0 && captionEnd >= 0
										? ((this._tag.caption = description
												.substring(
													captionStart + 9,
													captionEnd,
												)
												.trim()),
										  (this._tag.description = description
												.substring(captionEnd + 10)
												.trim()))
										: (this._tag.description = description),
									!0
								);
							}),
						(TagParser.prototype.parseKind = function parseKind() {
							var kind, kinds;
							return (
								(kinds = {
									class: !0,
									constant: !0,
									event: !0,
									external: !0,
									file: !0,
									function: !0,
									member: !0,
									mixin: !0,
									module: !0,
									namespace: !0,
									typedef: !0,
								}),
								(kind = sliceSource(
									source,
									index,
									this._last,
								).trim()),
								(this._tag.kind = kind),
								!(
									!hasOwnProperty(kinds, kind) &&
									!this.addError(
										"Invalid kind name '%0'",
										kind,
									)
								)
							);
						}),
						(TagParser.prototype.parseAccess =
							function parseAccess() {
								var access;
								return (
									(access = sliceSource(
										source,
										index,
										this._last,
									).trim()),
									(this._tag.access = access),
									!(
										'private' !== access &&
										'protected' !== access &&
										'public' !== access &&
										!this.addError(
											"Invalid access name '%0'",
											access,
										)
									)
								);
							}),
						(TagParser.prototype.parseThis = function parseThis() {
							var value = sliceSource(
								source,
								index,
								this._last,
							).trim();
							return value && '{' === value.charAt(0)
								? (this.parseType() &&
										'NameExpression' ===
											this._tag.type.type) ||
								  'UnionType' === this._tag.type.type
									? ((this._tag.name = this._tag.type.name),
									  !0)
									: this.addError('Invalid name for this')
								: this.parseNamePath();
						}),
						(TagParser.prototype.parseVariation =
							function parseVariation() {
								var variation, text;
								return (
									(text = sliceSource(
										source,
										index,
										this._last,
									).trim()),
									(variation = parseFloat(text, 10)),
									(this._tag.variation = variation),
									!(
										isNaN(variation) &&
										!this.addError(
											"Invalid variation '%0'",
											text,
										)
									)
								);
							}),
						(TagParser.prototype.ensureEnd = function () {
							var shouldBeEmpty = sliceSource(
								source,
								index,
								this._last,
							).trim();
							return !(
								shouldBeEmpty &&
								!this.addError(
									"Unknown content '%0'",
									shouldBeEmpty,
								)
							);
						}),
						(TagParser.prototype.epilogue = function epilogue() {
							var description;
							return (
								(description = this._tag.description),
								!(
									isAllowedOptional(this._title) &&
									!this._tag.type &&
									description &&
									'[' === description.charAt(0) &&
									((this._tag.type = this._extra.name),
									this._tag.name || (this._tag.name = void 0),
									!sloppy &&
										!this.addError(
											'Missing or invalid tag name',
										))
								)
							);
						}),
						(Rules = {
							access: ['parseAccess'],
							alias: ['parseNamePath', 'ensureEnd'],
							augments: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							constructor: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							class: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							extends: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							example: ['parseCaption'],
							deprecated: ['parseDescription'],
							global: ['ensureEnd'],
							inner: ['ensureEnd'],
							instance: ['ensureEnd'],
							kind: ['parseKind'],
							mixes: ['parseNamePath', 'ensureEnd'],
							mixin: ['parseNamePathOptional', 'ensureEnd'],
							member: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							method: ['parseNamePathOptional', 'ensureEnd'],
							module: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							func: ['parseNamePathOptional', 'ensureEnd'],
							function: ['parseNamePathOptional', 'ensureEnd'],
							var: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							name: ['parseNamePath', 'ensureEnd'],
							namespace: [
								'parseType',
								'parseNamePathOptional',
								'ensureEnd',
							],
							private: ['parseType', 'parseDescription'],
							protected: ['parseType', 'parseDescription'],
							public: ['parseType', 'parseDescription'],
							readonly: ['ensureEnd'],
							requires: ['parseNamePath', 'ensureEnd'],
							since: ['parseDescription'],
							static: ['ensureEnd'],
							summary: ['parseDescription'],
							this: ['parseThis', 'ensureEnd'],
							todo: ['parseDescription'],
							typedef: ['parseType', 'parseNamePathOptional'],
							variation: ['parseVariation'],
							version: ['parseDescription'],
						}),
						(TagParser.prototype.parse = function parse() {
							var i, iz, sequences;
							if (
								!this._title &&
								!this.addError('Missing or invalid title')
							)
								return null;
							for (
								this._last = (function seekContent() {
									var ch,
										waiting,
										last = index;
									for (waiting = !1; last < length; ) {
										if (
											((ch = source.charCodeAt(last)),
											!esutils.code.isLineTerminator(
												ch,
											) ||
												(13 === ch &&
													10 ===
														source.charCodeAt(
															last + 1,
														)))
										) {
											if (waiting) {
												if (64 === ch) break;
												esutils.code.isWhiteSpace(ch) ||
													(waiting = !1);
											}
										} else waiting = !0;
										last += 1;
									}
									return last;
								})(this._title),
									this._options.range &&
										(this._tag.range = [
											this._first,
											source
												.slice(0, this._last)
												.replace(/\s*$/, '').length,
										].map(convertIndex)),
									i = 0,
									iz = (sequences = hasOwnProperty(
										Rules,
										this._title,
									)
										? Rules[this._title]
										: [
												'parseType',
												'parseName',
												'parseDescription',
												'epilogue',
										  ]).length;
								i < iz;
								++i
							)
								if (!this[sequences[i]]()) return null;
							return this._tag;
						}),
						(exports.parse = function parse(comment, options) {
							var tag,
								description,
								interestingTags,
								i,
								iz,
								tags = [];
							if (
								(void 0 === options && (options = {}),
								(source =
									'boolean' == typeof options.unwrap &&
									options.unwrap
										? unwrapComment(comment)
										: comment),
								(originalSource = comment),
								options.tags)
							)
								if (Array.isArray(options.tags))
									for (
										interestingTags = {},
											i = 0,
											iz = options.tags.length;
										i < iz;
										i++
									)
										'string' == typeof options.tags[i]
											? (interestingTags[
													options.tags[i]
											  ] = !0)
											: utility.throwError(
													'Invalid "tags" parameter: ' +
														options.tags,
											  );
								else
									utility.throwError(
										'Invalid "tags" parameter: ' +
											options.tags,
									);
							for (
								length = source.length,
									index = 0,
									lineNumber = 0,
									recoverable = options.recoverable,
									sloppy = options.sloppy,
									strict = options.strict,
									description =
										(function scanJSDocDescription(
											preserveWhitespace,
										) {
											var ch,
												atAllowed,
												description = '';
											for (
												atAllowed = !0;
												index < length &&
												((ch =
													source.charCodeAt(index)),
												!atAllowed || 64 !== ch);

											)
												esutils.code.isLineTerminator(
													ch,
												)
													? (atAllowed = !0)
													: atAllowed &&
													  !esutils.code.isWhiteSpace(
															ch,
													  ) &&
													  (atAllowed = !1),
													(description += advance());
											return preserveWhitespace
												? description
												: description.trim();
										})(options.preserveWhitespace);
								(tag = parseTag(options));

							)
								(interestingTags &&
									!interestingTags.hasOwnProperty(
										tag.title,
									)) ||
									tags.push(tag);
							return { description, tags };
						});
				})((jsdoc = {})),
					(exports.version = utility.VERSION),
					(exports.parse = jsdoc.parse),
					(exports.parseType = typed.parseType),
					(exports.parseParamType = typed.parseParamType),
					(exports.unwrapComment = unwrapComment),
					(exports.Syntax = (function shallowCopy(obj) {
						var key,
							ret = {};
						for (key in obj)
							obj.hasOwnProperty(key) && (ret[key] = obj[key]);
						return ret;
					})(typed.Syntax)),
					(exports.Error = utility.DoctrineError),
					(exports.type = {
						Syntax: exports.Syntax,
						parseType: typed.parseType,
						parseParamType: typed.parseParamType,
						stringify: typed.stringify,
					});
			})();
		},
		'./node_modules/doctrine/lib/typed.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				var Syntax,
					Token,
					source,
					length,
					index,
					previous,
					token,
					value,
					esutils,
					utility,
					rangeOffset,
					addRange;
				function isTypeName(ch) {
					return (
						-1 ===
							'><(){}[],:*|?!='.indexOf(
								String.fromCharCode(ch),
							) &&
						!esutils.code.isWhiteSpace(ch) &&
						!esutils.code.isLineTerminator(ch)
					);
				}
				function Context(previous, index, token, value) {
					(this._previous = previous),
						(this._index = index),
						(this._token = token),
						(this._value = value);
				}
				function maybeAddRange(node, range) {
					return (
						addRange &&
							(node.range = [
								range[0] + rangeOffset,
								range[1] + rangeOffset,
							]),
						node
					);
				}
				function advance() {
					var ch = source.charAt(index);
					return (index += 1), ch;
				}
				function scanHexEscape(prefix) {
					var i,
						len,
						ch,
						code = 0;
					for (len = 'u' === prefix ? 4 : 2, i = 0; i < len; ++i) {
						if (
							!(
								index < length &&
								esutils.code.isHexDigit(
									source.charCodeAt(index),
								)
							)
						)
							return '';
						(ch = advance()),
							(code =
								16 * code +
								'0123456789abcdef'.indexOf(ch.toLowerCase()));
					}
					return String.fromCharCode(code);
				}
				function scanNumber() {
					var number, ch;
					if (
						((number = ''), 46 !== (ch = source.charCodeAt(index)))
					) {
						if (
							((number = advance()),
							(ch = source.charCodeAt(index)),
							'0' === number)
						) {
							if (120 === ch || 88 === ch) {
								for (
									number += advance();
									index < length &&
									((ch = source.charCodeAt(index)),
									esutils.code.isHexDigit(ch));

								)
									number += advance();
								return (
									number.length <= 2 &&
										utility.throwError('unexpected token'),
									index < length &&
										((ch = source.charCodeAt(index)),
										esutils.code.isIdentifierStartES5(ch) &&
											utility.throwError(
												'unexpected token',
											)),
									(value = parseInt(number, 16)),
									Token.NUMBER
								);
							}
							if (esutils.code.isOctalDigit(ch)) {
								for (
									number += advance();
									index < length &&
									((ch = source.charCodeAt(index)),
									esutils.code.isOctalDigit(ch));

								)
									number += advance();
								return (
									index < length &&
										((ch = source.charCodeAt(index)),
										(esutils.code.isIdentifierStartES5(
											ch,
										) ||
											esutils.code.isDecimalDigit(ch)) &&
											utility.throwError(
												'unexpected token',
											)),
									(value = parseInt(number, 8)),
									Token.NUMBER
								);
							}
							esutils.code.isDecimalDigit(ch) &&
								utility.throwError('unexpected token');
						}
						for (
							;
							index < length &&
							((ch = source.charCodeAt(index)),
							esutils.code.isDecimalDigit(ch));

						)
							number += advance();
					}
					if (46 === ch)
						for (
							number += advance();
							index < length &&
							((ch = source.charCodeAt(index)),
							esutils.code.isDecimalDigit(ch));

						)
							number += advance();
					if (101 === ch || 69 === ch)
						if (
							((number += advance()),
							(43 !== (ch = source.charCodeAt(index)) &&
								45 !== ch) ||
								(number += advance()),
							(ch = source.charCodeAt(index)),
							esutils.code.isDecimalDigit(ch))
						)
							for (
								number += advance();
								index < length &&
								((ch = source.charCodeAt(index)),
								esutils.code.isDecimalDigit(ch));

							)
								number += advance();
						else utility.throwError('unexpected token');
					return (
						index < length &&
							((ch = source.charCodeAt(index)),
							esutils.code.isIdentifierStartES5(ch) &&
								utility.throwError('unexpected token')),
						(value = parseFloat(number)),
						Token.NUMBER
					);
				}
				function next() {
					var ch;
					for (
						previous = index;
						index < length &&
						esutils.code.isWhiteSpace(source.charCodeAt(index));

					)
						advance();
					if (index >= length) return (token = Token.EOF);
					switch ((ch = source.charCodeAt(index))) {
						case 39:
						case 34:
							return (
								(token = (function scanString() {
									var quote,
										ch,
										code,
										unescaped,
										restore,
										str = '';
									for (
										quote = source.charAt(index), ++index;
										index < length;

									) {
										if ((ch = advance()) === quote) {
											quote = '';
											break;
										}
										if ('\\' === ch)
											if (
												((ch = advance()),
												esutils.code.isLineTerminator(
													ch.charCodeAt(0),
												))
											)
												'\r' === ch &&
													10 ===
														source.charCodeAt(
															index,
														) &&
													++index;
											else
												switch (ch) {
													case 'n':
														str += '\n';
														break;
													case 'r':
														str += '\r';
														break;
													case 't':
														str += '\t';
														break;
													case 'u':
													case 'x':
														(restore = index),
															(unescaped =
																scanHexEscape(
																	ch,
																))
																? (str +=
																		unescaped)
																: ((index =
																		restore),
																  (str += ch));
														break;
													case 'b':
														str += '\b';
														break;
													case 'f':
														str += '\f';
														break;
													case 'v':
														str += '\v';
														break;
													default:
														esutils.code.isOctalDigit(
															ch.charCodeAt(0),
														)
															? ((code =
																	'01234567'.indexOf(
																		ch,
																	)),
															  index < length &&
																	esutils.code.isOctalDigit(
																		source.charCodeAt(
																			index,
																		),
																	) &&
																	((code =
																		8 *
																			code +
																		'01234567'.indexOf(
																			advance(),
																		)),
																	'0123'.indexOf(
																		ch,
																	) >= 0 &&
																		index <
																			length &&
																		esutils.code.isOctalDigit(
																			source.charCodeAt(
																				index,
																			),
																		) &&
																		(code =
																			8 *
																				code +
																			'01234567'.indexOf(
																				advance(),
																			))),
															  (str +=
																	String.fromCharCode(
																		code,
																	)))
															: (str += ch);
												}
										else {
											if (
												esutils.code.isLineTerminator(
													ch.charCodeAt(0),
												)
											)
												break;
											str += ch;
										}
									}
									return (
										'' !== quote &&
											utility.throwError(
												'unexpected quote',
											),
										(value = str),
										Token.STRING
									);
								})()),
								token
							);
						case 58:
							return advance(), (token = Token.COLON);
						case 44:
							return advance(), (token = Token.COMMA);
						case 40:
							return advance(), (token = Token.LPAREN);
						case 41:
							return advance(), (token = Token.RPAREN);
						case 91:
							return advance(), (token = Token.LBRACK);
						case 93:
							return advance(), (token = Token.RBRACK);
						case 123:
							return advance(), (token = Token.LBRACE);
						case 125:
							return advance(), (token = Token.RBRACE);
						case 46:
							if (index + 1 < length) {
								if (60 === (ch = source.charCodeAt(index + 1)))
									return (
										advance(),
										advance(),
										(token = Token.DOT_LT)
									);
								if (
									46 === ch &&
									index + 2 < length &&
									46 === source.charCodeAt(index + 2)
								)
									return (
										advance(),
										advance(),
										advance(),
										(token = Token.REST)
									);
								if (esutils.code.isDecimalDigit(ch))
									return (token = scanNumber());
							}
							return (token = Token.ILLEGAL);
						case 60:
							return advance(), (token = Token.LT);
						case 62:
							return advance(), (token = Token.GT);
						case 42:
							return advance(), (token = Token.STAR);
						case 124:
							return advance(), (token = Token.PIPE);
						case 63:
							return advance(), (token = Token.QUESTION);
						case 33:
							return advance(), (token = Token.BANG);
						case 61:
							return advance(), (token = Token.EQUAL);
						case 45:
							return (token = scanNumber());
						default:
							return esutils.code.isDecimalDigit(ch)
								? (token = scanNumber())
								: (utility.assert(isTypeName(ch)),
								  (token = (function scanTypeName() {
										for (
											value = advance();
											index < length &&
											isTypeName(
												source.charCodeAt(index),
											);

										) {
											if (
												46 === source.charCodeAt(index)
											) {
												if (index + 1 >= length)
													return Token.ILLEGAL;
												if (
													60 ===
													source.charCodeAt(index + 1)
												)
													break;
											}
											value += advance();
										}
										return Token.NAME;
								  })()));
					}
				}
				function consume(target, text) {
					utility.assert(
						token === target,
						text || 'consumed token not matched',
					),
						next();
				}
				function expect(target, message) {
					token !== target &&
						utility.throwError(message || 'unexpected token'),
						next();
				}
				function parseFieldType() {
					var key,
						rangeStart = previous;
					return (
						(key = (function parseFieldName() {
							var v = value;
							return token === Token.NAME ||
								token === Token.STRING
								? (next(), v)
								: token === Token.NUMBER
								? (consume(Token.NUMBER), String(v))
								: void utility.throwError('unexpected token');
						})()),
						token === Token.COLON
							? (consume(Token.COLON),
							  maybeAddRange(
									{
										type: Syntax.FieldType,
										key,
										value: parseTypeExpression(),
									},
									[rangeStart, previous],
							  ))
							: maybeAddRange(
									{
										type: Syntax.FieldType,
										key,
										value: null,
									},
									[rangeStart, previous],
							  )
					);
				}
				function parseTypeName() {
					var expr,
						applications,
						startIndex = index - value.length;
					return (
						(expr = (function parseNameExpression() {
							var name = value,
								rangeStart = index - name.length;
							return (
								expect(Token.NAME),
								token !== Token.COLON ||
									('module' !== name &&
										'external' !== name &&
										'event' !== name) ||
									(consume(Token.COLON),
									(name += ':' + value),
									expect(Token.NAME)),
								maybeAddRange(
									{ type: Syntax.NameExpression, name },
									[rangeStart, previous],
								)
							);
						})()),
						token === Token.DOT_LT || token === Token.LT
							? (next(),
							  (applications =
									(function parseTypeExpressionList() {
										var elements = [];
										for (
											elements.push(parseTop());
											token === Token.COMMA;

										)
											consume(Token.COMMA),
												elements.push(parseTop());
										return elements;
									})()),
							  expect(Token.GT),
							  maybeAddRange(
									{
										type: Syntax.TypeApplication,
										expression: expr,
										applications,
									},
									[startIndex, previous],
							  ))
							: expr
					);
				}
				function parseParametersType() {
					for (
						var expr,
							startIndex,
							nameStartIndex,
							params = [],
							optionalSequence = !1,
							rest = !1,
							restStartIndex = index - 3;
						token !== Token.RPAREN;

					)
						token === Token.REST &&
							(consume(Token.REST), (rest = !0)),
							(startIndex = previous),
							(expr = parseTypeExpression()).type ===
								Syntax.NameExpression &&
								token === Token.COLON &&
								((nameStartIndex = previous - expr.name.length),
								consume(Token.COLON),
								(expr = maybeAddRange(
									{
										type: Syntax.ParameterType,
										name: expr.name,
										expression: parseTypeExpression(),
									},
									[nameStartIndex, previous],
								))),
							token === Token.EQUAL
								? (consume(Token.EQUAL),
								  (expr = maybeAddRange(
										{
											type: Syntax.OptionalType,
											expression: expr,
										},
										[startIndex, previous],
								  )),
								  (optionalSequence = !0))
								: optionalSequence &&
								  utility.throwError('unexpected token'),
							rest &&
								(expr = maybeAddRange(
									{ type: Syntax.RestType, expression: expr },
									[restStartIndex, previous],
								)),
							params.push(expr),
							token !== Token.RPAREN && expect(Token.COMMA);
					return params;
				}
				function parseFunctionType() {
					var isNew,
						thisBinding,
						params,
						result,
						fnType,
						startIndex = index - value.length;
					return (
						utility.assert(
							token === Token.NAME && 'function' === value,
							"FunctionType should start with 'function'",
						),
						consume(Token.NAME),
						expect(Token.LPAREN),
						(isNew = !1),
						(params = []),
						(thisBinding = null),
						token !== Token.RPAREN &&
							(token !== Token.NAME ||
							('this' !== value && 'new' !== value)
								? (params = parseParametersType())
								: ((isNew = 'new' === value),
								  consume(Token.NAME),
								  expect(Token.COLON),
								  (thisBinding = parseTypeName()),
								  token === Token.COMMA &&
										(consume(Token.COMMA),
										(params = parseParametersType())))),
						expect(Token.RPAREN),
						(result = null),
						token === Token.COLON &&
							(result = (function parseResultType() {
								return (
									consume(
										Token.COLON,
										'ResultType should start with :',
									),
									token === Token.NAME && 'void' === value
										? (consume(Token.NAME),
										  { type: Syntax.VoidLiteral })
										: parseTypeExpression()
								);
							})()),
						(fnType = maybeAddRange(
							{ type: Syntax.FunctionType, params, result },
							[startIndex, previous],
						)),
						thisBinding &&
							((fnType.this = thisBinding),
							isNew && (fnType.new = !0)),
						fnType
					);
				}
				function parseBasicTypeExpression() {
					var context, startIndex;
					switch (token) {
						case Token.STAR:
							return (
								consume(Token.STAR),
								maybeAddRange({ type: Syntax.AllLiteral }, [
									previous - 1,
									previous,
								])
							);
						case Token.LPAREN:
							return (function parseUnionType() {
								var elements,
									startIndex = index - 1;
								if (
									(consume(
										Token.LPAREN,
										'UnionType should start with (',
									),
									(elements = []),
									token !== Token.RPAREN)
								)
									for (
										;
										elements.push(parseTypeExpression()),
											token !== Token.RPAREN;

									)
										expect(Token.PIPE);
								return (
									consume(
										Token.RPAREN,
										'UnionType should end with )',
									),
									maybeAddRange(
										{ type: Syntax.UnionType, elements },
										[startIndex, previous],
									)
								);
							})();
						case Token.LBRACK:
							return (function parseArrayType() {
								var elements,
									restStartIndex,
									startIndex = index - 1;
								for (
									consume(
										Token.LBRACK,
										'ArrayType should start with [',
									),
										elements = [];
									token !== Token.RBRACK;

								) {
									if (token === Token.REST) {
										(restStartIndex = index - 3),
											consume(Token.REST),
											elements.push(
												maybeAddRange(
													{
														type: Syntax.RestType,
														expression:
															parseTypeExpression(),
													},
													[restStartIndex, previous],
												),
											);
										break;
									}
									elements.push(parseTypeExpression()),
										token !== Token.RBRACK &&
											expect(Token.COMMA);
								}
								return (
									expect(Token.RBRACK),
									maybeAddRange(
										{ type: Syntax.ArrayType, elements },
										[startIndex, previous],
									)
								);
							})();
						case Token.LBRACE:
							return (function parseRecordType() {
								var fields,
									rangeEnd,
									rangeStart = index - 1;
								if (
									(consume(
										Token.LBRACE,
										'RecordType should start with {',
									),
									(fields = []),
									token === Token.COMMA)
								)
									consume(Token.COMMA);
								else
									for (; token !== Token.RBRACE; )
										fields.push(parseFieldType()),
											token !== Token.RBRACE &&
												expect(Token.COMMA);
								return (
									(rangeEnd = index),
									expect(Token.RBRACE),
									maybeAddRange(
										{ type: Syntax.RecordType, fields },
										[rangeStart, rangeEnd],
									)
								);
							})();
						case Token.NAME:
							if (
								((startIndex = index - value.length),
								'null' === value)
							)
								return (
									consume(Token.NAME),
									maybeAddRange(
										{ type: Syntax.NullLiteral },
										[startIndex, previous],
									)
								);
							if ('undefined' === value)
								return (
									consume(Token.NAME),
									maybeAddRange(
										{ type: Syntax.UndefinedLiteral },
										[startIndex, previous],
									)
								);
							if ('true' === value || 'false' === value)
								return (
									consume(Token.NAME),
									maybeAddRange(
										{
											type: Syntax.BooleanLiteralType,
											value: 'true' === value,
										},
										[startIndex, previous],
									)
								);
							if (
								((context = Context.save()),
								'function' === value)
							)
								try {
									return parseFunctionType();
								} catch (e) {
									context.restore();
								}
							return parseTypeName();
						case Token.STRING:
							return (
								next(),
								maybeAddRange(
									{ type: Syntax.StringLiteralType, value },
									[previous - value.length - 2, previous],
								)
							);
						case Token.NUMBER:
							return (
								next(),
								maybeAddRange(
									{ type: Syntax.NumericLiteralType, value },
									[previous - String(value).length, previous],
								)
							);
						default:
							utility.throwError('unexpected token');
					}
				}
				function parseTypeExpression() {
					var expr, rangeStart;
					return token === Token.QUESTION
						? ((rangeStart = index - 1),
						  consume(Token.QUESTION),
						  token === Token.COMMA ||
						  token === Token.EQUAL ||
						  token === Token.RBRACE ||
						  token === Token.RPAREN ||
						  token === Token.PIPE ||
						  token === Token.EOF ||
						  token === Token.RBRACK ||
						  token === Token.GT
								? maybeAddRange(
										{ type: Syntax.NullableLiteral },
										[rangeStart, previous],
								  )
								: maybeAddRange(
										{
											type: Syntax.NullableType,
											expression:
												parseBasicTypeExpression(),
											prefix: !0,
										},
										[rangeStart, previous],
								  ))
						: token === Token.BANG
						? ((rangeStart = index - 1),
						  consume(Token.BANG),
						  maybeAddRange(
								{
									type: Syntax.NonNullableType,
									expression: parseBasicTypeExpression(),
									prefix: !0,
								},
								[rangeStart, previous],
						  ))
						: ((rangeStart = previous),
						  (expr = parseBasicTypeExpression()),
						  token === Token.BANG
								? (consume(Token.BANG),
								  maybeAddRange(
										{
											type: Syntax.NonNullableType,
											expression: expr,
											prefix: !1,
										},
										[rangeStart, previous],
								  ))
								: token === Token.QUESTION
								? (consume(Token.QUESTION),
								  maybeAddRange(
										{
											type: Syntax.NullableType,
											expression: expr,
											prefix: !1,
										},
										[rangeStart, previous],
								  ))
								: token === Token.LBRACK
								? (consume(Token.LBRACK),
								  expect(
										Token.RBRACK,
										'expected an array-style type declaration (' +
											value +
											'[])',
								  ),
								  maybeAddRange(
										{
											type: Syntax.TypeApplication,
											expression: maybeAddRange(
												{
													type: Syntax.NameExpression,
													name: 'Array',
												},
												[rangeStart, previous],
											),
											applications: [expr],
										},
										[rangeStart, previous],
								  ))
								: expr);
				}
				function parseTop() {
					var expr, elements;
					if (((expr = parseTypeExpression()), token !== Token.PIPE))
						return expr;
					for (
						elements = [expr], consume(Token.PIPE);
						elements.push(parseTypeExpression()),
							token === Token.PIPE;

					)
						consume(Token.PIPE);
					return maybeAddRange({ type: Syntax.UnionType, elements }, [
						0,
						index,
					]);
				}
				function stringifyImpl(node, compact, topLevel) {
					var result, i, iz;
					switch (node.type) {
						case Syntax.NullableLiteral:
							result = '?';
							break;
						case Syntax.AllLiteral:
							result = '*';
							break;
						case Syntax.NullLiteral:
							result = 'null';
							break;
						case Syntax.UndefinedLiteral:
							result = 'undefined';
							break;
						case Syntax.VoidLiteral:
							result = 'void';
							break;
						case Syntax.UnionType:
							for (
								result = topLevel ? '' : '(',
									i = 0,
									iz = node.elements.length;
								i < iz;
								++i
							)
								(result += stringifyImpl(
									node.elements[i],
									compact,
								)),
									i + 1 !== iz &&
										(result += compact ? '|' : ' | ');
							topLevel || (result += ')');
							break;
						case Syntax.ArrayType:
							for (
								result = '[', i = 0, iz = node.elements.length;
								i < iz;
								++i
							)
								(result += stringifyImpl(
									node.elements[i],
									compact,
								)),
									i + 1 !== iz &&
										(result += compact ? ',' : ', ');
							result += ']';
							break;
						case Syntax.RecordType:
							for (
								result = '{', i = 0, iz = node.fields.length;
								i < iz;
								++i
							)
								(result += stringifyImpl(
									node.fields[i],
									compact,
								)),
									i + 1 !== iz &&
										(result += compact ? ',' : ', ');
							result += '}';
							break;
						case Syntax.FieldType:
							result = node.value
								? node.key +
								  (compact ? ':' : ': ') +
								  stringifyImpl(node.value, compact)
								: node.key;
							break;
						case Syntax.FunctionType:
							for (
								result = compact ? 'function(' : 'function (',
									node.this &&
										(node.new
											? (result += compact
													? 'new:'
													: 'new: ')
											: (result += compact
													? 'this:'
													: 'this: '),
										(result += stringifyImpl(
											node.this,
											compact,
										)),
										0 !== node.params.length &&
											(result += compact ? ',' : ', ')),
									i = 0,
									iz = node.params.length;
								i < iz;
								++i
							)
								(result += stringifyImpl(
									node.params[i],
									compact,
								)),
									i + 1 !== iz &&
										(result += compact ? ',' : ', ');
							(result += ')'),
								node.result &&
									(result +=
										(compact ? ':' : ': ') +
										stringifyImpl(node.result, compact));
							break;
						case Syntax.ParameterType:
							result =
								node.name +
								(compact ? ':' : ': ') +
								stringifyImpl(node.expression, compact);
							break;
						case Syntax.RestType:
							(result = '...'),
								node.expression &&
									(result += stringifyImpl(
										node.expression,
										compact,
									));
							break;
						case Syntax.NonNullableType:
							result = node.prefix
								? '!' + stringifyImpl(node.expression, compact)
								: stringifyImpl(node.expression, compact) + '!';
							break;
						case Syntax.OptionalType:
							result =
								stringifyImpl(node.expression, compact) + '=';
							break;
						case Syntax.NullableType:
							result = node.prefix
								? '?' + stringifyImpl(node.expression, compact)
								: stringifyImpl(node.expression, compact) + '?';
							break;
						case Syntax.NameExpression:
							result = node.name;
							break;
						case Syntax.TypeApplication:
							for (
								result =
									stringifyImpl(node.expression, compact) +
									'.<',
									i = 0,
									iz = node.applications.length;
								i < iz;
								++i
							)
								(result += stringifyImpl(
									node.applications[i],
									compact,
								)),
									i + 1 !== iz &&
										(result += compact ? ',' : ', ');
							result += '>';
							break;
						case Syntax.StringLiteralType:
							result = '"' + node.value + '"';
							break;
						case Syntax.NumericLiteralType:
						case Syntax.BooleanLiteralType:
							result = String(node.value);
							break;
						default:
							utility.throwError('Unknown type ' + node.type);
					}
					return result;
				}
				(esutils = __webpack_require__(
					'./node_modules/esutils/lib/utils.js',
				)),
					(utility = __webpack_require__(
						'./node_modules/doctrine/lib/utility.js',
					)),
					(Syntax = {
						NullableLiteral: 'NullableLiteral',
						AllLiteral: 'AllLiteral',
						NullLiteral: 'NullLiteral',
						UndefinedLiteral: 'UndefinedLiteral',
						VoidLiteral: 'VoidLiteral',
						UnionType: 'UnionType',
						ArrayType: 'ArrayType',
						RecordType: 'RecordType',
						FieldType: 'FieldType',
						FunctionType: 'FunctionType',
						ParameterType: 'ParameterType',
						RestType: 'RestType',
						NonNullableType: 'NonNullableType',
						OptionalType: 'OptionalType',
						NullableType: 'NullableType',
						NameExpression: 'NameExpression',
						TypeApplication: 'TypeApplication',
						StringLiteralType: 'StringLiteralType',
						NumericLiteralType: 'NumericLiteralType',
						BooleanLiteralType: 'BooleanLiteralType',
					}),
					(Token = {
						ILLEGAL: 0,
						DOT_LT: 1,
						REST: 2,
						LT: 3,
						GT: 4,
						LPAREN: 5,
						RPAREN: 6,
						LBRACE: 7,
						RBRACE: 8,
						LBRACK: 9,
						RBRACK: 10,
						COMMA: 11,
						COLON: 12,
						STAR: 13,
						PIPE: 14,
						QUESTION: 15,
						BANG: 16,
						EQUAL: 17,
						NAME: 18,
						STRING: 19,
						NUMBER: 20,
						EOF: 21,
					}),
					(Context.prototype.restore = function () {
						(previous = this._previous),
							(index = this._index),
							(token = this._token),
							(value = this._value);
					}),
					(Context.save = function () {
						return new Context(previous, index, token, value);
					}),
					(exports.parseType = function parseType(src, opt) {
						var expr;
						return (
							(length = (source = src).length),
							(index = 0),
							(previous = 0),
							(addRange = opt && opt.range),
							(rangeOffset = (opt && opt.startIndex) || 0),
							next(),
							(expr = parseTop()),
							opt && opt.midstream
								? { expression: expr, index: previous }
								: (token !== Token.EOF &&
										utility.throwError('not reach to EOF'),
								  expr)
						);
					}),
					(exports.parseParamType = function parseParamType(
						src,
						opt,
					) {
						var expr;
						return (
							(length = (source = src).length),
							(index = 0),
							(previous = 0),
							(addRange = opt && opt.range),
							(rangeOffset = (opt && opt.startIndex) || 0),
							next(),
							(expr = (function parseTopParamType() {
								var expr;
								return token === Token.REST
									? (consume(Token.REST),
									  maybeAddRange(
											{
												type: Syntax.RestType,
												expression: parseTop(),
											},
											[0, index],
									  ))
									: ((expr = parseTop()),
									  token === Token.EQUAL
											? (consume(Token.EQUAL),
											  maybeAddRange(
													{
														type: Syntax.OptionalType,
														expression: expr,
													},
													[0, index],
											  ))
											: expr);
							})()),
							opt && opt.midstream
								? { expression: expr, index: previous }
								: (token !== Token.EOF &&
										utility.throwError('not reach to EOF'),
								  expr)
						);
					}),
					(exports.stringify = function stringify(node, options) {
						return (
							null == options && (options = {}),
							stringifyImpl(
								node,
								options.compact,
								options.topLevel,
							)
						);
					}),
					(exports.Syntax = Syntax);
			})();
		},
		'./node_modules/doctrine/lib/utility.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				var VERSION, Middle;
				function DoctrineError(message) {
					(this.name = 'DoctrineError'), (this.message = message);
				}
				(VERSION = __webpack_require__(
					'./node_modules/doctrine/package.json',
				).i8),
					(exports.VERSION = VERSION),
					(DoctrineError.prototype =
						(((Middle = function () {}).prototype =
							Error.prototype),
						new Middle())),
					(DoctrineError.prototype.constructor = DoctrineError),
					(exports.DoctrineError = DoctrineError),
					(exports.throwError = function throwError(message) {
						throw new DoctrineError(message);
					}),
					(exports.assert = __webpack_require__(
						'./node_modules/assert/build/assert.js',
					));
			})();
		},
		'./node_modules/escodegen/escodegen.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				var Syntax,
					Precedence,
					BinaryPrecedence,
					SourceNode,
					estraverse,
					esutils,
					base,
					indent,
					json,
					renumber,
					hexadecimal,
					quotes,
					escapeless,
					newline,
					space,
					parentheses,
					semicolons,
					safeConcatenation,
					directive,
					extra,
					parse,
					sourceMap,
					sourceCode,
					preserveBlankLines,
					FORMAT_MINIFY,
					FORMAT_DEFAULTS;
				function isStatement(node) {
					return CodeGenerator.Statement.hasOwnProperty(node.type);
				}
				(estraverse = __webpack_require__(
					'./node_modules/estraverse/estraverse.js',
				)),
					(esutils = __webpack_require__(
						'./node_modules/esutils/lib/utils.js',
					)),
					(Syntax = estraverse.Syntax),
					(BinaryPrecedence = {
						'??': (Precedence = {
							Sequence: 0,
							Yield: 1,
							Assignment: 1,
							Conditional: 2,
							ArrowFunction: 2,
							Coalesce: 3,
							LogicalOR: 4,
							LogicalAND: 5,
							BitwiseOR: 6,
							BitwiseXOR: 7,
							BitwiseAND: 8,
							Equality: 9,
							Relational: 10,
							BitwiseSHIFT: 11,
							Additive: 12,
							Multiplicative: 13,
							Exponentiation: 14,
							Await: 15,
							Unary: 15,
							Postfix: 16,
							OptionalChaining: 17,
							Call: 18,
							New: 19,
							TaggedTemplate: 20,
							Member: 21,
							Primary: 22,
						}).Coalesce,
						'||': Precedence.LogicalOR,
						'&&': Precedence.LogicalAND,
						'|': Precedence.BitwiseOR,
						'^': Precedence.BitwiseXOR,
						'&': Precedence.BitwiseAND,
						'==': Precedence.Equality,
						'!=': Precedence.Equality,
						'===': Precedence.Equality,
						'!==': Precedence.Equality,
						is: Precedence.Equality,
						isnt: Precedence.Equality,
						'<': Precedence.Relational,
						'>': Precedence.Relational,
						'<=': Precedence.Relational,
						'>=': Precedence.Relational,
						in: Precedence.Relational,
						instanceof: Precedence.Relational,
						'<<': Precedence.BitwiseSHIFT,
						'>>': Precedence.BitwiseSHIFT,
						'>>>': Precedence.BitwiseSHIFT,
						'+': Precedence.Additive,
						'-': Precedence.Additive,
						'*': Precedence.Multiplicative,
						'%': Precedence.Multiplicative,
						'/': Precedence.Multiplicative,
						'**': Precedence.Exponentiation,
					});
				var E_TTT = 7,
					S_TFFF = 1;
				function stringRepeat(str, num) {
					var result = '';
					for (num |= 0; num > 0; num >>>= 1, str += str)
						1 & num && (result += str);
					return result;
				}
				function endsWithLineTerminator(str) {
					var len = str.length;
					return (
						len &&
						esutils.code.isLineTerminator(str.charCodeAt(len - 1))
					);
				}
				function merge(target, override) {
					var key;
					for (key in override)
						override.hasOwnProperty(key) &&
							(target[key] = override[key]);
					return target;
				}
				function updateDeeply(target, override) {
					var key, val;
					function isHashObject(target) {
						return (
							'object' == typeof target &&
							target instanceof Object &&
							!(target instanceof RegExp)
						);
					}
					for (key in override)
						override.hasOwnProperty(key) &&
							(isHashObject((val = override[key]))
								? isHashObject(target[key])
									? updateDeeply(target[key], val)
									: (target[key] = updateDeeply({}, val))
								: (target[key] = val));
					return target;
				}
				function escapeRegExpCharacter(ch, previousIsBackslash) {
					return 8232 == (-2 & ch)
						? (previousIsBackslash ? 'u' : '\\u') +
								(8232 === ch ? '2028' : '2029')
						: 10 === ch || 13 === ch
						? (previousIsBackslash ? '' : '\\') +
						  (10 === ch ? 'n' : 'r')
						: String.fromCharCode(ch);
				}
				function escapeAllowedCharacter(code, next) {
					var hex;
					return 8 === code
						? '\\b'
						: 12 === code
						? '\\f'
						: 9 === code
						? '\\t'
						: ((hex = code.toString(16).toUpperCase()),
						  json || code > 255
								? '\\u' + '0000'.slice(hex.length) + hex
								: 0 !== code ||
								  esutils.code.isDecimalDigit(next)
								? 11 === code
									? '\\x0B'
									: '\\x' + '00'.slice(hex.length) + hex
								: '\\0');
				}
				function escapeDisallowedCharacter(code) {
					if (92 === code) return '\\\\';
					if (10 === code) return '\\n';
					if (13 === code) return '\\r';
					if (8232 === code) return '\\u2028';
					if (8233 === code) return '\\u2029';
					throw new Error('Incorrectly classified character');
				}
				function flattenToString(arr) {
					var i,
						iz,
						elem,
						result = '';
					for (i = 0, iz = arr.length; i < iz; ++i)
						(elem = arr[i]),
							(result += Array.isArray(elem)
								? flattenToString(elem)
								: elem);
					return result;
				}
				function toSourceNodeWhenNeeded(generated, node) {
					if (!sourceMap)
						return Array.isArray(generated)
							? flattenToString(generated)
							: generated;
					if (null == node) {
						if (generated instanceof SourceNode) return generated;
						node = {};
					}
					return null == node.loc
						? new SourceNode(
								null,
								null,
								sourceMap,
								generated,
								node.name || null,
						  )
						: new SourceNode(
								node.loc.start.line,
								node.loc.start.column,
								!0 === sourceMap
									? node.loc.source || null
									: sourceMap,
								generated,
								node.name || null,
						  );
				}
				function noEmptySpace() {
					return space || ' ';
				}
				function join(left, right) {
					var leftSource, rightSource, leftCharCode, rightCharCode;
					return 0 ===
						(leftSource = toSourceNodeWhenNeeded(left).toString())
							.length
						? [right]
						: 0 ===
						  (rightSource =
								toSourceNodeWhenNeeded(right).toString()).length
						? [left]
						: ((leftCharCode = leftSource.charCodeAt(
								leftSource.length - 1,
						  )),
						  (rightCharCode = rightSource.charCodeAt(0)),
						  ((43 === leftCharCode || 45 === leftCharCode) &&
								leftCharCode === rightCharCode) ||
						  (esutils.code.isIdentifierPartES5(leftCharCode) &&
								esutils.code.isIdentifierPartES5(
									rightCharCode,
								)) ||
						  (47 === leftCharCode && 105 === rightCharCode)
								? [left, noEmptySpace(), right]
								: esutils.code.isWhiteSpace(leftCharCode) ||
								  esutils.code.isLineTerminator(leftCharCode) ||
								  esutils.code.isWhiteSpace(rightCharCode) ||
								  esutils.code.isLineTerminator(rightCharCode)
								? [left, right]
								: [left, space, right]);
				}
				function addIndent(stmt) {
					return [base, stmt];
				}
				function withIndent(fn) {
					var previousBase;
					(previousBase = base),
						fn((base += indent)),
						(base = previousBase);
				}
				function generateComment(comment, specialBase) {
					if ('Line' === comment.type) {
						if (endsWithLineTerminator(comment.value))
							return '//' + comment.value;
						var result = '//' + comment.value;
						return preserveBlankLines || (result += '\n'), result;
					}
					return extra.format.indent.adjustMultilineComment &&
						/[\n\r]/.test(comment.value)
						? (function adjustMultilineComment(value, specialBase) {
								var array,
									i,
									len,
									line,
									j,
									spaces,
									previousBase,
									sn;
								for (
									array = value.split(/\r\n|[\r\n]/),
										spaces = Number.MAX_VALUE,
										i = 1,
										len = array.length;
									i < len;
									++i
								) {
									for (
										line = array[i], j = 0;
										j < line.length &&
										esutils.code.isWhiteSpace(
											line.charCodeAt(j),
										);

									)
										++j;
									spaces > j && (spaces = j);
								}
								for (
									void 0 !== specialBase
										? ((previousBase = base),
										  '*' === array[1][spaces] &&
												(specialBase += ' '),
										  (base = specialBase))
										: (1 & spaces && --spaces,
										  (previousBase = base)),
										i = 1,
										len = array.length;
									i < len;
									++i
								)
									(sn = toSourceNodeWhenNeeded(
										addIndent(array[i].slice(spaces)),
									)),
										(array[i] = sourceMap
											? sn.join('')
											: sn);
								return (base = previousBase), array.join('\n');
						  })('/*' + comment.value + '*/', specialBase)
						: '/*' + comment.value + '*/';
				}
				function addComments(stmt, result) {
					var i,
						len,
						comment,
						save,
						tailingToStatement,
						specialBase,
						fragment,
						extRange,
						range,
						prevRange,
						prefix,
						count;
					if (
						stmt.leadingComments &&
						stmt.leadingComments.length > 0
					) {
						if (((save = result), preserveBlankLines)) {
							for (
								result = [],
									extRange = (comment =
										stmt.leadingComments[0]).extendedRange,
									range = comment.range,
									(count = (
										(prefix = sourceCode.substring(
											extRange[0],
											range[0],
										)).match(/\n/g) || []
									).length) > 0
										? (result.push(
												stringRepeat('\n', count),
										  ),
										  result.push(
												addIndent(
													generateComment(comment),
												),
										  ))
										: (result.push(prefix),
										  result.push(
												generateComment(comment),
										  )),
									prevRange = range,
									i = 1,
									len = stmt.leadingComments.length;
								i < len;
								i++
							)
								(range = (comment = stmt.leadingComments[i])
									.range),
									(count = (
										sourceCode
											.substring(prevRange[1], range[0])
											.match(/\n/g) || []
									).length),
									result.push(stringRepeat('\n', count)),
									result.push(
										addIndent(generateComment(comment)),
									),
									(prevRange = range);
							(count = (
								sourceCode
									.substring(range[1], extRange[1])
									.match(/\n/g) || []
							).length),
								result.push(stringRepeat('\n', count));
						} else
							for (
								comment = stmt.leadingComments[0],
									result = [],
									safeConcatenation &&
										stmt.type === Syntax.Program &&
										0 === stmt.body.length &&
										result.push('\n'),
									result.push(generateComment(comment)),
									endsWithLineTerminator(
										toSourceNodeWhenNeeded(
											result,
										).toString(),
									) || result.push('\n'),
									i = 1,
									len = stmt.leadingComments.length;
								i < len;
								++i
							)
								endsWithLineTerminator(
									toSourceNodeWhenNeeded(
										(fragment = [
											generateComment(
												(comment =
													stmt.leadingComments[i]),
											),
										]),
									).toString(),
								) || fragment.push('\n'),
									result.push(addIndent(fragment));
						result.push(addIndent(save));
					}
					if (stmt.trailingComments)
						if (preserveBlankLines)
							(extRange = (comment = stmt.trailingComments[0])
								.extendedRange),
								(range = comment.range),
								(count = (
									(prefix = sourceCode.substring(
										extRange[0],
										range[0],
									)).match(/\n/g) || []
								).length) > 0
									? (result.push(stringRepeat('\n', count)),
									  result.push(
											addIndent(generateComment(comment)),
									  ))
									: (result.push(prefix),
									  result.push(generateComment(comment)));
						else
							for (
								tailingToStatement = !endsWithLineTerminator(
									toSourceNodeWhenNeeded(result).toString(),
								),
									specialBase = stringRepeat(
										' ',
										(function calculateSpaces(str) {
											var i;
											for (
												i = str.length - 1;
												i >= 0 &&
												!esutils.code.isLineTerminator(
													str.charCodeAt(i),
												);
												--i
											);
											return str.length - 1 - i;
										})(
											toSourceNodeWhenNeeded([
												base,
												result,
												indent,
											]).toString(),
										),
									),
									i = 0,
									len = stmt.trailingComments.length;
								i < len;
								++i
							)
								(comment = stmt.trailingComments[i]),
									tailingToStatement
										? (result =
												0 === i
													? [result, indent]
													: [
															result,
															specialBase,
													  ]).push(
												generateComment(
													comment,
													specialBase,
												),
										  )
										: (result = [
												result,
												addIndent(
													generateComment(comment),
												),
										  ]),
									i === len - 1 ||
										endsWithLineTerminator(
											toSourceNodeWhenNeeded(
												result,
											).toString(),
										) ||
										(result = [result, '\n']);
					return result;
				}
				function generateBlankLines(start, end, result) {
					var j,
						newlineCount = 0;
					for (j = start; j < end; j++)
						'\n' === sourceCode[j] && newlineCount++;
					for (j = 1; j < newlineCount; j++) result.push(newline);
				}
				function parenthesize(text, current, should) {
					return current < should ? ['(', text, ')'] : text;
				}
				function generateVerbatimString(string) {
					var i, iz, result;
					for (
						i = 1, iz = (result = string.split(/\r\n|\n/)).length;
						i < iz;
						i++
					)
						result[i] = newline + base + result[i];
					return result;
				}
				function CodeGenerator() {}
				function generateIdentifier(node) {
					return toSourceNodeWhenNeeded(node.name, node);
				}
				function generateAsyncPrefix(node, spaceRequired) {
					return node.async
						? 'async' + (spaceRequired ? noEmptySpace() : space)
						: '';
				}
				function generateStarSuffix(node) {
					return node.generator && !extra.moz.starlessGenerator
						? '*' + space
						: '';
				}
				function generateMethodPrefix(prop) {
					var func = prop.value,
						prefix = '';
					return (
						func.async &&
							(prefix += generateAsyncPrefix(
								func,
								!prop.computed,
							)),
						func.generator &&
							(prefix += generateStarSuffix(func) ? '*' : ''),
						prefix
					);
				}
				function generateInternal(node) {
					var codegen;
					if (((codegen = new CodeGenerator()), isStatement(node)))
						return codegen.generateStatement(node, S_TFFF);
					if (
						(function isExpression(node) {
							return CodeGenerator.Expression.hasOwnProperty(
								node.type,
							);
						})(node)
					)
						return codegen.generateExpression(
							node,
							Precedence.Sequence,
							E_TTT,
						);
					throw new Error('Unknown node type: ' + node.type);
				}
				(CodeGenerator.prototype.maybeBlock = function (stmt, flags) {
					var result,
						noLeadingComment,
						that = this;
					return (
						(noLeadingComment =
							!extra.comment || !stmt.leadingComments),
						stmt.type === Syntax.BlockStatement && noLeadingComment
							? [space, this.generateStatement(stmt, flags)]
							: stmt.type === Syntax.EmptyStatement &&
							  noLeadingComment
							? ';'
							: (withIndent(function () {
									result = [
										newline,
										addIndent(
											that.generateStatement(stmt, flags),
										),
									];
							  }),
							  result)
					);
				}),
					(CodeGenerator.prototype.maybeBlockSuffix = function (
						stmt,
						result,
					) {
						var ends = endsWithLineTerminator(
							toSourceNodeWhenNeeded(result).toString(),
						);
						return stmt.type !== Syntax.BlockStatement ||
							(extra.comment && stmt.leadingComments) ||
							ends
							? ends
								? [result, base]
								: [result, newline, base]
							: [result, space];
					}),
					(CodeGenerator.prototype.generatePattern = function (
						node,
						precedence,
						flags,
					) {
						return node.type === Syntax.Identifier
							? generateIdentifier(node)
							: this.generateExpression(node, precedence, flags);
					}),
					(CodeGenerator.prototype.generateFunctionParams = function (
						node,
					) {
						var i, iz, result, hasDefault;
						if (
							((hasDefault = !1),
							node.type !== Syntax.ArrowFunctionExpression ||
								node.rest ||
								(node.defaults && 0 !== node.defaults.length) ||
								1 !== node.params.length ||
								node.params[0].type !== Syntax.Identifier)
						) {
							for (
								(result =
									node.type === Syntax.ArrowFunctionExpression
										? [generateAsyncPrefix(node, !1)]
										: []).push('('),
									node.defaults && (hasDefault = !0),
									i = 0,
									iz = node.params.length;
								i < iz;
								++i
							)
								hasDefault && node.defaults[i]
									? result.push(
											this.generateAssignment(
												node.params[i],
												node.defaults[i],
												'=',
												Precedence.Assignment,
												E_TTT,
											),
									  )
									: result.push(
											this.generatePattern(
												node.params[i],
												Precedence.Assignment,
												E_TTT,
											),
									  ),
									i + 1 < iz && result.push(',' + space);
							node.rest &&
								(node.params.length && result.push(',' + space),
								result.push('...'),
								result.push(generateIdentifier(node.rest))),
								result.push(')');
						} else
							result = [
								generateAsyncPrefix(node, !0),
								generateIdentifier(node.params[0]),
							];
						return result;
					}),
					(CodeGenerator.prototype.generateFunctionBody = function (
						node,
					) {
						var result, expr;
						return (
							(result = this.generateFunctionParams(node)),
							node.type === Syntax.ArrowFunctionExpression &&
								(result.push(space), result.push('=>')),
							node.expression
								? (result.push(space),
								  '{' ===
										(expr = this.generateExpression(
											node.body,
											Precedence.Assignment,
											E_TTT,
										))
											.toString()
											.charAt(0) &&
										(expr = ['(', expr, ')']),
								  result.push(expr))
								: result.push(this.maybeBlock(node.body, 9)),
							result
						);
					}),
					(CodeGenerator.prototype.generateIterationForStatement =
						function (operator, stmt, flags) {
							var result = [
									'for' +
										(stmt.await
											? noEmptySpace() + 'await'
											: '') +
										space +
										'(',
								],
								that = this;
							return (
								withIndent(function () {
									stmt.left.type ===
									Syntax.VariableDeclaration
										? withIndent(function () {
												result.push(
													stmt.left.kind +
														noEmptySpace(),
												),
													result.push(
														that.generateStatement(
															stmt.left
																.declarations[0],
															0,
														),
													);
										  })
										: result.push(
												that.generateExpression(
													stmt.left,
													Precedence.Call,
													E_TTT,
												),
										  ),
										(result = join(result, operator)),
										(result = [
											join(
												result,
												that.generateExpression(
													stmt.right,
													Precedence.Assignment,
													E_TTT,
												),
											),
											')',
										]);
								}),
								result.push(this.maybeBlock(stmt.body, flags)),
								result
							);
						}),
					(CodeGenerator.prototype.generatePropertyKey = function (
						expr,
						computed,
					) {
						var result = [];
						return (
							computed && result.push('['),
							result.push(
								this.generateExpression(
									expr,
									Precedence.Assignment,
									E_TTT,
								),
							),
							computed && result.push(']'),
							result
						);
					}),
					(CodeGenerator.prototype.generateAssignment = function (
						left,
						right,
						operator,
						precedence,
						flags,
					) {
						return (
							Precedence.Assignment < precedence && (flags |= 1),
							parenthesize(
								[
									this.generateExpression(
										left,
										Precedence.Call,
										flags,
									),
									space + operator + space,
									this.generateExpression(
										right,
										Precedence.Assignment,
										flags,
									),
								],
								Precedence.Assignment,
								precedence,
							)
						);
					}),
					(CodeGenerator.prototype.semicolon = function (flags) {
						return !semicolons && 32 & flags ? '' : ';';
					}),
					(CodeGenerator.Statement = {
						BlockStatement: function (stmt, flags) {
							var range,
								content,
								result = ['{', newline],
								that = this;
							return (
								withIndent(function () {
									var i, iz, fragment, bodyFlags;
									for (
										0 === stmt.body.length &&
											preserveBlankLines &&
											(range = stmt.range)[1] - range[0] >
												2 &&
											('\n' ===
												(content = sourceCode.substring(
													range[0] + 1,
													range[1] - 1,
												))[0] && (result = ['{']),
											result.push(content)),
											bodyFlags = S_TFFF,
											8 & flags && (bodyFlags |= 16),
											i = 0,
											iz = stmt.body.length;
										i < iz;
										++i
									)
										preserveBlankLines &&
											(0 === i &&
												(stmt.body[0].leadingComments &&
													((range =
														stmt.body[0]
															.leadingComments[0]
															.extendedRange),
													'\n' ===
														(content =
															sourceCode.substring(
																range[0],
																range[1],
															))[0] &&
														(result = ['{'])),
												stmt.body[0].leadingComments ||
													generateBlankLines(
														stmt.range[0],
														stmt.body[0].range[0],
														result,
													)),
											i > 0 &&
												(stmt.body[i - 1]
													.trailingComments ||
													stmt.body[i]
														.leadingComments ||
													generateBlankLines(
														stmt.body[i - 1]
															.range[1],
														stmt.body[i].range[0],
														result,
													))),
											i === iz - 1 && (bodyFlags |= 32),
											(fragment =
												stmt.body[i].leadingComments &&
												preserveBlankLines
													? that.generateStatement(
															stmt.body[i],
															bodyFlags,
													  )
													: addIndent(
															that.generateStatement(
																stmt.body[i],
																bodyFlags,
															),
													  )),
											result.push(fragment),
											endsWithLineTerminator(
												toSourceNodeWhenNeeded(
													fragment,
												).toString(),
											) ||
												(preserveBlankLines &&
													i < iz - 1 &&
													stmt.body[i + 1]
														.leadingComments) ||
												result.push(newline),
											preserveBlankLines &&
												i === iz - 1 &&
												(stmt.body[i]
													.trailingComments ||
													generateBlankLines(
														stmt.body[i].range[1],
														stmt.range[1],
														result,
													));
								}),
								result.push(addIndent('}')),
								result
							);
						},
						BreakStatement: function (stmt, flags) {
							return stmt.label
								? 'break ' +
										stmt.label.name +
										this.semicolon(flags)
								: 'break' + this.semicolon(flags);
						},
						ContinueStatement: function (stmt, flags) {
							return stmt.label
								? 'continue ' +
										stmt.label.name +
										this.semicolon(flags)
								: 'continue' + this.semicolon(flags);
						},
						ClassBody: function (stmt, flags) {
							var result = ['{', newline],
								that = this;
							return (
								withIndent(function (indent) {
									var i, iz;
									for (
										i = 0, iz = stmt.body.length;
										i < iz;
										++i
									)
										result.push(indent),
											result.push(
												that.generateExpression(
													stmt.body[i],
													Precedence.Sequence,
													E_TTT,
												),
											),
											i + 1 < iz && result.push(newline);
								}),
								endsWithLineTerminator(
									toSourceNodeWhenNeeded(result).toString(),
								) || result.push(newline),
								result.push(base),
								result.push('}'),
								result
							);
						},
						ClassDeclaration: function (stmt, flags) {
							var result, fragment;
							return (
								(result = ['class']),
								stmt.id &&
									(result = join(
										result,
										this.generateExpression(
											stmt.id,
											Precedence.Sequence,
											E_TTT,
										),
									)),
								stmt.superClass &&
									((fragment = join(
										'extends',
										this.generateExpression(
											stmt.superClass,
											Precedence.Unary,
											E_TTT,
										),
									)),
									(result = join(result, fragment))),
								result.push(space),
								result.push(
									this.generateStatement(stmt.body, 33),
								),
								result
							);
						},
						DirectiveStatement: function (stmt, flags) {
							return extra.raw && stmt.raw
								? stmt.raw + this.semicolon(flags)
								: (function escapeDirective(str) {
										var i, iz, code, quote;
										for (
											quote =
												'double' === quotes ? '"' : "'",
												i = 0,
												iz = str.length;
											i < iz;
											++i
										) {
											if (
												39 ===
												(code = str.charCodeAt(i))
											) {
												quote = '"';
												break;
											}
											if (34 === code) {
												quote = "'";
												break;
											}
											92 === code && ++i;
										}
										return quote + str + quote;
								  })(stmt.directive) + this.semicolon(flags);
						},
						DoWhileStatement: function (stmt, flags) {
							var result = join(
								'do',
								this.maybeBlock(stmt.body, S_TFFF),
							);
							return join(
								(result = this.maybeBlockSuffix(
									stmt.body,
									result,
								)),
								[
									'while' + space + '(',
									this.generateExpression(
										stmt.test,
										Precedence.Sequence,
										E_TTT,
									),
									')' + this.semicolon(flags),
								],
							);
						},
						CatchClause: function (stmt, flags) {
							var result,
								that = this;
							return (
								withIndent(function () {
									var guard;
									stmt.param
										? ((result = [
												'catch' + space + '(',
												that.generateExpression(
													stmt.param,
													Precedence.Sequence,
													E_TTT,
												),
												')',
										  ]),
										  stmt.guard &&
												((guard =
													that.generateExpression(
														stmt.guard,
														Precedence.Sequence,
														E_TTT,
													)),
												result.splice(
													2,
													0,
													' if ',
													guard,
												)))
										: (result = ['catch']);
								}),
								result.push(this.maybeBlock(stmt.body, S_TFFF)),
								result
							);
						},
						DebuggerStatement: function (stmt, flags) {
							return 'debugger' + this.semicolon(flags);
						},
						EmptyStatement: function (stmt, flags) {
							return ';';
						},
						ExportDefaultDeclaration: function (stmt, flags) {
							var bodyFlags,
								result = ['export'];
							return (
								(bodyFlags = 32 & flags ? 33 : S_TFFF),
								(result = join(result, 'default')),
								(result = isStatement(stmt.declaration)
									? join(
											result,
											this.generateStatement(
												stmt.declaration,
												bodyFlags,
											),
									  )
									: join(
											result,
											this.generateExpression(
												stmt.declaration,
												Precedence.Assignment,
												E_TTT,
											) + this.semicolon(flags),
									  ))
							);
						},
						ExportNamedDeclaration: function (stmt, flags) {
							var bodyFlags,
								result = ['export'],
								that = this;
							return (
								(bodyFlags = 32 & flags ? 33 : S_TFFF),
								stmt.declaration
									? join(
											result,
											this.generateStatement(
												stmt.declaration,
												bodyFlags,
											),
									  )
									: (stmt.specifiers &&
											(0 === stmt.specifiers.length
												? (result = join(
														result,
														'{' + space + '}',
												  ))
												: stmt.specifiers[0].type ===
												  Syntax.ExportBatchSpecifier
												? (result = join(
														result,
														this.generateExpression(
															stmt.specifiers[0],
															Precedence.Sequence,
															E_TTT,
														),
												  ))
												: ((result = join(result, '{')),
												  withIndent(function (indent) {
														var i, iz;
														for (
															result.push(
																newline,
															),
																i = 0,
																iz =
																	stmt
																		.specifiers
																		.length;
															i < iz;
															++i
														)
															result.push(indent),
																result.push(
																	that.generateExpression(
																		stmt
																			.specifiers[
																			i
																		],
																		Precedence.Sequence,
																		E_TTT,
																	),
																),
																i + 1 < iz &&
																	result.push(
																		',' +
																			newline,
																	);
												  }),
												  endsWithLineTerminator(
														toSourceNodeWhenNeeded(
															result,
														).toString(),
												  ) || result.push(newline),
												  result.push(base + '}')),
											stmt.source
												? (result = join(result, [
														'from' + space,
														this.generateExpression(
															stmt.source,
															Precedence.Sequence,
															E_TTT,
														),
														this.semicolon(flags),
												  ]))
												: result.push(
														this.semicolon(flags),
												  )),
									  result)
							);
						},
						ExportAllDeclaration: function (stmt, flags) {
							return [
								'export' + space,
								'*' + space,
								'from' + space,
								this.generateExpression(
									stmt.source,
									Precedence.Sequence,
									E_TTT,
								),
								this.semicolon(flags),
							];
						},
						ExpressionStatement: function (stmt, flags) {
							var result, fragment;
							return (
								123 ===
									(fragment = toSourceNodeWhenNeeded(
										(result = [
											this.generateExpression(
												stmt.expression,
												Precedence.Sequence,
												E_TTT,
											),
										]),
									).toString()).charCodeAt(0) ||
								(function isClassPrefixed(fragment) {
									var code;
									return (
										'class' === fragment.slice(0, 5) &&
										(123 ===
											(code = fragment.charCodeAt(5)) ||
											esutils.code.isWhiteSpace(code) ||
											esutils.code.isLineTerminator(code))
									);
								})(fragment) ||
								(function isFunctionPrefixed(fragment) {
									var code;
									return (
										'function' === fragment.slice(0, 8) &&
										(40 ===
											(code = fragment.charCodeAt(8)) ||
											esutils.code.isWhiteSpace(code) ||
											42 === code ||
											esutils.code.isLineTerminator(code))
									);
								})(fragment) ||
								(function isAsyncPrefixed(fragment) {
									var code, i, iz;
									if ('async' !== fragment.slice(0, 5))
										return !1;
									if (
										!esutils.code.isWhiteSpace(
											fragment.charCodeAt(5),
										)
									)
										return !1;
									for (
										i = 6, iz = fragment.length;
										i < iz &&
										esutils.code.isWhiteSpace(
											fragment.charCodeAt(i),
										);
										++i
									);
									return (
										i !== iz &&
										'function' ===
											fragment.slice(i, i + 8) &&
										(40 ===
											(code = fragment.charCodeAt(
												i + 8,
											)) ||
											esutils.code.isWhiteSpace(code) ||
											42 === code ||
											esutils.code.isLineTerminator(code))
									);
								})(fragment) ||
								(directive &&
									16 & flags &&
									stmt.expression.type === Syntax.Literal &&
									'string' == typeof stmt.expression.value)
									? (result = [
											'(',
											result,
											')' + this.semicolon(flags),
									  ])
									: result.push(this.semicolon(flags)),
								result
							);
						},
						ImportDeclaration: function (stmt, flags) {
							var result,
								cursor,
								that = this;
							return 0 === stmt.specifiers.length
								? [
										'import',
										space,
										this.generateExpression(
											stmt.source,
											Precedence.Sequence,
											E_TTT,
										),
										this.semicolon(flags),
								  ]
								: ((result = ['import']),
								  (cursor = 0),
								  stmt.specifiers[cursor].type ===
										Syntax.ImportDefaultSpecifier &&
										((result = join(result, [
											this.generateExpression(
												stmt.specifiers[cursor],
												Precedence.Sequence,
												E_TTT,
											),
										])),
										++cursor),
								  stmt.specifiers[cursor] &&
										(0 !== cursor && result.push(','),
										stmt.specifiers[cursor].type ===
										Syntax.ImportNamespaceSpecifier
											? (result = join(result, [
													space,
													this.generateExpression(
														stmt.specifiers[cursor],
														Precedence.Sequence,
														E_TTT,
													),
											  ]))
											: (result.push(space + '{'),
											  stmt.specifiers.length - cursor ==
											  1
													? (result.push(space),
													  result.push(
															this.generateExpression(
																stmt.specifiers[
																	cursor
																],
																Precedence.Sequence,
																E_TTT,
															),
													  ),
													  result.push(
															space + '}' + space,
													  ))
													: (withIndent(function (
															indent,
													  ) {
															var i, iz;
															for (
																result.push(
																	newline,
																),
																	i = cursor,
																	iz =
																		stmt
																			.specifiers
																			.length;
																i < iz;
																++i
															)
																result.push(
																	indent,
																),
																	result.push(
																		that.generateExpression(
																			stmt
																				.specifiers[
																				i
																			],
																			Precedence.Sequence,
																			E_TTT,
																		),
																	),
																	i + 1 <
																		iz &&
																		result.push(
																			',' +
																				newline,
																		);
													  }),
													  endsWithLineTerminator(
															toSourceNodeWhenNeeded(
																result,
															).toString(),
													  ) || result.push(newline),
													  result.push(
															base + '}' + space,
													  )))),
								  (result = join(result, [
										'from' + space,
										this.generateExpression(
											stmt.source,
											Precedence.Sequence,
											E_TTT,
										),
										this.semicolon(flags),
								  ])));
						},
						VariableDeclarator: function (stmt, flags) {
							var itemFlags = 1 & flags ? E_TTT : 6;
							return stmt.init
								? [
										this.generateExpression(
											stmt.id,
											Precedence.Assignment,
											itemFlags,
										),
										space,
										'=',
										space,
										this.generateExpression(
											stmt.init,
											Precedence.Assignment,
											itemFlags,
										),
								  ]
								: this.generatePattern(
										stmt.id,
										Precedence.Assignment,
										itemFlags,
								  );
						},
						VariableDeclaration: function (stmt, flags) {
							var result,
								i,
								iz,
								node,
								bodyFlags,
								that = this;
							function block() {
								for (
									node = stmt.declarations[0],
										extra.comment && node.leadingComments
											? (result.push('\n'),
											  result.push(
													addIndent(
														that.generateStatement(
															node,
															bodyFlags,
														),
													),
											  ))
											: (result.push(noEmptySpace()),
											  result.push(
													that.generateStatement(
														node,
														bodyFlags,
													),
											  )),
										i = 1,
										iz = stmt.declarations.length;
									i < iz;
									++i
								)
									(node = stmt.declarations[i]),
										extra.comment && node.leadingComments
											? (result.push(',' + newline),
											  result.push(
													addIndent(
														that.generateStatement(
															node,
															bodyFlags,
														),
													),
											  ))
											: (result.push(',' + space),
											  result.push(
													that.generateStatement(
														node,
														bodyFlags,
													),
											  ));
							}
							return (
								(result = [stmt.kind]),
								(bodyFlags = 1 & flags ? S_TFFF : 0),
								stmt.declarations.length > 1
									? withIndent(block)
									: block(),
								result.push(this.semicolon(flags)),
								result
							);
						},
						ThrowStatement: function (stmt, flags) {
							return [
								join(
									'throw',
									this.generateExpression(
										stmt.argument,
										Precedence.Sequence,
										E_TTT,
									),
								),
								this.semicolon(flags),
							];
						},
						TryStatement: function (stmt, flags) {
							var result, i, iz, guardedHandlers;
							if (
								((result = [
									'try',
									this.maybeBlock(stmt.block, S_TFFF),
								]),
								(result = this.maybeBlockSuffix(
									stmt.block,
									result,
								)),
								stmt.handlers)
							)
								for (
									i = 0, iz = stmt.handlers.length;
									i < iz;
									++i
								)
									(result = join(
										result,
										this.generateStatement(
											stmt.handlers[i],
											S_TFFF,
										),
									)),
										(stmt.finalizer || i + 1 !== iz) &&
											(result = this.maybeBlockSuffix(
												stmt.handlers[i].body,
												result,
											));
							else {
								for (
									i = 0,
										iz = (guardedHandlers =
											stmt.guardedHandlers || []).length;
									i < iz;
									++i
								)
									(result = join(
										result,
										this.generateStatement(
											guardedHandlers[i],
											S_TFFF,
										),
									)),
										(stmt.finalizer || i + 1 !== iz) &&
											(result = this.maybeBlockSuffix(
												guardedHandlers[i].body,
												result,
											));
								if (stmt.handler)
									if (Array.isArray(stmt.handler))
										for (
											i = 0, iz = stmt.handler.length;
											i < iz;
											++i
										)
											(result = join(
												result,
												this.generateStatement(
													stmt.handler[i],
													S_TFFF,
												),
											)),
												(stmt.finalizer ||
													i + 1 !== iz) &&
													(result =
														this.maybeBlockSuffix(
															stmt.handler[i]
																.body,
															result,
														));
									else
										(result = join(
											result,
											this.generateStatement(
												stmt.handler,
												S_TFFF,
											),
										)),
											stmt.finalizer &&
												(result = this.maybeBlockSuffix(
													stmt.handler.body,
													result,
												));
							}
							return (
								stmt.finalizer &&
									(result = join(result, [
										'finally',
										this.maybeBlock(stmt.finalizer, S_TFFF),
									])),
								result
							);
						},
						SwitchStatement: function (stmt, flags) {
							var result,
								fragment,
								i,
								iz,
								bodyFlags,
								that = this;
							if (
								(withIndent(function () {
									result = [
										'switch' + space + '(',
										that.generateExpression(
											stmt.discriminant,
											Precedence.Sequence,
											E_TTT,
										),
										')' + space + '{' + newline,
									];
								}),
								stmt.cases)
							)
								for (
									bodyFlags = S_TFFF,
										i = 0,
										iz = stmt.cases.length;
									i < iz;
									++i
								)
									i === iz - 1 && (bodyFlags |= 32),
										(fragment = addIndent(
											this.generateStatement(
												stmt.cases[i],
												bodyFlags,
											),
										)),
										result.push(fragment),
										endsWithLineTerminator(
											toSourceNodeWhenNeeded(
												fragment,
											).toString(),
										) || result.push(newline);
							return result.push(addIndent('}')), result;
						},
						SwitchCase: function (stmt, flags) {
							var result,
								fragment,
								i,
								iz,
								bodyFlags,
								that = this;
							return (
								withIndent(function () {
									for (
										result = stmt.test
											? [
													join(
														'case',
														that.generateExpression(
															stmt.test,
															Precedence.Sequence,
															E_TTT,
														),
													),
													':',
											  ]
											: ['default:'],
											i = 0,
											(iz = stmt.consequent.length) &&
												stmt.consequent[0].type ===
													Syntax.BlockStatement &&
												((fragment = that.maybeBlock(
													stmt.consequent[0],
													S_TFFF,
												)),
												result.push(fragment),
												(i = 1)),
											i === iz ||
												endsWithLineTerminator(
													toSourceNodeWhenNeeded(
														result,
													).toString(),
												) ||
												result.push(newline),
											bodyFlags = S_TFFF;
										i < iz;
										++i
									)
										i === iz - 1 &&
											32 & flags &&
											(bodyFlags |= 32),
											(fragment = addIndent(
												that.generateStatement(
													stmt.consequent[i],
													bodyFlags,
												),
											)),
											result.push(fragment),
											i + 1 === iz ||
												endsWithLineTerminator(
													toSourceNodeWhenNeeded(
														fragment,
													).toString(),
												) ||
												result.push(newline);
								}),
								result
							);
						},
						IfStatement: function (stmt, flags) {
							var result,
								bodyFlags,
								that = this;
							return (
								withIndent(function () {
									result = [
										'if' + space + '(',
										that.generateExpression(
											stmt.test,
											Precedence.Sequence,
											E_TTT,
										),
										')',
									];
								}),
								(bodyFlags = S_TFFF),
								32 & flags && (bodyFlags |= 32),
								stmt.alternate
									? (result.push(
											this.maybeBlock(
												stmt.consequent,
												S_TFFF,
											),
									  ),
									  (result = this.maybeBlockSuffix(
											stmt.consequent,
											result,
									  )),
									  (result =
											stmt.alternate.type ===
											Syntax.IfStatement
												? join(result, [
														'else ',
														this.generateStatement(
															stmt.alternate,
															bodyFlags,
														),
												  ])
												: join(
														result,
														join(
															'else',
															this.maybeBlock(
																stmt.alternate,
																bodyFlags,
															),
														),
												  )))
									: result.push(
											this.maybeBlock(
												stmt.consequent,
												bodyFlags,
											),
									  ),
								result
							);
						},
						ForStatement: function (stmt, flags) {
							var result,
								that = this;
							return (
								withIndent(function () {
									(result = ['for' + space + '(']),
										stmt.init
											? stmt.init.type ===
											  Syntax.VariableDeclaration
												? result.push(
														that.generateStatement(
															stmt.init,
															0,
														),
												  )
												: (result.push(
														that.generateExpression(
															stmt.init,
															Precedence.Sequence,
															6,
														),
												  ),
												  result.push(';'))
											: result.push(';'),
										stmt.test
											? (result.push(space),
											  result.push(
													that.generateExpression(
														stmt.test,
														Precedence.Sequence,
														E_TTT,
													),
											  ),
											  result.push(';'))
											: result.push(';'),
										stmt.update
											? (result.push(space),
											  result.push(
													that.generateExpression(
														stmt.update,
														Precedence.Sequence,
														E_TTT,
													),
											  ),
											  result.push(')'))
											: result.push(')');
								}),
								result.push(
									this.maybeBlock(
										stmt.body,
										32 & flags ? 33 : S_TFFF,
									),
								),
								result
							);
						},
						ForInStatement: function (stmt, flags) {
							return this.generateIterationForStatement(
								'in',
								stmt,
								32 & flags ? 33 : S_TFFF,
							);
						},
						ForOfStatement: function (stmt, flags) {
							return this.generateIterationForStatement(
								'of',
								stmt,
								32 & flags ? 33 : S_TFFF,
							);
						},
						LabeledStatement: function (stmt, flags) {
							return [
								stmt.label.name + ':',
								this.maybeBlock(
									stmt.body,
									32 & flags ? 33 : S_TFFF,
								),
							];
						},
						Program: function (stmt, flags) {
							var result, fragment, i, iz, bodyFlags;
							for (
								iz = stmt.body.length,
									result = [
										safeConcatenation && iz > 0 ? '\n' : '',
									],
									bodyFlags = 17,
									i = 0;
								i < iz;
								++i
							)
								safeConcatenation ||
									i !== iz - 1 ||
									(bodyFlags |= 32),
									preserveBlankLines &&
										(0 === i &&
											(stmt.body[0].leadingComments ||
												generateBlankLines(
													stmt.range[0],
													stmt.body[i].range[0],
													result,
												)),
										i > 0 &&
											(stmt.body[i - 1]
												.trailingComments ||
												stmt.body[i].leadingComments ||
												generateBlankLines(
													stmt.body[i - 1].range[1],
													stmt.body[i].range[0],
													result,
												))),
									(fragment = addIndent(
										this.generateStatement(
											stmt.body[i],
											bodyFlags,
										),
									)),
									result.push(fragment),
									i + 1 < iz &&
										!endsWithLineTerminator(
											toSourceNodeWhenNeeded(
												fragment,
											).toString(),
										) &&
										((preserveBlankLines &&
											stmt.body[i + 1].leadingComments) ||
											result.push(newline)),
									preserveBlankLines &&
										i === iz - 1 &&
										(stmt.body[i].trailingComments ||
											generateBlankLines(
												stmt.body[i].range[1],
												stmt.range[1],
												result,
											));
							return result;
						},
						FunctionDeclaration: function (stmt, flags) {
							return [
								generateAsyncPrefix(stmt, !0),
								'function',
								generateStarSuffix(stmt) || noEmptySpace(),
								stmt.id ? generateIdentifier(stmt.id) : '',
								this.generateFunctionBody(stmt),
							];
						},
						ReturnStatement: function (stmt, flags) {
							return stmt.argument
								? [
										join(
											'return',
											this.generateExpression(
												stmt.argument,
												Precedence.Sequence,
												E_TTT,
											),
										),
										this.semicolon(flags),
								  ]
								: ['return' + this.semicolon(flags)];
						},
						WhileStatement: function (stmt, flags) {
							var result,
								that = this;
							return (
								withIndent(function () {
									result = [
										'while' + space + '(',
										that.generateExpression(
											stmt.test,
											Precedence.Sequence,
											E_TTT,
										),
										')',
									];
								}),
								result.push(
									this.maybeBlock(
										stmt.body,
										32 & flags ? 33 : S_TFFF,
									),
								),
								result
							);
						},
						WithStatement: function (stmt, flags) {
							var result,
								that = this;
							return (
								withIndent(function () {
									result = [
										'with' + space + '(',
										that.generateExpression(
											stmt.object,
											Precedence.Sequence,
											E_TTT,
										),
										')',
									];
								}),
								result.push(
									this.maybeBlock(
										stmt.body,
										32 & flags ? 33 : S_TFFF,
									),
								),
								result
							);
						},
					}),
					merge(CodeGenerator.prototype, CodeGenerator.Statement),
					(CodeGenerator.Expression = {
						SequenceExpression: function (expr, precedence, flags) {
							var result, i, iz;
							for (
								Precedence.Sequence < precedence &&
									(flags |= 1),
									result = [],
									i = 0,
									iz = expr.expressions.length;
								i < iz;
								++i
							)
								result.push(
									this.generateExpression(
										expr.expressions[i],
										Precedence.Assignment,
										flags,
									),
								),
									i + 1 < iz && result.push(',' + space);
							return parenthesize(
								result,
								Precedence.Sequence,
								precedence,
							);
						},
						AssignmentExpression: function (
							expr,
							precedence,
							flags,
						) {
							return this.generateAssignment(
								expr.left,
								expr.right,
								expr.operator,
								precedence,
								flags,
							);
						},
						ArrowFunctionExpression: function (
							expr,
							precedence,
							flags,
						) {
							return parenthesize(
								this.generateFunctionBody(expr),
								Precedence.ArrowFunction,
								precedence,
							);
						},
						ConditionalExpression: function (
							expr,
							precedence,
							flags,
						) {
							return (
								Precedence.Conditional < precedence &&
									(flags |= 1),
								parenthesize(
									[
										this.generateExpression(
											expr.test,
											Precedence.Coalesce,
											flags,
										),
										space + '?' + space,
										this.generateExpression(
											expr.consequent,
											Precedence.Assignment,
											flags,
										),
										space + ':' + space,
										this.generateExpression(
											expr.alternate,
											Precedence.Assignment,
											flags,
										),
									],
									Precedence.Conditional,
									precedence,
								)
							);
						},
						LogicalExpression: function (expr, precedence, flags) {
							return (
								'??' === expr.operator && (flags |= 64),
								this.BinaryExpression(expr, precedence, flags)
							);
						},
						BinaryExpression: function (expr, precedence, flags) {
							var result,
								leftPrecedence,
								rightPrecedence,
								currentPrecedence,
								fragment,
								leftSource;
							return (
								(currentPrecedence =
									BinaryPrecedence[expr.operator]),
								(leftPrecedence =
									'**' === expr.operator
										? Precedence.Postfix
										: currentPrecedence),
								(rightPrecedence =
									'**' === expr.operator
										? currentPrecedence
										: currentPrecedence + 1),
								currentPrecedence < precedence && (flags |= 1),
								(result =
									47 ===
										(leftSource = (fragment =
											this.generateExpression(
												expr.left,
												leftPrecedence,
												flags,
											)).toString()).charCodeAt(
											leftSource.length - 1,
										) &&
									esutils.code.isIdentifierPartES5(
										expr.operator.charCodeAt(0),
									)
										? [
												fragment,
												noEmptySpace(),
												expr.operator,
										  ]
										: join(fragment, expr.operator)),
								(fragment = this.generateExpression(
									expr.right,
									rightPrecedence,
									flags,
								)),
								('/' === expr.operator &&
									'/' === fragment.toString().charAt(0)) ||
								('<' === expr.operator.slice(-1) &&
									'!--' === fragment.toString().slice(0, 3))
									? (result.push(noEmptySpace()),
									  result.push(fragment))
									: (result = join(result, fragment)),
								'in' !== expr.operator || 1 & flags
									? ('||' === expr.operator ||
											'&&' === expr.operator) &&
									  64 & flags
										? ['(', result, ')']
										: parenthesize(
												result,
												currentPrecedence,
												precedence,
										  )
									: ['(', result, ')']
							);
						},
						CallExpression: function (expr, precedence, flags) {
							var result, i, iz;
							for (
								result = [
									this.generateExpression(
										expr.callee,
										Precedence.Call,
										3,
									),
								],
									expr.optional && result.push('?.'),
									result.push('('),
									i = 0,
									iz = expr.arguments.length;
								i < iz;
								++i
							)
								result.push(
									this.generateExpression(
										expr.arguments[i],
										Precedence.Assignment,
										E_TTT,
									),
								),
									i + 1 < iz && result.push(',' + space);
							return (
								result.push(')'),
								2 & flags
									? parenthesize(
											result,
											Precedence.Call,
											precedence,
									  )
									: ['(', result, ')']
							);
						},
						ChainExpression: function (expr, precedence, flags) {
							return (
								Precedence.OptionalChaining < precedence &&
									(flags |= 2),
								parenthesize(
									this.generateExpression(
										expr.expression,
										Precedence.OptionalChaining,
										flags,
									),
									Precedence.OptionalChaining,
									precedence,
								)
							);
						},
						NewExpression: function (expr, precedence, flags) {
							var result, length, i, iz, itemFlags;
							if (
								((length = expr.arguments.length),
								(itemFlags =
									4 & flags && !parentheses && 0 === length
										? 5
										: 1),
								(result = join(
									'new',
									this.generateExpression(
										expr.callee,
										Precedence.New,
										itemFlags,
									),
								)),
								!(4 & flags) || parentheses || length > 0)
							) {
								for (
									result.push('('), i = 0, iz = length;
									i < iz;
									++i
								)
									result.push(
										this.generateExpression(
											expr.arguments[i],
											Precedence.Assignment,
											E_TTT,
										),
									),
										i + 1 < iz && result.push(',' + space);
								result.push(')');
							}
							return parenthesize(
								result,
								Precedence.New,
								precedence,
							);
						},
						MemberExpression: function (expr, precedence, flags) {
							var result, fragment;
							return (
								(result = [
									this.generateExpression(
										expr.object,
										Precedence.Call,
										2 & flags ? 3 : 1,
									),
								]),
								expr.computed
									? (expr.optional && result.push('?.'),
									  result.push('['),
									  result.push(
											this.generateExpression(
												expr.property,
												Precedence.Sequence,
												2 & flags ? E_TTT : 5,
											),
									  ),
									  result.push(']'))
									: (expr.optional ||
											expr.object.type !==
												Syntax.Literal ||
											'number' !=
												typeof expr.object.value ||
											((fragment =
												toSourceNodeWhenNeeded(
													result,
												).toString()).indexOf('.') <
												0 &&
												!/[eExX]/.test(fragment) &&
												esutils.code.isDecimalDigit(
													fragment.charCodeAt(
														fragment.length - 1,
													),
												) &&
												!(
													fragment.length >= 2 &&
													48 ===
														fragment.charCodeAt(0)
												) &&
												result.push(' ')),
									  result.push(expr.optional ? '?.' : '.'),
									  result.push(
											generateIdentifier(expr.property),
									  )),
								parenthesize(
									result,
									Precedence.Member,
									precedence,
								)
							);
						},
						MetaProperty: function (expr, precedence, flags) {
							var result;
							return (
								(result = []).push(
									'string' == typeof expr.meta
										? expr.meta
										: generateIdentifier(expr.meta),
								),
								result.push('.'),
								result.push(
									'string' == typeof expr.property
										? expr.property
										: generateIdentifier(expr.property),
								),
								parenthesize(
									result,
									Precedence.Member,
									precedence,
								)
							);
						},
						UnaryExpression: function (expr, precedence, flags) {
							var result,
								fragment,
								rightCharCode,
								leftSource,
								leftCharCode;
							return (
								(fragment = this.generateExpression(
									expr.argument,
									Precedence.Unary,
									E_TTT,
								)),
								'' === space
									? (result = join(expr.operator, fragment))
									: ((result = [expr.operator]),
									  expr.operator.length > 2
											? (result = join(result, fragment))
											: ((leftCharCode = (leftSource =
													toSourceNodeWhenNeeded(
														result,
													).toString()).charCodeAt(
													leftSource.length - 1,
											  )),
											  (rightCharCode = fragment
													.toString()
													.charCodeAt(0)),
											  ((43 === leftCharCode ||
													45 === leftCharCode) &&
													leftCharCode ===
														rightCharCode) ||
											  (esutils.code.isIdentifierPartES5(
													leftCharCode,
											  ) &&
													esutils.code.isIdentifierPartES5(
														rightCharCode,
													))
													? (result.push(
															noEmptySpace(),
													  ),
													  result.push(fragment))
													: result.push(fragment))),
								parenthesize(
									result,
									Precedence.Unary,
									precedence,
								)
							);
						},
						YieldExpression: function (expr, precedence, flags) {
							var result;
							return (
								(result = expr.delegate ? 'yield*' : 'yield'),
								expr.argument &&
									(result = join(
										result,
										this.generateExpression(
											expr.argument,
											Precedence.Yield,
											E_TTT,
										),
									)),
								parenthesize(
									result,
									Precedence.Yield,
									precedence,
								)
							);
						},
						AwaitExpression: function (expr, precedence, flags) {
							return parenthesize(
								join(
									expr.all ? 'await*' : 'await',
									this.generateExpression(
										expr.argument,
										Precedence.Await,
										E_TTT,
									),
								),
								Precedence.Await,
								precedence,
							);
						},
						UpdateExpression: function (expr, precedence, flags) {
							return expr.prefix
								? parenthesize(
										[
											expr.operator,
											this.generateExpression(
												expr.argument,
												Precedence.Unary,
												E_TTT,
											),
										],
										Precedence.Unary,
										precedence,
								  )
								: parenthesize(
										[
											this.generateExpression(
												expr.argument,
												Precedence.Postfix,
												E_TTT,
											),
											expr.operator,
										],
										Precedence.Postfix,
										precedence,
								  );
						},
						FunctionExpression: function (expr, precedence, flags) {
							var result = [
								generateAsyncPrefix(expr, !0),
								'function',
							];
							return (
								expr.id
									? (result.push(
											generateStarSuffix(expr) ||
												noEmptySpace(),
									  ),
									  result.push(generateIdentifier(expr.id)))
									: result.push(
											generateStarSuffix(expr) || space,
									  ),
								result.push(this.generateFunctionBody(expr)),
								result
							);
						},
						ArrayPattern: function (expr, precedence, flags) {
							return this.ArrayExpression(
								expr,
								precedence,
								flags,
								!0,
							);
						},
						ArrayExpression: function (
							expr,
							precedence,
							flags,
							isPattern,
						) {
							var result,
								multiline,
								that = this;
							return expr.elements.length
								? ((multiline =
										!isPattern && expr.elements.length > 1),
								  (result = ['[', multiline ? newline : '']),
								  withIndent(function (indent) {
										var i, iz;
										for (
											i = 0, iz = expr.elements.length;
											i < iz;
											++i
										)
											expr.elements[i]
												? (result.push(
														multiline ? indent : '',
												  ),
												  result.push(
														that.generateExpression(
															expr.elements[i],
															Precedence.Assignment,
															E_TTT,
														),
												  ))
												: (multiline &&
														result.push(indent),
												  i + 1 === iz &&
														result.push(',')),
												i + 1 < iz &&
													result.push(
														',' +
															(multiline
																? newline
																: space),
													);
								  }),
								  multiline &&
										!endsWithLineTerminator(
											toSourceNodeWhenNeeded(
												result,
											).toString(),
										) &&
										result.push(newline),
								  result.push(multiline ? base : ''),
								  result.push(']'),
								  result)
								: '[]';
						},
						RestElement: function (expr, precedence, flags) {
							return '...' + this.generatePattern(expr.argument);
						},
						ClassExpression: function (expr, precedence, flags) {
							var result, fragment;
							return (
								(result = ['class']),
								expr.id &&
									(result = join(
										result,
										this.generateExpression(
											expr.id,
											Precedence.Sequence,
											E_TTT,
										),
									)),
								expr.superClass &&
									((fragment = join(
										'extends',
										this.generateExpression(
											expr.superClass,
											Precedence.Unary,
											E_TTT,
										),
									)),
									(result = join(result, fragment))),
								result.push(space),
								result.push(
									this.generateStatement(expr.body, 33),
								),
								result
							);
						},
						MethodDefinition: function (expr, precedence, flags) {
							var result, fragment;
							return (
								(result = expr.static
									? ['static' + space]
									: []),
								(fragment =
									'get' === expr.kind || 'set' === expr.kind
										? [
												join(
													expr.kind,
													this.generatePropertyKey(
														expr.key,
														expr.computed,
													),
												),
												this.generateFunctionBody(
													expr.value,
												),
										  ]
										: [
												generateMethodPrefix(expr),
												this.generatePropertyKey(
													expr.key,
													expr.computed,
												),
												this.generateFunctionBody(
													expr.value,
												),
										  ]),
								join(result, fragment)
							);
						},
						Property: function (expr, precedence, flags) {
							return 'get' === expr.kind || 'set' === expr.kind
								? [
										expr.kind,
										noEmptySpace(),
										this.generatePropertyKey(
											expr.key,
											expr.computed,
										),
										this.generateFunctionBody(expr.value),
								  ]
								: expr.shorthand
								? 'AssignmentPattern' === expr.value.type
									? this.AssignmentPattern(
											expr.value,
											Precedence.Sequence,
											E_TTT,
									  )
									: this.generatePropertyKey(
											expr.key,
											expr.computed,
									  )
								: expr.method
								? [
										generateMethodPrefix(expr),
										this.generatePropertyKey(
											expr.key,
											expr.computed,
										),
										this.generateFunctionBody(expr.value),
								  ]
								: [
										this.generatePropertyKey(
											expr.key,
											expr.computed,
										),
										':' + space,
										this.generateExpression(
											expr.value,
											Precedence.Assignment,
											E_TTT,
										),
								  ];
						},
						ObjectExpression: function (expr, precedence, flags) {
							var multiline,
								result,
								fragment,
								that = this;
							return expr.properties.length
								? ((multiline = expr.properties.length > 1),
								  withIndent(function () {
										fragment = that.generateExpression(
											expr.properties[0],
											Precedence.Sequence,
											E_TTT,
										);
								  }),
								  multiline ||
								  (function hasLineTerminator(str) {
										return /[\r\n]/g.test(str);
								  })(
										toSourceNodeWhenNeeded(
											fragment,
										).toString(),
								  )
										? (withIndent(function (indent) {
												var i, iz;
												if (
													((result = [
														'{',
														newline,
														indent,
														fragment,
													]),
													multiline)
												)
													for (
														result.push(
															',' + newline,
														),
															i = 1,
															iz =
																expr.properties
																	.length;
														i < iz;
														++i
													)
														result.push(indent),
															result.push(
																that.generateExpression(
																	expr
																		.properties[
																		i
																	],
																	Precedence.Sequence,
																	E_TTT,
																),
															),
															i + 1 < iz &&
																result.push(
																	',' +
																		newline,
																);
										  }),
										  endsWithLineTerminator(
												toSourceNodeWhenNeeded(
													result,
												).toString(),
										  ) || result.push(newline),
										  result.push(base),
										  result.push('}'),
										  result)
										: ['{', space, fragment, space, '}'])
								: '{}';
						},
						AssignmentPattern: function (expr, precedence, flags) {
							return this.generateAssignment(
								expr.left,
								expr.right,
								'=',
								precedence,
								flags,
							);
						},
						ObjectPattern: function (expr, precedence, flags) {
							var result,
								i,
								iz,
								multiline,
								property,
								that = this;
							if (!expr.properties.length) return '{}';
							if (
								((multiline = !1), 1 === expr.properties.length)
							)
								(property = expr.properties[0]).type ===
									Syntax.Property &&
									property.value.type !== Syntax.Identifier &&
									(multiline = !0);
							else
								for (
									i = 0, iz = expr.properties.length;
									i < iz;
									++i
								)
									if (
										(property = expr.properties[i]).type ===
											Syntax.Property &&
										!property.shorthand
									) {
										multiline = !0;
										break;
									}
							return (
								(result = ['{', multiline ? newline : '']),
								withIndent(function (indent) {
									var i, iz;
									for (
										i = 0, iz = expr.properties.length;
										i < iz;
										++i
									)
										result.push(multiline ? indent : ''),
											result.push(
												that.generateExpression(
													expr.properties[i],
													Precedence.Sequence,
													E_TTT,
												),
											),
											i + 1 < iz &&
												result.push(
													',' +
														(multiline
															? newline
															: space),
												);
								}),
								multiline &&
									!endsWithLineTerminator(
										toSourceNodeWhenNeeded(
											result,
										).toString(),
									) &&
									result.push(newline),
								result.push(multiline ? base : ''),
								result.push('}'),
								result
							);
						},
						ThisExpression: function (expr, precedence, flags) {
							return 'this';
						},
						Super: function (expr, precedence, flags) {
							return 'super';
						},
						Identifier: function (expr, precedence, flags) {
							return generateIdentifier(expr);
						},
						ImportDefaultSpecifier: function (
							expr,
							precedence,
							flags,
						) {
							return generateIdentifier(expr.id || expr.local);
						},
						ImportNamespaceSpecifier: function (
							expr,
							precedence,
							flags,
						) {
							var result = ['*'],
								id = expr.id || expr.local;
							return (
								id &&
									result.push(
										space +
											'as' +
											noEmptySpace() +
											generateIdentifier(id),
									),
								result
							);
						},
						ImportSpecifier: function (expr, precedence, flags) {
							var imported = expr.imported,
								result = [imported.name],
								local = expr.local;
							return (
								local &&
									local.name !== imported.name &&
									result.push(
										noEmptySpace() +
											'as' +
											noEmptySpace() +
											generateIdentifier(local),
									),
								result
							);
						},
						ExportSpecifier: function (expr, precedence, flags) {
							var local = expr.local,
								result = [local.name],
								exported = expr.exported;
							return (
								exported &&
									exported.name !== local.name &&
									result.push(
										noEmptySpace() +
											'as' +
											noEmptySpace() +
											generateIdentifier(exported),
									),
								result
							);
						},
						Literal: function (expr, precedence, flags) {
							var raw;
							if (
								expr.hasOwnProperty('raw') &&
								parse &&
								extra.raw
							)
								try {
									if (
										(raw = parse(expr.raw).body[0]
											.expression).type ===
											Syntax.Literal &&
										raw.value === expr.value
									)
										return expr.raw;
								} catch (e) {}
							return expr.regex
								? '/' +
										expr.regex.pattern +
										'/' +
										expr.regex.flags
								: 'bigint' == typeof expr.value
								? expr.value.toString() + 'n'
								: expr.bigint
								? expr.bigint + 'n'
								: null === expr.value
								? 'null'
								: 'string' == typeof expr.value
								? (function escapeString(str) {
										var i,
											len,
											code,
											single,
											quote,
											result = '',
											singleQuotes = 0,
											doubleQuotes = 0;
										for (
											i = 0, len = str.length;
											i < len;
											++i
										) {
											if (
												39 ===
												(code = str.charCodeAt(i))
											)
												++singleQuotes;
											else if (34 === code)
												++doubleQuotes;
											else if (47 === code && json)
												result += '\\';
											else {
												if (
													esutils.code.isLineTerminator(
														code,
													) ||
													92 === code
												) {
													result +=
														escapeDisallowedCharacter(
															code,
														);
													continue;
												}
												if (
													!esutils.code.isIdentifierPartES5(
														code,
													) &&
													((json && code < 32) ||
														(!json &&
															!escapeless &&
															(code < 32 ||
																code > 126)))
												) {
													result +=
														escapeAllowedCharacter(
															code,
															str.charCodeAt(
																i + 1,
															),
														);
													continue;
												}
											}
											result += String.fromCharCode(code);
										}
										if (
											((quote = (single = !(
												'double' === quotes ||
												('auto' === quotes &&
													doubleQuotes < singleQuotes)
											))
												? "'"
												: '"'),
											!(single
												? singleQuotes
												: doubleQuotes))
										)
											return quote + result + quote;
										for (
											str = result,
												result = quote,
												i = 0,
												len = str.length;
											i < len;
											++i
										)
											((39 ===
												(code = str.charCodeAt(i)) &&
												single) ||
												(34 === code && !single)) &&
												(result += '\\'),
												(result +=
													String.fromCharCode(code));
										return result + quote;
								  })(expr.value)
								: 'number' == typeof expr.value
								? (function generateNumber(value) {
										var result, point, temp, exponent, pos;
										if (value != value)
											throw new Error(
												'Numeric literal whose value is NaN',
											);
										if (
											value < 0 ||
											(0 === value && 1 / value < 0)
										)
											throw new Error(
												'Numeric literal whose value is negative',
											);
										if (value === 1 / 0)
											return json
												? 'null'
												: renumber
												? '1e400'
												: '1e+400';
										if (
											((result = '' + value),
											!renumber || result.length < 3)
										)
											return result;
										for (
											point = result.indexOf('.'),
												json ||
													48 !==
														result.charCodeAt(0) ||
													1 !== point ||
													((point = 0),
													(result = result.slice(1))),
												temp = result,
												result = result.replace(
													'e+',
													'e',
												),
												exponent = 0,
												(pos = temp.indexOf('e')) > 0 &&
													((exponent = +temp.slice(
														pos + 1,
													)),
													(temp = temp.slice(
														0,
														pos,
													))),
												point >= 0 &&
													((exponent -=
														temp.length -
														point -
														1),
													(temp =
														+(
															temp.slice(
																0,
																point,
															) +
															temp.slice(
																point + 1,
															)
														) + '')),
												pos = 0;
											48 ===
											temp.charCodeAt(
												temp.length + pos - 1,
											);

										)
											--pos;
										return (
											0 !== pos &&
												((exponent -= pos),
												(temp = temp.slice(0, pos))),
											0 !== exponent &&
												(temp += 'e' + exponent),
											(temp.length < result.length ||
												(hexadecimal &&
													value > 1e12 &&
													Math.floor(value) ===
														value &&
													(temp =
														'0x' +
														value.toString(16))
														.length <
														result.length)) &&
												+temp === value &&
												(result = temp),
											result
										);
								  })(expr.value)
								: 'boolean' == typeof expr.value
								? expr.value
									? 'true'
									: 'false'
								: (function generateRegExp(reg) {
										var match,
											result,
											flags,
											i,
											iz,
											ch,
											characterInBrack,
											previousIsBackslash;
										if (
											((result = reg.toString()),
											reg.source)
										) {
											if (
												!(match =
													result.match(/\/([^/]*)$/))
											)
												return result;
											for (
												flags = match[1],
													result = '',
													characterInBrack = !1,
													previousIsBackslash = !1,
													i = 0,
													iz = reg.source.length;
												i < iz;
												++i
											)
												(ch = reg.source.charCodeAt(i)),
													previousIsBackslash
														? ((result +=
																escapeRegExpCharacter(
																	ch,
																	previousIsBackslash,
																)),
														  (previousIsBackslash =
																!1))
														: (characterInBrack
																? 93 === ch &&
																  (characterInBrack =
																		!1)
																: 47 === ch
																? (result +=
																		'\\')
																: 91 === ch &&
																  (characterInBrack =
																		!0),
														  (result +=
																escapeRegExpCharacter(
																	ch,
																	previousIsBackslash,
																)),
														  (previousIsBackslash =
																92 === ch));
											return '/' + result + '/' + flags;
										}
										return result;
								  })(expr.value);
						},
						GeneratorExpression: function (
							expr,
							precedence,
							flags,
						) {
							return this.ComprehensionExpression(
								expr,
								precedence,
								flags,
							);
						},
						ComprehensionExpression: function (
							expr,
							precedence,
							flags,
						) {
							var result,
								i,
								iz,
								fragment,
								that = this;
							return (
								(result =
									expr.type === Syntax.GeneratorExpression
										? ['(']
										: ['[']),
								extra.moz
									.comprehensionExpressionStartsWithAssignment &&
									((fragment = this.generateExpression(
										expr.body,
										Precedence.Assignment,
										E_TTT,
									)),
									result.push(fragment)),
								expr.blocks &&
									withIndent(function () {
										for (
											i = 0, iz = expr.blocks.length;
											i < iz;
											++i
										)
											(fragment = that.generateExpression(
												expr.blocks[i],
												Precedence.Sequence,
												E_TTT,
											)),
												i > 0 ||
												extra.moz
													.comprehensionExpressionStartsWithAssignment
													? (result = join(
															result,
															fragment,
													  ))
													: result.push(fragment);
									}),
								expr.filter &&
									((result = join(result, 'if' + space)),
									(fragment = this.generateExpression(
										expr.filter,
										Precedence.Sequence,
										E_TTT,
									)),
									(result = join(result, [
										'(',
										fragment,
										')',
									]))),
								extra.moz
									.comprehensionExpressionStartsWithAssignment ||
									((fragment = this.generateExpression(
										expr.body,
										Precedence.Assignment,
										E_TTT,
									)),
									(result = join(result, fragment))),
								result.push(
									expr.type === Syntax.GeneratorExpression
										? ')'
										: ']',
								),
								result
							);
						},
						ComprehensionBlock: function (expr, precedence, flags) {
							var fragment;
							return (
								(fragment = join(
									(fragment =
										expr.left.type ===
										Syntax.VariableDeclaration
											? [
													expr.left.kind,
													noEmptySpace(),
													this.generateStatement(
														expr.left
															.declarations[0],
														0,
													),
											  ]
											: this.generateExpression(
													expr.left,
													Precedence.Call,
													E_TTT,
											  )),
									expr.of ? 'of' : 'in',
								)),
								(fragment = join(
									fragment,
									this.generateExpression(
										expr.right,
										Precedence.Sequence,
										E_TTT,
									),
								)),
								['for' + space + '(', fragment, ')']
							);
						},
						SpreadElement: function (expr, precedence, flags) {
							return [
								'...',
								this.generateExpression(
									expr.argument,
									Precedence.Assignment,
									E_TTT,
								),
							];
						},
						TaggedTemplateExpression: function (
							expr,
							precedence,
							flags,
						) {
							var itemFlags = 3;
							return (
								2 & flags || (itemFlags = 1),
								parenthesize(
									[
										this.generateExpression(
											expr.tag,
											Precedence.Call,
											itemFlags,
										),
										this.generateExpression(
											expr.quasi,
											Precedence.Primary,
											4,
										),
									],
									Precedence.TaggedTemplate,
									precedence,
								)
							);
						},
						TemplateElement: function (expr, precedence, flags) {
							return expr.value.raw;
						},
						TemplateLiteral: function (expr, precedence, flags) {
							var result, i, iz;
							for (
								result = ['`'], i = 0, iz = expr.quasis.length;
								i < iz;
								++i
							)
								result.push(
									this.generateExpression(
										expr.quasis[i],
										Precedence.Primary,
										E_TTT,
									),
								),
									i + 1 < iz &&
										(result.push('${' + space),
										result.push(
											this.generateExpression(
												expr.expressions[i],
												Precedence.Sequence,
												E_TTT,
											),
										),
										result.push(space + '}'));
							return result.push('`'), result;
						},
						ModuleSpecifier: function (expr, precedence, flags) {
							return this.Literal(expr, precedence, flags);
						},
						ImportExpression: function (expr, precedence, flag) {
							return parenthesize(
								[
									'import(',
									this.generateExpression(
										expr.source,
										Precedence.Assignment,
										E_TTT,
									),
									')',
								],
								Precedence.Call,
								precedence,
							);
						},
					}),
					merge(CodeGenerator.prototype, CodeGenerator.Expression),
					(CodeGenerator.prototype.generateExpression = function (
						expr,
						precedence,
						flags,
					) {
						var result, type;
						return (
							(type = expr.type || Syntax.Property),
							extra.verbatim &&
							expr.hasOwnProperty(extra.verbatim)
								? (function generateVerbatim(expr, precedence) {
										var verbatim;
										return toSourceNodeWhenNeeded(
											'string' ==
												typeof (verbatim =
													expr[extra.verbatim])
												? parenthesize(
														generateVerbatimString(
															verbatim,
														),
														Precedence.Sequence,
														precedence,
												  )
												: parenthesize(
														generateVerbatimString(
															verbatim.content,
														),
														null !=
															verbatim.precedence
															? verbatim.precedence
															: Precedence.Sequence,
														precedence,
												  ),
											expr,
										);
								  })(expr, precedence)
								: ((result = this[type](
										expr,
										precedence,
										flags,
								  )),
								  extra.comment &&
										(result = addComments(expr, result)),
								  toSourceNodeWhenNeeded(result, expr))
						);
					}),
					(CodeGenerator.prototype.generateStatement = function (
						stmt,
						flags,
					) {
						var result, fragment;
						return (
							(result = this[stmt.type](stmt, flags)),
							extra.comment &&
								(result = addComments(stmt, result)),
							(fragment =
								toSourceNodeWhenNeeded(result).toString()),
							stmt.type !== Syntax.Program ||
								safeConcatenation ||
								'' !== newline ||
								'\n' !== fragment.charAt(fragment.length - 1) ||
								(result = sourceMap
									? toSourceNodeWhenNeeded(
											result,
									  ).replaceRight(/\s+$/, '')
									: fragment.replace(/\s+$/, '')),
							toSourceNodeWhenNeeded(result, stmt)
						);
					}),
					(FORMAT_MINIFY = {
						indent: { style: '', base: 0 },
						renumber: !0,
						hexadecimal: !0,
						quotes: 'auto',
						escapeless: !0,
						compact: !0,
						parentheses: !1,
						semicolons: !1,
					}),
					(FORMAT_DEFAULTS = {
						indent: {
							style: '    ',
							base: 0,
							adjustMultilineComment: !1,
						},
						newline: '\n',
						space: ' ',
						json: !1,
						renumber: !1,
						hexadecimal: !1,
						quotes: 'single',
						escapeless: !1,
						compact: !1,
						parentheses: !0,
						semicolons: !0,
						safeConcatenation: !1,
						preserveBlankLines: !1,
					}),
					__webpack_require__(
						'./node_modules/escodegen/package.json',
					),
					(exports.R_ = function generate(node, options) {
						var result,
							pair,
							defaultOptions = {
								indent: null,
								base: null,
								parse: null,
								comment: !1,
								format: {
									indent: {
										style: '    ',
										base: 0,
										adjustMultilineComment: !1,
									},
									newline: '\n',
									space: ' ',
									json: !1,
									renumber: !1,
									hexadecimal: !1,
									quotes: 'single',
									escapeless: !1,
									compact: !1,
									parentheses: !0,
									semicolons: !0,
									safeConcatenation: !1,
									preserveBlankLines: !1,
								},
								moz: {
									comprehensionExpressionStartsWithAssignment:
										!1,
									starlessGenerator: !1,
								},
								sourceMap: null,
								sourceMapRoot: null,
								sourceMapWithCode: !1,
								directive: !1,
								raw: !0,
								verbatim: null,
								sourceCode: null,
							};
						return (
							null != options
								? ('string' == typeof options.indent &&
										(defaultOptions.format.indent.style =
											options.indent),
								  'number' == typeof options.base &&
										(defaultOptions.format.indent.base =
											options.base),
								  (options = updateDeeply(
										defaultOptions,
										options,
								  )),
								  (indent = options.format.indent.style),
								  (base =
										'string' == typeof options.base
											? options.base
											: stringRepeat(
													indent,
													options.format.indent.base,
											  )))
								: ((indent = (options = defaultOptions).format
										.indent.style),
								  (base = stringRepeat(
										indent,
										options.format.indent.base,
								  ))),
							(json = options.format.json),
							(renumber = options.format.renumber),
							(hexadecimal = !json && options.format.hexadecimal),
							(quotes = json ? 'double' : options.format.quotes),
							(escapeless = options.format.escapeless),
							(newline = options.format.newline),
							(space = options.format.space),
							options.format.compact &&
								(newline = space = indent = base = ''),
							(parentheses = options.format.parentheses),
							(semicolons = options.format.semicolons),
							(safeConcatenation =
								options.format.safeConcatenation),
							(directive = options.directive),
							(parse = json ? null : options.parse),
							(sourceMap = options.sourceMap),
							(sourceCode = options.sourceCode),
							(preserveBlankLines =
								options.format.preserveBlankLines &&
								null !== sourceCode),
							(extra = options),
							sourceMap &&
								(SourceNode = exports.Xh
									? __webpack_require__.g.sourceMap.SourceNode
									: __webpack_require__(
											'./node_modules/source-map/source-map.js',
									  ).SourceNode),
							(result = generateInternal(node)),
							sourceMap
								? ((pair = result.toStringWithSourceMap({
										file: options.file,
										sourceRoot: options.sourceMapRoot,
								  })),
								  options.sourceContent &&
										pair.map.setSourceContent(
											options.sourceMap,
											options.sourceContent,
										),
								  options.sourceMapWithCode
										? pair
										: pair.map.toString())
								: ((pair = {
										code: result.toString(),
										map: null,
								  }),
								  options.sourceMapWithCode ? pair : pair.code)
						);
					}),
					estraverse.attachComments,
					updateDeeply({}, Precedence),
					(exports.Xh = !1),
					FORMAT_MINIFY,
					FORMAT_DEFAULTS;
			})();
		},
		'./node_modules/estraverse/estraverse.js': (
			__unused_webpack_module,
			exports,
		) => {
			!(function clone(exports) {
				'use strict';
				var Syntax, VisitorOption, VisitorKeys, BREAK, SKIP, REMOVE;
				function deepCopy(obj) {
					var key,
						val,
						ret = {};
					for (key in obj)
						obj.hasOwnProperty(key) &&
							((val = obj[key]),
							(ret[key] =
								'object' == typeof val && null !== val
									? deepCopy(val)
									: val));
					return ret;
				}
				function Reference(parent, key) {
					(this.parent = parent), (this.key = key);
				}
				function Element(node, path, wrap, ref) {
					(this.node = node),
						(this.path = path),
						(this.wrap = wrap),
						(this.ref = ref);
				}
				function Controller() {}
				function isNode(node) {
					return (
						null != node &&
						'object' == typeof node &&
						'string' == typeof node.type
					);
				}
				function isProperty(nodeType, key) {
					return (
						(nodeType === Syntax.ObjectExpression ||
							nodeType === Syntax.ObjectPattern) &&
						'properties' === key
					);
				}
				function candidateExistsInLeaveList(leavelist, candidate) {
					for (var i = leavelist.length - 1; i >= 0; --i)
						if (leavelist[i].node === candidate) return !0;
					return !1;
				}
				function traverse(root, visitor) {
					return new Controller().traverse(root, visitor);
				}
				function extendCommentRange(comment, tokens) {
					var target;
					return (
						(target = (function upperBound(array, func) {
							var diff, len, i, current;
							for (len = array.length, i = 0; len; )
								func(array[(current = i + (diff = len >>> 1))])
									? (len = diff)
									: ((i = current + 1), (len -= diff + 1));
							return i;
						})(tokens, function search(token) {
							return token.range[0] > comment.range[0];
						})),
						(comment.extendedRange = [
							comment.range[0],
							comment.range[1],
						]),
						target !== tokens.length &&
							(comment.extendedRange[1] =
								tokens[target].range[0]),
						(target -= 1) >= 0 &&
							(comment.extendedRange[0] =
								tokens[target].range[1]),
						comment
					);
				}
				return (
					(Syntax = {
						AssignmentExpression: 'AssignmentExpression',
						AssignmentPattern: 'AssignmentPattern',
						ArrayExpression: 'ArrayExpression',
						ArrayPattern: 'ArrayPattern',
						ArrowFunctionExpression: 'ArrowFunctionExpression',
						AwaitExpression: 'AwaitExpression',
						BlockStatement: 'BlockStatement',
						BinaryExpression: 'BinaryExpression',
						BreakStatement: 'BreakStatement',
						CallExpression: 'CallExpression',
						CatchClause: 'CatchClause',
						ChainExpression: 'ChainExpression',
						ClassBody: 'ClassBody',
						ClassDeclaration: 'ClassDeclaration',
						ClassExpression: 'ClassExpression',
						ComprehensionBlock: 'ComprehensionBlock',
						ComprehensionExpression: 'ComprehensionExpression',
						ConditionalExpression: 'ConditionalExpression',
						ContinueStatement: 'ContinueStatement',
						DebuggerStatement: 'DebuggerStatement',
						DirectiveStatement: 'DirectiveStatement',
						DoWhileStatement: 'DoWhileStatement',
						EmptyStatement: 'EmptyStatement',
						ExportAllDeclaration: 'ExportAllDeclaration',
						ExportDefaultDeclaration: 'ExportDefaultDeclaration',
						ExportNamedDeclaration: 'ExportNamedDeclaration',
						ExportSpecifier: 'ExportSpecifier',
						ExpressionStatement: 'ExpressionStatement',
						ForStatement: 'ForStatement',
						ForInStatement: 'ForInStatement',
						ForOfStatement: 'ForOfStatement',
						FunctionDeclaration: 'FunctionDeclaration',
						FunctionExpression: 'FunctionExpression',
						GeneratorExpression: 'GeneratorExpression',
						Identifier: 'Identifier',
						IfStatement: 'IfStatement',
						ImportExpression: 'ImportExpression',
						ImportDeclaration: 'ImportDeclaration',
						ImportDefaultSpecifier: 'ImportDefaultSpecifier',
						ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
						ImportSpecifier: 'ImportSpecifier',
						Literal: 'Literal',
						LabeledStatement: 'LabeledStatement',
						LogicalExpression: 'LogicalExpression',
						MemberExpression: 'MemberExpression',
						MetaProperty: 'MetaProperty',
						MethodDefinition: 'MethodDefinition',
						ModuleSpecifier: 'ModuleSpecifier',
						NewExpression: 'NewExpression',
						ObjectExpression: 'ObjectExpression',
						ObjectPattern: 'ObjectPattern',
						PrivateIdentifier: 'PrivateIdentifier',
						Program: 'Program',
						Property: 'Property',
						PropertyDefinition: 'PropertyDefinition',
						RestElement: 'RestElement',
						ReturnStatement: 'ReturnStatement',
						SequenceExpression: 'SequenceExpression',
						SpreadElement: 'SpreadElement',
						Super: 'Super',
						SwitchStatement: 'SwitchStatement',
						SwitchCase: 'SwitchCase',
						TaggedTemplateExpression: 'TaggedTemplateExpression',
						TemplateElement: 'TemplateElement',
						TemplateLiteral: 'TemplateLiteral',
						ThisExpression: 'ThisExpression',
						ThrowStatement: 'ThrowStatement',
						TryStatement: 'TryStatement',
						UnaryExpression: 'UnaryExpression',
						UpdateExpression: 'UpdateExpression',
						VariableDeclaration: 'VariableDeclaration',
						VariableDeclarator: 'VariableDeclarator',
						WhileStatement: 'WhileStatement',
						WithStatement: 'WithStatement',
						YieldExpression: 'YieldExpression',
					}),
					(VisitorKeys = {
						AssignmentExpression: ['left', 'right'],
						AssignmentPattern: ['left', 'right'],
						ArrayExpression: ['elements'],
						ArrayPattern: ['elements'],
						ArrowFunctionExpression: ['params', 'body'],
						AwaitExpression: ['argument'],
						BlockStatement: ['body'],
						BinaryExpression: ['left', 'right'],
						BreakStatement: ['label'],
						CallExpression: ['callee', 'arguments'],
						CatchClause: ['param', 'body'],
						ChainExpression: ['expression'],
						ClassBody: ['body'],
						ClassDeclaration: ['id', 'superClass', 'body'],
						ClassExpression: ['id', 'superClass', 'body'],
						ComprehensionBlock: ['left', 'right'],
						ComprehensionExpression: ['blocks', 'filter', 'body'],
						ConditionalExpression: [
							'test',
							'consequent',
							'alternate',
						],
						ContinueStatement: ['label'],
						DebuggerStatement: [],
						DirectiveStatement: [],
						DoWhileStatement: ['body', 'test'],
						EmptyStatement: [],
						ExportAllDeclaration: ['source'],
						ExportDefaultDeclaration: ['declaration'],
						ExportNamedDeclaration: [
							'declaration',
							'specifiers',
							'source',
						],
						ExportSpecifier: ['exported', 'local'],
						ExpressionStatement: ['expression'],
						ForStatement: ['init', 'test', 'update', 'body'],
						ForInStatement: ['left', 'right', 'body'],
						ForOfStatement: ['left', 'right', 'body'],
						FunctionDeclaration: ['id', 'params', 'body'],
						FunctionExpression: ['id', 'params', 'body'],
						GeneratorExpression: ['blocks', 'filter', 'body'],
						Identifier: [],
						IfStatement: ['test', 'consequent', 'alternate'],
						ImportExpression: ['source'],
						ImportDeclaration: ['specifiers', 'source'],
						ImportDefaultSpecifier: ['local'],
						ImportNamespaceSpecifier: ['local'],
						ImportSpecifier: ['imported', 'local'],
						Literal: [],
						LabeledStatement: ['label', 'body'],
						LogicalExpression: ['left', 'right'],
						MemberExpression: ['object', 'property'],
						MetaProperty: ['meta', 'property'],
						MethodDefinition: ['key', 'value'],
						ModuleSpecifier: [],
						NewExpression: ['callee', 'arguments'],
						ObjectExpression: ['properties'],
						ObjectPattern: ['properties'],
						PrivateIdentifier: [],
						Program: ['body'],
						Property: ['key', 'value'],
						PropertyDefinition: ['key', 'value'],
						RestElement: ['argument'],
						ReturnStatement: ['argument'],
						SequenceExpression: ['expressions'],
						SpreadElement: ['argument'],
						Super: [],
						SwitchStatement: ['discriminant', 'cases'],
						SwitchCase: ['test', 'consequent'],
						TaggedTemplateExpression: ['tag', 'quasi'],
						TemplateElement: [],
						TemplateLiteral: ['quasis', 'expressions'],
						ThisExpression: [],
						ThrowStatement: ['argument'],
						TryStatement: ['block', 'handler', 'finalizer'],
						UnaryExpression: ['argument'],
						UpdateExpression: ['argument'],
						VariableDeclaration: ['declarations'],
						VariableDeclarator: ['id', 'init'],
						WhileStatement: ['test', 'body'],
						WithStatement: ['object', 'body'],
						YieldExpression: ['argument'],
					}),
					(VisitorOption = {
						Break: (BREAK = {}),
						Skip: (SKIP = {}),
						Remove: (REMOVE = {}),
					}),
					(Reference.prototype.replace = function replace(node) {
						this.parent[this.key] = node;
					}),
					(Reference.prototype.remove = function remove() {
						return Array.isArray(this.parent)
							? (this.parent.splice(this.key, 1), !0)
							: (this.replace(null), !1);
					}),
					(Controller.prototype.path = function path() {
						var i, iz, j, jz, result;
						function addToPath(result, path) {
							if (Array.isArray(path))
								for (j = 0, jz = path.length; j < jz; ++j)
									result.push(path[j]);
							else result.push(path);
						}
						if (!this.__current.path) return null;
						for (
							result = [], i = 2, iz = this.__leavelist.length;
							i < iz;
							++i
						)
							addToPath(result, this.__leavelist[i].path);
						return addToPath(result, this.__current.path), result;
					}),
					(Controller.prototype.type = function () {
						return this.current().type || this.__current.wrap;
					}),
					(Controller.prototype.parents = function parents() {
						var i, iz, result;
						for (
							result = [], i = 1, iz = this.__leavelist.length;
							i < iz;
							++i
						)
							result.push(this.__leavelist[i].node);
						return result;
					}),
					(Controller.prototype.current = function current() {
						return this.__current.node;
					}),
					(Controller.prototype.__execute = function __execute(
						callback,
						element,
					) {
						var previous, result;
						return (
							(result = void 0),
							(previous = this.__current),
							(this.__current = element),
							(this.__state = null),
							callback &&
								(result = callback.call(
									this,
									element.node,
									this.__leavelist[
										this.__leavelist.length - 1
									].node,
								)),
							(this.__current = previous),
							result
						);
					}),
					(Controller.prototype.notify = function notify(flag) {
						this.__state = flag;
					}),
					(Controller.prototype.skip = function () {
						this.notify(SKIP);
					}),
					(Controller.prototype.break = function () {
						this.notify(BREAK);
					}),
					(Controller.prototype.remove = function () {
						this.notify(REMOVE);
					}),
					(Controller.prototype.__initialize = function (
						root,
						visitor,
					) {
						(this.visitor = visitor),
							(this.root = root),
							(this.__worklist = []),
							(this.__leavelist = []),
							(this.__current = null),
							(this.__state = null),
							(this.__fallback = null),
							'iteration' === visitor.fallback
								? (this.__fallback = Object.keys)
								: 'function' == typeof visitor.fallback &&
								  (this.__fallback = visitor.fallback),
							(this.__keys = VisitorKeys),
							visitor.keys &&
								(this.__keys = Object.assign(
									Object.create(this.__keys),
									visitor.keys,
								));
					}),
					(Controller.prototype.traverse = function traverse(
						root,
						visitor,
					) {
						var worklist,
							leavelist,
							element,
							node,
							nodeType,
							ret,
							key,
							current,
							current2,
							candidates,
							candidate,
							sentinel;
						for (
							this.__initialize(root, visitor),
								sentinel = {},
								worklist = this.__worklist,
								leavelist = this.__leavelist,
								worklist.push(
									new Element(root, null, null, null),
								),
								leavelist.push(
									new Element(null, null, null, null),
								);
							worklist.length;

						)
							if ((element = worklist.pop()) !== sentinel) {
								if (element.node) {
									if (
										((ret = this.__execute(
											visitor.enter,
											element,
										)),
										this.__state === BREAK || ret === BREAK)
									)
										return;
									if (
										(worklist.push(sentinel),
										leavelist.push(element),
										this.__state === SKIP || ret === SKIP)
									)
										continue;
									if (
										((nodeType =
											(node = element.node).type ||
											element.wrap),
										!(candidates = this.__keys[nodeType]))
									) {
										if (!this.__fallback)
											throw new Error(
												'Unknown node type ' +
													nodeType +
													'.',
											);
										candidates = this.__fallback(node);
									}
									for (
										current = candidates.length;
										(current -= 1) >= 0;

									)
										if (
											(candidate =
												node[
													(key = candidates[current])
												])
										)
											if (Array.isArray(candidate)) {
												for (
													current2 = candidate.length;
													(current2 -= 1) >= 0;

												)
													if (
														candidate[current2] &&
														!candidateExistsInLeaveList(
															leavelist,
															candidate[current2],
														)
													) {
														if (
															isProperty(
																nodeType,
																candidates[
																	current
																],
															)
														)
															element =
																new Element(
																	candidate[
																		current2
																	],
																	[
																		key,
																		current2,
																	],
																	'Property',
																	null,
																);
														else {
															if (
																!isNode(
																	candidate[
																		current2
																	],
																)
															)
																continue;
															element =
																new Element(
																	candidate[
																		current2
																	],
																	[
																		key,
																		current2,
																	],
																	null,
																	null,
																);
														}
														worklist.push(element);
													}
											} else if (isNode(candidate)) {
												if (
													candidateExistsInLeaveList(
														leavelist,
														candidate,
													)
												)
													continue;
												worklist.push(
													new Element(
														candidate,
														key,
														null,
														null,
													),
												);
											}
								}
							} else if (
								((element = leavelist.pop()),
								(ret = this.__execute(visitor.leave, element)),
								this.__state === BREAK || ret === BREAK)
							)
								return;
					}),
					(Controller.prototype.replace = function replace(
						root,
						visitor,
					) {
						var worklist,
							leavelist,
							node,
							nodeType,
							target,
							element,
							current,
							current2,
							candidates,
							candidate,
							sentinel,
							outer,
							key;
						function removeElem(element) {
							var i, key, nextElem, parent;
							if (element.ref.remove())
								for (
									key = element.ref.key,
										parent = element.ref.parent,
										i = worklist.length;
									i--;

								)
									if (
										(nextElem = worklist[i]).ref &&
										nextElem.ref.parent === parent
									) {
										if (nextElem.ref.key < key) break;
										--nextElem.ref.key;
									}
						}
						for (
							this.__initialize(root, visitor),
								sentinel = {},
								worklist = this.__worklist,
								leavelist = this.__leavelist,
								element = new Element(
									root,
									null,
									null,
									new Reference((outer = { root }), 'root'),
								),
								worklist.push(element),
								leavelist.push(element);
							worklist.length;

						)
							if ((element = worklist.pop()) !== sentinel) {
								if (
									(void 0 !==
										(target = this.__execute(
											visitor.enter,
											element,
										)) &&
										target !== BREAK &&
										target !== SKIP &&
										target !== REMOVE &&
										(element.ref.replace(target),
										(element.node = target)),
									(this.__state !== REMOVE &&
										target !== REMOVE) ||
										(removeElem(element),
										(element.node = null)),
									this.__state === BREAK || target === BREAK)
								)
									return outer.root;
								if (
									(node = element.node) &&
									(worklist.push(sentinel),
									leavelist.push(element),
									this.__state !== SKIP && target !== SKIP)
								) {
									if (
										((nodeType = node.type || element.wrap),
										!(candidates = this.__keys[nodeType]))
									) {
										if (!this.__fallback)
											throw new Error(
												'Unknown node type ' +
													nodeType +
													'.',
											);
										candidates = this.__fallback(node);
									}
									for (
										current = candidates.length;
										(current -= 1) >= 0;

									)
										if (
											(candidate =
												node[
													(key = candidates[current])
												])
										)
											if (Array.isArray(candidate)) {
												for (
													current2 = candidate.length;
													(current2 -= 1) >= 0;

												)
													if (candidate[current2]) {
														if (
															isProperty(
																nodeType,
																candidates[
																	current
																],
															)
														)
															element =
																new Element(
																	candidate[
																		current2
																	],
																	[
																		key,
																		current2,
																	],
																	'Property',
																	new Reference(
																		candidate,
																		current2,
																	),
																);
														else {
															if (
																!isNode(
																	candidate[
																		current2
																	],
																)
															)
																continue;
															element =
																new Element(
																	candidate[
																		current2
																	],
																	[
																		key,
																		current2,
																	],
																	null,
																	new Reference(
																		candidate,
																		current2,
																	),
																);
														}
														worklist.push(element);
													}
											} else
												isNode(candidate) &&
													worklist.push(
														new Element(
															candidate,
															key,
															null,
															new Reference(
																node,
																key,
															),
														),
													);
								}
							} else if (
								((element = leavelist.pop()),
								void 0 !==
									(target = this.__execute(
										visitor.leave,
										element,
									)) &&
									target !== BREAK &&
									target !== SKIP &&
									target !== REMOVE &&
									element.ref.replace(target),
								(this.__state !== REMOVE &&
									target !== REMOVE) ||
									removeElem(element),
								this.__state === BREAK || target === BREAK)
							)
								return outer.root;
						return outer.root;
					}),
					(exports.Syntax = Syntax),
					(exports.traverse = traverse),
					(exports.replace = function replace(root, visitor) {
						return new Controller().replace(root, visitor);
					}),
					(exports.attachComments = function attachComments(
						tree,
						providedComments,
						tokens,
					) {
						var comment,
							len,
							i,
							cursor,
							comments = [];
						if (!tree.range)
							throw new Error(
								'attachComments needs range information',
							);
						if (!tokens.length) {
							if (providedComments.length) {
								for (
									i = 0, len = providedComments.length;
									i < len;
									i += 1
								)
									((comment = deepCopy(
										providedComments[i],
									)).extendedRange = [0, tree.range[0]]),
										comments.push(comment);
								tree.leadingComments = comments;
							}
							return tree;
						}
						for (
							i = 0, len = providedComments.length;
							i < len;
							i += 1
						)
							comments.push(
								extendCommentRange(
									deepCopy(providedComments[i]),
									tokens,
								),
							);
						return (
							(cursor = 0),
							traverse(tree, {
								enter: function (node) {
									for (
										var comment;
										cursor < comments.length &&
										!(
											(comment = comments[cursor])
												.extendedRange[1] >
											node.range[0]
										);

									)
										comment.extendedRange[1] ===
										node.range[0]
											? (node.leadingComments ||
													(node.leadingComments = []),
											  node.leadingComments.push(
													comment,
											  ),
											  comments.splice(cursor, 1))
											: (cursor += 1);
									return cursor === comments.length
										? VisitorOption.Break
										: comments[cursor].extendedRange[0] >
										  node.range[1]
										? VisitorOption.Skip
										: void 0;
								},
							}),
							(cursor = 0),
							traverse(tree, {
								leave: function (node) {
									for (
										var comment;
										cursor < comments.length &&
										((comment = comments[cursor]),
										!(
											node.range[1] <
											comment.extendedRange[0]
										));

									)
										node.range[1] ===
										comment.extendedRange[0]
											? (node.trailingComments ||
													(node.trailingComments =
														[]),
											  node.trailingComments.push(
													comment,
											  ),
											  comments.splice(cursor, 1))
											: (cursor += 1);
									return cursor === comments.length
										? VisitorOption.Break
										: comments[cursor].extendedRange[0] >
										  node.range[1]
										? VisitorOption.Skip
										: void 0;
								},
							}),
							tree
						);
					}),
					(exports.VisitorKeys = VisitorKeys),
					(exports.VisitorOption = VisitorOption),
					(exports.Controller = Controller),
					(exports.cloneEnvironment = function () {
						return clone({});
					}),
					exports
				);
			})(exports);
		},
		'./node_modules/esutils/lib/ast.js': (module) => {
			!(function () {
				'use strict';
				function isStatement(node) {
					if (null == node) return !1;
					switch (node.type) {
						case 'BlockStatement':
						case 'BreakStatement':
						case 'ContinueStatement':
						case 'DebuggerStatement':
						case 'DoWhileStatement':
						case 'EmptyStatement':
						case 'ExpressionStatement':
						case 'ForInStatement':
						case 'ForStatement':
						case 'IfStatement':
						case 'LabeledStatement':
						case 'ReturnStatement':
						case 'SwitchStatement':
						case 'ThrowStatement':
						case 'TryStatement':
						case 'VariableDeclaration':
						case 'WhileStatement':
						case 'WithStatement':
							return !0;
					}
					return !1;
				}
				function trailingStatement(node) {
					switch (node.type) {
						case 'IfStatement':
							return null != node.alternate
								? node.alternate
								: node.consequent;
						case 'LabeledStatement':
						case 'ForStatement':
						case 'ForInStatement':
						case 'WhileStatement':
						case 'WithStatement':
							return node.body;
					}
					return null;
				}
				module.exports = {
					isExpression: function isExpression(node) {
						if (null == node) return !1;
						switch (node.type) {
							case 'ArrayExpression':
							case 'AssignmentExpression':
							case 'BinaryExpression':
							case 'CallExpression':
							case 'ConditionalExpression':
							case 'FunctionExpression':
							case 'Identifier':
							case 'Literal':
							case 'LogicalExpression':
							case 'MemberExpression':
							case 'NewExpression':
							case 'ObjectExpression':
							case 'SequenceExpression':
							case 'ThisExpression':
							case 'UnaryExpression':
							case 'UpdateExpression':
								return !0;
						}
						return !1;
					},
					isStatement,
					isIterationStatement: function isIterationStatement(node) {
						if (null == node) return !1;
						switch (node.type) {
							case 'DoWhileStatement':
							case 'ForInStatement':
							case 'ForStatement':
							case 'WhileStatement':
								return !0;
						}
						return !1;
					},
					isSourceElement: function isSourceElement(node) {
						return (
							isStatement(node) ||
							(null != node &&
								'FunctionDeclaration' === node.type)
						);
					},
					isProblematicIfStatement: function isProblematicIfStatement(
						node,
					) {
						var current;
						if ('IfStatement' !== node.type) return !1;
						if (null == node.alternate) return !1;
						current = node.consequent;
						do {
							if (
								'IfStatement' === current.type &&
								null == current.alternate
							)
								return !0;
							current = trailingStatement(current);
						} while (current);
						return !1;
					},
					trailingStatement,
				};
			})();
		},
		'./node_modules/esutils/lib/code.js': (module) => {
			!(function () {
				'use strict';
				var ES6Regex,
					ES5Regex,
					NON_ASCII_WHITESPACES,
					IDENTIFIER_START,
					IDENTIFIER_PART,
					ch;
				function fromCodePoint(cp) {
					return cp <= 65535
						? String.fromCharCode(cp)
						: String.fromCharCode(
								Math.floor((cp - 65536) / 1024) + 55296,
						  ) +
								String.fromCharCode(
									((cp - 65536) % 1024) + 56320,
								);
				}
				for (
					ES5Regex = {
						NonAsciiIdentifierStart:
							/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
						NonAsciiIdentifierPart:
							/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
					},
						ES6Regex = {
							NonAsciiIdentifierStart:
								/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
							NonAsciiIdentifierPart:
								/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
						},
						NON_ASCII_WHITESPACES = [
							5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198,
							8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279,
						],
						IDENTIFIER_START = new Array(128),
						ch = 0;
					ch < 128;
					++ch
				)
					IDENTIFIER_START[ch] =
						(ch >= 97 && ch <= 122) ||
						(ch >= 65 && ch <= 90) ||
						36 === ch ||
						95 === ch;
				for (IDENTIFIER_PART = new Array(128), ch = 0; ch < 128; ++ch)
					IDENTIFIER_PART[ch] =
						(ch >= 97 && ch <= 122) ||
						(ch >= 65 && ch <= 90) ||
						(ch >= 48 && ch <= 57) ||
						36 === ch ||
						95 === ch;
				module.exports = {
					isDecimalDigit: function isDecimalDigit(ch) {
						return 48 <= ch && ch <= 57;
					},
					isHexDigit: function isHexDigit(ch) {
						return (
							(48 <= ch && ch <= 57) ||
							(97 <= ch && ch <= 102) ||
							(65 <= ch && ch <= 70)
						);
					},
					isOctalDigit: function isOctalDigit(ch) {
						return ch >= 48 && ch <= 55;
					},
					isWhiteSpace: function isWhiteSpace(ch) {
						return (
							32 === ch ||
							9 === ch ||
							11 === ch ||
							12 === ch ||
							160 === ch ||
							(ch >= 5760 &&
								NON_ASCII_WHITESPACES.indexOf(ch) >= 0)
						);
					},
					isLineTerminator: function isLineTerminator(ch) {
						return (
							10 === ch || 13 === ch || 8232 === ch || 8233 === ch
						);
					},
					isIdentifierStartES5: function isIdentifierStartES5(ch) {
						return ch < 128
							? IDENTIFIER_START[ch]
							: ES5Regex.NonAsciiIdentifierStart.test(
									fromCodePoint(ch),
							  );
					},
					isIdentifierPartES5: function isIdentifierPartES5(ch) {
						return ch < 128
							? IDENTIFIER_PART[ch]
							: ES5Regex.NonAsciiIdentifierPart.test(
									fromCodePoint(ch),
							  );
					},
					isIdentifierStartES6: function isIdentifierStartES6(ch) {
						return ch < 128
							? IDENTIFIER_START[ch]
							: ES6Regex.NonAsciiIdentifierStart.test(
									fromCodePoint(ch),
							  );
					},
					isIdentifierPartES6: function isIdentifierPartES6(ch) {
						return ch < 128
							? IDENTIFIER_PART[ch]
							: ES6Regex.NonAsciiIdentifierPart.test(
									fromCodePoint(ch),
							  );
					},
				};
			})();
		},
		'./node_modules/esutils/lib/keyword.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				var code = __webpack_require__(
					'./node_modules/esutils/lib/code.js',
				);
				function isKeywordES5(id, strict) {
					return (
						!(!strict && 'yield' === id) && isKeywordES6(id, strict)
					);
				}
				function isKeywordES6(id, strict) {
					if (
						strict &&
						(function isStrictModeReservedWordES6(id) {
							switch (id) {
								case 'implements':
								case 'interface':
								case 'package':
								case 'private':
								case 'protected':
								case 'public':
								case 'static':
								case 'let':
									return !0;
								default:
									return !1;
							}
						})(id)
					)
						return !0;
					switch (id.length) {
						case 2:
							return 'if' === id || 'in' === id || 'do' === id;
						case 3:
							return (
								'var' === id ||
								'for' === id ||
								'new' === id ||
								'try' === id
							);
						case 4:
							return (
								'this' === id ||
								'else' === id ||
								'case' === id ||
								'void' === id ||
								'with' === id ||
								'enum' === id
							);
						case 5:
							return (
								'while' === id ||
								'break' === id ||
								'catch' === id ||
								'throw' === id ||
								'const' === id ||
								'yield' === id ||
								'class' === id ||
								'super' === id
							);
						case 6:
							return (
								'return' === id ||
								'typeof' === id ||
								'delete' === id ||
								'switch' === id ||
								'export' === id ||
								'import' === id
							);
						case 7:
							return (
								'default' === id ||
								'finally' === id ||
								'extends' === id
							);
						case 8:
							return (
								'function' === id ||
								'continue' === id ||
								'debugger' === id
							);
						case 10:
							return 'instanceof' === id;
						default:
							return !1;
					}
				}
				function isReservedWordES5(id, strict) {
					return (
						'null' === id ||
						'true' === id ||
						'false' === id ||
						isKeywordES5(id, strict)
					);
				}
				function isReservedWordES6(id, strict) {
					return (
						'null' === id ||
						'true' === id ||
						'false' === id ||
						isKeywordES6(id, strict)
					);
				}
				function isIdentifierNameES5(id) {
					var i, iz, ch;
					if (0 === id.length) return !1;
					if (
						((ch = id.charCodeAt(0)),
						!code.isIdentifierStartES5(ch))
					)
						return !1;
					for (i = 1, iz = id.length; i < iz; ++i)
						if (
							((ch = id.charCodeAt(i)),
							!code.isIdentifierPartES5(ch))
						)
							return !1;
					return !0;
				}
				function isIdentifierNameES6(id) {
					var i, iz, ch, lowCh, check;
					if (0 === id.length) return !1;
					for (
						check = code.isIdentifierStartES6,
							i = 0,
							iz = id.length;
						i < iz;
						++i
					) {
						if (55296 <= (ch = id.charCodeAt(i)) && ch <= 56319) {
							if (++i >= iz) return !1;
							if (
								!(
									56320 <= (lowCh = id.charCodeAt(i)) &&
									lowCh <= 57343
								)
							)
								return !1;
							ch = 1024 * (ch - 55296) + (lowCh - 56320) + 65536;
						}
						if (!check(ch)) return !1;
						check = code.isIdentifierPartES6;
					}
					return !0;
				}
				module.exports = {
					isKeywordES5,
					isKeywordES6,
					isReservedWordES5,
					isReservedWordES6,
					isRestrictedWord: function isRestrictedWord(id) {
						return 'eval' === id || 'arguments' === id;
					},
					isIdentifierNameES5,
					isIdentifierNameES6,
					isIdentifierES5: function isIdentifierES5(id, strict) {
						return (
							isIdentifierNameES5(id) &&
							!isReservedWordES5(id, strict)
						);
					},
					isIdentifierES6: function isIdentifierES6(id, strict) {
						return (
							isIdentifierNameES6(id) &&
							!isReservedWordES6(id, strict)
						);
					},
				};
			})();
		},
		'./node_modules/esutils/lib/utils.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			!(function () {
				'use strict';
				(exports.ast = __webpack_require__(
					'./node_modules/esutils/lib/ast.js',
				)),
					(exports.code = __webpack_require__(
						'./node_modules/esutils/lib/code.js',
					)),
					(exports.keyword = __webpack_require__(
						'./node_modules/esutils/lib/keyword.js',
					));
			})();
		},
		'./node_modules/for-each/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var isCallable = __webpack_require__(
					'./node_modules/is-callable/index.js',
				),
				toStr = Object.prototype.toString,
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function forEach(list, iterator, thisArg) {
				if (!isCallable(iterator))
					throw new TypeError('iterator must be a function');
				var receiver;
				arguments.length >= 3 && (receiver = thisArg),
					'[object Array]' === toStr.call(list)
						? (function forEachArray(array, iterator, receiver) {
								for (
									var i = 0, len = array.length;
									i < len;
									i++
								)
									hasOwnProperty.call(array, i) &&
										(null == receiver
											? iterator(array[i], i, array)
											: iterator.call(
													receiver,
													array[i],
													i,
													array,
											  ));
						  })(list, iterator, receiver)
						: 'string' == typeof list
						? (function forEachString(string, iterator, receiver) {
								for (
									var i = 0, len = string.length;
									i < len;
									i++
								)
									null == receiver
										? iterator(string.charAt(i), i, string)
										: iterator.call(
												receiver,
												string.charAt(i),
												i,
												string,
										  );
						  })(list, iterator, receiver)
						: (function forEachObject(object, iterator, receiver) {
								for (var k in object)
									hasOwnProperty.call(object, k) &&
										(null == receiver
											? iterator(object[k], k, object)
											: iterator.call(
													receiver,
													object[k],
													k,
													object,
											  ));
						  })(list, iterator, receiver);
			};
		},
		'./node_modules/function-bind/implementation.js': (module) => {
			'use strict';
			var toStr = Object.prototype.toString,
				max = Math.max,
				concatty = function concatty(a, b) {
					for (var arr = [], i = 0; i < a.length; i += 1)
						arr[i] = a[i];
					for (var j = 0; j < b.length; j += 1)
						arr[j + a.length] = b[j];
					return arr;
				};
			module.exports = function bind(that) {
				var target = this;
				if (
					'function' != typeof target ||
					'[object Function]' !== toStr.apply(target)
				)
					throw new TypeError(
						'Function.prototype.bind called on incompatible ' +
							target,
					);
				for (
					var bound,
						args = (function slicy(arrLike, offset) {
							for (
								var arr = [], i = offset || 0, j = 0;
								i < arrLike.length;
								i += 1, j += 1
							)
								arr[j] = arrLike[i];
							return arr;
						})(arguments, 1),
						boundLength = max(0, target.length - args.length),
						boundArgs = [],
						i = 0;
					i < boundLength;
					i++
				)
					boundArgs[i] = '$' + i;
				if (
					((bound = Function(
						'binder',
						'return function (' +
							(function (arr, joiner) {
								for (
									var str = '', i = 0;
									i < arr.length;
									i += 1
								)
									(str += arr[i]),
										i + 1 < arr.length && (str += joiner);
								return str;
							})(boundArgs, ',') +
							'){ return binder.apply(this,arguments); }',
					)(function () {
						if (this instanceof bound) {
							var result = target.apply(
								this,
								concatty(args, arguments),
							);
							return Object(result) === result ? result : this;
						}
						return target.apply(that, concatty(args, arguments));
					})),
					target.prototype)
				) {
					var Empty = function Empty() {};
					(Empty.prototype = target.prototype),
						(bound.prototype = new Empty()),
						(Empty.prototype = null);
				}
				return bound;
			};
		},
		'./node_modules/function-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var implementation = __webpack_require__(
				'./node_modules/function-bind/implementation.js',
			);
			module.exports = Function.prototype.bind || implementation;
		},
		'./node_modules/get-intrinsic/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var $SyntaxError = SyntaxError,
				$Function = Function,
				$TypeError = TypeError,
				getEvalledConstructor = function (expressionSyntax) {
					try {
						return $Function(
							'"use strict"; return (' +
								expressionSyntax +
								').constructor;',
						)();
					} catch (e) {}
				},
				$gOPD = Object.getOwnPropertyDescriptor;
			if ($gOPD)
				try {
					$gOPD({}, '');
				} catch (e) {
					$gOPD = null;
				}
			var throwTypeError = function () {
					throw new $TypeError();
				},
				ThrowTypeError = $gOPD
					? (function () {
							try {
								return throwTypeError;
							} catch (calleeThrows) {
								try {
									return $gOPD(arguments, 'callee').get;
								} catch (gOPDthrows) {
									return throwTypeError;
								}
							}
					  })()
					: throwTypeError,
				hasSymbols = __webpack_require__(
					'./node_modules/has-symbols/index.js',
				)(),
				hasProto = __webpack_require__(
					'./node_modules/get-intrinsic/node_modules/has-proto/index.js',
				)(),
				getProto =
					Object.getPrototypeOf ||
					(hasProto
						? function (x) {
								return x.__proto__;
						  }
						: null),
				needsEval = {},
				TypedArray =
					'undefined' != typeof Uint8Array && getProto
						? getProto(Uint8Array)
						: undefined,
				INTRINSICS = {
					'%AggregateError%':
						'undefined' == typeof AggregateError
							? undefined
							: AggregateError,
					'%Array%': Array,
					'%ArrayBuffer%':
						'undefined' == typeof ArrayBuffer
							? undefined
							: ArrayBuffer,
					'%ArrayIteratorPrototype%':
						hasSymbols && getProto
							? getProto([][Symbol.iterator]())
							: undefined,
					'%AsyncFromSyncIteratorPrototype%': undefined,
					'%AsyncFunction%': needsEval,
					'%AsyncGenerator%': needsEval,
					'%AsyncGeneratorFunction%': needsEval,
					'%AsyncIteratorPrototype%': needsEval,
					'%Atomics%':
						'undefined' == typeof Atomics ? undefined : Atomics,
					'%BigInt%':
						'undefined' == typeof BigInt ? undefined : BigInt,
					'%BigInt64Array%':
						'undefined' == typeof BigInt64Array
							? undefined
							: BigInt64Array,
					'%BigUint64Array%':
						'undefined' == typeof BigUint64Array
							? undefined
							: BigUint64Array,
					'%Boolean%': Boolean,
					'%DataView%':
						'undefined' == typeof DataView ? undefined : DataView,
					'%Date%': Date,
					'%decodeURI%': decodeURI,
					'%decodeURIComponent%': decodeURIComponent,
					'%encodeURI%': encodeURI,
					'%encodeURIComponent%': encodeURIComponent,
					'%Error%': Error,
					'%eval%': eval,
					'%EvalError%': EvalError,
					'%Float32Array%':
						'undefined' == typeof Float32Array
							? undefined
							: Float32Array,
					'%Float64Array%':
						'undefined' == typeof Float64Array
							? undefined
							: Float64Array,
					'%FinalizationRegistry%':
						'undefined' == typeof FinalizationRegistry
							? undefined
							: FinalizationRegistry,
					'%Function%': $Function,
					'%GeneratorFunction%': needsEval,
					'%Int8Array%':
						'undefined' == typeof Int8Array ? undefined : Int8Array,
					'%Int16Array%':
						'undefined' == typeof Int16Array
							? undefined
							: Int16Array,
					'%Int32Array%':
						'undefined' == typeof Int32Array
							? undefined
							: Int32Array,
					'%isFinite%': isFinite,
					'%isNaN%': isNaN,
					'%IteratorPrototype%':
						hasSymbols && getProto
							? getProto(getProto([][Symbol.iterator]()))
							: undefined,
					'%JSON%': 'object' == typeof JSON ? JSON : undefined,
					'%Map%': 'undefined' == typeof Map ? undefined : Map,
					'%MapIteratorPrototype%':
						'undefined' != typeof Map && hasSymbols && getProto
							? getProto(new Map()[Symbol.iterator]())
							: undefined,
					'%Math%': Math,
					'%Number%': Number,
					'%Object%': Object,
					'%parseFloat%': parseFloat,
					'%parseInt%': parseInt,
					'%Promise%':
						'undefined' == typeof Promise ? undefined : Promise,
					'%Proxy%': 'undefined' == typeof Proxy ? undefined : Proxy,
					'%RangeError%': RangeError,
					'%ReferenceError%': ReferenceError,
					'%Reflect%':
						'undefined' == typeof Reflect ? undefined : Reflect,
					'%RegExp%': RegExp,
					'%Set%': 'undefined' == typeof Set ? undefined : Set,
					'%SetIteratorPrototype%':
						'undefined' != typeof Set && hasSymbols && getProto
							? getProto(new Set()[Symbol.iterator]())
							: undefined,
					'%SharedArrayBuffer%':
						'undefined' == typeof SharedArrayBuffer
							? undefined
							: SharedArrayBuffer,
					'%String%': String,
					'%StringIteratorPrototype%':
						hasSymbols && getProto
							? getProto(''[Symbol.iterator]())
							: undefined,
					'%Symbol%': hasSymbols ? Symbol : undefined,
					'%SyntaxError%': $SyntaxError,
					'%ThrowTypeError%': ThrowTypeError,
					'%TypedArray%': TypedArray,
					'%TypeError%': $TypeError,
					'%Uint8Array%':
						'undefined' == typeof Uint8Array
							? undefined
							: Uint8Array,
					'%Uint8ClampedArray%':
						'undefined' == typeof Uint8ClampedArray
							? undefined
							: Uint8ClampedArray,
					'%Uint16Array%':
						'undefined' == typeof Uint16Array
							? undefined
							: Uint16Array,
					'%Uint32Array%':
						'undefined' == typeof Uint32Array
							? undefined
							: Uint32Array,
					'%URIError%': URIError,
					'%WeakMap%':
						'undefined' == typeof WeakMap ? undefined : WeakMap,
					'%WeakRef%':
						'undefined' == typeof WeakRef ? undefined : WeakRef,
					'%WeakSet%':
						'undefined' == typeof WeakSet ? undefined : WeakSet,
				};
			if (getProto)
				try {
					null.error;
				} catch (e) {
					var errorProto = getProto(getProto(e));
					INTRINSICS['%Error.prototype%'] = errorProto;
				}
			var doEval = function doEval(name) {
					var value;
					if ('%AsyncFunction%' === name)
						value = getEvalledConstructor('async function () {}');
					else if ('%GeneratorFunction%' === name)
						value = getEvalledConstructor('function* () {}');
					else if ('%AsyncGeneratorFunction%' === name)
						value = getEvalledConstructor('async function* () {}');
					else if ('%AsyncGenerator%' === name) {
						var fn = doEval('%AsyncGeneratorFunction%');
						fn && (value = fn.prototype);
					} else if ('%AsyncIteratorPrototype%' === name) {
						var gen = doEval('%AsyncGenerator%');
						gen && getProto && (value = getProto(gen.prototype));
					}
					return (INTRINSICS[name] = value), value;
				},
				LEGACY_ALIASES = {
					'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
					'%ArrayPrototype%': ['Array', 'prototype'],
					'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
					'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
					'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
					'%ArrayProto_values%': ['Array', 'prototype', 'values'],
					'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
					'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
					'%AsyncGeneratorPrototype%': [
						'AsyncGeneratorFunction',
						'prototype',
						'prototype',
					],
					'%BooleanPrototype%': ['Boolean', 'prototype'],
					'%DataViewPrototype%': ['DataView', 'prototype'],
					'%DatePrototype%': ['Date', 'prototype'],
					'%ErrorPrototype%': ['Error', 'prototype'],
					'%EvalErrorPrototype%': ['EvalError', 'prototype'],
					'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
					'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
					'%FunctionPrototype%': ['Function', 'prototype'],
					'%Generator%': ['GeneratorFunction', 'prototype'],
					'%GeneratorPrototype%': [
						'GeneratorFunction',
						'prototype',
						'prototype',
					],
					'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
					'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
					'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
					'%JSONParse%': ['JSON', 'parse'],
					'%JSONStringify%': ['JSON', 'stringify'],
					'%MapPrototype%': ['Map', 'prototype'],
					'%NumberPrototype%': ['Number', 'prototype'],
					'%ObjectPrototype%': ['Object', 'prototype'],
					'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
					'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
					'%PromisePrototype%': ['Promise', 'prototype'],
					'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
					'%Promise_all%': ['Promise', 'all'],
					'%Promise_reject%': ['Promise', 'reject'],
					'%Promise_resolve%': ['Promise', 'resolve'],
					'%RangeErrorPrototype%': ['RangeError', 'prototype'],
					'%ReferenceErrorPrototype%': [
						'ReferenceError',
						'prototype',
					],
					'%RegExpPrototype%': ['RegExp', 'prototype'],
					'%SetPrototype%': ['Set', 'prototype'],
					'%SharedArrayBufferPrototype%': [
						'SharedArrayBuffer',
						'prototype',
					],
					'%StringPrototype%': ['String', 'prototype'],
					'%SymbolPrototype%': ['Symbol', 'prototype'],
					'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
					'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
					'%TypeErrorPrototype%': ['TypeError', 'prototype'],
					'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
					'%Uint8ClampedArrayPrototype%': [
						'Uint8ClampedArray',
						'prototype',
					],
					'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
					'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
					'%URIErrorPrototype%': ['URIError', 'prototype'],
					'%WeakMapPrototype%': ['WeakMap', 'prototype'],
					'%WeakSetPrototype%': ['WeakSet', 'prototype'],
				},
				bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				hasOwn = __webpack_require__('./node_modules/has/src/index.js'),
				$concat = bind.call(Function.call, Array.prototype.concat),
				$spliceApply = bind.call(
					Function.apply,
					Array.prototype.splice,
				),
				$replace = bind.call(Function.call, String.prototype.replace),
				$strSlice = bind.call(Function.call, String.prototype.slice),
				$exec = bind.call(Function.call, RegExp.prototype.exec),
				rePropName =
					/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
				reEscapeChar = /\\(\\)?/g,
				getBaseIntrinsic = function getBaseIntrinsic(
					name,
					allowMissing,
				) {
					var alias,
						intrinsicName = name;
					if (
						(hasOwn(LEGACY_ALIASES, intrinsicName) &&
							(intrinsicName =
								'%' +
								(alias = LEGACY_ALIASES[intrinsicName])[0] +
								'%'),
						hasOwn(INTRINSICS, intrinsicName))
					) {
						var value = INTRINSICS[intrinsicName];
						if (
							(value === needsEval &&
								(value = doEval(intrinsicName)),
							void 0 === value && !allowMissing)
						)
							throw new $TypeError(
								'intrinsic ' +
									name +
									' exists, but is not available. Please file an issue!',
							);
						return { alias, name: intrinsicName, value };
					}
					throw new $SyntaxError(
						'intrinsic ' + name + ' does not exist!',
					);
				};
			module.exports = function GetIntrinsic(name, allowMissing) {
				if ('string' != typeof name || 0 === name.length)
					throw new $TypeError(
						'intrinsic name must be a non-empty string',
					);
				if (arguments.length > 1 && 'boolean' != typeof allowMissing)
					throw new $TypeError(
						'"allowMissing" argument must be a boolean',
					);
				if (null === $exec(/^%?[^%]*%?$/, name))
					throw new $SyntaxError(
						'`%` may not be present anywhere but at the beginning and end of the intrinsic name',
					);
				var parts = (function stringToPath(string) {
						var first = $strSlice(string, 0, 1),
							last = $strSlice(string, -1);
						if ('%' === first && '%' !== last)
							throw new $SyntaxError(
								'invalid intrinsic syntax, expected closing `%`',
							);
						if ('%' === last && '%' !== first)
							throw new $SyntaxError(
								'invalid intrinsic syntax, expected opening `%`',
							);
						var result = [];
						return (
							$replace(
								string,
								rePropName,
								function (match, number, quote, subString) {
									result[result.length] = quote
										? $replace(
												subString,
												reEscapeChar,
												'$1',
										  )
										: number || match;
								},
							),
							result
						);
					})(name),
					intrinsicBaseName = parts.length > 0 ? parts[0] : '',
					intrinsic = getBaseIntrinsic(
						'%' + intrinsicBaseName + '%',
						allowMissing,
					),
					intrinsicRealName = intrinsic.name,
					value = intrinsic.value,
					skipFurtherCaching = !1,
					alias = intrinsic.alias;
				alias &&
					((intrinsicBaseName = alias[0]),
					$spliceApply(parts, $concat([0, 1], alias)));
				for (var i = 1, isOwn = !0; i < parts.length; i += 1) {
					var part = parts[i],
						first = $strSlice(part, 0, 1),
						last = $strSlice(part, -1);
					if (
						('"' === first ||
							"'" === first ||
							'`' === first ||
							'"' === last ||
							"'" === last ||
							'`' === last) &&
						first !== last
					)
						throw new $SyntaxError(
							'property names with quotes must have matching quotes',
						);
					if (
						(('constructor' !== part && isOwn) ||
							(skipFurtherCaching = !0),
						hasOwn(
							INTRINSICS,
							(intrinsicRealName =
								'%' + (intrinsicBaseName += '.' + part) + '%'),
						))
					)
						value = INTRINSICS[intrinsicRealName];
					else if (null != value) {
						if (!(part in value)) {
							if (!allowMissing)
								throw new $TypeError(
									'base intrinsic for ' +
										name +
										' exists, but the property is not available.',
								);
							return;
						}
						if ($gOPD && i + 1 >= parts.length) {
							var desc = $gOPD(value, part);
							value =
								(isOwn = !!desc) &&
								'get' in desc &&
								!('originalValue' in desc.get)
									? desc.get
									: value[part];
						} else
							(isOwn = hasOwn(value, part)),
								(value = value[part]);
						isOwn &&
							!skipFurtherCaching &&
							(INTRINSICS[intrinsicRealName] = value);
					}
				}
				return value;
			};
		},
		'./node_modules/get-intrinsic/node_modules/has-proto/index.js': (
			module,
		) => {
			'use strict';
			var test = { foo: {} },
				$Object = Object;
			module.exports = function hasProto() {
				return (
					{ __proto__: test }.foo === test.foo &&
					!({ __proto__: null } instanceof $Object)
				);
			};
		},
		'./node_modules/gopd/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var $gOPD = __webpack_require__(
				'./node_modules/get-intrinsic/index.js',
			)('%Object.getOwnPropertyDescriptor%', !0);
			if ($gOPD)
				try {
					$gOPD([], 'length');
				} catch (e) {
					$gOPD = null;
				}
			module.exports = $gOPD;
		},
		'./node_modules/has-symbols/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var origSymbol = 'undefined' != typeof Symbol && Symbol,
				hasSymbolSham = __webpack_require__(
					'./node_modules/has-symbols/shams.js',
				);
			module.exports = function hasNativeSymbols() {
				return (
					'function' == typeof origSymbol &&
					'function' == typeof Symbol &&
					'symbol' == typeof origSymbol('foo') &&
					'symbol' == typeof Symbol('bar') &&
					hasSymbolSham()
				);
			};
		},
		'./node_modules/has-symbols/shams.js': (module) => {
			'use strict';
			module.exports = function hasSymbols() {
				if (
					'function' != typeof Symbol ||
					'function' != typeof Object.getOwnPropertySymbols
				)
					return !1;
				if ('symbol' == typeof Symbol.iterator) return !0;
				var obj = {},
					sym = Symbol('test'),
					symObj = Object(sym);
				if ('string' == typeof sym) return !1;
				if ('[object Symbol]' !== Object.prototype.toString.call(sym))
					return !1;
				if (
					'[object Symbol]' !== Object.prototype.toString.call(symObj)
				)
					return !1;
				for (sym in ((obj[sym] = 42), obj)) return !1;
				if (
					'function' == typeof Object.keys &&
					0 !== Object.keys(obj).length
				)
					return !1;
				if (
					'function' == typeof Object.getOwnPropertyNames &&
					0 !== Object.getOwnPropertyNames(obj).length
				)
					return !1;
				var syms = Object.getOwnPropertySymbols(obj);
				if (1 !== syms.length || syms[0] !== sym) return !1;
				if (!Object.prototype.propertyIsEnumerable.call(obj, sym))
					return !1;
				if ('function' == typeof Object.getOwnPropertyDescriptor) {
					var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
					if (42 !== descriptor.value || !0 !== descriptor.enumerable)
						return !1;
				}
				return !0;
			};
		},
		'./node_modules/has/src/index.js': (module) => {
			'use strict';
			var hasOwnProperty = {}.hasOwnProperty,
				call = Function.prototype.call;
			module.exports = call.bind
				? call.bind(hasOwnProperty)
				: function (O, P) {
						return call.call(hasOwnProperty, O, P);
				  };
		},
		'./node_modules/history/index.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				Ep: () => createPath,
				PP: () => createMemoryHistory,
				aU: () => Action,
				cP: () => parsePath,
			});
			var Action,
				_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ =
					__webpack_require__(
						'./node_modules/@babel/runtime/helpers/esm/extends.js',
					);
			!(function (Action) {
				(Action.Pop = 'POP'),
					(Action.Push = 'PUSH'),
					(Action.Replace = 'REPLACE');
			})(Action || (Action = {}));
			var readOnly = function (obj) {
				return obj;
			};
			function createMemoryHistory(options) {
				void 0 === options && (options = {});
				var _options3 = options,
					_options3$initialEntr = _options3.initialEntries,
					initialEntries =
						void 0 === _options3$initialEntr
							? ['/']
							: _options3$initialEntr,
					initialIndex = _options3.initialIndex,
					entries = initialEntries.map(function (entry) {
						return readOnly(
							(0,
							_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.Z)(
								{
									pathname: '/',
									search: '',
									hash: '',
									state: null,
									key: createKey(),
								},
								'string' == typeof entry
									? parsePath(entry)
									: entry,
							),
						);
					}),
					index = clamp(
						null == initialIndex
							? entries.length - 1
							: initialIndex,
						0,
						entries.length - 1,
					),
					action = Action.Pop,
					location = entries[index],
					listeners = createEvents(),
					blockers = createEvents();
				function getNextLocation(to, state) {
					return (
						void 0 === state && (state = null),
						readOnly(
							(0,
							_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.Z)(
								{
									pathname: location.pathname,
									search: '',
									hash: '',
								},
								'string' == typeof to ? parsePath(to) : to,
								{ state, key: createKey() },
							),
						)
					);
				}
				function allowTx(action, location, retry) {
					return (
						!blockers.length ||
						(blockers.call({ action, location, retry }), !1)
					);
				}
				function applyTx(nextAction, nextLocation) {
					(action = nextAction),
						(location = nextLocation),
						listeners.call({ action, location });
				}
				function go(delta) {
					var nextIndex = clamp(index + delta, 0, entries.length - 1),
						nextAction = Action.Pop,
						nextLocation = entries[nextIndex];
					allowTx(nextAction, nextLocation, function retry() {
						go(delta);
					}) &&
						((index = nextIndex),
						applyTx(nextAction, nextLocation));
				}
				var history = {
					get index() {
						return index;
					},
					get action() {
						return action;
					},
					get location() {
						return location;
					},
					createHref: function createHref(to) {
						return 'string' == typeof to ? to : createPath(to);
					},
					push: function push(to, state) {
						var nextAction = Action.Push,
							nextLocation = getNextLocation(to, state);
						allowTx(nextAction, nextLocation, function retry() {
							push(to, state);
						}) &&
							((index += 1),
							entries.splice(index, entries.length, nextLocation),
							applyTx(nextAction, nextLocation));
					},
					replace: function replace(to, state) {
						var nextAction = Action.Replace,
							nextLocation = getNextLocation(to, state);
						allowTx(nextAction, nextLocation, function retry() {
							replace(to, state);
						}) &&
							((entries[index] = nextLocation),
							applyTx(nextAction, nextLocation));
					},
					go,
					back: function back() {
						go(-1);
					},
					forward: function forward() {
						go(1);
					},
					listen: function listen(listener) {
						return listeners.push(listener);
					},
					block: function block(blocker) {
						return blockers.push(blocker);
					},
				};
				return history;
			}
			function clamp(n, lowerBound, upperBound) {
				return Math.min(Math.max(n, lowerBound), upperBound);
			}
			function createEvents() {
				var handlers = [];
				return {
					get length() {
						return handlers.length;
					},
					push: function push(fn) {
						return (
							handlers.push(fn),
							function () {
								handlers = handlers.filter(function (handler) {
									return handler !== fn;
								});
							}
						);
					},
					call: function call(arg) {
						handlers.forEach(function (fn) {
							return fn && fn(arg);
						});
					},
				};
			}
			function createKey() {
				return Math.random().toString(36).substr(2, 8);
			}
			function createPath(_ref) {
				var _ref$pathname = _ref.pathname,
					pathname = void 0 === _ref$pathname ? '/' : _ref$pathname,
					_ref$search = _ref.search,
					search = void 0 === _ref$search ? '' : _ref$search,
					_ref$hash = _ref.hash,
					hash = void 0 === _ref$hash ? '' : _ref$hash;
				return (
					search &&
						'?' !== search &&
						(pathname +=
							'?' === search.charAt(0) ? search : '?' + search),
					hash &&
						'#' !== hash &&
						(pathname +=
							'#' === hash.charAt(0) ? hash : '#' + hash),
					pathname
				);
			}
			function parsePath(path) {
				var parsedPath = {};
				if (path) {
					var hashIndex = path.indexOf('#');
					hashIndex >= 0 &&
						((parsedPath.hash = path.substr(hashIndex)),
						(path = path.substr(0, hashIndex)));
					var searchIndex = path.indexOf('?');
					searchIndex >= 0 &&
						((parsedPath.search = path.substr(searchIndex)),
						(path = path.substr(0, searchIndex))),
						path && (parsedPath.pathname = path);
				}
				return parsedPath;
			}
		},
		'./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var reactIs = __webpack_require__(
						'./node_modules/hoist-non-react-statics/node_modules/react-is/index.js',
					),
					REACT_STATICS = {
						childContextTypes: !0,
						contextType: !0,
						contextTypes: !0,
						defaultProps: !0,
						displayName: !0,
						getDefaultProps: !0,
						getDerivedStateFromError: !0,
						getDerivedStateFromProps: !0,
						mixins: !0,
						propTypes: !0,
						type: !0,
					},
					KNOWN_STATICS = {
						name: !0,
						length: !0,
						prototype: !0,
						caller: !0,
						callee: !0,
						arguments: !0,
						arity: !0,
					},
					MEMO_STATICS = {
						$$typeof: !0,
						compare: !0,
						defaultProps: !0,
						displayName: !0,
						propTypes: !0,
						type: !0,
					},
					TYPE_STATICS = {};
				function getStatics(component) {
					return reactIs.isMemo(component)
						? MEMO_STATICS
						: TYPE_STATICS[component.$$typeof] || REACT_STATICS;
				}
				(TYPE_STATICS[reactIs.ForwardRef] = {
					$$typeof: !0,
					render: !0,
					defaultProps: !0,
					displayName: !0,
					propTypes: !0,
				}),
					(TYPE_STATICS[reactIs.Memo] = MEMO_STATICS);
				var defineProperty = Object.defineProperty,
					getOwnPropertyNames = Object.getOwnPropertyNames,
					getOwnPropertySymbols = Object.getOwnPropertySymbols,
					getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
					getPrototypeOf = Object.getPrototypeOf,
					objectPrototype = Object.prototype;
				module.exports = function hoistNonReactStatics(
					targetComponent,
					sourceComponent,
					blacklist,
				) {
					if ('string' != typeof sourceComponent) {
						if (objectPrototype) {
							var inheritedComponent =
								getPrototypeOf(sourceComponent);
							inheritedComponent &&
								inheritedComponent !== objectPrototype &&
								hoistNonReactStatics(
									targetComponent,
									inheritedComponent,
									blacklist,
								);
						}
						var keys = getOwnPropertyNames(sourceComponent);
						getOwnPropertySymbols &&
							(keys = keys.concat(
								getOwnPropertySymbols(sourceComponent),
							));
						for (
							var targetStatics = getStatics(targetComponent),
								sourceStatics = getStatics(sourceComponent),
								i = 0;
							i < keys.length;
							++i
						) {
							var key = keys[i];
							if (
								!(
									KNOWN_STATICS[key] ||
									(blacklist && blacklist[key]) ||
									(sourceStatics && sourceStatics[key]) ||
									(targetStatics && targetStatics[key])
								)
							) {
								var descriptor = getOwnPropertyDescriptor(
									sourceComponent,
									key,
								);
								try {
									defineProperty(
										targetComponent,
										key,
										descriptor,
									);
								} catch (e) {}
							}
						}
					}
					return targetComponent;
				};
			},
		'./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js':
			(__unused_webpack_module, exports) => {
				'use strict';
				var b = 'function' == typeof Symbol && Symbol.for,
					c = b ? Symbol.for('react.element') : 60103,
					d = b ? Symbol.for('react.portal') : 60106,
					e = b ? Symbol.for('react.fragment') : 60107,
					f = b ? Symbol.for('react.strict_mode') : 60108,
					g = b ? Symbol.for('react.profiler') : 60114,
					h = b ? Symbol.for('react.provider') : 60109,
					k = b ? Symbol.for('react.context') : 60110,
					l = b ? Symbol.for('react.async_mode') : 60111,
					m = b ? Symbol.for('react.concurrent_mode') : 60111,
					n = b ? Symbol.for('react.forward_ref') : 60112,
					p = b ? Symbol.for('react.suspense') : 60113,
					q = b ? Symbol.for('react.suspense_list') : 60120,
					r = b ? Symbol.for('react.memo') : 60115,
					t = b ? Symbol.for('react.lazy') : 60116,
					v = b ? Symbol.for('react.block') : 60121,
					w = b ? Symbol.for('react.fundamental') : 60117,
					x = b ? Symbol.for('react.responder') : 60118,
					y = b ? Symbol.for('react.scope') : 60119;
				function z(a) {
					if ('object' == typeof a && null !== a) {
						var u = a.$$typeof;
						switch (u) {
							case c:
								switch ((a = a.type)) {
									case l:
									case m:
									case e:
									case g:
									case f:
									case p:
										return a;
									default:
										switch ((a = a && a.$$typeof)) {
											case k:
											case n:
											case t:
											case r:
											case h:
												return a;
											default:
												return u;
										}
								}
							case d:
								return u;
						}
					}
				}
				function A(a) {
					return z(a) === m;
				}
				(exports.AsyncMode = l),
					(exports.ConcurrentMode = m),
					(exports.ContextConsumer = k),
					(exports.ContextProvider = h),
					(exports.Element = c),
					(exports.ForwardRef = n),
					(exports.Fragment = e),
					(exports.Lazy = t),
					(exports.Memo = r),
					(exports.Portal = d),
					(exports.Profiler = g),
					(exports.StrictMode = f),
					(exports.Suspense = p),
					(exports.isAsyncMode = function (a) {
						return A(a) || z(a) === l;
					}),
					(exports.isConcurrentMode = A),
					(exports.isContextConsumer = function (a) {
						return z(a) === k;
					}),
					(exports.isContextProvider = function (a) {
						return z(a) === h;
					}),
					(exports.isElement = function (a) {
						return (
							'object' == typeof a &&
							null !== a &&
							a.$$typeof === c
						);
					}),
					(exports.isForwardRef = function (a) {
						return z(a) === n;
					}),
					(exports.isFragment = function (a) {
						return z(a) === e;
					}),
					(exports.isLazy = function (a) {
						return z(a) === t;
					}),
					(exports.isMemo = function (a) {
						return z(a) === r;
					}),
					(exports.isPortal = function (a) {
						return z(a) === d;
					}),
					(exports.isProfiler = function (a) {
						return z(a) === g;
					}),
					(exports.isStrictMode = function (a) {
						return z(a) === f;
					}),
					(exports.isSuspense = function (a) {
						return z(a) === p;
					}),
					(exports.isValidElementType = function (a) {
						return (
							'string' == typeof a ||
							'function' == typeof a ||
							a === e ||
							a === m ||
							a === g ||
							a === f ||
							a === p ||
							a === q ||
							('object' == typeof a &&
								null !== a &&
								(a.$$typeof === t ||
									a.$$typeof === r ||
									a.$$typeof === h ||
									a.$$typeof === k ||
									a.$$typeof === n ||
									a.$$typeof === w ||
									a.$$typeof === x ||
									a.$$typeof === y ||
									a.$$typeof === v))
						);
					}),
					(exports.typeOf = z);
			},
		'./node_modules/hoist-non-react-statics/node_modules/react-is/index.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				module.exports = __webpack_require__(
					'./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js',
				);
			},
		'./node_modules/html-tags/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			module.exports = __webpack_require__(
				'./node_modules/html-tags/html-tags.json',
			);
		},
		'./node_modules/inherits/inherits_browser.js': (module) => {
			'function' == typeof Object.create
				? (module.exports = function inherits(ctor, superCtor) {
						superCtor &&
							((ctor.super_ = superCtor),
							(ctor.prototype = Object.create(
								superCtor.prototype,
								{
									constructor: {
										value: ctor,
										enumerable: !1,
										writable: !0,
										configurable: !0,
									},
								},
							)));
				  })
				: (module.exports = function inherits(ctor, superCtor) {
						if (superCtor) {
							ctor.super_ = superCtor;
							var TempCtor = function () {};
							(TempCtor.prototype = superCtor.prototype),
								(ctor.prototype = new TempCtor()),
								(ctor.prototype.constructor = ctor);
						}
				  });
		},
		'./node_modules/is-arguments/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var hasToStringTag = __webpack_require__(
					'./node_modules/is-arguments/node_modules/has-tostringtag/shams.js',
				)(),
				$toString = __webpack_require__(
					'./node_modules/is-arguments/node_modules/call-bind/callBound.js',
				)('Object.prototype.toString'),
				isStandardArguments = function isArguments(value) {
					return (
						!(
							hasToStringTag &&
							value &&
							'object' == typeof value &&
							Symbol.toStringTag in value
						) && '[object Arguments]' === $toString(value)
					);
				},
				isLegacyArguments = function isArguments(value) {
					return (
						!!isStandardArguments(value) ||
						(null !== value &&
							'object' == typeof value &&
							'number' == typeof value.length &&
							value.length >= 0 &&
							'[object Array]' !== $toString(value) &&
							'[object Function]' === $toString(value.callee))
					);
				},
				supportsStandardArguments = (function () {
					return isStandardArguments(arguments);
				})();
			(isStandardArguments.isLegacyArguments = isLegacyArguments),
				(module.exports = supportsStandardArguments
					? isStandardArguments
					: isLegacyArguments);
		},
		'./node_modules/is-arguments/node_modules/call-bind/callBound.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/is-arguments/node_modules/call-bind/index.js',
				),
				$indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
			module.exports = function callBoundIntrinsic(name, allowMissing) {
				var intrinsic = GetIntrinsic(name, !!allowMissing);
				return 'function' == typeof intrinsic &&
					$indexOf(name, '.prototype.') > -1
					? callBind(intrinsic)
					: intrinsic;
			};
		},
		'./node_modules/is-arguments/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/is-arguments/node_modules/has-tostringtag/shams.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var hasSymbols = __webpack_require__(
				'./node_modules/has-symbols/shams.js',
			);
			module.exports = function hasToStringTagShams() {
				return hasSymbols() && !!Symbol.toStringTag;
			};
		},
		'./node_modules/is-callable/index.js': (module) => {
			'use strict';
			var badArrayLike,
				isCallableMarker,
				fnToStr = Function.prototype.toString,
				reflectApply =
					'object' == typeof Reflect &&
					null !== Reflect &&
					Reflect.apply;
			if (
				'function' == typeof reflectApply &&
				'function' == typeof Object.defineProperty
			)
				try {
					(badArrayLike = Object.defineProperty({}, 'length', {
						get: function () {
							throw isCallableMarker;
						},
					})),
						(isCallableMarker = {}),
						reflectApply(
							function () {
								throw 42;
							},
							null,
							badArrayLike,
						);
				} catch (_) {
					_ !== isCallableMarker && (reflectApply = null);
				}
			else reflectApply = null;
			var constructorRegex = /^\s*class\b/,
				isES6ClassFn = function isES6ClassFunction(value) {
					try {
						var fnStr = fnToStr.call(value);
						return constructorRegex.test(fnStr);
					} catch (e) {
						return !1;
					}
				},
				tryFunctionObject = function tryFunctionToStr(value) {
					try {
						return (
							!isES6ClassFn(value) && (fnToStr.call(value), !0)
						);
					} catch (e) {
						return !1;
					}
				},
				toStr = Object.prototype.toString,
				hasToStringTag =
					'function' == typeof Symbol && !!Symbol.toStringTag,
				isIE68 = !(0 in [,]),
				isDDA = function isDocumentDotAll() {
					return !1;
				};
			if ('object' == typeof document) {
				var all = document.all;
				toStr.call(all) === toStr.call(document.all) &&
					(isDDA = function isDocumentDotAll(value) {
						if (
							(isIE68 || !value) &&
							(void 0 === value || 'object' == typeof value)
						)
							try {
								var str = toStr.call(value);
								return (
									('[object HTMLAllCollection]' === str ||
										'[object HTML document.all class]' ===
											str ||
										'[object HTMLCollection]' === str ||
										'[object Object]' === str) &&
									null == value('')
								);
							} catch (e) {}
						return !1;
					});
			}
			module.exports = reflectApply
				? function isCallable(value) {
						if (isDDA(value)) return !0;
						if (!value) return !1;
						if (
							'function' != typeof value &&
							'object' != typeof value
						)
							return !1;
						try {
							reflectApply(value, null, badArrayLike);
						} catch (e) {
							if (e !== isCallableMarker) return !1;
						}
						return !isES6ClassFn(value) && tryFunctionObject(value);
				  }
				: function isCallable(value) {
						if (isDDA(value)) return !0;
						if (!value) return !1;
						if (
							'function' != typeof value &&
							'object' != typeof value
						)
							return !1;
						if (hasToStringTag) return tryFunctionObject(value);
						if (isES6ClassFn(value)) return !1;
						var strClass = toStr.call(value);
						return (
							!(
								'[object Function]' !== strClass &&
								'[object GeneratorFunction]' !== strClass &&
								!/^\[object HTML/.test(strClass)
							) && tryFunctionObject(value)
						);
				  };
		},
		'./node_modules/is-generator-function/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GeneratorFunction,
				toStr = Object.prototype.toString,
				fnToStr = Function.prototype.toString,
				isFnRegex = /^\s*(?:function)?\*/,
				hasToStringTag = __webpack_require__(
					'./node_modules/is-generator-function/node_modules/has-tostringtag/shams.js',
				)(),
				getProto = Object.getPrototypeOf;
			module.exports = function isGeneratorFunction(fn) {
				if ('function' != typeof fn) return !1;
				if (isFnRegex.test(fnToStr.call(fn))) return !0;
				if (!hasToStringTag)
					return '[object GeneratorFunction]' === toStr.call(fn);
				if (!getProto) return !1;
				if (void 0 === GeneratorFunction) {
					var generatorFunc = (function () {
						if (!hasToStringTag) return !1;
						try {
							return Function('return function*() {}')();
						} catch (e) {}
					})();
					GeneratorFunction =
						!!generatorFunc && getProto(generatorFunc);
				}
				return getProto(fn) === GeneratorFunction;
			};
		},
		'./node_modules/is-generator-function/node_modules/has-tostringtag/shams.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var hasSymbols = __webpack_require__(
					'./node_modules/has-symbols/shams.js',
				);
				module.exports = function hasToStringTagShams() {
					return hasSymbols() && !!Symbol.toStringTag;
				};
			},
		'./node_modules/is-nan/implementation.js': (module) => {
			'use strict';
			module.exports = function isNaN(value) {
				return value != value;
			};
		},
		'./node_modules/is-nan/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var callBind = __webpack_require__(
					'./node_modules/is-nan/node_modules/call-bind/index.js',
				),
				define = __webpack_require__(
					'./node_modules/define-properties/index.js',
				),
				implementation = __webpack_require__(
					'./node_modules/is-nan/implementation.js',
				),
				getPolyfill = __webpack_require__(
					'./node_modules/is-nan/polyfill.js',
				),
				shim = __webpack_require__('./node_modules/is-nan/shim.js'),
				polyfill = callBind(getPolyfill(), Number);
			define(polyfill, { getPolyfill, implementation, shim }),
				(module.exports = polyfill);
		},
		'./node_modules/is-nan/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/is-nan/polyfill.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var implementation = __webpack_require__(
				'./node_modules/is-nan/implementation.js',
			);
			module.exports = function getPolyfill() {
				return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')
					? Number.isNaN
					: implementation;
			};
		},
		'./node_modules/is-nan/shim.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var define = __webpack_require__(
					'./node_modules/define-properties/index.js',
				),
				getPolyfill = __webpack_require__(
					'./node_modules/is-nan/polyfill.js',
				);
			module.exports = function shimNumberIsNaN() {
				var polyfill = getPolyfill();
				return (
					define(
						Number,
						{ isNaN: polyfill },
						{
							isNaN: function testIsNaN() {
								return Number.isNaN !== polyfill;
							},
						},
					),
					polyfill
				);
			};
		},
		'./node_modules/is-node-process/lib/index.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				l: () => isNodeProcess,
			});
			var process = __webpack_require__(
				'./node_modules/process/browser.js',
			);
			function isNodeProcess() {
				if (
					'undefined' != typeof navigator &&
					'ReactNative' === navigator.product
				)
					return !0;
				if (void 0 !== process) {
					const type = process.type;
					return (
						'renderer' !== type &&
						'worker' !== type &&
						!(!process.versions || !process.versions.node)
					);
				}
				return !1;
			}
		},
		'./node_modules/lodash/_DataView.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var DataView = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(
				__webpack_require__('./node_modules/lodash/_root.js'),
				'DataView',
			);
			module.exports = DataView;
		},
		'./node_modules/lodash/_Hash.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var hashClear = __webpack_require__(
					'./node_modules/lodash/_hashClear.js',
				),
				hashDelete = __webpack_require__(
					'./node_modules/lodash/_hashDelete.js',
				),
				hashGet = __webpack_require__(
					'./node_modules/lodash/_hashGet.js',
				),
				hashHas = __webpack_require__(
					'./node_modules/lodash/_hashHas.js',
				),
				hashSet = __webpack_require__(
					'./node_modules/lodash/_hashSet.js',
				);
			function Hash(entries) {
				var index = -1,
					length = null == entries ? 0 : entries.length;
				for (this.clear(); ++index < length; ) {
					var entry = entries[index];
					this.set(entry[0], entry[1]);
				}
			}
			(Hash.prototype.clear = hashClear),
				(Hash.prototype.delete = hashDelete),
				(Hash.prototype.get = hashGet),
				(Hash.prototype.has = hashHas),
				(Hash.prototype.set = hashSet),
				(module.exports = Hash);
		},
		'./node_modules/lodash/_ListCache.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var listCacheClear = __webpack_require__(
					'./node_modules/lodash/_listCacheClear.js',
				),
				listCacheDelete = __webpack_require__(
					'./node_modules/lodash/_listCacheDelete.js',
				),
				listCacheGet = __webpack_require__(
					'./node_modules/lodash/_listCacheGet.js',
				),
				listCacheHas = __webpack_require__(
					'./node_modules/lodash/_listCacheHas.js',
				),
				listCacheSet = __webpack_require__(
					'./node_modules/lodash/_listCacheSet.js',
				);
			function ListCache(entries) {
				var index = -1,
					length = null == entries ? 0 : entries.length;
				for (this.clear(); ++index < length; ) {
					var entry = entries[index];
					this.set(entry[0], entry[1]);
				}
			}
			(ListCache.prototype.clear = listCacheClear),
				(ListCache.prototype.delete = listCacheDelete),
				(ListCache.prototype.get = listCacheGet),
				(ListCache.prototype.has = listCacheHas),
				(ListCache.prototype.set = listCacheSet),
				(module.exports = ListCache);
		},
		'./node_modules/lodash/_Map.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Map = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(__webpack_require__('./node_modules/lodash/_root.js'), 'Map');
			module.exports = Map;
		},
		'./node_modules/lodash/_MapCache.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var mapCacheClear = __webpack_require__(
					'./node_modules/lodash/_mapCacheClear.js',
				),
				mapCacheDelete = __webpack_require__(
					'./node_modules/lodash/_mapCacheDelete.js',
				),
				mapCacheGet = __webpack_require__(
					'./node_modules/lodash/_mapCacheGet.js',
				),
				mapCacheHas = __webpack_require__(
					'./node_modules/lodash/_mapCacheHas.js',
				),
				mapCacheSet = __webpack_require__(
					'./node_modules/lodash/_mapCacheSet.js',
				);
			function MapCache(entries) {
				var index = -1,
					length = null == entries ? 0 : entries.length;
				for (this.clear(); ++index < length; ) {
					var entry = entries[index];
					this.set(entry[0], entry[1]);
				}
			}
			(MapCache.prototype.clear = mapCacheClear),
				(MapCache.prototype.delete = mapCacheDelete),
				(MapCache.prototype.get = mapCacheGet),
				(MapCache.prototype.has = mapCacheHas),
				(MapCache.prototype.set = mapCacheSet),
				(module.exports = MapCache);
		},
		'./node_modules/lodash/_Promise.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Promise = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(__webpack_require__('./node_modules/lodash/_root.js'), 'Promise');
			module.exports = Promise;
		},
		'./node_modules/lodash/_Set.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Set = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(__webpack_require__('./node_modules/lodash/_root.js'), 'Set');
			module.exports = Set;
		},
		'./node_modules/lodash/_SetCache.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var MapCache = __webpack_require__(
					'./node_modules/lodash/_MapCache.js',
				),
				setCacheAdd = __webpack_require__(
					'./node_modules/lodash/_setCacheAdd.js',
				),
				setCacheHas = __webpack_require__(
					'./node_modules/lodash/_setCacheHas.js',
				);
			function SetCache(values) {
				var index = -1,
					length = null == values ? 0 : values.length;
				for (this.__data__ = new MapCache(); ++index < length; )
					this.add(values[index]);
			}
			(SetCache.prototype.add = SetCache.prototype.push = setCacheAdd),
				(SetCache.prototype.has = setCacheHas),
				(module.exports = SetCache);
		},
		'./node_modules/lodash/_Stack.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var ListCache = __webpack_require__(
					'./node_modules/lodash/_ListCache.js',
				),
				stackClear = __webpack_require__(
					'./node_modules/lodash/_stackClear.js',
				),
				stackDelete = __webpack_require__(
					'./node_modules/lodash/_stackDelete.js',
				),
				stackGet = __webpack_require__(
					'./node_modules/lodash/_stackGet.js',
				),
				stackHas = __webpack_require__(
					'./node_modules/lodash/_stackHas.js',
				),
				stackSet = __webpack_require__(
					'./node_modules/lodash/_stackSet.js',
				);
			function Stack(entries) {
				var data = (this.__data__ = new ListCache(entries));
				this.size = data.size;
			}
			(Stack.prototype.clear = stackClear),
				(Stack.prototype.delete = stackDelete),
				(Stack.prototype.get = stackGet),
				(Stack.prototype.has = stackHas),
				(Stack.prototype.set = stackSet),
				(module.exports = Stack);
		},
		'./node_modules/lodash/_Symbol.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Symbol = __webpack_require__(
				'./node_modules/lodash/_root.js',
			).Symbol;
			module.exports = Symbol;
		},
		'./node_modules/lodash/_Uint8Array.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Uint8Array = __webpack_require__(
				'./node_modules/lodash/_root.js',
			).Uint8Array;
			module.exports = Uint8Array;
		},
		'./node_modules/lodash/_WeakMap.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var WeakMap = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(__webpack_require__('./node_modules/lodash/_root.js'), 'WeakMap');
			module.exports = WeakMap;
		},
		'./node_modules/lodash/_arrayFilter.js': (module) => {
			module.exports = function arrayFilter(array, predicate) {
				for (
					var index = -1,
						length = null == array ? 0 : array.length,
						resIndex = 0,
						result = [];
					++index < length;

				) {
					var value = array[index];
					predicate(value, index, array) &&
						(result[resIndex++] = value);
				}
				return result;
			};
		},
		'./node_modules/lodash/_arrayLikeKeys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseTimes = __webpack_require__(
					'./node_modules/lodash/_baseTimes.js',
				),
				isArguments = __webpack_require__(
					'./node_modules/lodash/isArguments.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isBuffer = __webpack_require__(
					'./node_modules/lodash/isBuffer.js',
				),
				isIndex = __webpack_require__(
					'./node_modules/lodash/_isIndex.js',
				),
				isTypedArray = __webpack_require__(
					'./node_modules/lodash/isTypedArray.js',
				),
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function arrayLikeKeys(value, inherited) {
				var isArr = isArray(value),
					isArg = !isArr && isArguments(value),
					isBuff = !isArr && !isArg && isBuffer(value),
					isType = !isArr && !isArg && !isBuff && isTypedArray(value),
					skipIndexes = isArr || isArg || isBuff || isType,
					result = skipIndexes ? baseTimes(value.length, String) : [],
					length = result.length;
				for (var key in value)
					(!inherited && !hasOwnProperty.call(value, key)) ||
						(skipIndexes &&
							('length' == key ||
								(isBuff &&
									('offset' == key || 'parent' == key)) ||
								(isType &&
									('buffer' == key ||
										'byteLength' == key ||
										'byteOffset' == key)) ||
								isIndex(key, length))) ||
						result.push(key);
				return result;
			};
		},
		'./node_modules/lodash/_arrayMap.js': (module) => {
			module.exports = function arrayMap(array, iteratee) {
				for (
					var index = -1,
						length = null == array ? 0 : array.length,
						result = Array(length);
					++index < length;

				)
					result[index] = iteratee(array[index], index, array);
				return result;
			};
		},
		'./node_modules/lodash/_arrayPush.js': (module) => {
			module.exports = function arrayPush(array, values) {
				for (
					var index = -1,
						length = values.length,
						offset = array.length;
					++index < length;

				)
					array[offset + index] = values[index];
				return array;
			};
		},
		'./node_modules/lodash/_arraySome.js': (module) => {
			module.exports = function arraySome(array, predicate) {
				for (
					var index = -1, length = null == array ? 0 : array.length;
					++index < length;

				)
					if (predicate(array[index], index, array)) return !0;
				return !1;
			};
		},
		'./node_modules/lodash/_assocIndexOf.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var eq = __webpack_require__('./node_modules/lodash/eq.js');
			module.exports = function assocIndexOf(array, key) {
				for (var length = array.length; length--; )
					if (eq(array[length][0], key)) return length;
				return -1;
			};
		},
		'./node_modules/lodash/_baseAssignValue.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var defineProperty = __webpack_require__(
				'./node_modules/lodash/_defineProperty.js',
			);
			module.exports = function baseAssignValue(object, key, value) {
				'__proto__' == key && defineProperty
					? defineProperty(object, key, {
							configurable: !0,
							enumerable: !0,
							value,
							writable: !0,
					  })
					: (object[key] = value);
			};
		},
		'./node_modules/lodash/_baseFor.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseFor = __webpack_require__(
				'./node_modules/lodash/_createBaseFor.js',
			)();
			module.exports = baseFor;
		},
		'./node_modules/lodash/_baseForOwn.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseFor = __webpack_require__(
					'./node_modules/lodash/_baseFor.js',
				),
				keys = __webpack_require__('./node_modules/lodash/keys.js');
			module.exports = function baseForOwn(object, iteratee) {
				return object && baseFor(object, iteratee, keys);
			};
		},
		'./node_modules/lodash/_baseGet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var castPath = __webpack_require__(
					'./node_modules/lodash/_castPath.js',
				),
				toKey = __webpack_require__('./node_modules/lodash/_toKey.js');
			module.exports = function baseGet(object, path) {
				for (
					var index = 0,
						length = (path = castPath(path, object)).length;
					null != object && index < length;

				)
					object = object[toKey(path[index++])];
				return index && index == length ? object : void 0;
			};
		},
		'./node_modules/lodash/_baseGetAllKeys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var arrayPush = __webpack_require__(
					'./node_modules/lodash/_arrayPush.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				);
			module.exports = function baseGetAllKeys(
				object,
				keysFunc,
				symbolsFunc,
			) {
				var result = keysFunc(object);
				return isArray(object)
					? result
					: arrayPush(result, symbolsFunc(object));
			};
		},
		'./node_modules/lodash/_baseGetTag.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Symbol = __webpack_require__(
					'./node_modules/lodash/_Symbol.js',
				),
				getRawTag = __webpack_require__(
					'./node_modules/lodash/_getRawTag.js',
				),
				objectToString = __webpack_require__(
					'./node_modules/lodash/_objectToString.js',
				),
				symToStringTag = Symbol ? Symbol.toStringTag : void 0;
			module.exports = function baseGetTag(value) {
				return null == value
					? void 0 === value
						? '[object Undefined]'
						: '[object Null]'
					: symToStringTag && symToStringTag in Object(value)
					? getRawTag(value)
					: objectToString(value);
			};
		},
		'./node_modules/lodash/_baseHasIn.js': (module) => {
			module.exports = function baseHasIn(object, key) {
				return null != object && key in Object(object);
			};
		},
		'./node_modules/lodash/_baseIsArguments.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				);
			module.exports = function baseIsArguments(value) {
				return (
					isObjectLike(value) &&
					'[object Arguments]' == baseGetTag(value)
				);
			};
		},
		'./node_modules/lodash/_baseIsEqual.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsEqualDeep = __webpack_require__(
					'./node_modules/lodash/_baseIsEqualDeep.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				);
			module.exports = function baseIsEqual(
				value,
				other,
				bitmask,
				customizer,
				stack,
			) {
				return (
					value === other ||
					(null == value ||
					null == other ||
					(!isObjectLike(value) && !isObjectLike(other))
						? value != value && other != other
						: baseIsEqualDeep(
								value,
								other,
								bitmask,
								customizer,
								baseIsEqual,
								stack,
						  ))
				);
			};
		},
		'./node_modules/lodash/_baseIsEqualDeep.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Stack = __webpack_require__('./node_modules/lodash/_Stack.js'),
				equalArrays = __webpack_require__(
					'./node_modules/lodash/_equalArrays.js',
				),
				equalByTag = __webpack_require__(
					'./node_modules/lodash/_equalByTag.js',
				),
				equalObjects = __webpack_require__(
					'./node_modules/lodash/_equalObjects.js',
				),
				getTag = __webpack_require__(
					'./node_modules/lodash/_getTag.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isBuffer = __webpack_require__(
					'./node_modules/lodash/isBuffer.js',
				),
				isTypedArray = __webpack_require__(
					'./node_modules/lodash/isTypedArray.js',
				),
				objectTag = '[object Object]',
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function baseIsEqualDeep(
				object,
				other,
				bitmask,
				customizer,
				equalFunc,
				stack,
			) {
				var objIsArr = isArray(object),
					othIsArr = isArray(other),
					objTag = objIsArr ? '[object Array]' : getTag(object),
					othTag = othIsArr ? '[object Array]' : getTag(other),
					objIsObj =
						(objTag =
							'[object Arguments]' == objTag
								? objectTag
								: objTag) == objectTag,
					othIsObj =
						(othTag =
							'[object Arguments]' == othTag
								? objectTag
								: othTag) == objectTag,
					isSameTag = objTag == othTag;
				if (isSameTag && isBuffer(object)) {
					if (!isBuffer(other)) return !1;
					(objIsArr = !0), (objIsObj = !1);
				}
				if (isSameTag && !objIsObj)
					return (
						stack || (stack = new Stack()),
						objIsArr || isTypedArray(object)
							? equalArrays(
									object,
									other,
									bitmask,
									customizer,
									equalFunc,
									stack,
							  )
							: equalByTag(
									object,
									other,
									objTag,
									bitmask,
									customizer,
									equalFunc,
									stack,
							  )
					);
				if (!(1 & bitmask)) {
					var objIsWrapped =
							objIsObj &&
							hasOwnProperty.call(object, '__wrapped__'),
						othIsWrapped =
							othIsObj &&
							hasOwnProperty.call(other, '__wrapped__');
					if (objIsWrapped || othIsWrapped) {
						var objUnwrapped = objIsWrapped
								? object.value()
								: object,
							othUnwrapped = othIsWrapped ? other.value() : other;
						return (
							stack || (stack = new Stack()),
							equalFunc(
								objUnwrapped,
								othUnwrapped,
								bitmask,
								customizer,
								stack,
							)
						);
					}
				}
				return (
					!!isSameTag &&
					(stack || (stack = new Stack()),
					equalObjects(
						object,
						other,
						bitmask,
						customizer,
						equalFunc,
						stack,
					))
				);
			};
		},
		'./node_modules/lodash/_baseIsMatch.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Stack = __webpack_require__('./node_modules/lodash/_Stack.js'),
				baseIsEqual = __webpack_require__(
					'./node_modules/lodash/_baseIsEqual.js',
				);
			module.exports = function baseIsMatch(
				object,
				source,
				matchData,
				customizer,
			) {
				var index = matchData.length,
					length = index,
					noCustomizer = !customizer;
				if (null == object) return !length;
				for (object = Object(object); index--; ) {
					var data = matchData[index];
					if (
						noCustomizer && data[2]
							? data[1] !== object[data[0]]
							: !(data[0] in object)
					)
						return !1;
				}
				for (; ++index < length; ) {
					var key = (data = matchData[index])[0],
						objValue = object[key],
						srcValue = data[1];
					if (noCustomizer && data[2]) {
						if (void 0 === objValue && !(key in object)) return !1;
					} else {
						var stack = new Stack();
						if (customizer)
							var result = customizer(
								objValue,
								srcValue,
								key,
								object,
								source,
								stack,
							);
						if (
							!(void 0 === result
								? baseIsEqual(
										srcValue,
										objValue,
										3,
										customizer,
										stack,
								  )
								: result)
						)
							return !1;
					}
				}
				return !0;
			};
		},
		'./node_modules/lodash/_baseIsNative.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isFunction = __webpack_require__(
					'./node_modules/lodash/isFunction.js',
				),
				isMasked = __webpack_require__(
					'./node_modules/lodash/_isMasked.js',
				),
				isObject = __webpack_require__(
					'./node_modules/lodash/isObject.js',
				),
				toSource = __webpack_require__(
					'./node_modules/lodash/_toSource.js',
				),
				reIsHostCtor = /^\[object .+?Constructor\]$/,
				funcProto = Function.prototype,
				objectProto = Object.prototype,
				funcToString = funcProto.toString,
				hasOwnProperty = objectProto.hasOwnProperty,
				reIsNative = RegExp(
					'^' +
						funcToString
							.call(hasOwnProperty)
							.replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
							.replace(
								/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
								'$1.*?',
							) +
						'$',
				);
			module.exports = function baseIsNative(value) {
				return (
					!(!isObject(value) || isMasked(value)) &&
					(isFunction(value) ? reIsNative : reIsHostCtor).test(
						toSource(value),
					)
				);
			};
		},
		'./node_modules/lodash/_baseIsTypedArray.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				isLength = __webpack_require__(
					'./node_modules/lodash/isLength.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				),
				typedArrayTags = {};
			(typedArrayTags['[object Float32Array]'] =
				typedArrayTags['[object Float64Array]'] =
				typedArrayTags['[object Int8Array]'] =
				typedArrayTags['[object Int16Array]'] =
				typedArrayTags['[object Int32Array]'] =
				typedArrayTags['[object Uint8Array]'] =
				typedArrayTags['[object Uint8ClampedArray]'] =
				typedArrayTags['[object Uint16Array]'] =
				typedArrayTags['[object Uint32Array]'] =
					!0),
				(typedArrayTags['[object Arguments]'] =
					typedArrayTags['[object Array]'] =
					typedArrayTags['[object ArrayBuffer]'] =
					typedArrayTags['[object Boolean]'] =
					typedArrayTags['[object DataView]'] =
					typedArrayTags['[object Date]'] =
					typedArrayTags['[object Error]'] =
					typedArrayTags['[object Function]'] =
					typedArrayTags['[object Map]'] =
					typedArrayTags['[object Number]'] =
					typedArrayTags['[object Object]'] =
					typedArrayTags['[object RegExp]'] =
					typedArrayTags['[object Set]'] =
					typedArrayTags['[object String]'] =
					typedArrayTags['[object WeakMap]'] =
						!1),
				(module.exports = function baseIsTypedArray(value) {
					return (
						isObjectLike(value) &&
						isLength(value.length) &&
						!!typedArrayTags[baseGetTag(value)]
					);
				});
		},
		'./node_modules/lodash/_baseIteratee.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseMatches = __webpack_require__(
					'./node_modules/lodash/_baseMatches.js',
				),
				baseMatchesProperty = __webpack_require__(
					'./node_modules/lodash/_baseMatchesProperty.js',
				),
				identity = __webpack_require__(
					'./node_modules/lodash/identity.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				property = __webpack_require__(
					'./node_modules/lodash/property.js',
				);
			module.exports = function baseIteratee(value) {
				return 'function' == typeof value
					? value
					: null == value
					? identity
					: 'object' == typeof value
					? isArray(value)
						? baseMatchesProperty(value[0], value[1])
						: baseMatches(value)
					: property(value);
			};
		},
		'./node_modules/lodash/_baseKeys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isPrototype = __webpack_require__(
					'./node_modules/lodash/_isPrototype.js',
				),
				nativeKeys = __webpack_require__(
					'./node_modules/lodash/_nativeKeys.js',
				),
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function baseKeys(object) {
				if (!isPrototype(object)) return nativeKeys(object);
				var result = [];
				for (var key in Object(object))
					hasOwnProperty.call(object, key) &&
						'constructor' != key &&
						result.push(key);
				return result;
			};
		},
		'./node_modules/lodash/_baseMatches.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsMatch = __webpack_require__(
					'./node_modules/lodash/_baseIsMatch.js',
				),
				getMatchData = __webpack_require__(
					'./node_modules/lodash/_getMatchData.js',
				),
				matchesStrictComparable = __webpack_require__(
					'./node_modules/lodash/_matchesStrictComparable.js',
				);
			module.exports = function baseMatches(source) {
				var matchData = getMatchData(source);
				return 1 == matchData.length && matchData[0][2]
					? matchesStrictComparable(matchData[0][0], matchData[0][1])
					: function (object) {
							return (
								object === source ||
								baseIsMatch(object, source, matchData)
							);
					  };
			};
		},
		'./node_modules/lodash/_baseMatchesProperty.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsEqual = __webpack_require__(
					'./node_modules/lodash/_baseIsEqual.js',
				),
				get = __webpack_require__('./node_modules/lodash/get.js'),
				hasIn = __webpack_require__('./node_modules/lodash/hasIn.js'),
				isKey = __webpack_require__('./node_modules/lodash/_isKey.js'),
				isStrictComparable = __webpack_require__(
					'./node_modules/lodash/_isStrictComparable.js',
				),
				matchesStrictComparable = __webpack_require__(
					'./node_modules/lodash/_matchesStrictComparable.js',
				),
				toKey = __webpack_require__('./node_modules/lodash/_toKey.js');
			module.exports = function baseMatchesProperty(path, srcValue) {
				return isKey(path) && isStrictComparable(srcValue)
					? matchesStrictComparable(toKey(path), srcValue)
					: function (object) {
							var objValue = get(object, path);
							return void 0 === objValue && objValue === srcValue
								? hasIn(object, path)
								: baseIsEqual(srcValue, objValue, 3);
					  };
			};
		},
		'./node_modules/lodash/_baseProperty.js': (module) => {
			module.exports = function baseProperty(key) {
				return function (object) {
					return null == object ? void 0 : object[key];
				};
			};
		},
		'./node_modules/lodash/_basePropertyDeep.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGet = __webpack_require__(
				'./node_modules/lodash/_baseGet.js',
			);
			module.exports = function basePropertyDeep(path) {
				return function (object) {
					return baseGet(object, path);
				};
			};
		},
		'./node_modules/lodash/_baseTimes.js': (module) => {
			module.exports = function baseTimes(n, iteratee) {
				for (var index = -1, result = Array(n); ++index < n; )
					result[index] = iteratee(index);
				return result;
			};
		},
		'./node_modules/lodash/_baseToString.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Symbol = __webpack_require__(
					'./node_modules/lodash/_Symbol.js',
				),
				arrayMap = __webpack_require__(
					'./node_modules/lodash/_arrayMap.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isSymbol = __webpack_require__(
					'./node_modules/lodash/isSymbol.js',
				),
				symbolProto = Symbol ? Symbol.prototype : void 0,
				symbolToString = symbolProto ? symbolProto.toString : void 0;
			module.exports = function baseToString(value) {
				if ('string' == typeof value) return value;
				if (isArray(value)) return arrayMap(value, baseToString) + '';
				if (isSymbol(value))
					return symbolToString ? symbolToString.call(value) : '';
				var result = value + '';
				return '0' == result && 1 / value == -Infinity ? '-0' : result;
			};
		},
		'./node_modules/lodash/_baseUnary.js': (module) => {
			module.exports = function baseUnary(func) {
				return function (value) {
					return func(value);
				};
			};
		},
		'./node_modules/lodash/_cacheHas.js': (module) => {
			module.exports = function cacheHas(cache, key) {
				return cache.has(key);
			};
		},
		'./node_modules/lodash/_castPath.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isKey = __webpack_require__('./node_modules/lodash/_isKey.js'),
				stringToPath = __webpack_require__(
					'./node_modules/lodash/_stringToPath.js',
				),
				toString = __webpack_require__(
					'./node_modules/lodash/toString.js',
				);
			module.exports = function castPath(value, object) {
				return isArray(value)
					? value
					: isKey(value, object)
					? [value]
					: stringToPath(toString(value));
			};
		},
		'./node_modules/lodash/_coreJsData.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var coreJsData = __webpack_require__(
				'./node_modules/lodash/_root.js',
			)['__core-js_shared__'];
			module.exports = coreJsData;
		},
		'./node_modules/lodash/_createBaseFor.js': (module) => {
			module.exports = function createBaseFor(fromRight) {
				return function (object, iteratee, keysFunc) {
					for (
						var index = -1,
							iterable = Object(object),
							props = keysFunc(object),
							length = props.length;
						length--;

					) {
						var key = props[fromRight ? length : ++index];
						if (!1 === iteratee(iterable[key], key, iterable))
							break;
					}
					return object;
				};
			};
		},
		'./node_modules/lodash/_defineProperty.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getNative = __webpack_require__(
					'./node_modules/lodash/_getNative.js',
				),
				defineProperty = (function () {
					try {
						var func = getNative(Object, 'defineProperty');
						return func({}, '', {}), func;
					} catch (e) {}
				})();
			module.exports = defineProperty;
		},
		'./node_modules/lodash/_equalArrays.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var SetCache = __webpack_require__(
					'./node_modules/lodash/_SetCache.js',
				),
				arraySome = __webpack_require__(
					'./node_modules/lodash/_arraySome.js',
				),
				cacheHas = __webpack_require__(
					'./node_modules/lodash/_cacheHas.js',
				);
			module.exports = function equalArrays(
				array,
				other,
				bitmask,
				customizer,
				equalFunc,
				stack,
			) {
				var isPartial = 1 & bitmask,
					arrLength = array.length,
					othLength = other.length;
				if (
					arrLength != othLength &&
					!(isPartial && othLength > arrLength)
				)
					return !1;
				var arrStacked = stack.get(array),
					othStacked = stack.get(other);
				if (arrStacked && othStacked)
					return arrStacked == other && othStacked == array;
				var index = -1,
					result = !0,
					seen = 2 & bitmask ? new SetCache() : void 0;
				for (
					stack.set(array, other), stack.set(other, array);
					++index < arrLength;

				) {
					var arrValue = array[index],
						othValue = other[index];
					if (customizer)
						var compared = isPartial
							? customizer(
									othValue,
									arrValue,
									index,
									other,
									array,
									stack,
							  )
							: customizer(
									arrValue,
									othValue,
									index,
									array,
									other,
									stack,
							  );
					if (void 0 !== compared) {
						if (compared) continue;
						result = !1;
						break;
					}
					if (seen) {
						if (
							!arraySome(other, function (othValue, othIndex) {
								if (
									!cacheHas(seen, othIndex) &&
									(arrValue === othValue ||
										equalFunc(
											arrValue,
											othValue,
											bitmask,
											customizer,
											stack,
										))
								)
									return seen.push(othIndex);
							})
						) {
							result = !1;
							break;
						}
					} else if (
						arrValue !== othValue &&
						!equalFunc(
							arrValue,
							othValue,
							bitmask,
							customizer,
							stack,
						)
					) {
						result = !1;
						break;
					}
				}
				return stack.delete(array), stack.delete(other), result;
			};
		},
		'./node_modules/lodash/_equalByTag.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Symbol = __webpack_require__(
					'./node_modules/lodash/_Symbol.js',
				),
				Uint8Array = __webpack_require__(
					'./node_modules/lodash/_Uint8Array.js',
				),
				eq = __webpack_require__('./node_modules/lodash/eq.js'),
				equalArrays = __webpack_require__(
					'./node_modules/lodash/_equalArrays.js',
				),
				mapToArray = __webpack_require__(
					'./node_modules/lodash/_mapToArray.js',
				),
				setToArray = __webpack_require__(
					'./node_modules/lodash/_setToArray.js',
				),
				symbolProto = Symbol ? Symbol.prototype : void 0,
				symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
			module.exports = function equalByTag(
				object,
				other,
				tag,
				bitmask,
				customizer,
				equalFunc,
				stack,
			) {
				switch (tag) {
					case '[object DataView]':
						if (
							object.byteLength != other.byteLength ||
							object.byteOffset != other.byteOffset
						)
							return !1;
						(object = object.buffer), (other = other.buffer);
					case '[object ArrayBuffer]':
						return !(
							object.byteLength != other.byteLength ||
							!equalFunc(
								new Uint8Array(object),
								new Uint8Array(other),
							)
						);
					case '[object Boolean]':
					case '[object Date]':
					case '[object Number]':
						return eq(+object, +other);
					case '[object Error]':
						return (
							object.name == other.name &&
							object.message == other.message
						);
					case '[object RegExp]':
					case '[object String]':
						return object == other + '';
					case '[object Map]':
						var convert = mapToArray;
					case '[object Set]':
						var isPartial = 1 & bitmask;
						if (
							(convert || (convert = setToArray),
							object.size != other.size && !isPartial)
						)
							return !1;
						var stacked = stack.get(object);
						if (stacked) return stacked == other;
						(bitmask |= 2), stack.set(object, other);
						var result = equalArrays(
							convert(object),
							convert(other),
							bitmask,
							customizer,
							equalFunc,
							stack,
						);
						return stack.delete(object), result;
					case '[object Symbol]':
						if (symbolValueOf)
							return (
								symbolValueOf.call(object) ==
								symbolValueOf.call(other)
							);
				}
				return !1;
			};
		},
		'./node_modules/lodash/_equalObjects.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getAllKeys = __webpack_require__(
					'./node_modules/lodash/_getAllKeys.js',
				),
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function equalObjects(
				object,
				other,
				bitmask,
				customizer,
				equalFunc,
				stack,
			) {
				var isPartial = 1 & bitmask,
					objProps = getAllKeys(object),
					objLength = objProps.length;
				if (objLength != getAllKeys(other).length && !isPartial)
					return !1;
				for (var index = objLength; index--; ) {
					var key = objProps[index];
					if (
						!(isPartial
							? key in other
							: hasOwnProperty.call(other, key))
					)
						return !1;
				}
				var objStacked = stack.get(object),
					othStacked = stack.get(other);
				if (objStacked && othStacked)
					return objStacked == other && othStacked == object;
				var result = !0;
				stack.set(object, other), stack.set(other, object);
				for (var skipCtor = isPartial; ++index < objLength; ) {
					var objValue = object[(key = objProps[index])],
						othValue = other[key];
					if (customizer)
						var compared = isPartial
							? customizer(
									othValue,
									objValue,
									key,
									other,
									object,
									stack,
							  )
							: customizer(
									objValue,
									othValue,
									key,
									object,
									other,
									stack,
							  );
					if (
						!(void 0 === compared
							? objValue === othValue ||
							  equalFunc(
									objValue,
									othValue,
									bitmask,
									customizer,
									stack,
							  )
							: compared)
					) {
						result = !1;
						break;
					}
					skipCtor || (skipCtor = 'constructor' == key);
				}
				if (result && !skipCtor) {
					var objCtor = object.constructor,
						othCtor = other.constructor;
					objCtor == othCtor ||
						!('constructor' in object) ||
						!('constructor' in other) ||
						('function' == typeof objCtor &&
							objCtor instanceof objCtor &&
							'function' == typeof othCtor &&
							othCtor instanceof othCtor) ||
						(result = !1);
				}
				return stack.delete(object), stack.delete(other), result;
			};
		},
		'./node_modules/lodash/_freeGlobal.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var freeGlobal =
				'object' == typeof __webpack_require__.g &&
				__webpack_require__.g &&
				__webpack_require__.g.Object === Object &&
				__webpack_require__.g;
			module.exports = freeGlobal;
		},
		'./node_modules/lodash/_getAllKeys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetAllKeys = __webpack_require__(
					'./node_modules/lodash/_baseGetAllKeys.js',
				),
				getSymbols = __webpack_require__(
					'./node_modules/lodash/_getSymbols.js',
				),
				keys = __webpack_require__('./node_modules/lodash/keys.js');
			module.exports = function getAllKeys(object) {
				return baseGetAllKeys(object, keys, getSymbols);
			};
		},
		'./node_modules/lodash/_getMapData.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isKeyable = __webpack_require__(
				'./node_modules/lodash/_isKeyable.js',
			);
			module.exports = function getMapData(map, key) {
				var data = map.__data__;
				return isKeyable(key)
					? data['string' == typeof key ? 'string' : 'hash']
					: data.map;
			};
		},
		'./node_modules/lodash/_getMatchData.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isStrictComparable = __webpack_require__(
					'./node_modules/lodash/_isStrictComparable.js',
				),
				keys = __webpack_require__('./node_modules/lodash/keys.js');
			module.exports = function getMatchData(object) {
				for (
					var result = keys(object), length = result.length;
					length--;

				) {
					var key = result[length],
						value = object[key];
					result[length] = [key, value, isStrictComparable(value)];
				}
				return result;
			};
		},
		'./node_modules/lodash/_getNative.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsNative = __webpack_require__(
					'./node_modules/lodash/_baseIsNative.js',
				),
				getValue = __webpack_require__(
					'./node_modules/lodash/_getValue.js',
				);
			module.exports = function getNative(object, key) {
				var value = getValue(object, key);
				return baseIsNative(value) ? value : void 0;
			};
		},
		'./node_modules/lodash/_getPrototype.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getPrototype = __webpack_require__(
				'./node_modules/lodash/_overArg.js',
			)(Object.getPrototypeOf, Object);
			module.exports = getPrototype;
		},
		'./node_modules/lodash/_getRawTag.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Symbol = __webpack_require__(
					'./node_modules/lodash/_Symbol.js',
				),
				objectProto = Object.prototype,
				hasOwnProperty = objectProto.hasOwnProperty,
				nativeObjectToString = objectProto.toString,
				symToStringTag = Symbol ? Symbol.toStringTag : void 0;
			module.exports = function getRawTag(value) {
				var isOwn = hasOwnProperty.call(value, symToStringTag),
					tag = value[symToStringTag];
				try {
					value[symToStringTag] = void 0;
					var unmasked = !0;
				} catch (e) {}
				var result = nativeObjectToString.call(value);
				return (
					unmasked &&
						(isOwn
							? (value[symToStringTag] = tag)
							: delete value[symToStringTag]),
					result
				);
			};
		},
		'./node_modules/lodash/_getSymbols.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var arrayFilter = __webpack_require__(
					'./node_modules/lodash/_arrayFilter.js',
				),
				stubArray = __webpack_require__(
					'./node_modules/lodash/stubArray.js',
				),
				propertyIsEnumerable = Object.prototype.propertyIsEnumerable,
				nativeGetSymbols = Object.getOwnPropertySymbols,
				getSymbols = nativeGetSymbols
					? function (object) {
							return null == object
								? []
								: ((object = Object(object)),
								  arrayFilter(
										nativeGetSymbols(object),
										function (symbol) {
											return propertyIsEnumerable.call(
												object,
												symbol,
											);
										},
								  ));
					  }
					: stubArray;
			module.exports = getSymbols;
		},
		'./node_modules/lodash/_getTag.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var DataView = __webpack_require__(
					'./node_modules/lodash/_DataView.js',
				),
				Map = __webpack_require__('./node_modules/lodash/_Map.js'),
				Promise = __webpack_require__(
					'./node_modules/lodash/_Promise.js',
				),
				Set = __webpack_require__('./node_modules/lodash/_Set.js'),
				WeakMap = __webpack_require__(
					'./node_modules/lodash/_WeakMap.js',
				),
				baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				toSource = __webpack_require__(
					'./node_modules/lodash/_toSource.js',
				),
				dataViewCtorString = toSource(DataView),
				mapCtorString = toSource(Map),
				promiseCtorString = toSource(Promise),
				setCtorString = toSource(Set),
				weakMapCtorString = toSource(WeakMap),
				getTag = baseGetTag;
			((DataView &&
				'[object DataView]' !=
					getTag(new DataView(new ArrayBuffer(1)))) ||
				(Map && '[object Map]' != getTag(new Map())) ||
				(Promise && '[object Promise]' != getTag(Promise.resolve())) ||
				(Set && '[object Set]' != getTag(new Set())) ||
				(WeakMap && '[object WeakMap]' != getTag(new WeakMap()))) &&
				(getTag = function (value) {
					var result = baseGetTag(value),
						Ctor =
							'[object Object]' == result
								? value.constructor
								: void 0,
						ctorString = Ctor ? toSource(Ctor) : '';
					if (ctorString)
						switch (ctorString) {
							case dataViewCtorString:
								return '[object DataView]';
							case mapCtorString:
								return '[object Map]';
							case promiseCtorString:
								return '[object Promise]';
							case setCtorString:
								return '[object Set]';
							case weakMapCtorString:
								return '[object WeakMap]';
						}
					return result;
				}),
				(module.exports = getTag);
		},
		'./node_modules/lodash/_getValue.js': (module) => {
			module.exports = function getValue(object, key) {
				return null == object ? void 0 : object[key];
			};
		},
		'./node_modules/lodash/_hasPath.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var castPath = __webpack_require__(
					'./node_modules/lodash/_castPath.js',
				),
				isArguments = __webpack_require__(
					'./node_modules/lodash/isArguments.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isIndex = __webpack_require__(
					'./node_modules/lodash/_isIndex.js',
				),
				isLength = __webpack_require__(
					'./node_modules/lodash/isLength.js',
				),
				toKey = __webpack_require__('./node_modules/lodash/_toKey.js');
			module.exports = function hasPath(object, path, hasFunc) {
				for (
					var index = -1,
						length = (path = castPath(path, object)).length,
						result = !1;
					++index < length;

				) {
					var key = toKey(path[index]);
					if (!(result = null != object && hasFunc(object, key)))
						break;
					object = object[key];
				}
				return result || ++index != length
					? result
					: !!(length = null == object ? 0 : object.length) &&
							isLength(length) &&
							isIndex(key, length) &&
							(isArray(object) || isArguments(object));
			};
		},
		'./node_modules/lodash/_hashClear.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeCreate = __webpack_require__(
				'./node_modules/lodash/_nativeCreate.js',
			);
			module.exports = function hashClear() {
				(this.__data__ = nativeCreate ? nativeCreate(null) : {}),
					(this.size = 0);
			};
		},
		'./node_modules/lodash/_hashDelete.js': (module) => {
			module.exports = function hashDelete(key) {
				var result = this.has(key) && delete this.__data__[key];
				return (this.size -= result ? 1 : 0), result;
			};
		},
		'./node_modules/lodash/_hashGet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeCreate = __webpack_require__(
					'./node_modules/lodash/_nativeCreate.js',
				),
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function hashGet(key) {
				var data = this.__data__;
				if (nativeCreate) {
					var result = data[key];
					return '__lodash_hash_undefined__' === result
						? void 0
						: result;
				}
				return hasOwnProperty.call(data, key) ? data[key] : void 0;
			};
		},
		'./node_modules/lodash/_hashHas.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeCreate = __webpack_require__(
					'./node_modules/lodash/_nativeCreate.js',
				),
				hasOwnProperty = Object.prototype.hasOwnProperty;
			module.exports = function hashHas(key) {
				var data = this.__data__;
				return nativeCreate
					? void 0 !== data[key]
					: hasOwnProperty.call(data, key);
			};
		},
		'./node_modules/lodash/_hashSet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeCreate = __webpack_require__(
				'./node_modules/lodash/_nativeCreate.js',
			);
			module.exports = function hashSet(key, value) {
				var data = this.__data__;
				return (
					(this.size += this.has(key) ? 0 : 1),
					(data[key] =
						nativeCreate && void 0 === value
							? '__lodash_hash_undefined__'
							: value),
					this
				);
			};
		},
		'./node_modules/lodash/_isIndex.js': (module) => {
			var reIsUint = /^(?:0|[1-9]\d*)$/;
			module.exports = function isIndex(value, length) {
				var type = typeof value;
				return (
					!!(length = null == length ? 9007199254740991 : length) &&
					('number' == type ||
						('symbol' != type && reIsUint.test(value))) &&
					value > -1 &&
					value % 1 == 0 &&
					value < length
				);
			};
		},
		'./node_modules/lodash/_isKey.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isSymbol = __webpack_require__(
					'./node_modules/lodash/isSymbol.js',
				),
				reIsDeepProp =
					/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
				reIsPlainProp = /^\w*$/;
			module.exports = function isKey(value, object) {
				if (isArray(value)) return !1;
				var type = typeof value;
				return (
					!(
						'number' != type &&
						'symbol' != type &&
						'boolean' != type &&
						null != value &&
						!isSymbol(value)
					) ||
					reIsPlainProp.test(value) ||
					!reIsDeepProp.test(value) ||
					(null != object && value in Object(object))
				);
			};
		},
		'./node_modules/lodash/_isKeyable.js': (module) => {
			module.exports = function isKeyable(value) {
				var type = typeof value;
				return 'string' == type ||
					'number' == type ||
					'symbol' == type ||
					'boolean' == type
					? '__proto__' !== value
					: null === value;
			};
		},
		'./node_modules/lodash/_isMasked.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var uid,
				coreJsData = __webpack_require__(
					'./node_modules/lodash/_coreJsData.js',
				),
				maskSrcKey = (uid = /[^.]+$/.exec(
					(coreJsData &&
						coreJsData.keys &&
						coreJsData.keys.IE_PROTO) ||
						'',
				))
					? 'Symbol(src)_1.' + uid
					: '';
			module.exports = function isMasked(func) {
				return !!maskSrcKey && maskSrcKey in func;
			};
		},
		'./node_modules/lodash/_isPrototype.js': (module) => {
			var objectProto = Object.prototype;
			module.exports = function isPrototype(value) {
				var Ctor = value && value.constructor;
				return (
					value ===
					(('function' == typeof Ctor && Ctor.prototype) ||
						objectProto)
				);
			};
		},
		'./node_modules/lodash/_isStrictComparable.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isObject = __webpack_require__(
				'./node_modules/lodash/isObject.js',
			);
			module.exports = function isStrictComparable(value) {
				return value == value && !isObject(value);
			};
		},
		'./node_modules/lodash/_listCacheClear.js': (module) => {
			module.exports = function listCacheClear() {
				(this.__data__ = []), (this.size = 0);
			};
		},
		'./node_modules/lodash/_listCacheDelete.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var assocIndexOf = __webpack_require__(
					'./node_modules/lodash/_assocIndexOf.js',
				),
				splice = Array.prototype.splice;
			module.exports = function listCacheDelete(key) {
				var data = this.__data__,
					index = assocIndexOf(data, key);
				return (
					!(index < 0) &&
					(index == data.length - 1
						? data.pop()
						: splice.call(data, index, 1),
					--this.size,
					!0)
				);
			};
		},
		'./node_modules/lodash/_listCacheGet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var assocIndexOf = __webpack_require__(
				'./node_modules/lodash/_assocIndexOf.js',
			);
			module.exports = function listCacheGet(key) {
				var data = this.__data__,
					index = assocIndexOf(data, key);
				return index < 0 ? void 0 : data[index][1];
			};
		},
		'./node_modules/lodash/_listCacheHas.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var assocIndexOf = __webpack_require__(
				'./node_modules/lodash/_assocIndexOf.js',
			);
			module.exports = function listCacheHas(key) {
				return assocIndexOf(this.__data__, key) > -1;
			};
		},
		'./node_modules/lodash/_listCacheSet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var assocIndexOf = __webpack_require__(
				'./node_modules/lodash/_assocIndexOf.js',
			);
			module.exports = function listCacheSet(key, value) {
				var data = this.__data__,
					index = assocIndexOf(data, key);
				return (
					index < 0
						? (++this.size, data.push([key, value]))
						: (data[index][1] = value),
					this
				);
			};
		},
		'./node_modules/lodash/_mapCacheClear.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var Hash = __webpack_require__('./node_modules/lodash/_Hash.js'),
				ListCache = __webpack_require__(
					'./node_modules/lodash/_ListCache.js',
				),
				Map = __webpack_require__('./node_modules/lodash/_Map.js');
			module.exports = function mapCacheClear() {
				(this.size = 0),
					(this.__data__ = {
						hash: new Hash(),
						map: new (Map || ListCache)(),
						string: new Hash(),
					});
			};
		},
		'./node_modules/lodash/_mapCacheDelete.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getMapData = __webpack_require__(
				'./node_modules/lodash/_getMapData.js',
			);
			module.exports = function mapCacheDelete(key) {
				var result = getMapData(this, key).delete(key);
				return (this.size -= result ? 1 : 0), result;
			};
		},
		'./node_modules/lodash/_mapCacheGet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getMapData = __webpack_require__(
				'./node_modules/lodash/_getMapData.js',
			);
			module.exports = function mapCacheGet(key) {
				return getMapData(this, key).get(key);
			};
		},
		'./node_modules/lodash/_mapCacheHas.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getMapData = __webpack_require__(
				'./node_modules/lodash/_getMapData.js',
			);
			module.exports = function mapCacheHas(key) {
				return getMapData(this, key).has(key);
			};
		},
		'./node_modules/lodash/_mapCacheSet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var getMapData = __webpack_require__(
				'./node_modules/lodash/_getMapData.js',
			);
			module.exports = function mapCacheSet(key, value) {
				var data = getMapData(this, key),
					size = data.size;
				return (
					data.set(key, value),
					(this.size += data.size == size ? 0 : 1),
					this
				);
			};
		},
		'./node_modules/lodash/_mapToArray.js': (module) => {
			module.exports = function mapToArray(map) {
				var index = -1,
					result = Array(map.size);
				return (
					map.forEach(function (value, key) {
						result[++index] = [key, value];
					}),
					result
				);
			};
		},
		'./node_modules/lodash/_matchesStrictComparable.js': (module) => {
			module.exports = function matchesStrictComparable(key, srcValue) {
				return function (object) {
					return (
						null != object &&
						object[key] === srcValue &&
						(void 0 !== srcValue || key in Object(object))
					);
				};
			};
		},
		'./node_modules/lodash/_memoizeCapped.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var memoize = __webpack_require__(
				'./node_modules/lodash/memoize.js',
			);
			module.exports = function memoizeCapped(func) {
				var result = memoize(func, function (key) {
						return 500 === cache.size && cache.clear(), key;
					}),
					cache = result.cache;
				return result;
			};
		},
		'./node_modules/lodash/_nativeCreate.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeCreate = __webpack_require__(
				'./node_modules/lodash/_getNative.js',
			)(Object, 'create');
			module.exports = nativeCreate;
		},
		'./node_modules/lodash/_nativeKeys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var nativeKeys = __webpack_require__(
				'./node_modules/lodash/_overArg.js',
			)(Object.keys, Object);
			module.exports = nativeKeys;
		},
		'./node_modules/lodash/_nodeUtil.js': (
			module,
			exports,
			__webpack_require__,
		) => {
			module = __webpack_require__.nmd(module);
			var freeGlobal = __webpack_require__(
					'./node_modules/lodash/_freeGlobal.js',
				),
				freeExports = exports && !exports.nodeType && exports,
				freeModule =
					freeExports && module && !module.nodeType && module,
				freeProcess =
					freeModule &&
					freeModule.exports === freeExports &&
					freeGlobal.process,
				nodeUtil = (function () {
					try {
						var types =
							freeModule &&
							freeModule.require &&
							freeModule.require('util').types;
						return (
							types ||
							(freeProcess &&
								freeProcess.binding &&
								freeProcess.binding('util'))
						);
					} catch (e) {}
				})();
			module.exports = nodeUtil;
		},
		'./node_modules/lodash/_objectToString.js': (module) => {
			var nativeObjectToString = Object.prototype.toString;
			module.exports = function objectToString(value) {
				return nativeObjectToString.call(value);
			};
		},
		'./node_modules/lodash/_overArg.js': (module) => {
			module.exports = function overArg(func, transform) {
				return function (arg) {
					return func(transform(arg));
				};
			};
		},
		'./node_modules/lodash/_root.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var freeGlobal = __webpack_require__(
					'./node_modules/lodash/_freeGlobal.js',
				),
				freeSelf =
					'object' == typeof self &&
					self &&
					self.Object === Object &&
					self,
				root = freeGlobal || freeSelf || Function('return this')();
			module.exports = root;
		},
		'./node_modules/lodash/_setCacheAdd.js': (module) => {
			module.exports = function setCacheAdd(value) {
				return (
					this.__data__.set(value, '__lodash_hash_undefined__'), this
				);
			};
		},
		'./node_modules/lodash/_setCacheHas.js': (module) => {
			module.exports = function setCacheHas(value) {
				return this.__data__.has(value);
			};
		},
		'./node_modules/lodash/_setToArray.js': (module) => {
			module.exports = function setToArray(set) {
				var index = -1,
					result = Array(set.size);
				return (
					set.forEach(function (value) {
						result[++index] = value;
					}),
					result
				);
			};
		},
		'./node_modules/lodash/_stackClear.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var ListCache = __webpack_require__(
				'./node_modules/lodash/_ListCache.js',
			);
			module.exports = function stackClear() {
				(this.__data__ = new ListCache()), (this.size = 0);
			};
		},
		'./node_modules/lodash/_stackDelete.js': (module) => {
			module.exports = function stackDelete(key) {
				var data = this.__data__,
					result = data.delete(key);
				return (this.size = data.size), result;
			};
		},
		'./node_modules/lodash/_stackGet.js': (module) => {
			module.exports = function stackGet(key) {
				return this.__data__.get(key);
			};
		},
		'./node_modules/lodash/_stackHas.js': (module) => {
			module.exports = function stackHas(key) {
				return this.__data__.has(key);
			};
		},
		'./node_modules/lodash/_stackSet.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var ListCache = __webpack_require__(
					'./node_modules/lodash/_ListCache.js',
				),
				Map = __webpack_require__('./node_modules/lodash/_Map.js'),
				MapCache = __webpack_require__(
					'./node_modules/lodash/_MapCache.js',
				);
			module.exports = function stackSet(key, value) {
				var data = this.__data__;
				if (data instanceof ListCache) {
					var pairs = data.__data__;
					if (!Map || pairs.length < 199)
						return (
							pairs.push([key, value]),
							(this.size = ++data.size),
							this
						);
					data = this.__data__ = new MapCache(pairs);
				}
				return data.set(key, value), (this.size = data.size), this;
			};
		},
		'./node_modules/lodash/_stringToPath.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var memoizeCapped = __webpack_require__(
					'./node_modules/lodash/_memoizeCapped.js',
				),
				rePropName =
					/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
				reEscapeChar = /\\(\\)?/g,
				stringToPath = memoizeCapped(function (string) {
					var result = [];
					return (
						46 === string.charCodeAt(0) && result.push(''),
						string.replace(
							rePropName,
							function (match, number, quote, subString) {
								result.push(
									quote
										? subString.replace(reEscapeChar, '$1')
										: number || match,
								);
							},
						),
						result
					);
				});
			module.exports = stringToPath;
		},
		'./node_modules/lodash/_toKey.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isSymbol = __webpack_require__(
				'./node_modules/lodash/isSymbol.js',
			);
			module.exports = function toKey(value) {
				if ('string' == typeof value || isSymbol(value)) return value;
				var result = value + '';
				return '0' == result && 1 / value == -Infinity ? '-0' : result;
			};
		},
		'./node_modules/lodash/_toSource.js': (module) => {
			var funcToString = Function.prototype.toString;
			module.exports = function toSource(func) {
				if (null != func) {
					try {
						return funcToString.call(func);
					} catch (e) {}
					try {
						return func + '';
					} catch (e) {}
				}
				return '';
			};
		},
		'./node_modules/lodash/eq.js': (module) => {
			module.exports = function eq(value, other) {
				return value === other || (value != value && other != other);
			};
		},
		'./node_modules/lodash/get.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGet = __webpack_require__(
				'./node_modules/lodash/_baseGet.js',
			);
			module.exports = function get(object, path, defaultValue) {
				var result = null == object ? void 0 : baseGet(object, path);
				return void 0 === result ? defaultValue : result;
			};
		},
		'./node_modules/lodash/hasIn.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseHasIn = __webpack_require__(
					'./node_modules/lodash/_baseHasIn.js',
				),
				hasPath = __webpack_require__(
					'./node_modules/lodash/_hasPath.js',
				);
			module.exports = function hasIn(object, path) {
				return null != object && hasPath(object, path, baseHasIn);
			};
		},
		'./node_modules/lodash/identity.js': (module) => {
			module.exports = function identity(value) {
				return value;
			};
		},
		'./node_modules/lodash/isArguments.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsArguments = __webpack_require__(
					'./node_modules/lodash/_baseIsArguments.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				),
				objectProto = Object.prototype,
				hasOwnProperty = objectProto.hasOwnProperty,
				propertyIsEnumerable = objectProto.propertyIsEnumerable,
				isArguments = baseIsArguments(
					(function () {
						return arguments;
					})(),
				)
					? baseIsArguments
					: function (value) {
							return (
								isObjectLike(value) &&
								hasOwnProperty.call(value, 'callee') &&
								!propertyIsEnumerable.call(value, 'callee')
							);
					  };
			module.exports = isArguments;
		},
		'./node_modules/lodash/isArray.js': (module) => {
			var isArray = Array.isArray;
			module.exports = isArray;
		},
		'./node_modules/lodash/isArrayLike.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var isFunction = __webpack_require__(
					'./node_modules/lodash/isFunction.js',
				),
				isLength = __webpack_require__(
					'./node_modules/lodash/isLength.js',
				);
			module.exports = function isArrayLike(value) {
				return (
					null != value &&
					isLength(value.length) &&
					!isFunction(value)
				);
			};
		},
		'./node_modules/lodash/isBuffer.js': (
			module,
			exports,
			__webpack_require__,
		) => {
			module = __webpack_require__.nmd(module);
			var root = __webpack_require__('./node_modules/lodash/_root.js'),
				stubFalse = __webpack_require__(
					'./node_modules/lodash/stubFalse.js',
				),
				freeExports = exports && !exports.nodeType && exports,
				freeModule =
					freeExports && module && !module.nodeType && module,
				Buffer =
					freeModule && freeModule.exports === freeExports
						? root.Buffer
						: void 0,
				isBuffer = (Buffer ? Buffer.isBuffer : void 0) || stubFalse;
			module.exports = isBuffer;
		},
		'./node_modules/lodash/isFunction.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				isObject = __webpack_require__(
					'./node_modules/lodash/isObject.js',
				);
			module.exports = function isFunction(value) {
				if (!isObject(value)) return !1;
				var tag = baseGetTag(value);
				return (
					'[object Function]' == tag ||
					'[object GeneratorFunction]' == tag ||
					'[object AsyncFunction]' == tag ||
					'[object Proxy]' == tag
				);
			};
		},
		'./node_modules/lodash/isLength.js': (module) => {
			module.exports = function isLength(value) {
				return (
					'number' == typeof value &&
					value > -1 &&
					value % 1 == 0 &&
					value <= 9007199254740991
				);
			};
		},
		'./node_modules/lodash/isObject.js': (module) => {
			module.exports = function isObject(value) {
				var type = typeof value;
				return (
					null != value && ('object' == type || 'function' == type)
				);
			};
		},
		'./node_modules/lodash/isObjectLike.js': (module) => {
			module.exports = function isObjectLike(value) {
				return null != value && 'object' == typeof value;
			};
		},
		'./node_modules/lodash/isPlainObject.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				getPrototype = __webpack_require__(
					'./node_modules/lodash/_getPrototype.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				),
				funcProto = Function.prototype,
				objectProto = Object.prototype,
				funcToString = funcProto.toString,
				hasOwnProperty = objectProto.hasOwnProperty,
				objectCtorString = funcToString.call(Object);
			module.exports = function isPlainObject(value) {
				if (
					!isObjectLike(value) ||
					'[object Object]' != baseGetTag(value)
				)
					return !1;
				var proto = getPrototype(value);
				if (null === proto) return !0;
				var Ctor =
					hasOwnProperty.call(proto, 'constructor') &&
					proto.constructor;
				return (
					'function' == typeof Ctor &&
					Ctor instanceof Ctor &&
					funcToString.call(Ctor) == objectCtorString
				);
			};
		},
		'./node_modules/lodash/isString.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				isArray = __webpack_require__(
					'./node_modules/lodash/isArray.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				);
			module.exports = function isString(value) {
				return (
					'string' == typeof value ||
					(!isArray(value) &&
						isObjectLike(value) &&
						'[object String]' == baseGetTag(value))
				);
			};
		},
		'./node_modules/lodash/isSymbol.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseGetTag = __webpack_require__(
					'./node_modules/lodash/_baseGetTag.js',
				),
				isObjectLike = __webpack_require__(
					'./node_modules/lodash/isObjectLike.js',
				);
			module.exports = function isSymbol(value) {
				return (
					'symbol' == typeof value ||
					(isObjectLike(value) &&
						'[object Symbol]' == baseGetTag(value))
				);
			};
		},
		'./node_modules/lodash/isTypedArray.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseIsTypedArray = __webpack_require__(
					'./node_modules/lodash/_baseIsTypedArray.js',
				),
				baseUnary = __webpack_require__(
					'./node_modules/lodash/_baseUnary.js',
				),
				nodeUtil = __webpack_require__(
					'./node_modules/lodash/_nodeUtil.js',
				),
				nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray,
				isTypedArray = nodeIsTypedArray
					? baseUnary(nodeIsTypedArray)
					: baseIsTypedArray;
			module.exports = isTypedArray;
		},
		'./node_modules/lodash/keys.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var arrayLikeKeys = __webpack_require__(
					'./node_modules/lodash/_arrayLikeKeys.js',
				),
				baseKeys = __webpack_require__(
					'./node_modules/lodash/_baseKeys.js',
				),
				isArrayLike = __webpack_require__(
					'./node_modules/lodash/isArrayLike.js',
				);
			module.exports = function keys(object) {
				return isArrayLike(object)
					? arrayLikeKeys(object)
					: baseKeys(object);
			};
		},
		'./node_modules/lodash/mapValues.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseAssignValue = __webpack_require__(
					'./node_modules/lodash/_baseAssignValue.js',
				),
				baseForOwn = __webpack_require__(
					'./node_modules/lodash/_baseForOwn.js',
				),
				baseIteratee = __webpack_require__(
					'./node_modules/lodash/_baseIteratee.js',
				);
			module.exports = function mapValues(object, iteratee) {
				var result = {};
				return (
					(iteratee = baseIteratee(iteratee, 3)),
					baseForOwn(object, function (value, key, object) {
						baseAssignValue(
							result,
							key,
							iteratee(value, key, object),
						);
					}),
					result
				);
			};
		},
		'./node_modules/lodash/memoize.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var MapCache = __webpack_require__(
				'./node_modules/lodash/_MapCache.js',
			);
			function memoize(func, resolver) {
				if (
					'function' != typeof func ||
					(null != resolver && 'function' != typeof resolver)
				)
					throw new TypeError('Expected a function');
				var memoized = function () {
					var args = arguments,
						key = resolver ? resolver.apply(this, args) : args[0],
						cache = memoized.cache;
					if (cache.has(key)) return cache.get(key);
					var result = func.apply(this, args);
					return (
						(memoized.cache = cache.set(key, result) || cache),
						result
					);
				};
				return (
					(memoized.cache = new (memoize.Cache || MapCache)()),
					memoized
				);
			}
			(memoize.Cache = MapCache), (module.exports = memoize);
		},
		'./node_modules/lodash/property.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseProperty = __webpack_require__(
					'./node_modules/lodash/_baseProperty.js',
				),
				basePropertyDeep = __webpack_require__(
					'./node_modules/lodash/_basePropertyDeep.js',
				),
				isKey = __webpack_require__('./node_modules/lodash/_isKey.js'),
				toKey = __webpack_require__('./node_modules/lodash/_toKey.js');
			module.exports = function property(path) {
				return isKey(path)
					? baseProperty(toKey(path))
					: basePropertyDeep(path);
			};
		},
		'./node_modules/lodash/stubArray.js': (module) => {
			module.exports = function stubArray() {
				return [];
			};
		},
		'./node_modules/lodash/stubFalse.js': (module) => {
			module.exports = function stubFalse() {
				return !1;
			};
		},
		'./node_modules/lodash/toString.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var baseToString = __webpack_require__(
				'./node_modules/lodash/_baseToString.js',
			);
			module.exports = function toString(value) {
				return null == value ? '' : baseToString(value);
			};
		},
		'./node_modules/mockdate/lib/mockdate.js': function (
			__unused_webpack_module,
			exports,
		) {
			!(function (exports) {
				'use strict';
				var extendStatics = function (d, b) {
					return (
						(extendStatics =
							Object.setPrototypeOf ||
							({ __proto__: [] } instanceof Array &&
								function (d, b) {
									d.__proto__ = b;
								}) ||
							function (d, b) {
								for (var p in b)
									Object.prototype.hasOwnProperty.call(
										b,
										p,
									) && (d[p] = b[p]);
							}),
						extendStatics(d, b)
					);
				};
				function __extends(d, b) {
					if ('function' != typeof b && null !== b)
						throw new TypeError(
							'Class extends value ' +
								String(b) +
								' is not a constructor or null',
						);
					function __() {
						this.constructor = d;
					}
					extendStatics(d, b),
						(d.prototype =
							null === b
								? Object.create(b)
								: ((__.prototype = b.prototype), new __()));
				}
				var RealDate = Date,
					now = null,
					MockDate = (function (_super) {
						function Date(y, m, d, h, M, s, ms) {
							var date;
							switch ((_super.call(this), arguments.length)) {
								case 0:
									date =
										null !== now
											? new RealDate(now.valueOf())
											: new RealDate();
									break;
								case 1:
									date = new RealDate(y);
									break;
								default:
									date = new RealDate(
										y,
										m,
										(d = void 0 === d ? 1 : d),
										(h = h || 0),
										(M = M || 0),
										(s = s || 0),
										(ms = ms || 0),
									);
							}
							return date;
						}
						return __extends(Date, _super), Date;
					})(RealDate);
				function set(date) {
					var dateObj = new Date(date.valueOf());
					if (isNaN(dateObj.getTime()))
						throw new TypeError(
							'mockdate: The time set is an invalid date: ' +
								date,
						);
					(Date = MockDate), (now = dateObj.valueOf());
				}
				function reset() {
					Date = RealDate;
				}
				(MockDate.prototype = RealDate.prototype),
					(MockDate.UTC = RealDate.UTC),
					(MockDate.now = function () {
						return new MockDate().valueOf();
					}),
					(MockDate.parse = function (dateString) {
						return RealDate.parse(dateString);
					}),
					(MockDate.toString = function () {
						return RealDate.toString();
					});
				var mockdate = { set, reset };
				(exports.default = mockdate),
					(exports.reset = reset),
					(exports.set = set),
					Object.defineProperty(exports, '__esModule', { value: !0 });
			})(exports);
		},
		'./node_modules/msw-storybook-addon/dist/index.browser.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				j2: () => initialize,
				x8: () => mswDecorator,
			});
			var devUtils = __webpack_require__(
					'./node_modules/msw/lib/core/utils/internal/devUtils.mjs',
				),
				RequestHandler = __webpack_require__(
					'./node_modules/msw/lib/core/handlers/RequestHandler.mjs',
				),
				until = async (promise) => {
					try {
						const data = await promise().catch((error) => {
							throw error;
						});
						return { error: null, data };
					} catch (error) {
						return { error, data: null };
					}
				};
			const executeHandlers = async ({
				request,
				requestId,
				handlers,
				resolutionContext,
			}) => {
				let matchingHandler = null,
					result = null;
				for (const handler of handlers)
					if (
						((result = await handler.run({
							request,
							requestId,
							resolutionContext,
						})),
						null !== result && (matchingHandler = handler),
						result?.response)
					)
						break;
				return matchingHandler
					? {
							handler: matchingHandler,
							parsedResult: result?.parsedResult,
							response: result?.response,
					  }
					: null;
			};
			var toPublicUrl = __webpack_require__(
				'./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs',
			);
			var cookieStore = __webpack_require__(
					'./node_modules/msw/lib/core/utils/cookieStore.mjs',
				),
				decorators = __webpack_require__(
					'./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs',
				);
			async function handleRequest(
				request,
				requestId,
				handlers,
				options,
				emitter,
				handleRequestOptions,
			) {
				if (
					(emitter.emit('request:start', { request, requestId }),
					'bypass' === request.headers.get('x-msw-intention'))
				)
					return (
						emitter.emit('request:end', { request, requestId }),
						void handleRequestOptions?.onPassthroughResponse?.(
							request,
						)
					);
				const lookupResult = await until(() =>
					executeHandlers({
						request,
						requestId,
						handlers,
						resolutionContext:
							handleRequestOptions?.resolutionContext,
					}),
				);
				if (lookupResult.error)
					throw (
						(emitter.emit('unhandledException', {
							error: lookupResult.error,
							request,
							requestId,
						}),
						lookupResult.error)
					);
				if (!lookupResult.data)
					return (
						await (async function onUnhandledRequest(
							request,
							strategy = 'warn',
						) {
							const url = new URL(request.url),
								publicUrl =
									(0, toPublicUrl.F)(url) + url.search,
								requestBody =
									'HEAD' === request.method ||
									'GET' === request.method
										? null
										: await request.clone().text(),
								unhandledRequestMessage = `intercepted a request without a matching request handler:\n\n  • ${
									request.method
								} ${publicUrl}\n\n${
									requestBody
										? `  • Request body: ${requestBody}\n\n`
										: ''
								}If you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`;
							function applyStrategy(strategy2) {
								switch (strategy2) {
									case 'error':
										throw (
											(devUtils.e.error(
												'Error: %s',
												unhandledRequestMessage,
											),
											new devUtils.A(
												devUtils.e.formatMessage(
													'Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.',
												),
											))
										);
									case 'warn':
										devUtils.e.warn(
											'Warning: %s',
											unhandledRequestMessage,
										);
										break;
									case 'bypass':
										break;
									default:
										throw new devUtils.A(
											devUtils.e.formatMessage(
												'Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',
												strategy2,
											),
										);
								}
							}
							'function' != typeof strategy
								? 'file:' !== url.protocol &&
								  applyStrategy(strategy)
								: strategy(request, {
										warning: applyStrategy.bind(
											null,
											'warn',
										),
										error: applyStrategy.bind(
											null,
											'error',
										),
								  });
						})(request, options.onUnhandledRequest),
						emitter.emit('request:unhandled', {
							request,
							requestId,
						}),
						emitter.emit('request:end', { request, requestId }),
						void handleRequestOptions?.onPassthroughResponse?.(
							request,
						)
					);
				const { response } = lookupResult.data;
				if (!response)
					return (
						emitter.emit('request:end', { request, requestId }),
						void handleRequestOptions?.onPassthroughResponse?.(
							request,
						)
					);
				if (
					302 === response.status &&
					'passthrough' === response.headers.get('x-msw-intention')
				)
					return (
						emitter.emit('request:end', { request, requestId }),
						void handleRequestOptions?.onPassthroughResponse?.(
							request,
						)
					);
				!(function storeResponseCookies(request, response) {
					const responseCookies = Reflect.get(
						response,
						decorators.x3,
					);
					responseCookies &&
						cookieStore.k.setCookie(responseCookies, request.url);
				})(request, response),
					emitter.emit('request:match', { request, requestId });
				const requiredLookupResult = lookupResult.data,
					transformedResponse =
						handleRequestOptions?.transformResponse?.(response) ||
						response;
				return (
					handleRequestOptions?.onMockedResponse?.(
						transformedResponse,
						requiredLookupResult,
					),
					emitter.emit('request:end', { request, requestId }),
					transformedResponse
				);
			}
			var lib = __webpack_require__(
					'./node_modules/outvariant/lib/index.mjs',
				),
				strict_event_emitter_lib = __webpack_require__(
					'./node_modules/strict-event-emitter/lib/index.mjs',
				);
			class Disposable {
				subscriptions = [];
				dispose() {
					let subscription;
					for (; (subscription = this.subscriptions.shift()); )
						subscription();
				}
			}
			class InMemoryHandlersController {
				constructor(initialHandlers) {
					(this.initialHandlers = initialHandlers),
						(this.handlers = [...initialHandlers]);
				}
				handlers;
				prepend(runtimeHandles) {
					this.handlers.unshift(...runtimeHandles);
				}
				reset(nextHandlers) {
					this.handlers =
						nextHandlers.length > 0
							? [...nextHandlers]
							: [...this.initialHandlers];
				}
				currentHandlers() {
					return this.handlers;
				}
			}
			class SetupApi extends Disposable {
				handlersController;
				emitter;
				publicEmitter;
				events;
				constructor(...initialHandlers) {
					super(),
						(0, lib.kG)(
							this.validateHandlers(initialHandlers),
							devUtils.e.formatMessage(
								'Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?',
							),
						),
						(this.handlersController =
							new InMemoryHandlersController(initialHandlers)),
						(this.emitter = new strict_event_emitter_lib.Q()),
						(this.publicEmitter = new strict_event_emitter_lib.Q()),
						(function pipeEvents(source, destination) {
							const rawEmit = source.emit;
							if (rawEmit._isPiped) return;
							const sourceEmit = function sourceEmit2(
								event,
								...data
							) {
								return (
									destination.emit(event, ...data),
									rawEmit.call(this, event, ...data)
								);
							};
							(sourceEmit._isPiped = !0),
								(source.emit = sourceEmit);
						})(this.emitter, this.publicEmitter),
						(this.events = this.createLifeCycleEvents()),
						this.subscriptions.push(() => {
							this.emitter.removeAllListeners(),
								this.publicEmitter.removeAllListeners();
						});
				}
				validateHandlers(handlers) {
					return handlers.every((handler) => !Array.isArray(handler));
				}
				use(...runtimeHandlers) {
					(0, lib.kG)(
						this.validateHandlers(runtimeHandlers),
						devUtils.e.formatMessage(
							'Failed to call "use()" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?',
						),
					),
						this.handlersController.prepend(runtimeHandlers);
				}
				restoreHandlers() {
					this.handlersController
						.currentHandlers()
						.forEach((handler) => {
							handler.isUsed = !1;
						});
				}
				resetHandlers(...nextHandlers) {
					this.handlersController.reset(nextHandlers);
				}
				listHandlers() {
					return (function toReadonlyArray(source) {
						const clone = [...source];
						return Object.freeze(clone), clone;
					})(this.handlersController.currentHandlers());
				}
				createLifeCycleEvents() {
					return {
						on: (...args) => this.publicEmitter.on(...args),
						removeListener: (...args) =>
							this.publicEmitter.removeListener(...args),
						removeAllListeners: (...args) =>
							this.publicEmitter.removeAllListeners(...args),
					};
				}
			}
			function isObject(value) {
				return (
					null != value &&
					'object' == typeof value &&
					!Array.isArray(value)
				);
			}
			function mergeRight(left, right) {
				return Object.entries(right).reduce(
					(result, [key, rightValue]) => {
						const leftValue = result[key];
						return Array.isArray(leftValue) &&
							Array.isArray(rightValue)
							? ((result[key] = leftValue.concat(rightValue)),
							  result)
							: isObject(leftValue) && isObject(rightValue)
							? ((result[key] = mergeRight(
									leftValue,
									rightValue,
							  )),
							  result)
							: ((result[key] = rightValue), result);
					},
					Object.assign({}, left),
				);
			}
			var process = __webpack_require__(
					'./node_modules/process/browser.js',
				),
				POSITIONALS_EXP = /(%?)(%([sdijo]))/g;
			function format(message, ...positionals) {
				if (0 === positionals.length) return message;
				let positionalIndex = 0,
					formattedMessage = message.replace(
						POSITIONALS_EXP,
						(match, isEscaped, _, flag) => {
							const value = (function serializePositional(
								positional,
								flag,
							) {
								switch (flag) {
									case 's':
										return positional;
									case 'd':
									case 'i':
										return Number(positional);
									case 'j':
										return JSON.stringify(positional);
									case 'o': {
										if ('string' == typeof positional)
											return positional;
										const json = JSON.stringify(positional);
										return '{}' === json ||
											'[]' === json ||
											/^\[object .+?\]$/.test(json)
											? positional
											: json;
									}
								}
							})(positionals[positionalIndex], flag);
							return isEscaped
								? match
								: (positionalIndex++, value);
						},
					);
				return (
					positionalIndex < positionals.length &&
						(formattedMessage += ` ${positionals
							.slice(positionalIndex)
							.join(' ')}`),
					(formattedMessage = formattedMessage.replace(
						/%{2,2}/g,
						'%',
					)),
					formattedMessage
				);
			}
			var InvariantError = class extends Error {
					constructor(message, ...positionals) {
						super(message),
							(this.message = message),
							(this.name = 'Invariant Violation'),
							(this.message = format(message, ...positionals)),
							(function cleanErrorStack(error2) {
								if (!error2.stack) return;
								const nextStack = error2.stack.split('\n');
								nextStack.splice(1, 2),
									(error2.stack = nextStack.join('\n'));
							})(this);
					}
				},
				invariant = (predicate, message, ...positionals) => {
					if (!predicate)
						throw new InvariantError(message, ...positionals);
				};
			function isNodeProcess() {
				if (
					'undefined' != typeof navigator &&
					'ReactNative' === navigator.product
				)
					return !0;
				if (void 0 !== process) {
					const type = process.type;
					return (
						'renderer' !== type &&
						'worker' !== type &&
						!(!process.versions || !process.versions.node)
					);
				}
				return !1;
			}
			invariant.as = (
				ErrorConstructor,
				predicate,
				message,
				...positionals
			) => {
				if (!predicate) {
					const formatMessage =
						0 === positionals.length
							? message
							: format(message, positionals);
					let error2;
					try {
						error2 = Reflect.construct(ErrorConstructor, [
							formatMessage,
						]);
					} catch (err) {
						error2 = ErrorConstructor(formatMessage);
					}
					throw error2;
				}
			};
			var browser_until = async (promise) => {
				try {
					return {
						error: null,
						data: await promise().catch((error2) => {
							throw error2;
						}),
					};
				} catch (error2) {
					return { error: error2, data: null };
				}
			};
			function getWorkerByRegistration(
				registration,
				absoluteWorkerUrl,
				findWorker,
			) {
				return (
					[
						registration.active,
						registration.installing,
						registration.waiting,
					]
						.filter((state) => null != state)
						.find((worker2) =>
							findWorker(worker2.scriptURL, absoluteWorkerUrl),
						) || null
				);
			}
			var getWorkerInstance = async (url, options = {}, findWorker) => {
				const absoluteWorkerUrl = (function getAbsoluteWorkerUrl(
						workerUrl,
					) {
						return new URL(workerUrl, location.href).href;
					})(url),
					mockRegistrations = await navigator.serviceWorker
						.getRegistrations()
						.then((registrations) =>
							registrations.filter((registration) =>
								getWorkerByRegistration(
									registration,
									absoluteWorkerUrl,
									findWorker,
								),
							),
						);
				!navigator.serviceWorker.controller &&
					mockRegistrations.length > 0 &&
					location.reload();
				const [existingRegistration] = mockRegistrations;
				if (existingRegistration)
					return existingRegistration
						.update()
						.then(() => [
							getWorkerByRegistration(
								existingRegistration,
								absoluteWorkerUrl,
								findWorker,
							),
							existingRegistration,
						]);
				const registrationResult = await browser_until(async () => {
					const registration = await navigator.serviceWorker.register(
						url,
						options,
					);
					return [
						getWorkerByRegistration(
							registration,
							absoluteWorkerUrl,
							findWorker,
						),
						registration,
					];
				});
				if (registrationResult.error) {
					if (registrationResult.error.message.includes('(404)')) {
						const scopeUrl = new URL(
							options?.scope || '/',
							location.href,
						);
						throw new Error(
							devUtils.e.formatMessage(
								`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run "npx msw init <PUBLIC_DIR>"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`,
							),
						);
					}
					throw new Error(
						devUtils.e.formatMessage(
							'Failed to register the Service Worker:\n\n%s',
							registrationResult.error.message,
						),
					);
				}
				return registrationResult.data;
			};
			function printStartMessage(args = {}) {
				if (args.quiet) return;
				const message = args.message || 'Mocking enabled.';
				console.groupCollapsed(
					`%c${devUtils.e.formatMessage(message)}`,
					'color:orangered;font-weight:bold;',
				),
					console.log(
						'%cDocumentation: %chttps://mswjs.io/docs',
						'font-weight:bold',
						'font-weight:normal',
					),
					console.log(
						'Found an issue? https://github.com/mswjs/msw/issues',
					),
					args.workerUrl &&
						console.log('Worker script URL:', args.workerUrl),
					args.workerScope &&
						console.log('Worker scope:', args.workerScope),
					console.groupEnd();
			}
			function pruneGetRequestBody(request) {
				if (!['HEAD', 'GET'].includes(request.method))
					return request.body;
			}
			var createRequestListener =
				(context, options) => async (event, message) => {
					const messageChannel = new (class {
							constructor(port) {
								this.port = port;
							}
							postMessage(event, ...rest) {
								const [data, transfer] = rest;
								this.port.postMessage(
									{ type: event, data },
									{ transfer },
								);
							}
						})(event.ports[0]),
						requestId = message.payload.id,
						request = (function parseWorkerRequest(
							incomingRequest,
						) {
							return new Request(incomingRequest.url, {
								...incomingRequest,
								body: pruneGetRequestBody(incomingRequest),
							});
						})(message.payload),
						requestCloneForLogs = request.clone(),
						requestClone = request.clone();
					RequestHandler.Z.cache.set(request, requestClone),
						context.requests.set(requestId, requestClone);
					try {
						await handleRequest(
							request,
							requestId,
							context.getRequestHandlers(),
							options,
							context.emitter,
							{
								onPassthroughResponse() {
									messageChannel.postMessage('PASSTHROUGH');
								},
								async onMockedResponse(
									response,
									{ handler, parsedResult },
								) {
									const responseClone = response.clone(),
										responseCloneForLogs = response.clone(),
										responseInit = (function toResponseInit(
											response,
										) {
											return {
												status: response.status,
												statusText: response.statusText,
												headers: Object.fromEntries(
													response.headers.entries(),
												),
											};
										})(response);
									if (
										context.supports.readableStreamTransfer
									) {
										const responseStreamOrNull =
											response.body;
										messageChannel.postMessage(
											'MOCK_RESPONSE',
											{
												...responseInit,
												body: responseStreamOrNull,
											},
											responseStreamOrNull
												? [responseStreamOrNull]
												: void 0,
										);
									} else {
										const responseBufferOrNull =
											null === response.body
												? null
												: await responseClone.arrayBuffer();
										messageChannel.postMessage(
											'MOCK_RESPONSE',
											{
												...responseInit,
												body: responseBufferOrNull,
											},
										);
									}
									options.quiet ||
										context.emitter.once(
											'response:mocked',
											() => {
												handler.log({
													request:
														requestCloneForLogs,
													response:
														responseCloneForLogs,
													parsedResult,
												});
											},
										);
								},
							},
						);
					} catch (error2) {
						error2 instanceof Error &&
							(devUtils.e.error(
								'Uncaught exception in the request handler for "%s %s":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it\'s strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses',
								request.method,
								request.url,
								error2.stack ?? error2,
							),
							messageChannel.postMessage('MOCK_RESPONSE', {
								status: 500,
								statusText: 'Request Handler Error',
								headers: { 'Content-Type': 'application/json' },
								body: JSON.stringify({
									name: error2.name,
									message: error2.message,
									stack: error2.stack,
								}),
							}));
					}
				};
			var encoder = new TextEncoder();
			var IS_PATCHED_MODULE = Symbol('isPatchedModule');
			var RESPONSE_STATUS_CODES_WITHOUT_BODY = new Set([
					101, 103, 204, 205, 304,
				]),
				RESPONSE_STATUS_CODES_WITH_REDIRECT = new Set([
					301, 302, 303, 307, 308,
				]);
			function isResponseWithoutBody(status) {
				return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);
			}
			var POSITIONALS_EXP2 = /(%?)(%([sdijo]))/g;
			function format2(message, ...positionals) {
				if (0 === positionals.length) return message;
				let positionalIndex = 0,
					formattedMessage = message.replace(
						POSITIONALS_EXP2,
						(match, isEscaped, _, flag) => {
							const value = (function serializePositional2(
								positional,
								flag,
							) {
								switch (flag) {
									case 's':
										return positional;
									case 'd':
									case 'i':
										return Number(positional);
									case 'j':
										return JSON.stringify(positional);
									case 'o': {
										if ('string' == typeof positional)
											return positional;
										const json = JSON.stringify(positional);
										return '{}' === json ||
											'[]' === json ||
											/^\[object .+?\]$/.test(json)
											? positional
											: json;
									}
								}
							})(positionals[positionalIndex], flag);
							return isEscaped
								? match
								: (positionalIndex++, value);
						},
					);
				return (
					positionalIndex < positionals.length &&
						(formattedMessage += ` ${positionals
							.slice(positionalIndex)
							.join(' ')}`),
					(formattedMessage = formattedMessage.replace(
						/%{2,2}/g,
						'%',
					)),
					formattedMessage
				);
			}
			var InvariantError2 = class extends Error {
					constructor(message, ...positionals) {
						super(message),
							(this.message = message),
							(this.name = 'Invariant Violation'),
							(this.message = format2(message, ...positionals)),
							(function cleanErrorStack2(error2) {
								if (!error2.stack) return;
								const nextStack = error2.stack.split('\n');
								nextStack.splice(1, 2),
									(error2.stack = nextStack.join('\n'));
							})(this);
					}
				},
				invariant2 = (predicate, message, ...positionals) => {
					if (!predicate)
						throw new InvariantError2(message, ...positionals);
				};
			invariant2.as = (
				ErrorConstructor,
				predicate,
				message,
				...positionals
			) => {
				if (!predicate) {
					const formatMessage =
						0 === positionals.length
							? message
							: format2(message, ...positionals);
					let error2;
					try {
						error2 = Reflect.construct(ErrorConstructor, [
							formatMessage,
						]);
					} catch (err) {
						error2 = ErrorConstructor(formatMessage);
					}
					throw error2;
				}
			};
			var __defProp = Object.defineProperty,
				colors_exports = {};
			function yellow(text) {
				return `[33m${text}[0m`;
			}
			function blue(text) {
				return `[34m${text}[0m`;
			}
			function gray(text) {
				return `[90m${text}[0m`;
			}
			function red(text) {
				return `[31m${text}[0m`;
			}
			function green(text) {
				return `[32m${text}[0m`;
			}
			((target, all) => {
				for (var name in all)
					__defProp(target, name, { get: all[name], enumerable: !0 });
			})(colors_exports, {
				blue: () => blue,
				gray: () => gray,
				green: () => green,
				red: () => red,
				yellow: () => yellow,
			});
			var IS_NODE = isNodeProcess(),
				Logger = class {
					constructor(name) {
						(this.name = name), (this.prefix = `[${this.name}]`);
						const LOGGER_NAME = getVariable('DEBUG'),
							LOGGER_LEVEL = getVariable('LOG_LEVEL');
						'1' === LOGGER_NAME ||
						'true' === LOGGER_NAME ||
						(void 0 !== LOGGER_NAME &&
							this.name.startsWith(LOGGER_NAME))
							? ((this.debug = isDefinedAndNotEquals(
									LOGGER_LEVEL,
									'debug',
							  )
									? noop
									: this.debug),
							  (this.info = isDefinedAndNotEquals(
									LOGGER_LEVEL,
									'info',
							  )
									? noop
									: this.info),
							  (this.success = isDefinedAndNotEquals(
									LOGGER_LEVEL,
									'success',
							  )
									? noop
									: this.success),
							  (this.warning = isDefinedAndNotEquals(
									LOGGER_LEVEL,
									'warning',
							  )
									? noop
									: this.warning),
							  (this.error = isDefinedAndNotEquals(
									LOGGER_LEVEL,
									'error',
							  )
									? noop
									: this.error))
							: ((this.info = noop),
							  (this.success = noop),
							  (this.warning = noop),
							  (this.error = noop),
							  (this.only = noop));
					}
					prefix;
					extend(domain) {
						return new Logger(`${this.name}:${domain}`);
					}
					debug(message, ...positionals) {
						this.logEntry({
							level: 'debug',
							message: gray(message),
							positionals,
							prefix: this.prefix,
							colors: { prefix: 'gray' },
						});
					}
					info(message, ...positionals) {
						this.logEntry({
							level: 'info',
							message,
							positionals,
							prefix: this.prefix,
							colors: { prefix: 'blue' },
						});
						const performance2 = new PerformanceEntry();
						return (message2, ...positionals2) => {
							performance2.measure(),
								this.logEntry({
									level: 'info',
									message: `${message2} ${gray(
										`${performance2.deltaTime}ms`,
									)}`,
									positionals: positionals2,
									prefix: this.prefix,
									colors: { prefix: 'blue' },
								});
						};
					}
					success(message, ...positionals) {
						this.logEntry({
							level: 'info',
							message,
							positionals,
							prefix: `✔ ${this.prefix}`,
							colors: { timestamp: 'green', prefix: 'green' },
						});
					}
					warning(message, ...positionals) {
						this.logEntry({
							level: 'warning',
							message,
							positionals,
							prefix: `⚠ ${this.prefix}`,
							colors: { timestamp: 'yellow', prefix: 'yellow' },
						});
					}
					error(message, ...positionals) {
						this.logEntry({
							level: 'error',
							message,
							positionals,
							prefix: `✖ ${this.prefix}`,
							colors: { timestamp: 'red', prefix: 'red' },
						});
					}
					only(callback) {
						callback();
					}
					createEntry(level, message) {
						return { timestamp: new Date(), level, message };
					}
					logEntry(args) {
						const {
								level,
								message,
								prefix,
								colors: customColors,
								positionals = [],
							} = args,
							entry = this.createEntry(level, message),
							colorize = {
								timestamp:
									colors_exports[
										customColors?.timestamp || 'gray'
									],
								prefix: colors_exports[
									customColors?.prefix || 'gray'
								],
							};
						this.getWriter(level)(
							[
								colorize.timestamp(
									this.formatTimestamp(entry.timestamp),
								),
							]
								.concat(
									null != prefix
										? colorize.prefix(prefix)
										: [],
								)
								.concat(serializeInput(message))
								.join(' '),
							...positionals.map(serializeInput),
						);
					}
					formatTimestamp(timestamp) {
						return `${timestamp.toLocaleTimeString(
							'en-GB',
						)}:${timestamp.getMilliseconds()}`;
					}
					getWriter(level) {
						switch (level) {
							case 'debug':
							case 'success':
							case 'info':
								return log;
							case 'warning':
								return warn;
							case 'error':
								return error;
						}
					}
				},
				PerformanceEntry = class {
					startTime;
					endTime;
					deltaTime;
					constructor() {
						this.startTime = performance.now();
					}
					measure() {
						this.endTime = performance.now();
						const deltaTime = this.endTime - this.startTime;
						this.deltaTime = deltaTime.toFixed(2);
					}
				},
				noop = () => {};
			function log(message, ...positionals) {
				IS_NODE
					? process.stdout.write(
							format2(message, ...positionals) + '\n',
					  )
					: console.log(message, ...positionals);
			}
			function warn(message, ...positionals) {
				IS_NODE
					? process.stderr.write(
							format2(message, ...positionals) + '\n',
					  )
					: console.warn(message, ...positionals);
			}
			function error(message, ...positionals) {
				IS_NODE
					? process.stderr.write(
							format2(message, ...positionals) + '\n',
					  )
					: console.error(message, ...positionals);
			}
			function getVariable(variableName) {
				return IS_NODE
					? process.env[variableName]
					: globalThis[variableName]?.toString();
			}
			function isDefinedAndNotEquals(value, expected) {
				return void 0 !== value && value !== expected;
			}
			function serializeInput(message) {
				return void 0 === message
					? 'undefined'
					: null === message
					? 'null'
					: 'string' == typeof message
					? message
					: 'object' == typeof message
					? JSON.stringify(message)
					: message.toString();
			}
			var MemoryLeakError = class extends Error {
					constructor(emitter, type, count) {
						super(
							`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`,
						),
							(this.emitter = emitter),
							(this.type = type),
							(this.count = count),
							(this.name = 'MaxListenersExceededWarning');
					}
				},
				_Emitter = class {
					static listenerCount(emitter, eventName) {
						return emitter.listenerCount(eventName);
					}
					constructor() {
						(this.events = new Map()),
							(this.maxListeners = _Emitter.defaultMaxListeners),
							(this.hasWarnedAboutPotentialMemoryLeak = !1);
					}
					_emitInternalEvent(internalEventName, eventName, listener) {
						this.emit(internalEventName, eventName, listener);
					}
					_getListeners(eventName) {
						return (
							Array.prototype.concat.apply(
								[],
								this.events.get(eventName),
							) || []
						);
					}
					_removeListener(listeners, listener) {
						const index = listeners.indexOf(listener);
						return index > -1 && listeners.splice(index, 1), [];
					}
					_wrapOnceListener(eventName, listener) {
						const onceListener = (...data) => (
							this.removeListener(eventName, onceListener),
							listener.apply(this, data)
						);
						return (
							Object.defineProperty(onceListener, 'name', {
								value: listener.name,
							}),
							onceListener
						);
					}
					setMaxListeners(maxListeners) {
						return (this.maxListeners = maxListeners), this;
					}
					getMaxListeners() {
						return this.maxListeners;
					}
					eventNames() {
						return Array.from(this.events.keys());
					}
					emit(eventName, ...data) {
						const listeners = this._getListeners(eventName);
						return (
							listeners.forEach((listener) => {
								listener.apply(this, data);
							}),
							listeners.length > 0
						);
					}
					addListener(eventName, listener) {
						this._emitInternalEvent(
							'newListener',
							eventName,
							listener,
						);
						const nextListeners =
							this._getListeners(eventName).concat(listener);
						if (
							(this.events.set(eventName, nextListeners),
							this.maxListeners > 0 &&
								this.listenerCount(eventName) >
									this.maxListeners &&
								!this.hasWarnedAboutPotentialMemoryLeak)
						) {
							this.hasWarnedAboutPotentialMemoryLeak = !0;
							const memoryLeakWarning = new MemoryLeakError(
								this,
								eventName,
								this.listenerCount(eventName),
							);
							console.warn(memoryLeakWarning);
						}
						return this;
					}
					on(eventName, listener) {
						return this.addListener(eventName, listener);
					}
					once(eventName, listener) {
						return this.addListener(
							eventName,
							this._wrapOnceListener(eventName, listener),
						);
					}
					prependListener(eventName, listener) {
						const listeners = this._getListeners(eventName);
						if (listeners.length > 0) {
							const nextListeners = [listener].concat(listeners);
							this.events.set(eventName, nextListeners);
						} else
							this.events.set(
								eventName,
								listeners.concat(listener),
							);
						return this;
					}
					prependOnceListener(eventName, listener) {
						return this.prependListener(
							eventName,
							this._wrapOnceListener(eventName, listener),
						);
					}
					removeListener(eventName, listener) {
						const listeners = this._getListeners(eventName);
						return (
							listeners.length > 0 &&
								(this._removeListener(listeners, listener),
								this.events.set(eventName, listeners),
								this._emitInternalEvent(
									'removeListener',
									eventName,
									listener,
								)),
							this
						);
					}
					off(eventName, listener) {
						return this.removeListener(eventName, listener);
					}
					removeAllListeners(eventName) {
						return (
							eventName
								? this.events.delete(eventName)
								: this.events.clear(),
							this
						);
					}
					listeners(eventName) {
						return Array.from(this._getListeners(eventName));
					}
					listenerCount(eventName) {
						return this._getListeners(eventName).length;
					}
					rawListeners(eventName) {
						return this.listeners(eventName);
					}
				},
				Emitter = _Emitter;
			Emitter.defaultMaxListeners = 10;
			function getGlobalSymbol(symbol) {
				return globalThis[symbol] || void 0;
			}
			var Interceptor = class {
				constructor(symbol) {
					(this.symbol = symbol),
						(this.readyState = 'INACTIVE'),
						(this.emitter = new Emitter()),
						(this.subscriptions = []),
						(this.logger = new Logger(symbol.description)),
						this.emitter.setMaxListeners(0),
						this.logger.info('constructing the interceptor...');
				}
				checkEnvironment() {
					return !0;
				}
				apply() {
					const logger = this.logger.extend('apply');
					if (
						(logger.info('applying the interceptor...'),
						'APPLIED' === this.readyState)
					)
						return void logger.info('intercepted already applied!');
					if (!this.checkEnvironment())
						return void logger.info(
							'the interceptor cannot be applied in this environment!',
						);
					this.readyState = 'APPLYING';
					const runningInstance = this.getInstance();
					if (runningInstance)
						return (
							logger.info('found a running instance, reusing...'),
							(this.on = (event, listener) => (
								logger.info(
									'proxying the "%s" listener',
									event,
								),
								runningInstance.emitter.addListener(
									event,
									listener,
								),
								this.subscriptions.push(() => {
									runningInstance.emitter.removeListener(
										event,
										listener,
									),
										logger.info(
											'removed proxied "%s" listener!',
											event,
										);
								}),
								this
							)),
							void (this.readyState = 'APPLIED')
						);
					logger.info(
						'no running instance found, setting up a new instance...',
					),
						this.setup(),
						this.setInstance(),
						(this.readyState = 'APPLIED');
				}
				setup() {}
				on(event, listener) {
					const logger = this.logger.extend('on');
					return 'DISPOSING' === this.readyState ||
						'DISPOSED' === this.readyState
						? (logger.info(
								'cannot listen to events, already disposed!',
						  ),
						  this)
						: (logger.info(
								'adding "%s" event listener:',
								event,
								listener,
						  ),
						  this.emitter.on(event, listener),
						  this);
				}
				once(event, listener) {
					return this.emitter.once(event, listener), this;
				}
				off(event, listener) {
					return this.emitter.off(event, listener), this;
				}
				removeAllListeners(event) {
					return this.emitter.removeAllListeners(event), this;
				}
				dispose() {
					const logger = this.logger.extend('dispose');
					if ('DISPOSED' !== this.readyState)
						if (
							(logger.info('disposing the interceptor...'),
							(this.readyState = 'DISPOSING'),
							this.getInstance())
						) {
							if (
								(this.clearInstance(),
								logger.info(
									'global symbol deleted:',
									getGlobalSymbol(this.symbol),
								),
								this.subscriptions.length > 0)
							) {
								logger.info(
									'disposing of %d subscriptions...',
									this.subscriptions.length,
								);
								for (const dispose of this.subscriptions)
									dispose();
								(this.subscriptions = []),
									logger.info(
										'disposed of all subscriptions!',
										this.subscriptions.length,
									);
							}
							this.emitter.removeAllListeners(),
								logger.info('destroyed the listener!'),
								(this.readyState = 'DISPOSED');
						} else
							logger.info(
								'no interceptors running, skipping dispose...',
							);
					else logger.info('cannot dispose, already disposed!');
				}
				getInstance() {
					var _a;
					const instance = getGlobalSymbol(this.symbol);
					return (
						this.logger.info(
							'retrieved global instance:',
							null ==
								(_a =
									null == instance
										? void 0
										: instance.constructor)
								? void 0
								: _a.name,
						),
						instance
					);
				}
				setInstance() {
					!(function setGlobalSymbol(symbol, value) {
						globalThis[symbol] = value;
					})(this.symbol, this),
						this.logger.info(
							'set global instance!',
							this.symbol.description,
						);
				}
				clearInstance() {
					!(function deleteGlobalSymbol(symbol) {
						delete globalThis[symbol];
					})(this.symbol),
						this.logger.info(
							'cleared global instance!',
							this.symbol.description,
						);
				}
			};
			function createRequestId() {
				return Math.random().toString(16).slice(2);
			}
			var BatchInterceptor = class extends Interceptor {
				constructor(options) {
					(BatchInterceptor.symbol = Symbol(options.name)),
						super(BatchInterceptor.symbol),
						(this.interceptors = options.interceptors);
				}
				setup() {
					const logger = this.logger.extend('setup');
					logger.info(
						'applying all %d interceptors...',
						this.interceptors.length,
					);
					for (const interceptor of this.interceptors)
						logger.info(
							'applying "%s" interceptor...',
							interceptor.constructor.name,
						),
							interceptor.apply(),
							logger.info(
								'adding interceptor dispose subscription',
							),
							this.subscriptions.push(() =>
								interceptor.dispose(),
							);
				}
				on(event, listener) {
					for (const interceptor of this.interceptors)
						interceptor.on(event, listener);
					return this;
				}
				once(event, listener) {
					for (const interceptor of this.interceptors)
						interceptor.once(event, listener);
					return this;
				}
				off(event, listener) {
					for (const interceptor of this.interceptors)
						interceptor.off(event, listener);
					return this;
				}
				removeAllListeners(event) {
					for (const interceptors of this.interceptors)
						interceptors.removeAllListeners(event);
					return this;
				}
			};
			var createStartHandler = (context) =>
				function start(options, customOptions) {
					const workerRegistration = (async () => {
						context.events.removeAllListeners(),
							context.workerChannel.on(
								'REQUEST',
								createRequestListener(context, options),
							),
							context.workerChannel.on(
								'RESPONSE',
								(function createResponseListener(context) {
									return (_, message) => {
										const { payload: responseJson } =
												message,
											{ requestId } = responseJson,
											request =
												context.requests.get(requestId);
										if (
											(context.requests.delete(requestId),
											responseJson.type?.includes(
												'opaque',
											))
										)
											return;
										const response =
											0 === responseJson.status
												? Response.error()
												: new Response(
														isResponseWithoutBody(
															responseJson.status,
														)
															? null
															: responseJson.body,
														responseJson,
												  );
										response.url ||
											Object.defineProperty(
												response,
												'url',
												{
													value: request.url,
													enumerable: !0,
													writable: !1,
												},
											),
											context.emitter.emit(
												responseJson.isMockedResponse
													? 'response:mocked'
													: 'response:bypass',
												{
													response,
													request,
													requestId:
														responseJson.requestId,
												},
											);
									};
								})(context),
							);
						const instance = await getWorkerInstance(
								options.serviceWorker.url,
								options.serviceWorker.options,
								options.findWorker,
							),
							[worker, registration] = instance;
						if (!worker) {
							const missingWorkerMessage =
								customOptions?.findWorker
									? devUtils.e.formatMessage(
											'Failed to locate the Service Worker registration using a custom "findWorker" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at "%s".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n',
											options.serviceWorker.url,
									  )
									: devUtils.e.formatMessage(
											'Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL "%s" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom "serviceWorker.url" option to point to the actual worker script location, or a custom "findWorker" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start',
											options.serviceWorker.url,
											location.host,
									  );
							throw new Error(missingWorkerMessage);
						}
						return (
							(context.worker = worker),
							(context.registration = registration),
							context.events.addListener(
								window,
								'beforeunload',
								() => {
									'redundant' !== worker.state &&
										context.workerChannel.send(
											'CLIENT_CLOSED',
										),
										window.clearInterval(
											context.keepAliveInterval,
										);
								},
							),
							await (async function checkWorkerIntegrity(
								context,
							) {
								context.workerChannel.send(
									'INTEGRITY_CHECK_REQUEST',
								);
								const { payload } = await context.events.once(
									'INTEGRITY_CHECK_RESPONSE',
								);
								'26357c79639bfa20d64c0efca2a87423' !==
									payload.checksum &&
									devUtils.e.warn(
										`The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  • npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`,
									);
							})(context).catch((error2) => {
								devUtils.e.error(
									'Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.',
								),
									console.error(error2);
							}),
							(context.keepAliveInterval = window.setInterval(
								() =>
									context.workerChannel.send(
										'KEEPALIVE_REQUEST',
									),
								5e3,
							)),
							(function validateWorkerScope(
								registration,
								options,
							) {
								options?.quiet ||
									location.href.startsWith(
										registration.scope,
									) ||
									devUtils.e.warn(
										`Cannot intercept requests on this page because it's outside of the worker's scope ("${registration.scope}"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level ("/") of your application.\n- Set the "Service-Worker-Allowed" response header to allow out-of-scope workers.`,
									);
							})(registration, context.startOptions),
							registration
						);
					})().then(async (registration) => {
						const pendingInstance =
							registration.installing || registration.waiting;
						return (
							pendingInstance &&
								(await new Promise((resolve) => {
									pendingInstance.addEventListener(
										'statechange',
										() => {
											if (
												'activated' ===
												pendingInstance.state
											)
												return resolve();
										},
									);
								})),
							await (async function enableMocking(
								context,
								options,
							) {
								context.workerChannel.send('MOCK_ACTIVATE'),
									await context.events.once(
										'MOCKING_ENABLED',
									),
									context.isMockingEnabled
										? devUtils.e.warn(
												'Found a redundant "worker.start()" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this "worker.start()" call.',
										  )
										: ((context.isMockingEnabled = !0),
										  printStartMessage({
												quiet: options.quiet,
												workerScope:
													context.registration?.scope,
												workerUrl:
													context.worker?.scriptURL,
										  }));
							})(context, options).catch((error2) => {
								throw new Error(
									`Failed to enable mocking: ${error2?.message}`,
								);
							}),
							registration
						);
					});
					return workerRegistration;
				};
			function printStopMessage(args = {}) {
				args.quiet ||
					console.log(
						`%c${devUtils.e.formatMessage('Mocking disabled.')}`,
						'color:orangered;font-weight:bold;',
					);
			}
			var DEFAULT_START_OPTIONS = {
				serviceWorker: { url: '/mockServiceWorker.js', options: null },
				quiet: !1,
				waitUntilReady: !0,
				onUnhandledRequest: 'warn',
				findWorker: (scriptURL, mockServiceWorkerUrl) =>
					scriptURL === mockServiceWorkerUrl,
			};
			var DeferredPromise = class extends Promise {
					#executor;
					resolve;
					reject;
					constructor(executor = null) {
						const deferredExecutor =
							(function createDeferredExecutor() {
								const executor = (resolve, reject) => {
									(executor.state = 'pending'),
										(executor.resolve = (data) => {
											if ('pending' === executor.state)
												return (
													(executor.result = data),
													resolve(
														data instanceof Promise
															? data
															: Promise.resolve(
																	data,
															  ).then(
																	(value) => (
																		(executor.state =
																			'fulfilled'),
																		value
																	),
															  ),
													)
												);
										}),
										(executor.reject = (reason) => {
											if ('pending' === executor.state)
												return (
													queueMicrotask(() => {
														executor.state =
															'rejected';
													}),
													reject(
														(executor.rejectionReason =
															reason),
													)
												);
										});
								};
								return executor;
							})();
						super((originalResolve, originalReject) => {
							deferredExecutor(originalResolve, originalReject),
								executor?.(
									deferredExecutor.resolve,
									deferredExecutor.reject,
								);
						}),
							(this.#executor = deferredExecutor),
							(this.resolve = this.#executor.resolve),
							(this.reject = this.#executor.reject);
					}
					get state() {
						return this.#executor.state;
					}
					get rejectionReason() {
						return this.#executor.rejectionReason;
					}
					then(onFulfilled, onRejected) {
						return this.#decorate(
							super.then(onFulfilled, onRejected),
						);
					}
					catch(onRejected) {
						return this.#decorate(super.catch(onRejected));
					}
					finally(onfinally) {
						return this.#decorate(super.finally(onfinally));
					}
					#decorate(promise) {
						return Object.defineProperties(promise, {
							resolve: { configurable: !0, value: this.resolve },
							reject: { configurable: !0, value: this.reject },
						});
					}
				},
				InterceptorError = class extends Error {
					constructor(message) {
						super(message),
							(this.name = 'InterceptorError'),
							Object.setPrototypeOf(
								this,
								InterceptorError.prototype,
							);
					}
				},
				kRequestHandled = Symbol('kRequestHandled'),
				kResponsePromise = Symbol('kResponsePromise'),
				RequestController = class {
					constructor(request) {
						(this.request = request),
							(this[kRequestHandled] = !1),
							(this[kResponsePromise] = new DeferredPromise());
					}
					respondWith(response) {
						invariant2.as(
							InterceptorError,
							!this[kRequestHandled],
							'Failed to respond to the "%s %s" request: the "request" event has already been handled.',
							this.request.method,
							this.request.url,
						),
							(this[kRequestHandled] = !0),
							this[kResponsePromise].resolve(response);
					}
					errorWith(error2) {
						invariant2.as(
							InterceptorError,
							!this[kRequestHandled],
							'Failed to error the "%s %s" request: the "request" event has already been handled.',
							this.request.method,
							this.request.url,
						),
							(this[kRequestHandled] = !0),
							this[kResponsePromise].resolve(error2);
					}
				};
			async function emitAsync(emitter, eventName, ...data) {
				const listners = emitter.listeners(eventName);
				if (0 !== listners.length)
					for (const listener of listners)
						await listener.apply(emitter, data);
			}
			async function handleRequest2(options) {
				const handleResponse = async (response) => (
						response instanceof Error
							? options.onError(response)
							: !(function isResponseError(response) {
									return (
										(function isPropertyAccessible(
											obj,
											key,
										) {
											try {
												return obj[key], !0;
											} catch (e) {
												return !1;
											}
										})(response, 'type') &&
										'error' === response.type
									);
							  })(response)
							? await options.onResponse(response)
							: options.onRequestError(response),
						!0
					),
					handleResponseError = async (error2) => {
						if (error2 instanceof InterceptorError)
							throw result.error;
						return (function isNodeLikeError(error2) {
							return (
								null != error2 &&
								error2 instanceof Error &&
								'code' in error2 &&
								'errno' in error2
							);
						})(error2)
							? (options.onError(error2), !0)
							: error2 instanceof Response &&
									(await handleResponse(error2));
					};
				options.emitter.once(
					'request',
					({ requestId: pendingRequestId }) => {
						pendingRequestId === options.requestId &&
							'pending' ===
								options.controller[kResponsePromise].state &&
							options.controller[kResponsePromise].resolve(
								void 0,
							);
					},
				);
				const requestAbortPromise = new DeferredPromise();
				options.request.signal &&
					options.request.signal.addEventListener(
						'abort',
						() => {
							requestAbortPromise.reject(
								options.request.signal.reason,
							);
						},
						{ once: !0 },
					);
				const result = await browser_until(async () => {
					const requestListtenersPromise = emitAsync(
						options.emitter,
						'request',
						{
							requestId: options.requestId,
							request: options.request,
							controller: options.controller,
						},
					);
					await Promise.race([
						requestAbortPromise,
						requestListtenersPromise,
						options.controller[kResponsePromise],
					]);
					return await options.controller[kResponsePromise];
				});
				if ('rejected' === requestAbortPromise.state)
					return (
						options.onError(requestAbortPromise.rejectionReason), !0
					);
				if (result.error) {
					if (await handleResponseError(result.error)) return !0;
					if (
						options.emitter.listenerCount('unhandledException') > 0
					) {
						const unhandledExceptionController =
							new RequestController(options.request);
						await emitAsync(options.emitter, 'unhandledException', {
							error: result.error,
							request: options.request,
							requestId: options.requestId,
							controller: unhandledExceptionController,
						}).then(() => {
							'pending' ===
								unhandledExceptionController[kResponsePromise]
									.state &&
								unhandledExceptionController[
									kResponsePromise
								].resolve(void 0);
						});
						const nextResult = await browser_until(
							() =>
								unhandledExceptionController[kResponsePromise],
						);
						if (nextResult.error)
							return handleResponseError(nextResult.error);
						if (nextResult.data)
							return handleResponse(nextResult.data);
					}
					return (
						options.onResponse(
							(function createServerErrorResponse(body) {
								return new Response(
									JSON.stringify(
										body instanceof Error
											? {
													name: body.name,
													message: body.message,
													stack: body.stack,
											  }
											: body,
									),
									{
										status: 500,
										statusText: 'Unhandled Exception',
										headers: {
											'Content-Type': 'application/json',
										},
									},
								);
							})(result.error),
						),
						!0
					);
				}
				return !!result.data && handleResponse(result.data);
			}
			function createNetworkError(cause) {
				return Object.assign(new TypeError('Failed to fetch'), {
					cause,
				});
			}
			var REQUEST_BODY_HEADERS = [
					'content-encoding',
					'content-language',
					'content-location',
					'content-type',
					'content-length',
				],
				kRedirectCount = Symbol('kRedirectCount');
			function sameOrigin(left, right) {
				return (
					(left.origin === right.origin && 'null' === left.origin) ||
					(left.protocol === right.protocol &&
						left.hostname === right.hostname &&
						left.port === right.port)
				);
			}
			var _FetchInterceptor = class extends Interceptor {
					constructor() {
						super(_FetchInterceptor.symbol);
					}
					checkEnvironment() {
						return (
							'undefined' != typeof globalThis &&
							void 0 !== globalThis.fetch
						);
					}
					async setup() {
						const pureFetch = globalThis.fetch;
						invariant2(
							!pureFetch[IS_PATCHED_MODULE],
							'Failed to patch the "fetch" module: already patched.',
						),
							(globalThis.fetch = async (input, init) => {
								const requestId = createRequestId(),
									resolvedInput =
										'string' != typeof input ||
										'undefined' == typeof location ||
										(function canParseUrl(url) {
											try {
												return new URL(url), !0;
											} catch (_error) {
												return !1;
											}
										})(input)
											? input
											: new URL(input, location.origin),
									request = new Request(resolvedInput, init),
									responsePromise = new DeferredPromise(),
									controller = new RequestController(request);
								this.logger.info(
									'[%s] %s',
									request.method,
									request.url,
								),
									this.logger.info(
										'awaiting for the mocked response...',
									),
									this.logger.info(
										'emitting the "request" event for %s listener(s)...',
										this.emitter.listenerCount('request'),
									);
								const isRequestHandled = await handleRequest2({
									request,
									requestId,
									emitter: this.emitter,
									controller,
									onResponse: async (response) => {
										if (
											(this.logger.info(
												'received mocked response!',
												{ response },
											),
											RESPONSE_STATUS_CODES_WITH_REDIRECT.has(
												response.status,
											))
										) {
											if ('error' === request.redirect)
												return void responsePromise.reject(
													createNetworkError(
														'unexpected redirect',
													),
												);
											if ('follow' === request.redirect)
												return void (async function followFetchRedirect(
													request,
													response,
												) {
													if (
														303 !==
															response.status &&
														null != request.body
													)
														return Promise.reject(
															createNetworkError(),
														);
													const requestUrl = new URL(
														request.url,
													);
													let locationUrl;
													try {
														locationUrl = new URL(
															response.headers.get(
																'location',
															),
															request.url,
														);
													} catch (error2) {
														return Promise.reject(
															createNetworkError(
																error2,
															),
														);
													}
													if (
														'http:' !==
															locationUrl.protocol &&
														'https:' !==
															locationUrl.protocol
													)
														return Promise.reject(
															createNetworkError(
																'URL scheme must be a HTTP(S) scheme',
															),
														);
													if (
														Reflect.get(
															request,
															kRedirectCount,
														) > 20
													)
														return Promise.reject(
															createNetworkError(
																'redirect count exceeded',
															),
														);
													if (
														(Object.defineProperty(
															request,
															kRedirectCount,
															{
																value:
																	(Reflect.get(
																		request,
																		kRedirectCount,
																	) || 0) + 1,
															},
														),
														'cors' ===
															request.mode &&
															(locationUrl.username ||
																locationUrl.password) &&
															!sameOrigin(
																requestUrl,
																locationUrl,
															))
													)
														return Promise.reject(
															createNetworkError(
																'cross origin not allowed for request mode "cors"',
															),
														);
													const requestInit = {};
													return (
														(([301, 302].includes(
															response.status,
														) &&
															'POST' ===
																request.method) ||
															(303 ===
																response.status &&
																![
																	'HEAD',
																	'GET',
																].includes(
																	request.method,
																))) &&
															((requestInit.method =
																'GET'),
															(requestInit.body =
																null),
															REQUEST_BODY_HEADERS.forEach(
																(
																	headerName,
																) => {
																	request.headers.delete(
																		headerName,
																	);
																},
															)),
														sameOrigin(
															requestUrl,
															locationUrl,
														) ||
															(request.headers.delete(
																'authorization',
															),
															request.headers.delete(
																'proxy-authorization',
															),
															request.headers.delete(
																'cookie',
															),
															request.headers.delete(
																'host',
															)),
														(requestInit.headers =
															request.headers),
														fetch(
															new Request(
																locationUrl,
																requestInit,
															),
														)
													);
												})(request, response).then(
													(response2) => {
														responsePromise.resolve(
															response2,
														);
													},
													(reason) => {
														responsePromise.reject(
															reason,
														);
													},
												);
										}
										this.emitter.listenerCount('response') >
											0 &&
											(this.logger.info(
												'emitting the "response" event...',
											),
											await emitAsync(
												this.emitter,
												'response',
												{
													response: response.clone(),
													isMockedResponse: !0,
													request,
													requestId,
												},
											)),
											Object.defineProperty(
												response,
												'url',
												{
													writable: !1,
													enumerable: !0,
													configurable: !1,
													value: request.url,
												},
											),
											responsePromise.resolve(response);
									},
									onRequestError: (response) => {
										this.logger.info(
											'request has errored!',
											{ response },
										),
											responsePromise.reject(
												createNetworkError(response),
											);
									},
									onError: (error2) => {
										this.logger.info(
											'request has been aborted!',
											{ error: error2 },
										),
											responsePromise.reject(error2);
									},
								});
								return isRequestHandled
									? (this.logger.info(
											'request has been handled, returning mock promise...',
									  ),
									  responsePromise)
									: (this.logger.info(
											'no mocked response received, performing request as-is...',
									  ),
									  pureFetch(request).then((response) => {
											if (
												(this.logger.info(
													'original fetch performed',
													response,
												),
												this.emitter.listenerCount(
													'response',
												) > 0)
											) {
												this.logger.info(
													'emitting the "response" event...',
												);
												const responseClone =
													response.clone();
												this.emitter.emit('response', {
													response: responseClone,
													isMockedResponse: !1,
													request,
													requestId,
												});
											}
											return response;
									  }));
							}),
							Object.defineProperty(
								globalThis.fetch,
								IS_PATCHED_MODULE,
								{ enumerable: !0, configurable: !0, value: !0 },
							),
							this.subscriptions.push(() => {
								Object.defineProperty(
									globalThis.fetch,
									IS_PATCHED_MODULE,
									{ value: void 0 },
								),
									(globalThis.fetch = pureFetch),
									this.logger.info(
										'restored native "globalThis.fetch"!',
										globalThis.fetch.name,
									);
							});
					}
				},
				FetchInterceptor = _FetchInterceptor;
			FetchInterceptor.symbol = Symbol('fetch');
			var EventPolyfill = class {
					constructor(type, options) {
						(this.NONE = 0),
							(this.CAPTURING_PHASE = 1),
							(this.AT_TARGET = 2),
							(this.BUBBLING_PHASE = 3),
							(this.type = ''),
							(this.srcElement = null),
							(this.currentTarget = null),
							(this.eventPhase = 0),
							(this.isTrusted = !0),
							(this.composed = !1),
							(this.cancelable = !0),
							(this.defaultPrevented = !1),
							(this.bubbles = !0),
							(this.lengthComputable = !0),
							(this.loaded = 0),
							(this.total = 0),
							(this.cancelBubble = !1),
							(this.returnValue = !0),
							(this.type = type),
							(this.target =
								(null == options ? void 0 : options.target) ||
								null),
							(this.currentTarget =
								(null == options
									? void 0
									: options.currentTarget) || null),
							(this.timeStamp = Date.now());
					}
					composedPath() {
						return [];
					}
					initEvent(type, bubbles, cancelable) {
						(this.type = type),
							(this.bubbles = !!bubbles),
							(this.cancelable = !!cancelable);
					}
					preventDefault() {
						this.defaultPrevented = !0;
					}
					stopPropagation() {}
					stopImmediatePropagation() {}
				},
				ProgressEventPolyfill = class extends EventPolyfill {
					constructor(type, init) {
						super(type),
							(this.lengthComputable =
								(null == init
									? void 0
									: init.lengthComputable) || !1),
							(this.composed =
								(null == init ? void 0 : init.composed) || !1),
							(this.loaded =
								(null == init ? void 0 : init.loaded) || 0),
							(this.total =
								(null == init ? void 0 : init.total) || 0);
					}
				},
				SUPPORTS_PROGRESS_EVENT = 'undefined' != typeof ProgressEvent;
			function findPropertySource(target, propertyName) {
				if (!(propertyName in target)) return null;
				if (Object.prototype.hasOwnProperty.call(target, propertyName))
					return target;
				const prototype = Reflect.getPrototypeOf(target);
				return prototype
					? findPropertySource(prototype, propertyName)
					: null;
			}
			function createProxy(target, options) {
				const proxy = new Proxy(
					target,
					(function optionsToProxyHandler(options) {
						const {
								constructorCall,
								methodCall,
								getProperty,
								setProperty,
							} = options,
							handler = {};
						void 0 !== constructorCall &&
							(handler.construct = function (
								target,
								args,
								newTarget,
							) {
								const next = Reflect.construct.bind(
									null,
									target,
									args,
									newTarget,
								);
								return constructorCall.call(
									newTarget,
									args,
									next,
								);
							});
						return (
							(handler.set = function (
								target,
								propertyName,
								nextValue,
							) {
								const next = () => {
									const propertySource =
											findPropertySource(
												target,
												propertyName,
											) || target,
										ownDescriptors =
											Reflect.getOwnPropertyDescriptor(
												propertySource,
												propertyName,
											);
									return void 0 !==
										(null == ownDescriptors
											? void 0
											: ownDescriptors.set)
										? (ownDescriptors.set.apply(target, [
												nextValue,
										  ]),
										  !0)
										: Reflect.defineProperty(
												propertySource,
												propertyName,
												{
													writable: !0,
													enumerable: !0,
													configurable: !0,
													value: nextValue,
												},
										  );
								};
								return void 0 !== setProperty
									? setProperty.call(
											target,
											[propertyName, nextValue],
											next,
									  )
									: next();
							}),
							(handler.get = function (
								target,
								propertyName,
								receiver,
							) {
								const next = () => target[propertyName],
									value =
										void 0 !== getProperty
											? getProperty.call(
													target,
													[propertyName, receiver],
													next,
											  )
											: next();
								return 'function' == typeof value
									? (...args) => {
											const next2 = value.bind(
												target,
												...args,
											);
											return void 0 !== methodCall
												? methodCall.call(
														target,
														[propertyName, args],
														next2,
												  )
												: next2();
									  }
									: value;
							}),
							handler
						);
					})(options),
				);
				return proxy;
			}
			function createHeadersFromXMLHttpReqestHeaders(headersString) {
				const headers = new Headers(),
					lines = headersString.split(/[\r\n]+/);
				for (const line of lines) {
					if ('' === line.trim()) continue;
					const [name, ...parts] = line.split(': '),
						value = parts.join(': ');
					headers.append(name, value);
				}
				return headers;
			}
			async function getBodyByteLength(input) {
				const explicitContentLength =
					input.headers.get('content-length');
				if (
					null != explicitContentLength &&
					'' !== explicitContentLength
				)
					return Number(explicitContentLength);
				return (await input.arrayBuffer()).byteLength;
			}
			var kIsRequestHandled = Symbol('kIsRequestHandled'),
				IS_NODE2 = isNodeProcess(),
				kFetchRequest = Symbol('kFetchRequest');
			function toAbsoluteUrl(url) {
				return 'undefined' == typeof location
					? new URL(url)
					: new URL(url.toString(), location.href);
			}
			function browser_define(target, property, value) {
				Reflect.defineProperty(target, property, {
					writable: !0,
					enumerable: !0,
					value,
				});
			}
			function createXMLHttpRequestProxy({ emitter, logger }) {
				return new Proxy(globalThis.XMLHttpRequest, {
					construct(target, args, newTarget) {
						logger.info('constructed new XMLHttpRequest');
						const originalRequest = Reflect.construct(
								target,
								args,
								newTarget,
							),
							prototypeDescriptors =
								Object.getOwnPropertyDescriptors(
									target.prototype,
								);
						for (const propertyName in prototypeDescriptors)
							Reflect.defineProperty(
								originalRequest,
								propertyName,
								prototypeDescriptors[propertyName],
							);
						const xhrRequestController = new (class {
							constructor(initialRequest, logger) {
								(this.initialRequest = initialRequest),
									(this.logger = logger),
									(this.method = 'GET'),
									(this.url = null),
									(this[kIsRequestHandled] = !1),
									(this.events = new Map()),
									(this.uploadEvents = new Map()),
									(this.requestId = createRequestId()),
									(this.requestHeaders = new Headers()),
									(this.responseBuffer = new Uint8Array()),
									(this.request = createProxy(
										initialRequest,
										{
											setProperty: (
												[propertyName, nextValue],
												invoke,
											) => {
												if (
													'ontimeout' === propertyName
												) {
													const eventName =
														propertyName.slice(2);
													return (
														this.request.addEventListener(
															eventName,
															nextValue,
														),
														invoke()
													);
												}
												return invoke();
											},
											methodCall: (
												[methodName, args],
												invoke,
											) => {
												var _a;
												switch (methodName) {
													case 'open': {
														const [method, url] =
															args;
														return (
															void 0 === url
																? ((this.method =
																		'GET'),
																  (this.url =
																		toAbsoluteUrl(
																			method,
																		)))
																: ((this.method =
																		method),
																  (this.url =
																		toAbsoluteUrl(
																			url,
																		))),
															(this.logger =
																this.logger.extend(
																	`${this.method} ${this.url.href}`,
																)),
															this.logger.info(
																'open',
																this.method,
																this.url.href,
															),
															invoke()
														);
													}
													case 'addEventListener': {
														const [
															eventName,
															listener,
														] = args;
														return (
															this.registerEvent(
																eventName,
																listener,
															),
															this.logger.info(
																'addEventListener',
																eventName,
																listener,
															),
															invoke()
														);
													}
													case 'setRequestHeader': {
														const [name, value] =
															args;
														return (
															this.requestHeaders.set(
																name,
																value,
															),
															this.logger.info(
																'setRequestHeader',
																name,
																value,
															),
															invoke()
														);
													}
													case 'send': {
														const [body] = args;
														this.request.addEventListener(
															'load',
															() => {
																if (
																	void 0 !==
																	this
																		.onResponse
																) {
																	const fetchResponse =
																		(function createResponse(
																			request,
																			body,
																		) {
																			const responseBodyOrNull =
																				isResponseWithoutBody(
																					request.status,
																				)
																					? null
																					: body;
																			return new Response(
																				responseBodyOrNull,
																				{
																					status: request.status,
																					statusText:
																						request.statusText,
																					headers:
																						createHeadersFromXMLHttpReqestHeaders(
																							request.getAllResponseHeaders(),
																						),
																				},
																			);
																		})(
																			this
																				.request,
																			this
																				.request
																				.response,
																		);
																	this.onResponse.call(
																		this,
																		{
																			response:
																				fetchResponse,
																			isMockedResponse:
																				this[
																					kIsRequestHandled
																				],
																			request:
																				fetchRequest,
																			requestId:
																				this
																					.requestId,
																		},
																	);
																}
															},
														);
														const requestBody =
																'string' ==
																typeof body
																	? (function encodeBuffer(
																			text,
																	  ) {
																			return encoder.encode(
																				text,
																			);
																	  })(body)
																	: body,
															fetchRequest =
																this.toFetchApiRequest(
																	requestBody,
																);
														(this[kFetchRequest] =
															fetchRequest.clone()),
															(
																(null ==
																(_a =
																	this
																		.onRequest)
																	? void 0
																	: _a.call(
																			this,
																			{
																				request:
																					fetchRequest,
																				requestId:
																					this
																						.requestId,
																			},
																	  )) ||
																Promise.resolve()
															).finally(() => {
																if (
																	!this[
																		kIsRequestHandled
																	]
																)
																	return (
																		this.logger.info(
																			'request callback settled but request has not been handled (readystate %d), performing as-is...',
																			this
																				.request
																				.readyState,
																		),
																		IS_NODE2 &&
																			this.request.setRequestHeader(
																				'x-interceptors-internal-request-id',
																				this
																					.requestId,
																			),
																		invoke()
																	);
															});
														break;
													}
													default:
														return invoke();
												}
											},
										},
									)),
									browser_define(
										this.request,
										'upload',
										createProxy(this.request.upload, {
											setProperty: (
												[propertyName, nextValue],
												invoke,
											) => {
												switch (propertyName) {
													case 'onloadstart':
													case 'onprogress':
													case 'onaboart':
													case 'onerror':
													case 'onload':
													case 'ontimeout':
													case 'onloadend': {
														const eventName =
															propertyName.slice(
																2,
															);
														this.registerUploadEvent(
															eventName,
															nextValue,
														);
													}
												}
												return invoke();
											},
											methodCall: (
												[methodName, args],
												invoke,
											) => {
												if (
													'addEventListener' ===
													methodName
												) {
													const [
														eventName,
														listener,
													] = args;
													return (
														this.registerUploadEvent(
															eventName,
															listener,
														),
														this.logger.info(
															'upload.addEventListener',
															eventName,
															listener,
														),
														invoke()
													);
												}
											},
										}),
									);
							}
							registerEvent(eventName, listener) {
								const nextEvents = (
									this.events.get(eventName) || []
								).concat(listener);
								this.events.set(eventName, nextEvents),
									this.logger.info(
										'registered event "%s"',
										eventName,
										listener,
									);
							}
							registerUploadEvent(eventName, listener) {
								const nextEvents = (
									this.uploadEvents.get(eventName) || []
								).concat(listener);
								this.uploadEvents.set(eventName, nextEvents),
									this.logger.info(
										'registered upload event "%s"',
										eventName,
										listener,
									);
							}
							async respondWith(response) {
								if (
									((this[kIsRequestHandled] = !0),
									this[kFetchRequest])
								) {
									const totalRequestBodyLength =
										await getBodyByteLength(
											this[kFetchRequest],
										);
									this.trigger(
										'loadstart',
										this.request.upload,
										{
											loaded: 0,
											total: totalRequestBodyLength,
										},
									),
										this.trigger(
											'progress',
											this.request.upload,
											{
												loaded: totalRequestBodyLength,
												total: totalRequestBodyLength,
											},
										),
										this.trigger(
											'load',
											this.request.upload,
											{
												loaded: totalRequestBodyLength,
												total: totalRequestBodyLength,
											},
										),
										this.trigger(
											'loadend',
											this.request.upload,
											{
												loaded: totalRequestBodyLength,
												total: totalRequestBodyLength,
											},
										);
								}
								this.logger.info(
									'responding with a mocked response: %d %s',
									response.status,
									response.statusText,
								),
									browser_define(
										this.request,
										'status',
										response.status,
									),
									browser_define(
										this.request,
										'statusText',
										response.statusText,
									),
									browser_define(
										this.request,
										'responseURL',
										this.url.href,
									),
									(this.request.getResponseHeader = new Proxy(
										this.request.getResponseHeader,
										{
											apply: (_, __, args) => {
												if (
													(this.logger.info(
														'getResponseHeader',
														args[0],
													),
													this.request.readyState <
														this.request
															.HEADERS_RECEIVED)
												)
													return (
														this.logger.info(
															'headers not received yet, returning null',
														),
														null
													);
												const headerValue =
													response.headers.get(
														args[0],
													);
												return (
													this.logger.info(
														'resolved response header "%s" to',
														args[0],
														headerValue,
													),
													headerValue
												);
											},
										},
									)),
									(this.request.getAllResponseHeaders =
										new Proxy(
											this.request.getAllResponseHeaders,
											{
												apply: () => {
													if (
														(this.logger.info(
															'getAllResponseHeaders',
														),
														this.request
															.readyState <
															this.request
																.HEADERS_RECEIVED)
													)
														return (
															this.logger.info(
																'headers not received yet, returning empty string',
															),
															''
														);
													const allHeaders =
														Array.from(
															response.headers.entries(),
														)
															.map(
																([
																	headerName,
																	headerValue,
																]) =>
																	`${headerName}: ${headerValue}`,
															)
															.join('\r\n');
													return (
														this.logger.info(
															'resolved all response headers to',
															allHeaders,
														),
														allHeaders
													);
												},
											},
										)),
									Object.defineProperties(this.request, {
										response: {
											enumerable: !0,
											configurable: !1,
											get: () => this.response,
										},
										responseText: {
											enumerable: !0,
											configurable: !1,
											get: () => this.responseText,
										},
										responseXML: {
											enumerable: !0,
											configurable: !1,
											get: () => this.responseXML,
										},
									});
								const totalResponseBodyLength =
									await getBodyByteLength(response.clone());
								this.logger.info(
									'calculated response body length',
									totalResponseBodyLength,
								),
									this.trigger('loadstart', this.request, {
										loaded: 0,
										total: totalResponseBodyLength,
									}),
									this.setReadyState(
										this.request.HEADERS_RECEIVED,
									),
									this.setReadyState(this.request.LOADING);
								const finalizeResponse = () => {
									this.logger.info(
										'finalizing the mocked response...',
									),
										this.setReadyState(this.request.DONE),
										this.trigger('load', this.request, {
											loaded: this.responseBuffer
												.byteLength,
											total: totalResponseBodyLength,
										}),
										this.trigger('loadend', this.request, {
											loaded: this.responseBuffer
												.byteLength,
											total: totalResponseBodyLength,
										});
								};
								if (response.body) {
									this.logger.info(
										'mocked response has body, streaming...',
									);
									const reader = response.body.getReader(),
										readNextResponseBodyChunk =
											async () => {
												const { value, done } =
													await reader.read();
												if (done)
													return (
														this.logger.info(
															'response body stream done!',
														),
														void finalizeResponse()
													);
												value &&
													(this.logger.info(
														'read response body chunk:',
														value,
													),
													(this.responseBuffer =
														(function concatArrayBuffer(
															left,
															right,
														) {
															const result =
																new Uint8Array(
																	left.byteLength +
																		right.byteLength,
																);
															return (
																result.set(
																	left,
																	0,
																),
																result.set(
																	right,
																	left.byteLength,
																),
																result
															);
														})(
															this.responseBuffer,
															value,
														)),
													this.trigger(
														'progress',
														this.request,
														{
															loaded: this
																.responseBuffer
																.byteLength,
															total: totalResponseBodyLength,
														},
													)),
													readNextResponseBodyChunk();
											};
									readNextResponseBodyChunk();
								} else finalizeResponse();
							}
							responseBufferToText() {
								return (function decodeBuffer(
									buffer,
									encoding,
								) {
									return new TextDecoder(encoding).decode(
										buffer,
									);
								})(this.responseBuffer);
							}
							get response() {
								if (
									(this.logger.info(
										'getResponse (responseType: %s)',
										this.request.responseType,
									),
									this.request.readyState !==
										this.request.DONE)
								)
									return null;
								switch (this.request.responseType) {
									case 'json': {
										const responseJson =
											(function parseJson(data) {
												try {
													return JSON.parse(data);
												} catch (_) {
													return null;
												}
											})(this.responseBufferToText());
										return (
											this.logger.info(
												'resolved response JSON',
												responseJson,
											),
											responseJson
										);
									}
									case 'arraybuffer': {
										const arrayBuffer =
											(function toArrayBuffer(array) {
												return array.buffer.slice(
													array.byteOffset,
													array.byteOffset +
														array.byteLength,
												);
											})(this.responseBuffer);
										return (
											this.logger.info(
												'resolved response ArrayBuffer',
												arrayBuffer,
											),
											arrayBuffer
										);
									}
									case 'blob': {
										const mimeType =
												this.request.getResponseHeader(
													'Content-Type',
												) || 'text/plain',
											responseBlob = new Blob(
												[this.responseBufferToText()],
												{ type: mimeType },
											);
										return (
											this.logger.info(
												'resolved response Blob (mime type: %s)',
												responseBlob,
												mimeType,
											),
											responseBlob
										);
									}
									default: {
										const responseText =
											this.responseBufferToText();
										return (
											this.logger.info(
												'resolving "%s" response type as text',
												this.request.responseType,
												responseText,
											),
											responseText
										);
									}
								}
							}
							get responseText() {
								if (
									(invariant2(
										'' === this.request.responseType ||
											'text' ===
												this.request.responseType,
										'InvalidStateError: The object is in invalid state.',
									),
									this.request.readyState !==
										this.request.LOADING &&
										this.request.readyState !==
											this.request.DONE)
								)
									return '';
								const responseText =
									this.responseBufferToText();
								return (
									this.logger.info(
										'getResponseText: "%s"',
										responseText,
									),
									responseText
								);
							}
							get responseXML() {
								if (
									(invariant2(
										'' === this.request.responseType ||
											'document' ===
												this.request.responseType,
										'InvalidStateError: The object is in invalid state.',
									),
									this.request.readyState !==
										this.request.DONE)
								)
									return null;
								const contentType =
									this.request.getResponseHeader(
										'Content-Type',
									) || '';
								return 'undefined' == typeof DOMParser
									? (console.warn(
											'Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.',
									  ),
									  null)
									: (function isDomParserSupportedType(type) {
											return [
												'application/xhtml+xml',
												'application/xml',
												'image/svg+xml',
												'text/html',
												'text/xml',
											].some((supportedType) =>
												type.startsWith(supportedType),
											);
									  })(contentType)
									? new DOMParser().parseFromString(
											this.responseBufferToText(),
											contentType,
									  )
									: null;
							}
							errorWith(error2) {
								(this[kIsRequestHandled] = !0),
									this.logger.info(
										'responding with an error',
									),
									this.setReadyState(this.request.DONE),
									this.trigger('error', this.request),
									this.trigger('loadend', this.request);
							}
							setReadyState(nextReadyState) {
								this.logger.info(
									'setReadyState: %d -> %d',
									this.request.readyState,
									nextReadyState,
								),
									this.request.readyState !== nextReadyState
										? (browser_define(
												this.request,
												'readyState',
												nextReadyState,
										  ),
										  this.logger.info(
												'set readyState to: %d',
												nextReadyState,
										  ),
										  nextReadyState !==
												this.request.UNSENT &&
												(this.logger.info(
													'triggerring "readystatechange" event...',
												),
												this.trigger(
													'readystatechange',
													this.request,
												)))
										: this.logger.info(
												'ready state identical, skipping transition...',
										  );
							}
							trigger(eventName, target, options) {
								const callback = target[`on${eventName}`],
									event = (function createEvent(
										target,
										type,
										init,
									) {
										const ProgressEventClass =
											SUPPORTS_PROGRESS_EVENT
												? ProgressEvent
												: ProgressEventPolyfill;
										return [
											'error',
											'progress',
											'loadstart',
											'loadend',
											'load',
											'timeout',
											'abort',
										].includes(type)
											? new ProgressEventClass(type, {
													lengthComputable: !0,
													loaded:
														(null == init
															? void 0
															: init.loaded) || 0,
													total:
														(null == init
															? void 0
															: init.total) || 0,
											  })
											: new EventPolyfill(type, {
													target,
													currentTarget: target,
											  });
									})(target, eventName, options);
								this.logger.info(
									'trigger "%s"',
									eventName,
									options || '',
								),
									'function' == typeof callback &&
										(this.logger.info(
											'found a direct "%s" callback, calling...',
											eventName,
										),
										callback.call(target, event));
								const events =
									target instanceof XMLHttpRequestUpload
										? this.uploadEvents
										: this.events;
								for (const [
									registeredEventName,
									listeners,
								] of events)
									registeredEventName === eventName &&
										(this.logger.info(
											'found %d listener(s) for "%s" event, calling...',
											listeners.length,
											eventName,
										),
										listeners.forEach((listener) =>
											listener.call(target, event),
										));
							}
							toFetchApiRequest(body) {
								this.logger.info(
									'converting request to a Fetch API Request...',
								);
								const resolvedBody =
										body instanceof Document
											? body.documentElement.innerText
											: body,
									fetchRequest = new Request(this.url.href, {
										method: this.method,
										headers: this.requestHeaders,
										credentials: this.request
											.withCredentials
											? 'include'
											: 'same-origin',
										body: ['GET', 'HEAD'].includes(
											this.method.toUpperCase(),
										)
											? null
											: resolvedBody,
									}),
									proxyHeaders = createProxy(
										fetchRequest.headers,
										{
											methodCall: (
												[methodName, args],
												invoke,
											) => {
												switch (methodName) {
													case 'append':
													case 'set': {
														const [
															headerName,
															headerValue,
														] = args;
														this.request.setRequestHeader(
															headerName,
															headerValue,
														);
														break;
													}
													case 'delete': {
														const [headerName] =
															args;
														console.warn(
															`XMLHttpRequest: Cannot remove a "${headerName}" header from the Fetch API representation of the "${fetchRequest.method} ${fetchRequest.url}" request. XMLHttpRequest headers cannot be removed.`,
														);
														break;
													}
												}
												return invoke();
											},
										},
									);
								return (
									browser_define(
										fetchRequest,
										'headers',
										proxyHeaders,
									),
									this.logger.info(
										'converted request to a Fetch API Request!',
										fetchRequest,
									),
									fetchRequest
								);
							}
						})(originalRequest, logger);
						return (
							(xhrRequestController.onRequest = async function ({
								request,
								requestId,
							}) {
								const controller = new RequestController(
									request,
								);
								this.logger.info('awaiting mocked response...'),
									this.logger.info(
										'emitting the "request" event for %s listener(s)...',
										emitter.listenerCount('request'),
									);
								(await handleRequest2({
									request,
									requestId,
									controller,
									emitter,
									onResponse: async (response) => {
										await this.respondWith(response);
									},
									onRequestError: () => {
										this.errorWith(
											new TypeError('Network error'),
										);
									},
									onError: (error2) => {
										this.logger.info('request errored!', {
											error: error2,
										}),
											error2 instanceof Error &&
												this.errorWith(error2);
									},
								})) ||
									this.logger.info(
										'no mocked response received, performing request as-is...',
									);
							}),
							(xhrRequestController.onResponse = async function ({
								response,
								isMockedResponse,
								request,
								requestId,
							}) {
								this.logger.info(
									'emitting the "response" event for %s listener(s)...',
									emitter.listenerCount('response'),
								),
									emitter.emit('response', {
										response,
										isMockedResponse,
										request,
										requestId,
									});
							}),
							xhrRequestController.request
						);
					},
				});
			}
			var _XMLHttpRequestInterceptor = class extends Interceptor {
					constructor() {
						super(_XMLHttpRequestInterceptor.interceptorSymbol);
					}
					checkEnvironment() {
						return void 0 !== globalThis.XMLHttpRequest;
					}
					setup() {
						const logger = this.logger.extend('setup');
						logger.info('patching "XMLHttpRequest" module...');
						const PureXMLHttpRequest = globalThis.XMLHttpRequest;
						invariant2(
							!PureXMLHttpRequest[IS_PATCHED_MODULE],
							'Failed to patch the "XMLHttpRequest" module: already patched.',
						),
							(globalThis.XMLHttpRequest =
								createXMLHttpRequestProxy({
									emitter: this.emitter,
									logger: this.logger,
								})),
							logger.info(
								'native "XMLHttpRequest" module patched!',
								globalThis.XMLHttpRequest.name,
							),
							Object.defineProperty(
								globalThis.XMLHttpRequest,
								IS_PATCHED_MODULE,
								{ enumerable: !0, configurable: !0, value: !0 },
							),
							this.subscriptions.push(() => {
								Object.defineProperty(
									globalThis.XMLHttpRequest,
									IS_PATCHED_MODULE,
									{ value: void 0 },
								),
									(globalThis.XMLHttpRequest =
										PureXMLHttpRequest),
									logger.info(
										'native "XMLHttpRequest" module restored!',
										globalThis.XMLHttpRequest.name,
									);
							});
					}
				},
				XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;
			function createFallbackStart(context) {
				return async function start(options) {
					(context.fallbackInterceptor =
						(function createFallbackRequestListener(
							context,
							options,
						) {
							const interceptor = new BatchInterceptor({
								name: 'fallback',
								interceptors: [
									new FetchInterceptor(),
									new XMLHttpRequestInterceptor(),
								],
							});
							return (
								interceptor.on(
									'request',
									async ({
										request,
										requestId,
										controller,
									}) => {
										const requestCloneForLogs =
												request.clone(),
											response = await handleRequest(
												request,
												requestId,
												context.getRequestHandlers(),
												options,
												context.emitter,
												{
													onMockedResponse(
														_,
														{
															handler,
															parsedResult,
														},
													) {
														options.quiet ||
															context.emitter.once(
																'response:mocked',
																({
																	response:
																		response2,
																}) => {
																	handler.log(
																		{
																			request:
																				requestCloneForLogs,
																			response:
																				response2,
																			parsedResult,
																		},
																	);
																},
															);
													},
												},
											);
										response &&
											controller.respondWith(response);
									},
								),
								interceptor.on(
									'response',
									({
										response,
										isMockedResponse,
										request,
										requestId,
									}) => {
										context.emitter.emit(
											isMockedResponse
												? 'response:mocked'
												: 'response:bypass',
											{ response, request, requestId },
										);
									},
								),
								interceptor.apply(),
								interceptor
							);
						})(context, options)),
						printStartMessage({
							message: 'Mocking enabled (fallback mode).',
							quiet: options.quiet,
						});
				};
			}
			function supportsReadableStreamTransfer() {
				try {
					const stream = new ReadableStream({
						start: (controller) => controller.close(),
					});
					return (
						new MessageChannel().port1.postMessage(stream, [
							stream,
						]),
						!0
					);
				} catch {
					return !1;
				}
			}
			XMLHttpRequestInterceptor.interceptorSymbol = Symbol('xhr');
			var SetupWorkerApi = class extends SetupApi {
				context;
				startHandler = null;
				stopHandler = null;
				listeners;
				constructor(...handlers) {
					super(...handlers),
						invariant(
							!isNodeProcess(),
							devUtils.e.formatMessage(
								'Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.',
							),
						),
						(this.listeners = []),
						(this.context = this.createWorkerContext());
				}
				createWorkerContext() {
					const context = {
						isMockingEnabled: !1,
						startOptions: null,
						worker: null,
						getRequestHandlers: () =>
							this.handlersController.currentHandlers(),
						registration: null,
						requests: new Map(),
						emitter: this.emitter,
						workerChannel: {
							on: (eventType, callback) => {
								this.context.events.addListener(
									navigator.serviceWorker,
									'message',
									(event) => {
										if (
											event.source !== this.context.worker
										)
											return;
										const message = event.data;
										message &&
											message.type === eventType &&
											callback(event, message);
									},
								);
							},
							send: (type) => {
								this.context.worker?.postMessage(type);
							},
						},
						events: {
							addListener: (target, eventType, callback) => (
								target.addEventListener(eventType, callback),
								this.listeners.push({
									eventType,
									target,
									callback,
								}),
								() => {
									target.removeEventListener(
										eventType,
										callback,
									);
								}
							),
							removeAllListeners: () => {
								for (const {
									target,
									eventType,
									callback,
								} of this.listeners)
									target.removeEventListener(
										eventType,
										callback,
									);
								this.listeners = [];
							},
							once: (eventType) => {
								const bindings = [];
								return new Promise((resolve, reject) => {
									bindings.push(
										this.context.events.addListener(
											navigator.serviceWorker,
											'message',
											(event) => {
												try {
													const message = event.data;
													message.type ===
														eventType &&
														resolve(message);
												} catch (error2) {
													reject(error2);
												}
											},
										),
										this.context.events.addListener(
											navigator.serviceWorker,
											'messageerror',
											reject,
										),
									);
								}).finally(() => {
									bindings.forEach((unbind) => unbind());
								});
							},
						},
						supports: {
							serviceWorkerApi:
								!('serviceWorker' in navigator) ||
								'file:' === location.protocol,
							readableStreamTransfer:
								supportsReadableStreamTransfer(),
						},
					};
					return (
						(this.startHandler = context.supports.serviceWorkerApi
							? createFallbackStart(context)
							: createStartHandler(context)),
						(this.stopHandler = context.supports.serviceWorkerApi
							? (function createFallbackStop(context) {
									return function stop() {
										context.fallbackInterceptor?.dispose(),
											printStopMessage({
												quiet: context.startOptions
													?.quiet,
											});
									};
							  })(context)
							: ((context) =>
									function stop() {
										context.isMockingEnabled
											? (context.workerChannel.send(
													'MOCK_DEACTIVATE',
											  ),
											  (context.isMockingEnabled = !1),
											  window.clearInterval(
													context.keepAliveInterval,
											  ),
											  printStopMessage({
													quiet: context.startOptions
														?.quiet,
											  }))
											: devUtils.e.warn(
													'Found a redundant "worker.stop()" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this "worker.stop()" call.',
											  );
									})(context)),
						context
					);
				}
				async start(options = {}) {
					return (
						!0 === options.waitUntilReady &&
							devUtils.e.warn(
								'The "waitUntilReady" option has been deprecated. Please remove it from this "worker.start()" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.',
							),
						(this.context.startOptions = mergeRight(
							DEFAULT_START_OPTIONS,
							options,
						)),
						await this.startHandler(
							this.context.startOptions,
							options,
						)
					);
				}
				stop() {
					super.dispose(),
						this.context.events.removeAllListeners(),
						this.context.emitter.removeAllListeners(),
						this.stopHandler();
				}
			};
			var api,
				fileExtensionPattern =
					/\.(js|jsx|ts|tsx|mjs|woff|woff2|ttf|otf|eot)$/,
				filteredURLSubstrings = [
					'sb-common-assets',
					'node_modules',
					'node-modules',
					'hot-update.json',
					'__webpack_hmr',
					'sb-vite',
				],
				augmentInitializeOptions = (options) =>
					'string' == typeof options?.onUnhandledRequest
						? options
						: {
								...options,
								onUnhandledRequest: (...args) => {
									const [{ url }, print] = args;
									((url) =>
										!!fileExtensionPattern.test(url) ||
										!!filteredURLSubstrings.some(
											(substring) =>
												url.includes(substring),
										))(url) ||
										(options?.onUnhandledRequest
											? 'function' ==
													typeof options?.onUnhandledRequest &&
											  options.onUnhandledRequest(
													...args,
											  )
											: print.warning());
								},
						  };
			function initialize(options, initialHandlers = []) {
				const worker = (function setupWorker(...handlers) {
					return new SetupWorkerApi(...handlers);
				})(...initialHandlers);
				return (
					worker.start(augmentInitializeOptions(options)),
					(api = worker),
					worker
				);
			}
			function deprecate(message) {
				return (function once(fn) {
					let value,
						called = !1;
					return (...args) => (
						called || ((called = !0), (value = fn(...args))), value
					);
				})(() => {
					console.warn(
						(function dedent(templ) {
							for (
								var values = [], _i = 1;
								_i < arguments.length;
								_i++
							)
								values[_i - 1] = arguments[_i];
							var strings = Array.from(
								'string' == typeof templ ? [templ] : templ,
							);
							strings[strings.length - 1] = strings[
								strings.length - 1
							].replace(/\r?\n([\t ]*)$/, '');
							var indentLengths = strings.reduce(function (
								arr,
								str,
							) {
								var matches = str.match(/\n([\t ]+|(?!\s).)/g);
								return matches
									? arr.concat(
											matches.map(function (match) {
												var _a, _b;
												return null !==
													(_b =
														null ===
															(_a =
																match.match(
																	/[\t ]/g,
																)) ||
														void 0 === _a
															? void 0
															: _a.length) &&
													void 0 !== _b
													? _b
													: 0;
											}),
									  )
									: arr;
							},
							[]);
							if (indentLengths.length) {
								var pattern_1 = new RegExp(
									'\n[\t ]{' +
										Math.min.apply(Math, indentLengths) +
										'}',
									'g',
								);
								strings = strings.map(function (str) {
									return str.replace(pattern_1, '\n');
								});
							}
							strings[0] = strings[0].replace(/^\r?\n/, '');
							var string = strings[0];
							return (
								values.forEach(function (value, i) {
									var endentations =
											string.match(/(?:^|\n)( *)$/),
										endentation = endentations
											? endentations[1]
											: '',
										indentedValue = value;
									'string' == typeof value &&
										value.includes('\n') &&
										(indentedValue = String(value)
											.split('\n')
											.map(function (str, i2) {
												return 0 === i2
													? str
													: '' + endentation + str;
											})
											.join('\n')),
										(string +=
											indentedValue + strings[i + 1]);
								}),
								string
							);
						})(message),
					);
				});
			}
			var deprecateMessage = deprecate(
				'\n[msw-storybook-addon] You are using parameters.msw as an Array instead of an Object with a property "handlers". This usage is deprecated and will be removed in the next release. Please use the Object syntax instead.\n\nMore info: https://github.com/mswjs/msw-storybook-addon/blob/main/MIGRATION.md#parametersmsw-array-notation-deprecated-in-favor-of-object-notation\n',
			);
			function applyRequestHandlers(handlersListOrObject) {
				if ((api?.resetHandlers(), null != handlersListOrObject)) {
					if (
						Array.isArray(handlersListOrObject) &&
						handlersListOrObject.length > 0
					)
						return (
							deprecateMessage(),
							void api.use(...handlersListOrObject)
						);
					if (
						'handlers' in handlersListOrObject &&
						handlersListOrObject.handlers
					) {
						const handlers = Object.values(
							handlersListOrObject.handlers,
						)
							.filter(Boolean)
							.reduce(
								(handlers2, handlersList) =>
									handlers2.concat(handlersList),
								[],
							);
						handlers.length > 0 && api.use(...handlers);
					} else;
				}
			}
			var deprecateMessage2 = deprecate(
					'\n[msw-storybook-addon] The mswDecorator is deprecated and will be removed in the next release. Please use the mswLoader instead.\n\nMore info: https://github.com/mswjs/msw-storybook-addon/blob/main/MIGRATION.md#mswdecorator-is-deprecated-in-favor-of-mswloader\n',
				),
				mswDecorator = (storyFn, context) => (
					deprecateMessage2(),
					applyRequestHandlers(context.parameters.msw),
					storyFn()
				);
		},
		'./node_modules/msw/lib/core/handlers/RequestHandler.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				Z: () => RequestHandler,
			});
			const SOURCE_FRAME = /[\/\\]msw[\/\\]src[\/\\](.+)/,
				BUILD_FRAME =
					/(node_modules)?[\/\\]lib[\/\\](core|browser|node|native|iife)[\/\\]|^[^\/\\]*$/;
			class RequestHandler {
				static cache = new WeakMap();
				info;
				isUsed;
				resolver;
				resolverIterator;
				resolverIteratorResult;
				options;
				constructor(args) {
					(this.resolver = args.resolver),
						(this.options = args.options);
					const callFrame = (function getCallFrame(error) {
						const stack = error.stack;
						if (!stack) return;
						const declarationFrame = stack
							.split('\n')
							.slice(1)
							.find(
								(frame) =>
									!(
										SOURCE_FRAME.test(frame) ||
										BUILD_FRAME.test(frame)
									),
							);
						if (!declarationFrame) return;
						return declarationFrame
							.replace(/\s*at [^()]*\(([^)]+)\)/, '$1')
							.replace(/^@/, '');
					})(new Error());
					(this.info = { ...args.info, callFrame }),
						(this.isUsed = !1);
				}
				async parse(_args) {
					return {};
				}
				async test(args) {
					const parsedResult = await this.parse({
						request: args.request,
						resolutionContext: args.resolutionContext,
					});
					return this.predicate({
						request: args.request,
						parsedResult,
						resolutionContext: args.resolutionContext,
					});
				}
				extendResolverArgs(_args) {
					return {};
				}
				cloneRequestOrGetFromCache(request) {
					const existingClone = RequestHandler.cache.get(request);
					if (void 0 !== existingClone) return existingClone;
					const clonedRequest = request.clone();
					return (
						RequestHandler.cache.set(request, clonedRequest),
						clonedRequest
					);
				}
				async run(args) {
					if (this.isUsed && this.options?.once) return null;
					const requestClone = this.cloneRequestOrGetFromCache(
							args.request,
						),
						parsedResult = await this.parse({
							request: args.request,
							resolutionContext: args.resolutionContext,
						});
					if (
						!this.predicate({
							request: args.request,
							parsedResult,
							resolutionContext: args.resolutionContext,
						})
					)
						return null;
					if (this.isUsed && this.options?.once) return null;
					this.isUsed = !0;
					const mockedResponsePromise = this.wrapResolver(
							this.resolver,
						)({
							...this.extendResolverArgs({
								request: args.request,
								parsedResult,
							}),
							requestId: args.requestId,
							request: args.request,
						}).catch((errorOrResponse) => {
							if (errorOrResponse instanceof Response)
								return errorOrResponse;
							throw errorOrResponse;
						}),
						mockedResponse = await mockedResponsePromise;
					return this.createExecutionResult({
						request: requestClone,
						requestId: args.requestId,
						response: mockedResponse,
						parsedResult,
					});
				}
				wrapResolver(resolver) {
					return async (info) => {
						if (!this.resolverIterator) {
							const result = await resolver(info);
							if (
								!(function isIterable(fn) {
									return (
										!!fn &&
										(Reflect.has(fn, Symbol.iterator) ||
											Reflect.has(
												fn,
												Symbol.asyncIterator,
											))
									);
								})(result)
							)
								return result;
							this.resolverIterator =
								Symbol.iterator in result
									? result[Symbol.iterator]()
									: result[Symbol.asyncIterator]();
						}
						this.isUsed = !1;
						const { done, value } =
								await this.resolverIterator.next(),
							nextResponse = await value;
						return (
							nextResponse &&
								(this.resolverIteratorResult =
									nextResponse.clone()),
							done
								? ((this.isUsed = !0),
								  this.resolverIteratorResult?.clone())
								: nextResponse
						);
					};
				}
				createExecutionResult(args) {
					return {
						handler: this,
						request: args.request,
						requestId: args.requestId,
						response: args.response,
						parsedResult: args.parsedResult,
					};
				}
			}
		},
		'./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				_A: () => decorateResponse,
				x3: () => kSetCookie,
				p: () => normalizeResponseInit,
			});
			var cb,
				mod,
				index_esm = __webpack_require__(
					'./node_modules/@bundled-es-modules/statuses/index-esm.js',
				),
				__create = Object.create,
				__defProp = Object.defineProperty,
				__getOwnPropDesc = Object.getOwnPropertyDescriptor,
				__getOwnPropNames = Object.getOwnPropertyNames,
				__getProtoOf = Object.getPrototypeOf,
				__hasOwnProp = Object.prototype.hasOwnProperty,
				import_set_cookie_parser = ((mod, isNodeMode, target) => (
					(target = null != mod ? __create(__getProtoOf(mod)) : {}),
					((to, from, except, desc) => {
						if (
							(from && 'object' == typeof from) ||
							'function' == typeof from
						)
							for (let key of __getOwnPropNames(from))
								__hasOwnProp.call(to, key) ||
									key === except ||
									__defProp(to, key, {
										get: () => from[key],
										enumerable:
											!(desc = __getOwnPropDesc(
												from,
												key,
											)) || desc.enumerable,
									});
						return to;
					})(
						!isNodeMode && mod && mod.__esModule
							? target
							: __defProp(target, 'default', {
									value: mod,
									enumerable: !0,
							  }),
						mod,
					)
				))(
					((cb = {
						'node_modules/set-cookie-parser/lib/set-cookie.js'(
							exports,
							module,
						) {
							var defaultParseOptions = {
								decodeValues: !0,
								map: !1,
								silent: !1,
							};
							function isNonEmptyString(str) {
								return 'string' == typeof str && !!str.trim();
							}
							function parseString(setCookieValue, options) {
								var parts = setCookieValue
										.split(';')
										.filter(isNonEmptyString),
									parsed = (function parseNameValuePair(
										nameValuePairStr,
									) {
										var name = '',
											value = '',
											nameValueArr =
												nameValuePairStr.split('=');
										return (
											nameValueArr.length > 1
												? ((name =
														nameValueArr.shift()),
												  (value =
														nameValueArr.join('=')))
												: (value = nameValuePairStr),
											{ name, value }
										);
									})(parts.shift()),
									name = parsed.name,
									value = parsed.value;
								options = options
									? Object.assign(
											{},
											defaultParseOptions,
											options,
									  )
									: defaultParseOptions;
								try {
									value = options.decodeValues
										? decodeURIComponent(value)
										: value;
								} catch (e) {
									console.error(
										"set-cookie-parser encountered an error while decoding a cookie with value '" +
											value +
											"'. Set options.decodeValues to false to disable this feature.",
										e,
									);
								}
								var cookie = { name, value };
								return (
									parts.forEach(function (part) {
										var sides = part.split('='),
											key = sides
												.shift()
												.trimLeft()
												.toLowerCase(),
											value2 = sides.join('=');
										'expires' === key
											? (cookie.expires = new Date(
													value2,
											  ))
											: 'max-age' === key
											? (cookie.maxAge = parseInt(
													value2,
													10,
											  ))
											: 'secure' === key
											? (cookie.secure = !0)
											: 'httponly' === key
											? (cookie.httpOnly = !0)
											: 'samesite' === key
											? (cookie.sameSite = value2)
											: (cookie[key] = value2);
									}),
									cookie
								);
							}
							function parse(input, options) {
								if (
									((options = options
										? Object.assign(
												{},
												defaultParseOptions,
												options,
										  )
										: defaultParseOptions),
									!input)
								)
									return options.map ? {} : [];
								if (input.headers)
									if (
										'function' ==
										typeof input.headers.getSetCookie
									)
										input = input.headers.getSetCookie();
									else if (input.headers['set-cookie'])
										input = input.headers['set-cookie'];
									else {
										var sch =
											input.headers[
												Object.keys(input.headers).find(
													function (key) {
														return (
															'set-cookie' ===
															key.toLowerCase()
														);
													},
												)
											];
										sch ||
											!input.headers.cookie ||
											options.silent ||
											console.warn(
												'Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.',
											),
											(input = sch);
									}
								return (
									Array.isArray(input) || (input = [input]),
									(options = options
										? Object.assign(
												{},
												defaultParseOptions,
												options,
										  )
										: defaultParseOptions).map
										? input
												.filter(isNonEmptyString)
												.reduce(function (
													cookies2,
													str,
												) {
													var cookie = parseString(
														str,
														options,
													);
													return (
														(cookies2[cookie.name] =
															cookie),
														cookies2
													);
												},
												{})
										: input
												.filter(isNonEmptyString)
												.map(function (str) {
													return parseString(
														str,
														options,
													);
												})
								);
							}
							(module.exports = parse),
								(module.exports.parse = parse),
								(module.exports.parseString = parseString),
								(module.exports.splitCookiesString =
									function splitCookiesString2(
										cookiesString,
									) {
										if (Array.isArray(cookiesString))
											return cookiesString;
										if ('string' != typeof cookiesString)
											return [];
										var start,
											ch,
											lastComma,
											nextStart,
											cookiesSeparatorFound,
											cookiesStrings = [],
											pos = 0;
										function skipWhitespace() {
											for (
												;
												pos < cookiesString.length &&
												/\s/.test(
													cookiesString.charAt(pos),
												);

											)
												pos += 1;
											return pos < cookiesString.length;
										}
										for (; pos < cookiesString.length; ) {
											for (
												start = pos,
													cookiesSeparatorFound = !1;
												skipWhitespace();

											)
												if (
													',' ===
													(ch =
														cookiesString.charAt(
															pos,
														))
												) {
													for (
														lastComma = pos,
															pos += 1,
															skipWhitespace(),
															nextStart = pos;
														pos <
															cookiesString.length &&
														'=' !==
															(ch =
																cookiesString.charAt(
																	pos,
																)) &&
														';' !== ch &&
														',' !== ch;

													)
														pos += 1;
													pos <
														cookiesString.length &&
													'=' ===
														cookiesString.charAt(
															pos,
														)
														? ((cookiesSeparatorFound =
																!0),
														  (pos = nextStart),
														  cookiesStrings.push(
																cookiesString.substring(
																	start,
																	lastComma,
																),
														  ),
														  (start = pos))
														: (pos = lastComma + 1);
												} else pos += 1;
											(!cookiesSeparatorFound ||
												pos >= cookiesString.length) &&
												cookiesStrings.push(
													cookiesString.substring(
														start,
														cookiesString.length,
													),
												);
										}
										return cookiesStrings;
									});
						},
					}),
					function __require() {
						return (
							mod ||
								(0, cb[__getOwnPropNames(cb)[0]])(
									(mod = { exports: {} }).exports,
									mod,
								),
							mod.exports
						);
					})(),
				),
				HEADERS_INVALID_CHARACTERS = /[^a-z0-9\-#$%&'*+.^_`|~]/i;
			function normalizeHeaderName(name) {
				if (HEADERS_INVALID_CHARACTERS.test(name) || '' === name.trim())
					throw new TypeError(
						'Invalid character in header field name',
					);
				return name.trim().toLowerCase();
			}
			var charCodesToRemove = [
					String.fromCharCode(10),
					String.fromCharCode(13),
					String.fromCharCode(9),
					String.fromCharCode(32),
				],
				HEADER_VALUE_REMOVE_REGEXP = new RegExp(
					`(^[${charCodesToRemove.join(
						'',
					)}]|$[${charCodesToRemove.join('')}])`,
					'g',
				);
			function normalizeHeaderValue(value) {
				return value.replace(HEADER_VALUE_REMOVE_REGEXP, '');
			}
			function isValidHeaderName(value) {
				if ('string' != typeof value) return !1;
				if (0 === value.length) return !1;
				for (let i = 0; i < value.length; i++) {
					const character = value.charCodeAt(i);
					if (character > 127 || !isToken(character)) return !1;
				}
				return !0;
			}
			function isToken(value) {
				return ![
					127,
					32,
					'(',
					')',
					'<',
					'>',
					'@',
					',',
					';',
					':',
					'\\',
					'"',
					'/',
					'[',
					']',
					'?',
					'=',
					'{',
					'}',
				].includes(value);
			}
			function isValidHeaderValue(value) {
				if ('string' != typeof value) return !1;
				if (value.trim() !== value) return !1;
				for (let i = 0; i < value.length; i++) {
					const character = value.charCodeAt(i);
					if (0 === character || 10 === character || 13 === character)
						return !1;
				}
				return !0;
			}
			var _a,
				_b,
				_c,
				NORMALIZED_HEADERS = Symbol('normalizedHeaders'),
				RAW_HEADER_NAMES = Symbol('rawHeaderNames'),
				lib_Headers = class _Headers {
					constructor(init) {
						if (
							((this[_a] = {}),
							(this[_b] = new Map()),
							(this[_c] = 'Headers'),
							['Headers', 'HeadersPolyfill'].includes(
								init?.constructor.name,
							) ||
								init instanceof _Headers ||
								(void 0 !== globalThis.Headers &&
									init instanceof globalThis.Headers))
						) {
							init.forEach((value, name) => {
								this.append(name, value);
							}, this);
						} else
							Array.isArray(init)
								? init.forEach(([name, value]) => {
										this.append(
											name,
											Array.isArray(value)
												? value.join(', ')
												: value,
										);
								  })
								: init &&
								  Object.getOwnPropertyNames(init).forEach(
										(name) => {
											const value = init[name];
											this.append(
												name,
												Array.isArray(value)
													? value.join(', ')
													: value,
											);
										},
								  );
					}
					[((_a = NORMALIZED_HEADERS),
					(_b = RAW_HEADER_NAMES),
					(_c = Symbol.toStringTag),
					Symbol.iterator)]() {
						return this.entries();
					}
					*keys() {
						for (const [name] of this.entries()) yield name;
					}
					*values() {
						for (const [, value] of this.entries()) yield value;
					}
					*entries() {
						let sortedKeys = Object.keys(
							this[NORMALIZED_HEADERS],
						).sort((a, b) => a.localeCompare(b));
						for (const name of sortedKeys)
							if ('set-cookie' === name)
								for (const value of this.getSetCookie())
									yield [name, value];
							else yield [name, this.get(name)];
					}
					has(name) {
						if (!isValidHeaderName(name))
							throw new TypeError(
								`Invalid header name "${name}"`,
							);
						return this[NORMALIZED_HEADERS].hasOwnProperty(
							normalizeHeaderName(name),
						);
					}
					get(name) {
						if (!isValidHeaderName(name))
							throw TypeError(`Invalid header name "${name}"`);
						return (
							this[NORMALIZED_HEADERS][
								normalizeHeaderName(name)
							] ?? null
						);
					}
					set(name, value) {
						if (
							!isValidHeaderName(name) ||
							!isValidHeaderValue(value)
						)
							return;
						const normalizedName = normalizeHeaderName(name),
							normalizedValue = normalizeHeaderValue(value);
						(this[NORMALIZED_HEADERS][normalizedName] =
							normalizeHeaderValue(normalizedValue)),
							this[RAW_HEADER_NAMES].set(normalizedName, name);
					}
					append(name, value) {
						if (
							!isValidHeaderName(name) ||
							!isValidHeaderValue(value)
						)
							return;
						const normalizedName = normalizeHeaderName(name),
							normalizedValue = normalizeHeaderValue(value);
						let resolvedValue = this.has(normalizedName)
							? `${this.get(normalizedName)}, ${normalizedValue}`
							: normalizedValue;
						this.set(name, resolvedValue);
					}
					delete(name) {
						if (!isValidHeaderName(name)) return;
						if (!this.has(name)) return;
						const normalizedName = normalizeHeaderName(name);
						delete this[NORMALIZED_HEADERS][normalizedName],
							this[RAW_HEADER_NAMES].delete(normalizedName);
					}
					forEach(callback, thisArg) {
						for (const [name, value] of this.entries())
							callback.call(thisArg, value, name, this);
					}
					getSetCookie() {
						const setCookieHeader = this.get('set-cookie');
						return null === setCookieHeader
							? []
							: '' === setCookieHeader
							? ['']
							: (0, import_set_cookie_parser.splitCookiesString)(
									setCookieHeader,
							  );
					}
				};
			const { message } = index_esm.default,
				kSetCookie = Symbol('kSetCookie');
			function normalizeResponseInit(init = {}) {
				const status = init?.status || 200,
					statusText = init?.statusText || message[status] || '',
					headers = new Headers(init?.headers);
				return { ...init, headers, status, statusText };
			}
			function decorateResponse(response, init) {
				init.type &&
					Object.defineProperty(response, 'type', {
						value: init.type,
						enumerable: !0,
						writable: !1,
					});
				const responseCookies = init.headers.get('set-cookie');
				if (
					responseCookies &&
					(Object.defineProperty(response, kSetCookie, {
						value: responseCookies,
						enumerable: !1,
						writable: !1,
					}),
					'undefined' != typeof document)
				) {
					const responseCookiePairs =
						lib_Headers.prototype.getSetCookie.call(init.headers);
					for (const cookieString of responseCookiePairs)
						document.cookie = cookieString;
				}
				return response;
			}
		},
		'./node_modules/msw/lib/core/utils/cookieStore.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				k: () => cookieStore,
			});
			var mod,
				isNodeMode,
				target,
				lib = __webpack_require__(
					'./node_modules/outvariant/lib/index.mjs',
				),
				is_node_process_lib = __webpack_require__(
					'./node_modules/is-node-process/lib/index.mjs',
				),
				__create = Object.create,
				__defProp = Object.defineProperty,
				__getOwnPropDesc = Object.getOwnPropertyDescriptor,
				__getOwnPropNames = Object.getOwnPropertyNames,
				__getProtoOf = Object.getPrototypeOf,
				__hasOwnProp = Object.prototype.hasOwnProperty,
				__require = ((x) =>
					__webpack_require__(
						'./node_modules/@bundled-es-modules/tough-cookie sync recursive',
					))(),
				__commonJS = (cb, mod) =>
					function __require2() {
						return (
							mod ||
								(0, cb[__getOwnPropNames(cb)[0]])(
									(mod = { exports: {} }).exports,
									mod,
								),
							mod.exports
						);
					},
				require_punycode = __commonJS({
					'node_modules/punycode/punycode.js'(exports, module) {
						var maxInt = 2147483647,
							regexPunycode = /^xn--/,
							regexNonASCII = /[^\0-\x7F]/,
							regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
							errors = {
								overflow:
									'Overflow: input needs wider integers to process',
								'not-basic':
									'Illegal input >= 0x80 (not a basic code point)',
								'invalid-input': 'Invalid input',
							},
							floor = Math.floor,
							stringFromCharCode = String.fromCharCode;
						function error(type) {
							throw new RangeError(errors[type]);
						}
						function mapDomain(domain, callback) {
							const parts = domain.split('@');
							let result = '';
							parts.length > 1 &&
								((result = parts[0] + '@'),
								(domain = parts[1]));
							const encoded = (function map(array, callback) {
								const result = [];
								let length = array.length;
								for (; length--; )
									result[length] = callback(array[length]);
								return result;
							})(
								(domain = domain.replace(
									regexSeparators,
									'.',
								)).split('.'),
								callback,
							).join('.');
							return result + encoded;
						}
						function ucs2decode(string) {
							const output = [];
							let counter = 0;
							const length = string.length;
							for (; counter < length; ) {
								const value = string.charCodeAt(counter++);
								if (
									value >= 55296 &&
									value <= 56319 &&
									counter < length
								) {
									const extra = string.charCodeAt(counter++);
									56320 == (64512 & extra)
										? output.push(
												((1023 & value) << 10) +
													(1023 & extra) +
													65536,
										  )
										: (output.push(value), counter--);
								} else output.push(value);
							}
							return output;
						}
						var digitToBasic = function (digit, flag) {
								return (
									digit +
									22 +
									75 * (digit < 26) -
									((0 != flag) << 5)
								);
							},
							adapt = function (delta, numPoints, firstTime) {
								let k = 0;
								for (
									delta = firstTime
										? floor(delta / 700)
										: delta >> 1,
										delta += floor(delta / numPoints);
									delta > 455;
									k += 36
								)
									delta = floor(delta / 35);
								return floor(k + (36 * delta) / (delta + 38));
							},
							decode = function (input) {
								const output = [],
									inputLength = input.length;
								let i = 0,
									n = 128,
									bias = 72,
									basic = input.lastIndexOf('-');
								basic < 0 && (basic = 0);
								for (let j = 0; j < basic; ++j)
									input.charCodeAt(j) >= 128 &&
										error('not-basic'),
										output.push(input.charCodeAt(j));
								for (
									let index = basic > 0 ? basic + 1 : 0;
									index < inputLength;

								) {
									const oldi = i;
									for (let w = 1, k = 36; ; k += 36) {
										index >= inputLength &&
											error('invalid-input');
										const digit =
											(codePoint = input.charCodeAt(
												index++,
											)) >= 48 && codePoint < 58
												? codePoint - 48 + 26
												: codePoint >= 65 &&
												  codePoint < 91
												? codePoint - 65
												: codePoint >= 97 &&
												  codePoint < 123
												? codePoint - 97
												: 36;
										digit >= 36 && error('invalid-input'),
											digit > floor((maxInt - i) / w) &&
												error('overflow'),
											(i += digit * w);
										const t =
											k <= bias
												? 1
												: k >= bias + 26
												? 26
												: k - bias;
										if (digit < t) break;
										const baseMinusT = 36 - t;
										w > floor(maxInt / baseMinusT) &&
											error('overflow'),
											(w *= baseMinusT);
									}
									const out = output.length + 1;
									(bias = adapt(i - oldi, out, 0 == oldi)),
										floor(i / out) > maxInt - n &&
											error('overflow'),
										(n += floor(i / out)),
										(i %= out),
										output.splice(i++, 0, n);
								}
								var codePoint;
								return String.fromCodePoint(...output);
							},
							encode = function (input) {
								const output = [],
									inputLength = (input = ucs2decode(input))
										.length;
								let n = 128,
									delta = 0,
									bias = 72;
								for (const currentValue of input)
									currentValue < 128 &&
										output.push(
											stringFromCharCode(currentValue),
										);
								const basicLength = output.length;
								let handledCPCount = basicLength;
								for (
									basicLength && output.push('-');
									handledCPCount < inputLength;

								) {
									let m = maxInt;
									for (const currentValue of input)
										currentValue >= n &&
											currentValue < m &&
											(m = currentValue);
									const handledCPCountPlusOne =
										handledCPCount + 1;
									m - n >
										floor(
											(maxInt - delta) /
												handledCPCountPlusOne,
										) && error('overflow'),
										(delta +=
											(m - n) * handledCPCountPlusOne),
										(n = m);
									for (const currentValue of input)
										if (
											(currentValue < n &&
												++delta > maxInt &&
												error('overflow'),
											currentValue === n)
										) {
											let q = delta;
											for (let k = 36; ; k += 36) {
												const t =
													k <= bias
														? 1
														: k >= bias + 26
														? 26
														: k - bias;
												if (q < t) break;
												const qMinusT = q - t,
													baseMinusT = 36 - t;
												output.push(
													stringFromCharCode(
														digitToBasic(
															t +
																(qMinusT %
																	baseMinusT),
															0,
														),
													),
												),
													(q = floor(
														qMinusT / baseMinusT,
													));
											}
											output.push(
												stringFromCharCode(
													digitToBasic(q, 0),
												),
											),
												(bias = adapt(
													delta,
													handledCPCountPlusOne,
													handledCPCount ===
														basicLength,
												)),
												(delta = 0),
												++handledCPCount;
										}
									++delta, ++n;
								}
								return output.join('');
							},
							punycode = {
								version: '2.3.1',
								ucs2: {
									decode: ucs2decode,
									encode: (codePoints) =>
										String.fromCodePoint(...codePoints),
								},
								decode,
								encode,
								toASCII: function (input) {
									return mapDomain(input, function (string) {
										return regexNonASCII.test(string)
											? 'xn--' + encode(string)
											: string;
									});
								},
								toUnicode: function (input) {
									return mapDomain(input, function (string) {
										return regexPunycode.test(string)
											? decode(
													string
														.slice(4)
														.toLowerCase(),
											  )
											: string;
									});
								},
							};
						module.exports = punycode;
					},
				}),
				require_requires_port = __commonJS({
					'node_modules/requires-port/index.js'(exports, module) {
						module.exports = function required(port, protocol) {
							if (
								((protocol = protocol.split(':')[0]),
								!(port = +port))
							)
								return !1;
							switch (protocol) {
								case 'http':
								case 'ws':
									return 80 !== port;
								case 'https':
								case 'wss':
									return 443 !== port;
								case 'ftp':
									return 21 !== port;
								case 'gopher':
									return 70 !== port;
								case 'file':
									return !1;
							}
							return 0 !== port;
						};
					},
				}),
				require_querystringify = __commonJS({
					'node_modules/querystringify/index.js'(exports) {
						var has = Object.prototype.hasOwnProperty;
						function decode(input) {
							try {
								return decodeURIComponent(
									input.replace(/\+/g, ' '),
								);
							} catch (e) {
								return null;
							}
						}
						function encode(input) {
							try {
								return encodeURIComponent(input);
							} catch (e) {
								return null;
							}
						}
						(exports.stringify = function querystringify(
							obj,
							prefix,
						) {
							prefix = prefix || '';
							var value,
								key,
								pairs = [];
							for (key in ('string' != typeof prefix &&
								(prefix = '?'),
							obj))
								if (has.call(obj, key)) {
									if (
										((value = obj[key]) ||
											(null != value && !isNaN(value)) ||
											(value = ''),
										(key = encode(key)),
										(value = encode(value)),
										null === key || null === value)
									)
										continue;
									pairs.push(key + '=' + value);
								}
							return pairs.length ? prefix + pairs.join('&') : '';
						}),
							(exports.parse = function querystring(query) {
								for (
									var part,
										parser = /([^=?#&]+)=?([^&]*)/g,
										result = {};
									(part = parser.exec(query));

								) {
									var key = decode(part[1]),
										value = decode(part[2]);
									null === key ||
										null === value ||
										key in result ||
										(result[key] = value);
								}
								return result;
							});
					},
				}),
				require_url_parse = __commonJS({
					'node_modules/url-parse/index.js'(exports, module) {
						var required = require_requires_port(),
							qs = require_querystringify(),
							controlOrWhitespace =
								/^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/,
							CRHTLF = /[\n\r\t]/g,
							slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
							port = /:\d+$/,
							protocolre =
								/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,
							windowsDriveLetter = /^[a-zA-Z]:/;
						function trimLeft(str) {
							return (str || '')
								.toString()
								.replace(controlOrWhitespace, '');
						}
						var rules = [
								['#', 'hash'],
								['?', 'query'],
								function sanitize(address, url) {
									return isSpecial(url.protocol)
										? address.replace(/\\/g, '/')
										: address;
								},
								['/', 'pathname'],
								['@', 'auth', 1],
								[NaN, 'host', void 0, 1, 1],
								[/:(\d*)$/, 'port', void 0, 1],
								[NaN, 'hostname', void 0, 1, 1],
							],
							ignore = { hash: 1, query: 1 };
						function lolcation(loc) {
							var key,
								location =
									('undefined' != typeof window
										? window
										: void 0 !== __webpack_require__.g
										? __webpack_require__.g
										: 'undefined' != typeof self
										? self
										: {}
									).location || {},
								finaldestination = {},
								type = typeof (loc = loc || location);
							if ('blob:' === loc.protocol)
								finaldestination = new Url(
									unescape(loc.pathname),
									{},
								);
							else if ('string' === type)
								for (key in ((finaldestination = new Url(
									loc,
									{},
								)),
								ignore))
									delete finaldestination[key];
							else if ('object' === type) {
								for (key in loc)
									key in ignore ||
										(finaldestination[key] = loc[key]);
								void 0 === finaldestination.slashes &&
									(finaldestination.slashes = slashes.test(
										loc.href,
									));
							}
							return finaldestination;
						}
						function isSpecial(scheme) {
							return (
								'file:' === scheme ||
								'ftp:' === scheme ||
								'http:' === scheme ||
								'https:' === scheme ||
								'ws:' === scheme ||
								'wss:' === scheme
							);
						}
						function extractProtocol(address, location) {
							(address = (address = trimLeft(address)).replace(
								CRHTLF,
								'',
							)),
								(location = location || {});
							var rest,
								match = protocolre.exec(address),
								protocol = match[1]
									? match[1].toLowerCase()
									: '',
								forwardSlashes = !!match[2],
								otherSlashes = !!match[3],
								slashesCount = 0;
							return (
								forwardSlashes
									? otherSlashes
										? ((rest =
												match[2] + match[3] + match[4]),
										  (slashesCount =
												match[2].length +
												match[3].length))
										: ((rest = match[2] + match[4]),
										  (slashesCount = match[2].length))
									: otherSlashes
									? ((rest = match[3] + match[4]),
									  (slashesCount = match[3].length))
									: (rest = match[4]),
								'file:' === protocol
									? slashesCount >= 2 &&
									  (rest = rest.slice(2))
									: isSpecial(protocol)
									? (rest = match[4])
									: protocol
									? forwardSlashes && (rest = rest.slice(2))
									: slashesCount >= 2 &&
									  isSpecial(location.protocol) &&
									  (rest = match[4]),
								{
									protocol,
									slashes:
										forwardSlashes || isSpecial(protocol),
									slashesCount,
									rest,
								}
							);
						}
						function Url(address, location, parser) {
							if (
								((address = (address =
									trimLeft(address)).replace(CRHTLF, '')),
								!(this instanceof Url))
							)
								return new Url(address, location, parser);
							var relative,
								extracted,
								parse,
								instruction,
								index,
								key,
								instructions = rules.slice(),
								type = typeof location,
								url = this,
								i = 0;
							for (
								'object' !== type &&
									'string' !== type &&
									((parser = location), (location = null)),
									parser &&
										'function' != typeof parser &&
										(parser = qs.parse),
									relative =
										!(extracted = extractProtocol(
											address || '',
											(location = lolcation(location)),
										)).protocol && !extracted.slashes,
									url.slashes =
										extracted.slashes ||
										(relative && location.slashes),
									url.protocol =
										extracted.protocol ||
										location.protocol ||
										'',
									address = extracted.rest,
									(('file:' === extracted.protocol &&
										(2 !== extracted.slashesCount ||
											windowsDriveLetter.test(
												address,
											))) ||
										(!extracted.slashes &&
											(extracted.protocol ||
												extracted.slashesCount < 2 ||
												!isSpecial(url.protocol)))) &&
										(instructions[3] = [
											/(.*)/,
											'pathname',
										]);
								i < instructions.length;
								i++
							)
								'function' !=
								typeof (instruction = instructions[i])
									? ((parse = instruction[0]),
									  (key = instruction[1]),
									  parse != parse
											? (url[key] = address)
											: 'string' == typeof parse
											? ~(index =
													'@' === parse
														? address.lastIndexOf(
																parse,
														  )
														: address.indexOf(
																parse,
														  )) &&
											  ('number' == typeof instruction[2]
													? ((url[key] =
															address.slice(
																0,
																index,
															)),
													  (address = address.slice(
															index +
																instruction[2],
													  )))
													: ((url[key] =
															address.slice(
																index,
															)),
													  (address = address.slice(
															0,
															index,
													  ))))
											: (index = parse.exec(address)) &&
											  ((url[key] = index[1]),
											  (address = address.slice(
													0,
													index.index,
											  ))),
									  (url[key] =
											url[key] ||
											(relative &&
												instruction[3] &&
												location[key]) ||
											''),
									  instruction[4] &&
											(url[key] = url[key].toLowerCase()))
									: (address = instruction(address, url));
							parser && (url.query = parser(url.query)),
								relative &&
									location.slashes &&
									'/' !== url.pathname.charAt(0) &&
									('' !== url.pathname ||
										'' !== location.pathname) &&
									(url.pathname = (function resolve(
										relative,
										base,
									) {
										if ('' === relative) return base;
										for (
											var path = (base || '/')
													.split('/')
													.slice(0, -1)
													.concat(
														relative.split('/'),
													),
												i = path.length,
												last = path[i - 1],
												unshift = !1,
												up = 0;
											i--;

										)
											'.' === path[i]
												? path.splice(i, 1)
												: '..' === path[i]
												? (path.splice(i, 1), up++)
												: up &&
												  (0 === i && (unshift = !0),
												  path.splice(i, 1),
												  up--);
										return (
											unshift && path.unshift(''),
											('.' !== last && '..' !== last) ||
												path.push(''),
											path.join('/')
										);
									})(url.pathname, location.pathname)),
								'/' !== url.pathname.charAt(0) &&
									isSpecial(url.protocol) &&
									(url.pathname = '/' + url.pathname),
								required(url.port, url.protocol) ||
									((url.host = url.hostname),
									(url.port = '')),
								(url.username = url.password = ''),
								url.auth &&
									(~(index = url.auth.indexOf(':'))
										? ((url.username = url.auth.slice(
												0,
												index,
										  )),
										  (url.username = encodeURIComponent(
												decodeURIComponent(
													url.username,
												),
										  )),
										  (url.password = url.auth.slice(
												index + 1,
										  )),
										  (url.password = encodeURIComponent(
												decodeURIComponent(
													url.password,
												),
										  )))
										: (url.username = encodeURIComponent(
												decodeURIComponent(url.auth),
										  )),
									(url.auth = url.password
										? url.username + ':' + url.password
										: url.username)),
								(url.origin =
									'file:' !== url.protocol &&
									isSpecial(url.protocol) &&
									url.host
										? url.protocol + '//' + url.host
										: 'null'),
								(url.href = url.toString());
						}
						(Url.prototype = {
							set: function set(part, value, fn) {
								var url = this;
								switch (part) {
									case 'query':
										'string' == typeof value &&
											value.length &&
											(value = (fn || qs.parse)(value)),
											(url[part] = value);
										break;
									case 'port':
										(url[part] = value),
											required(value, url.protocol)
												? value &&
												  (url.host =
														url.hostname +
														':' +
														value)
												: ((url.host = url.hostname),
												  (url[part] = ''));
										break;
									case 'hostname':
										(url[part] = value),
											url.port &&
												(value += ':' + url.port),
											(url.host = value);
										break;
									case 'host':
										(url[part] = value),
											port.test(value)
												? ((value = value.split(':')),
												  (url.port = value.pop()),
												  (url.hostname =
														value.join(':')))
												: ((url.hostname = value),
												  (url.port = ''));
										break;
									case 'protocol':
										(url.protocol = value.toLowerCase()),
											(url.slashes = !fn);
										break;
									case 'pathname':
									case 'hash':
										if (value) {
											var char =
												'pathname' === part ? '/' : '#';
											url[part] =
												value.charAt(0) !== char
													? char + value
													: value;
										} else url[part] = value;
										break;
									case 'username':
									case 'password':
										url[part] = encodeURIComponent(value);
										break;
									case 'auth':
										var index = value.indexOf(':');
										~index
											? ((url.username = value.slice(
													0,
													index,
											  )),
											  (url.username =
													encodeURIComponent(
														decodeURIComponent(
															url.username,
														),
													)),
											  (url.password = value.slice(
													index + 1,
											  )),
											  (url.password =
													encodeURIComponent(
														decodeURIComponent(
															url.password,
														),
													)))
											: (url.username =
													encodeURIComponent(
														decodeURIComponent(
															value,
														),
													));
								}
								for (var i = 0; i < rules.length; i++) {
									var ins = rules[i];
									ins[4] &&
										(url[ins[1]] =
											url[ins[1]].toLowerCase());
								}
								return (
									(url.auth = url.password
										? url.username + ':' + url.password
										: url.username),
									(url.origin =
										'file:' !== url.protocol &&
										isSpecial(url.protocol) &&
										url.host
											? url.protocol + '//' + url.host
											: 'null'),
									(url.href = url.toString()),
									url
								);
							},
							toString: function toString(stringify) {
								(stringify && 'function' == typeof stringify) ||
									(stringify = qs.stringify);
								var query,
									url = this,
									host = url.host,
									protocol = url.protocol;
								protocol &&
									':' !==
										protocol.charAt(protocol.length - 1) &&
									(protocol += ':');
								var result =
									protocol +
									((url.protocol && url.slashes) ||
									isSpecial(url.protocol)
										? '//'
										: '');
								return (
									url.username
										? ((result += url.username),
										  url.password &&
												(result += ':' + url.password),
										  (result += '@'))
										: url.password
										? ((result += ':' + url.password),
										  (result += '@'))
										: 'file:' !== url.protocol &&
										  isSpecial(url.protocol) &&
										  !host &&
										  '/' !== url.pathname &&
										  (result += '@'),
									(':' === host[host.length - 1] ||
										(port.test(url.hostname) &&
											!url.port)) &&
										(host += ':'),
									(result += host + url.pathname),
									(query =
										'object' == typeof url.query
											? stringify(url.query)
											: url.query) &&
										(result +=
											'?' !== query.charAt(0)
												? '?' + query
												: query),
									url.hash && (result += url.hash),
									result
								);
							},
						}),
							(Url.extractProtocol = extractProtocol),
							(Url.location = lolcation),
							(Url.trimLeft = trimLeft),
							(Url.qs = qs),
							(module.exports = Url);
					},
				}),
				require_rules = __commonJS({
					'node_modules/psl/data/rules.json'(exports, module) {
						module.exports = [
							'ac',
							'com.ac',
							'edu.ac',
							'gov.ac',
							'net.ac',
							'mil.ac',
							'org.ac',
							'ad',
							'nom.ad',
							'ae',
							'co.ae',
							'net.ae',
							'org.ae',
							'sch.ae',
							'ac.ae',
							'gov.ae',
							'mil.ae',
							'aero',
							'accident-investigation.aero',
							'accident-prevention.aero',
							'aerobatic.aero',
							'aeroclub.aero',
							'aerodrome.aero',
							'agents.aero',
							'aircraft.aero',
							'airline.aero',
							'airport.aero',
							'air-surveillance.aero',
							'airtraffic.aero',
							'air-traffic-control.aero',
							'ambulance.aero',
							'amusement.aero',
							'association.aero',
							'author.aero',
							'ballooning.aero',
							'broker.aero',
							'caa.aero',
							'cargo.aero',
							'catering.aero',
							'certification.aero',
							'championship.aero',
							'charter.aero',
							'civilaviation.aero',
							'club.aero',
							'conference.aero',
							'consultant.aero',
							'consulting.aero',
							'control.aero',
							'council.aero',
							'crew.aero',
							'design.aero',
							'dgca.aero',
							'educator.aero',
							'emergency.aero',
							'engine.aero',
							'engineer.aero',
							'entertainment.aero',
							'equipment.aero',
							'exchange.aero',
							'express.aero',
							'federation.aero',
							'flight.aero',
							'fuel.aero',
							'gliding.aero',
							'government.aero',
							'groundhandling.aero',
							'group.aero',
							'hanggliding.aero',
							'homebuilt.aero',
							'insurance.aero',
							'journal.aero',
							'journalist.aero',
							'leasing.aero',
							'logistics.aero',
							'magazine.aero',
							'maintenance.aero',
							'media.aero',
							'microlight.aero',
							'modelling.aero',
							'navigation.aero',
							'parachuting.aero',
							'paragliding.aero',
							'passenger-association.aero',
							'pilot.aero',
							'press.aero',
							'production.aero',
							'recreation.aero',
							'repbody.aero',
							'res.aero',
							'research.aero',
							'rotorcraft.aero',
							'safety.aero',
							'scientist.aero',
							'services.aero',
							'show.aero',
							'skydiving.aero',
							'software.aero',
							'student.aero',
							'trader.aero',
							'trading.aero',
							'trainer.aero',
							'union.aero',
							'workinggroup.aero',
							'works.aero',
							'af',
							'gov.af',
							'com.af',
							'org.af',
							'net.af',
							'edu.af',
							'ag',
							'com.ag',
							'org.ag',
							'net.ag',
							'co.ag',
							'nom.ag',
							'ai',
							'off.ai',
							'com.ai',
							'net.ai',
							'org.ai',
							'al',
							'com.al',
							'edu.al',
							'gov.al',
							'mil.al',
							'net.al',
							'org.al',
							'am',
							'co.am',
							'com.am',
							'commune.am',
							'net.am',
							'org.am',
							'ao',
							'ed.ao',
							'gv.ao',
							'og.ao',
							'co.ao',
							'pb.ao',
							'it.ao',
							'aq',
							'ar',
							'bet.ar',
							'com.ar',
							'coop.ar',
							'edu.ar',
							'gob.ar',
							'gov.ar',
							'int.ar',
							'mil.ar',
							'musica.ar',
							'mutual.ar',
							'net.ar',
							'org.ar',
							'senasa.ar',
							'tur.ar',
							'arpa',
							'e164.arpa',
							'in-addr.arpa',
							'ip6.arpa',
							'iris.arpa',
							'uri.arpa',
							'urn.arpa',
							'as',
							'gov.as',
							'asia',
							'at',
							'ac.at',
							'co.at',
							'gv.at',
							'or.at',
							'sth.ac.at',
							'au',
							'com.au',
							'net.au',
							'org.au',
							'edu.au',
							'gov.au',
							'asn.au',
							'id.au',
							'info.au',
							'conf.au',
							'oz.au',
							'act.au',
							'nsw.au',
							'nt.au',
							'qld.au',
							'sa.au',
							'tas.au',
							'vic.au',
							'wa.au',
							'act.edu.au',
							'catholic.edu.au',
							'nsw.edu.au',
							'nt.edu.au',
							'qld.edu.au',
							'sa.edu.au',
							'tas.edu.au',
							'vic.edu.au',
							'wa.edu.au',
							'qld.gov.au',
							'sa.gov.au',
							'tas.gov.au',
							'vic.gov.au',
							'wa.gov.au',
							'schools.nsw.edu.au',
							'aw',
							'com.aw',
							'ax',
							'az',
							'com.az',
							'net.az',
							'int.az',
							'gov.az',
							'org.az',
							'edu.az',
							'info.az',
							'pp.az',
							'mil.az',
							'name.az',
							'pro.az',
							'biz.az',
							'ba',
							'com.ba',
							'edu.ba',
							'gov.ba',
							'mil.ba',
							'net.ba',
							'org.ba',
							'bb',
							'biz.bb',
							'co.bb',
							'com.bb',
							'edu.bb',
							'gov.bb',
							'info.bb',
							'net.bb',
							'org.bb',
							'store.bb',
							'tv.bb',
							'*.bd',
							'be',
							'ac.be',
							'bf',
							'gov.bf',
							'bg',
							'a.bg',
							'b.bg',
							'c.bg',
							'd.bg',
							'e.bg',
							'f.bg',
							'g.bg',
							'h.bg',
							'i.bg',
							'j.bg',
							'k.bg',
							'l.bg',
							'm.bg',
							'n.bg',
							'o.bg',
							'p.bg',
							'q.bg',
							'r.bg',
							's.bg',
							't.bg',
							'u.bg',
							'v.bg',
							'w.bg',
							'x.bg',
							'y.bg',
							'z.bg',
							'0.bg',
							'1.bg',
							'2.bg',
							'3.bg',
							'4.bg',
							'5.bg',
							'6.bg',
							'7.bg',
							'8.bg',
							'9.bg',
							'bh',
							'com.bh',
							'edu.bh',
							'net.bh',
							'org.bh',
							'gov.bh',
							'bi',
							'co.bi',
							'com.bi',
							'edu.bi',
							'or.bi',
							'org.bi',
							'biz',
							'bj',
							'asso.bj',
							'barreau.bj',
							'gouv.bj',
							'bm',
							'com.bm',
							'edu.bm',
							'gov.bm',
							'net.bm',
							'org.bm',
							'bn',
							'com.bn',
							'edu.bn',
							'gov.bn',
							'net.bn',
							'org.bn',
							'bo',
							'com.bo',
							'edu.bo',
							'gob.bo',
							'int.bo',
							'org.bo',
							'net.bo',
							'mil.bo',
							'tv.bo',
							'web.bo',
							'academia.bo',
							'agro.bo',
							'arte.bo',
							'blog.bo',
							'bolivia.bo',
							'ciencia.bo',
							'cooperativa.bo',
							'democracia.bo',
							'deporte.bo',
							'ecologia.bo',
							'economia.bo',
							'empresa.bo',
							'indigena.bo',
							'industria.bo',
							'info.bo',
							'medicina.bo',
							'movimiento.bo',
							'musica.bo',
							'natural.bo',
							'nombre.bo',
							'noticias.bo',
							'patria.bo',
							'politica.bo',
							'profesional.bo',
							'plurinacional.bo',
							'pueblo.bo',
							'revista.bo',
							'salud.bo',
							'tecnologia.bo',
							'tksat.bo',
							'transporte.bo',
							'wiki.bo',
							'br',
							'9guacu.br',
							'abc.br',
							'adm.br',
							'adv.br',
							'agr.br',
							'aju.br',
							'am.br',
							'anani.br',
							'aparecida.br',
							'app.br',
							'arq.br',
							'art.br',
							'ato.br',
							'b.br',
							'barueri.br',
							'belem.br',
							'bhz.br',
							'bib.br',
							'bio.br',
							'blog.br',
							'bmd.br',
							'boavista.br',
							'bsb.br',
							'campinagrande.br',
							'campinas.br',
							'caxias.br',
							'cim.br',
							'cng.br',
							'cnt.br',
							'com.br',
							'contagem.br',
							'coop.br',
							'coz.br',
							'cri.br',
							'cuiaba.br',
							'curitiba.br',
							'def.br',
							'des.br',
							'det.br',
							'dev.br',
							'ecn.br',
							'eco.br',
							'edu.br',
							'emp.br',
							'enf.br',
							'eng.br',
							'esp.br',
							'etc.br',
							'eti.br',
							'far.br',
							'feira.br',
							'flog.br',
							'floripa.br',
							'fm.br',
							'fnd.br',
							'fortal.br',
							'fot.br',
							'foz.br',
							'fst.br',
							'g12.br',
							'geo.br',
							'ggf.br',
							'goiania.br',
							'gov.br',
							'ac.gov.br',
							'al.gov.br',
							'am.gov.br',
							'ap.gov.br',
							'ba.gov.br',
							'ce.gov.br',
							'df.gov.br',
							'es.gov.br',
							'go.gov.br',
							'ma.gov.br',
							'mg.gov.br',
							'ms.gov.br',
							'mt.gov.br',
							'pa.gov.br',
							'pb.gov.br',
							'pe.gov.br',
							'pi.gov.br',
							'pr.gov.br',
							'rj.gov.br',
							'rn.gov.br',
							'ro.gov.br',
							'rr.gov.br',
							'rs.gov.br',
							'sc.gov.br',
							'se.gov.br',
							'sp.gov.br',
							'to.gov.br',
							'gru.br',
							'imb.br',
							'ind.br',
							'inf.br',
							'jab.br',
							'jampa.br',
							'jdf.br',
							'joinville.br',
							'jor.br',
							'jus.br',
							'leg.br',
							'lel.br',
							'log.br',
							'londrina.br',
							'macapa.br',
							'maceio.br',
							'manaus.br',
							'maringa.br',
							'mat.br',
							'med.br',
							'mil.br',
							'morena.br',
							'mp.br',
							'mus.br',
							'natal.br',
							'net.br',
							'niteroi.br',
							'*.nom.br',
							'not.br',
							'ntr.br',
							'odo.br',
							'ong.br',
							'org.br',
							'osasco.br',
							'palmas.br',
							'poa.br',
							'ppg.br',
							'pro.br',
							'psc.br',
							'psi.br',
							'pvh.br',
							'qsl.br',
							'radio.br',
							'rec.br',
							'recife.br',
							'rep.br',
							'ribeirao.br',
							'rio.br',
							'riobranco.br',
							'riopreto.br',
							'salvador.br',
							'sampa.br',
							'santamaria.br',
							'santoandre.br',
							'saobernardo.br',
							'saogonca.br',
							'seg.br',
							'sjc.br',
							'slg.br',
							'slz.br',
							'sorocaba.br',
							'srv.br',
							'taxi.br',
							'tc.br',
							'tec.br',
							'teo.br',
							'the.br',
							'tmp.br',
							'trd.br',
							'tur.br',
							'tv.br',
							'udi.br',
							'vet.br',
							'vix.br',
							'vlog.br',
							'wiki.br',
							'zlg.br',
							'bs',
							'com.bs',
							'net.bs',
							'org.bs',
							'edu.bs',
							'gov.bs',
							'bt',
							'com.bt',
							'edu.bt',
							'gov.bt',
							'net.bt',
							'org.bt',
							'bv',
							'bw',
							'co.bw',
							'org.bw',
							'by',
							'gov.by',
							'mil.by',
							'com.by',
							'of.by',
							'bz',
							'com.bz',
							'net.bz',
							'org.bz',
							'edu.bz',
							'gov.bz',
							'ca',
							'ab.ca',
							'bc.ca',
							'mb.ca',
							'nb.ca',
							'nf.ca',
							'nl.ca',
							'ns.ca',
							'nt.ca',
							'nu.ca',
							'on.ca',
							'pe.ca',
							'qc.ca',
							'sk.ca',
							'yk.ca',
							'gc.ca',
							'cat',
							'cc',
							'cd',
							'gov.cd',
							'cf',
							'cg',
							'ch',
							'ci',
							'org.ci',
							'or.ci',
							'com.ci',
							'co.ci',
							'edu.ci',
							'ed.ci',
							'ac.ci',
							'net.ci',
							'go.ci',
							'asso.ci',
							'aéroport.ci',
							'int.ci',
							'presse.ci',
							'md.ci',
							'gouv.ci',
							'*.ck',
							'!www.ck',
							'cl',
							'co.cl',
							'gob.cl',
							'gov.cl',
							'mil.cl',
							'cm',
							'co.cm',
							'com.cm',
							'gov.cm',
							'net.cm',
							'cn',
							'ac.cn',
							'com.cn',
							'edu.cn',
							'gov.cn',
							'net.cn',
							'org.cn',
							'mil.cn',
							'公司.cn',
							'网络.cn',
							'網絡.cn',
							'ah.cn',
							'bj.cn',
							'cq.cn',
							'fj.cn',
							'gd.cn',
							'gs.cn',
							'gz.cn',
							'gx.cn',
							'ha.cn',
							'hb.cn',
							'he.cn',
							'hi.cn',
							'hl.cn',
							'hn.cn',
							'jl.cn',
							'js.cn',
							'jx.cn',
							'ln.cn',
							'nm.cn',
							'nx.cn',
							'qh.cn',
							'sc.cn',
							'sd.cn',
							'sh.cn',
							'sn.cn',
							'sx.cn',
							'tj.cn',
							'xj.cn',
							'xz.cn',
							'yn.cn',
							'zj.cn',
							'hk.cn',
							'mo.cn',
							'tw.cn',
							'co',
							'arts.co',
							'com.co',
							'edu.co',
							'firm.co',
							'gov.co',
							'info.co',
							'int.co',
							'mil.co',
							'net.co',
							'nom.co',
							'org.co',
							'rec.co',
							'web.co',
							'com',
							'coop',
							'cr',
							'ac.cr',
							'co.cr',
							'ed.cr',
							'fi.cr',
							'go.cr',
							'or.cr',
							'sa.cr',
							'cu',
							'com.cu',
							'edu.cu',
							'org.cu',
							'net.cu',
							'gov.cu',
							'inf.cu',
							'cv',
							'com.cv',
							'edu.cv',
							'int.cv',
							'nome.cv',
							'org.cv',
							'cw',
							'com.cw',
							'edu.cw',
							'net.cw',
							'org.cw',
							'cx',
							'gov.cx',
							'cy',
							'ac.cy',
							'biz.cy',
							'com.cy',
							'ekloges.cy',
							'gov.cy',
							'ltd.cy',
							'mil.cy',
							'net.cy',
							'org.cy',
							'press.cy',
							'pro.cy',
							'tm.cy',
							'cz',
							'de',
							'dj',
							'dk',
							'dm',
							'com.dm',
							'net.dm',
							'org.dm',
							'edu.dm',
							'gov.dm',
							'do',
							'art.do',
							'com.do',
							'edu.do',
							'gob.do',
							'gov.do',
							'mil.do',
							'net.do',
							'org.do',
							'sld.do',
							'web.do',
							'dz',
							'art.dz',
							'asso.dz',
							'com.dz',
							'edu.dz',
							'gov.dz',
							'org.dz',
							'net.dz',
							'pol.dz',
							'soc.dz',
							'tm.dz',
							'ec',
							'com.ec',
							'info.ec',
							'net.ec',
							'fin.ec',
							'k12.ec',
							'med.ec',
							'pro.ec',
							'org.ec',
							'edu.ec',
							'gov.ec',
							'gob.ec',
							'mil.ec',
							'edu',
							'ee',
							'edu.ee',
							'gov.ee',
							'riik.ee',
							'lib.ee',
							'med.ee',
							'com.ee',
							'pri.ee',
							'aip.ee',
							'org.ee',
							'fie.ee',
							'eg',
							'com.eg',
							'edu.eg',
							'eun.eg',
							'gov.eg',
							'mil.eg',
							'name.eg',
							'net.eg',
							'org.eg',
							'sci.eg',
							'*.er',
							'es',
							'com.es',
							'nom.es',
							'org.es',
							'gob.es',
							'edu.es',
							'et',
							'com.et',
							'gov.et',
							'org.et',
							'edu.et',
							'biz.et',
							'name.et',
							'info.et',
							'net.et',
							'eu',
							'fi',
							'aland.fi',
							'fj',
							'ac.fj',
							'biz.fj',
							'com.fj',
							'gov.fj',
							'info.fj',
							'mil.fj',
							'name.fj',
							'net.fj',
							'org.fj',
							'pro.fj',
							'*.fk',
							'com.fm',
							'edu.fm',
							'net.fm',
							'org.fm',
							'fm',
							'fo',
							'fr',
							'asso.fr',
							'com.fr',
							'gouv.fr',
							'nom.fr',
							'prd.fr',
							'tm.fr',
							'aeroport.fr',
							'avocat.fr',
							'avoues.fr',
							'cci.fr',
							'chambagri.fr',
							'chirurgiens-dentistes.fr',
							'experts-comptables.fr',
							'geometre-expert.fr',
							'greta.fr',
							'huissier-justice.fr',
							'medecin.fr',
							'notaires.fr',
							'pharmacien.fr',
							'port.fr',
							'veterinaire.fr',
							'ga',
							'gb',
							'edu.gd',
							'gov.gd',
							'gd',
							'ge',
							'com.ge',
							'edu.ge',
							'gov.ge',
							'org.ge',
							'mil.ge',
							'net.ge',
							'pvt.ge',
							'gf',
							'gg',
							'co.gg',
							'net.gg',
							'org.gg',
							'gh',
							'com.gh',
							'edu.gh',
							'gov.gh',
							'org.gh',
							'mil.gh',
							'gi',
							'com.gi',
							'ltd.gi',
							'gov.gi',
							'mod.gi',
							'edu.gi',
							'org.gi',
							'gl',
							'co.gl',
							'com.gl',
							'edu.gl',
							'net.gl',
							'org.gl',
							'gm',
							'gn',
							'ac.gn',
							'com.gn',
							'edu.gn',
							'gov.gn',
							'org.gn',
							'net.gn',
							'gov',
							'gp',
							'com.gp',
							'net.gp',
							'mobi.gp',
							'edu.gp',
							'org.gp',
							'asso.gp',
							'gq',
							'gr',
							'com.gr',
							'edu.gr',
							'net.gr',
							'org.gr',
							'gov.gr',
							'gs',
							'gt',
							'com.gt',
							'edu.gt',
							'gob.gt',
							'ind.gt',
							'mil.gt',
							'net.gt',
							'org.gt',
							'gu',
							'com.gu',
							'edu.gu',
							'gov.gu',
							'guam.gu',
							'info.gu',
							'net.gu',
							'org.gu',
							'web.gu',
							'gw',
							'gy',
							'co.gy',
							'com.gy',
							'edu.gy',
							'gov.gy',
							'net.gy',
							'org.gy',
							'hk',
							'com.hk',
							'edu.hk',
							'gov.hk',
							'idv.hk',
							'net.hk',
							'org.hk',
							'公司.hk',
							'教育.hk',
							'敎育.hk',
							'政府.hk',
							'個人.hk',
							'个��.hk',
							'箇人.hk',
							'網络.hk',
							'网络.hk',
							'组織.hk',
							'網絡.hk',
							'网絡.hk',
							'组织.hk',
							'組織.hk',
							'組织.hk',
							'hm',
							'hn',
							'com.hn',
							'edu.hn',
							'org.hn',
							'net.hn',
							'mil.hn',
							'gob.hn',
							'hr',
							'iz.hr',
							'from.hr',
							'name.hr',
							'com.hr',
							'ht',
							'com.ht',
							'shop.ht',
							'firm.ht',
							'info.ht',
							'adult.ht',
							'net.ht',
							'pro.ht',
							'org.ht',
							'med.ht',
							'art.ht',
							'coop.ht',
							'pol.ht',
							'asso.ht',
							'edu.ht',
							'rel.ht',
							'gouv.ht',
							'perso.ht',
							'hu',
							'co.hu',
							'info.hu',
							'org.hu',
							'priv.hu',
							'sport.hu',
							'tm.hu',
							'2000.hu',
							'agrar.hu',
							'bolt.hu',
							'casino.hu',
							'city.hu',
							'erotica.hu',
							'erotika.hu',
							'film.hu',
							'forum.hu',
							'games.hu',
							'hotel.hu',
							'ingatlan.hu',
							'jogasz.hu',
							'konyvelo.hu',
							'lakas.hu',
							'media.hu',
							'news.hu',
							'reklam.hu',
							'sex.hu',
							'shop.hu',
							'suli.hu',
							'szex.hu',
							'tozsde.hu',
							'utazas.hu',
							'video.hu',
							'id',
							'ac.id',
							'biz.id',
							'co.id',
							'desa.id',
							'go.id',
							'mil.id',
							'my.id',
							'net.id',
							'or.id',
							'ponpes.id',
							'sch.id',
							'web.id',
							'ie',
							'gov.ie',
							'il',
							'ac.il',
							'co.il',
							'gov.il',
							'idf.il',
							'k12.il',
							'muni.il',
							'net.il',
							'org.il',
							'im',
							'ac.im',
							'co.im',
							'com.im',
							'ltd.co.im',
							'net.im',
							'org.im',
							'plc.co.im',
							'tt.im',
							'tv.im',
							'in',
							'co.in',
							'firm.in',
							'net.in',
							'org.in',
							'gen.in',
							'ind.in',
							'nic.in',
							'ac.in',
							'edu.in',
							'res.in',
							'gov.in',
							'mil.in',
							'info',
							'int',
							'eu.int',
							'io',
							'com.io',
							'iq',
							'gov.iq',
							'edu.iq',
							'mil.iq',
							'com.iq',
							'org.iq',
							'net.iq',
							'ir',
							'ac.ir',
							'co.ir',
							'gov.ir',
							'id.ir',
							'net.ir',
							'org.ir',
							'sch.ir',
							'ایران.ir',
							'ايران.ir',
							'is',
							'net.is',
							'com.is',
							'edu.is',
							'gov.is',
							'org.is',
							'int.is',
							'it',
							'gov.it',
							'edu.it',
							'abr.it',
							'abruzzo.it',
							'aosta-valley.it',
							'aostavalley.it',
							'bas.it',
							'basilicata.it',
							'cal.it',
							'calabria.it',
							'cam.it',
							'campania.it',
							'emilia-romagna.it',
							'emiliaromagna.it',
							'emr.it',
							'friuli-v-giulia.it',
							'friuli-ve-giulia.it',
							'friuli-vegiulia.it',
							'friuli-venezia-giulia.it',
							'friuli-veneziagiulia.it',
							'friuli-vgiulia.it',
							'friuliv-giulia.it',
							'friulive-giulia.it',
							'friulivegiulia.it',
							'friulivenezia-giulia.it',
							'friuliveneziagiulia.it',
							'friulivgiulia.it',
							'fvg.it',
							'laz.it',
							'lazio.it',
							'lig.it',
							'liguria.it',
							'lom.it',
							'lombardia.it',
							'lombardy.it',
							'lucania.it',
							'mar.it',
							'marche.it',
							'mol.it',
							'molise.it',
							'piedmont.it',
							'piemonte.it',
							'pmn.it',
							'pug.it',
							'puglia.it',
							'sar.it',
							'sardegna.it',
							'sardinia.it',
							'sic.it',
							'sicilia.it',
							'sicily.it',
							'taa.it',
							'tos.it',
							'toscana.it',
							'trentin-sud-tirol.it',
							'trentin-süd-tirol.it',
							'trentin-sudtirol.it',
							'trentin-südtirol.it',
							'trentin-sued-tirol.it',
							'trentin-suedtirol.it',
							'trentino-a-adige.it',
							'trentino-aadige.it',
							'trentino-alto-adige.it',
							'trentino-altoadige.it',
							'trentino-s-tirol.it',
							'trentino-stirol.it',
							'trentino-sud-tirol.it',
							'trentino-süd-tirol.it',
							'trentino-sudtirol.it',
							'trentino-südtirol.it',
							'trentino-sued-tirol.it',
							'trentino-suedtirol.it',
							'trentino.it',
							'trentinoa-adige.it',
							'trentinoaadige.it',
							'trentinoalto-adige.it',
							'trentinoaltoadige.it',
							'trentinos-tirol.it',
							'trentinostirol.it',
							'trentinosud-tirol.it',
							'trentinosüd-tirol.it',
							'trentinosudtirol.it',
							'trentinosüdtirol.it',
							'trentinosued-tirol.it',
							'trentinosuedtirol.it',
							'trentinsud-tirol.it',
							'trentinsüd-tirol.it',
							'trentinsudtirol.it',
							'trentinsüdtirol.it',
							'trentinsued-tirol.it',
							'trentinsuedtirol.it',
							'tuscany.it',
							'umb.it',
							'umbria.it',
							'val-d-aosta.it',
							'val-daosta.it',
							'vald-aosta.it',
							'valdaosta.it',
							'valle-aosta.it',
							'valle-d-aosta.it',
							'valle-daosta.it',
							'valleaosta.it',
							'valled-aosta.it',
							'valledaosta.it',
							'vallee-aoste.it',
							'vallée-aoste.it',
							'vallee-d-aoste.it',
							'vallée-d-aoste.it',
							'valleeaoste.it',
							'valléeaoste.it',
							'valleedaoste.it',
							'valléedaoste.it',
							'vao.it',
							'vda.it',
							'ven.it',
							'veneto.it',
							'ag.it',
							'agrigento.it',
							'al.it',
							'alessandria.it',
							'alto-adige.it',
							'altoadige.it',
							'an.it',
							'ancona.it',
							'andria-barletta-trani.it',
							'andria-trani-barletta.it',
							'andriabarlettatrani.it',
							'andriatranibarletta.it',
							'ao.it',
							'aosta.it',
							'aoste.it',
							'ap.it',
							'aq.it',
							'aquila.it',
							'ar.it',
							'arezzo.it',
							'ascoli-piceno.it',
							'ascolipiceno.it',
							'asti.it',
							'at.it',
							'av.it',
							'avellino.it',
							'ba.it',
							'balsan-sudtirol.it',
							'balsan-südtirol.it',
							'balsan-suedtirol.it',
							'balsan.it',
							'bari.it',
							'barletta-trani-andria.it',
							'barlettatraniandria.it',
							'belluno.it',
							'benevento.it',
							'bergamo.it',
							'bg.it',
							'bi.it',
							'biella.it',
							'bl.it',
							'bn.it',
							'bo.it',
							'bologna.it',
							'bolzano-altoadige.it',
							'bolzano.it',
							'bozen-sudtirol.it',
							'bozen-südtirol.it',
							'bozen-suedtirol.it',
							'bozen.it',
							'br.it',
							'brescia.it',
							'brindisi.it',
							'bs.it',
							'bt.it',
							'bulsan-sudtirol.it',
							'bulsan-südtirol.it',
							'bulsan-suedtirol.it',
							'bulsan.it',
							'bz.it',
							'ca.it',
							'cagliari.it',
							'caltanissetta.it',
							'campidano-medio.it',
							'campidanomedio.it',
							'campobasso.it',
							'carbonia-iglesias.it',
							'carboniaiglesias.it',
							'carrara-massa.it',
							'carraramassa.it',
							'caserta.it',
							'catania.it',
							'catanzaro.it',
							'cb.it',
							'ce.it',
							'cesena-forli.it',
							'cesena-forlì.it',
							'cesenaforli.it',
							'cesenaforlì.it',
							'ch.it',
							'chieti.it',
							'ci.it',
							'cl.it',
							'cn.it',
							'co.it',
							'como.it',
							'cosenza.it',
							'cr.it',
							'cremona.it',
							'crotone.it',
							'cs.it',
							'ct.it',
							'cuneo.it',
							'cz.it',
							'dell-ogliastra.it',
							'dellogliastra.it',
							'en.it',
							'enna.it',
							'fc.it',
							'fe.it',
							'fermo.it',
							'ferrara.it',
							'fg.it',
							'fi.it',
							'firenze.it',
							'florence.it',
							'fm.it',
							'foggia.it',
							'forli-cesena.it',
							'forlì-cesena.it',
							'forlicesena.it',
							'forlìcesena.it',
							'fr.it',
							'frosinone.it',
							'ge.it',
							'genoa.it',
							'genova.it',
							'go.it',
							'gorizia.it',
							'gr.it',
							'grosseto.it',
							'iglesias-carbonia.it',
							'iglesiascarbonia.it',
							'im.it',
							'imperia.it',
							'is.it',
							'isernia.it',
							'kr.it',
							'la-spezia.it',
							'laquila.it',
							'laspezia.it',
							'latina.it',
							'lc.it',
							'le.it',
							'lecce.it',
							'lecco.it',
							'li.it',
							'livorno.it',
							'lo.it',
							'lodi.it',
							'lt.it',
							'lu.it',
							'lucca.it',
							'macerata.it',
							'mantova.it',
							'massa-carrara.it',
							'massacarrara.it',
							'matera.it',
							'mb.it',
							'mc.it',
							'me.it',
							'medio-campidano.it',
							'mediocampidano.it',
							'messina.it',
							'mi.it',
							'milan.it',
							'milano.it',
							'mn.it',
							'mo.it',
							'modena.it',
							'monza-brianza.it',
							'monza-e-della-brianza.it',
							'monza.it',
							'monzabrianza.it',
							'monzaebrianza.it',
							'monzaedellabrianza.it',
							'ms.it',
							'mt.it',
							'na.it',
							'naples.it',
							'napoli.it',
							'no.it',
							'novara.it',
							'nu.it',
							'nuoro.it',
							'og.it',
							'ogliastra.it',
							'olbia-tempio.it',
							'olbiatempio.it',
							'or.it',
							'oristano.it',
							'ot.it',
							'pa.it',
							'padova.it',
							'padua.it',
							'palermo.it',
							'parma.it',
							'pavia.it',
							'pc.it',
							'pd.it',
							'pe.it',
							'perugia.it',
							'pesaro-urbino.it',
							'pesarourbino.it',
							'pescara.it',
							'pg.it',
							'pi.it',
							'piacenza.it',
							'pisa.it',
							'pistoia.it',
							'pn.it',
							'po.it',
							'pordenone.it',
							'potenza.it',
							'pr.it',
							'prato.it',
							'pt.it',
							'pu.it',
							'pv.it',
							'pz.it',
							'ra.it',
							'ragusa.it',
							'ravenna.it',
							'rc.it',
							're.it',
							'reggio-calabria.it',
							'reggio-emilia.it',
							'reggiocalabria.it',
							'reggioemilia.it',
							'rg.it',
							'ri.it',
							'rieti.it',
							'rimini.it',
							'rm.it',
							'rn.it',
							'ro.it',
							'roma.it',
							'rome.it',
							'rovigo.it',
							'sa.it',
							'salerno.it',
							'sassari.it',
							'savona.it',
							'si.it',
							'siena.it',
							'siracusa.it',
							'so.it',
							'sondrio.it',
							'sp.it',
							'sr.it',
							'ss.it',
							'suedtirol.it',
							'südtirol.it',
							'sv.it',
							'ta.it',
							'taranto.it',
							'te.it',
							'tempio-olbia.it',
							'tempioolbia.it',
							'teramo.it',
							'terni.it',
							'tn.it',
							'to.it',
							'torino.it',
							'tp.it',
							'tr.it',
							'trani-andria-barletta.it',
							'trani-barletta-andria.it',
							'traniandriabarletta.it',
							'tranibarlettaandria.it',
							'trapani.it',
							'trento.it',
							'treviso.it',
							'trieste.it',
							'ts.it',
							'turin.it',
							'tv.it',
							'ud.it',
							'udine.it',
							'urbino-pesaro.it',
							'urbinopesaro.it',
							'va.it',
							'varese.it',
							'vb.it',
							'vc.it',
							've.it',
							'venezia.it',
							'venice.it',
							'verbania.it',
							'vercelli.it',
							'verona.it',
							'vi.it',
							'vibo-valentia.it',
							'vibovalentia.it',
							'vicenza.it',
							'viterbo.it',
							'vr.it',
							'vs.it',
							'vt.it',
							'vv.it',
							'je',
							'co.je',
							'net.je',
							'org.je',
							'*.jm',
							'jo',
							'com.jo',
							'org.jo',
							'net.jo',
							'edu.jo',
							'sch.jo',
							'gov.jo',
							'mil.jo',
							'name.jo',
							'jobs',
							'jp',
							'ac.jp',
							'ad.jp',
							'co.jp',
							'ed.jp',
							'go.jp',
							'gr.jp',
							'lg.jp',
							'ne.jp',
							'or.jp',
							'aichi.jp',
							'akita.jp',
							'aomori.jp',
							'chiba.jp',
							'ehime.jp',
							'fukui.jp',
							'fukuoka.jp',
							'fukushima.jp',
							'gifu.jp',
							'gunma.jp',
							'hiroshima.jp',
							'hokkaido.jp',
							'hyogo.jp',
							'ibaraki.jp',
							'ishikawa.jp',
							'iwate.jp',
							'kagawa.jp',
							'kagoshima.jp',
							'kanagawa.jp',
							'kochi.jp',
							'kumamoto.jp',
							'kyoto.jp',
							'mie.jp',
							'miyagi.jp',
							'miyazaki.jp',
							'nagano.jp',
							'nagasaki.jp',
							'nara.jp',
							'niigata.jp',
							'oita.jp',
							'okayama.jp',
							'okinawa.jp',
							'osaka.jp',
							'saga.jp',
							'saitama.jp',
							'shiga.jp',
							'shimane.jp',
							'shizuoka.jp',
							'tochigi.jp',
							'tokushima.jp',
							'tokyo.jp',
							'tottori.jp',
							'toyama.jp',
							'wakayama.jp',
							'yamagata.jp',
							'yamaguchi.jp',
							'yamanashi.jp',
							'栃木.jp',
							'愛知.jp',
							'愛媛.jp',
							'兵庫.jp',
							'熊本.jp',
							'茨城.jp',
							'北海道.jp',
							'千葉.jp',
							'和歌山.jp',
							'長崎.jp',
							'長野.jp',
							'新潟.jp',
							'青森.jp',
							'静岡.jp',
							'東京.jp',
							'石川.jp',
							'埼玉.jp',
							'三重.jp',
							'京都.jp',
							'佐賀.jp',
							'大分.jp',
							'大阪.jp',
							'奈良.jp',
							'宮城.jp',
							'宮崎.jp',
							'富山.jp',
							'山口.jp',
							'山形.jp',
							'山梨.jp',
							'岩手.jp',
							'岐阜.jp',
							'岡山.jp',
							'島根.jp',
							'広島.jp',
							'徳島.jp',
							'沖縄.jp',
							'滋賀.jp',
							'神奈川.jp',
							'福井.jp',
							'福岡.jp',
							'福島.jp',
							'秋田.jp',
							'群馬.jp',
							'香川.jp',
							'高知.jp',
							'鳥取.jp',
							'鹿児島.jp',
							'*.kawasaki.jp',
							'*.kitakyushu.jp',
							'*.kobe.jp',
							'*.nagoya.jp',
							'*.sapporo.jp',
							'*.sendai.jp',
							'*.yokohama.jp',
							'!city.kawasaki.jp',
							'!city.kitakyushu.jp',
							'!city.kobe.jp',
							'!city.nagoya.jp',
							'!city.sapporo.jp',
							'!city.sendai.jp',
							'!city.yokohama.jp',
							'aisai.aichi.jp',
							'ama.aichi.jp',
							'anjo.aichi.jp',
							'asuke.aichi.jp',
							'chiryu.aichi.jp',
							'chita.aichi.jp',
							'fuso.aichi.jp',
							'gamagori.aichi.jp',
							'handa.aichi.jp',
							'hazu.aichi.jp',
							'hekinan.aichi.jp',
							'higashiura.aichi.jp',
							'ichinomiya.aichi.jp',
							'inazawa.aichi.jp',
							'inuyama.aichi.jp',
							'isshiki.aichi.jp',
							'iwakura.aichi.jp',
							'kanie.aichi.jp',
							'kariya.aichi.jp',
							'kasugai.aichi.jp',
							'kira.aichi.jp',
							'kiyosu.aichi.jp',
							'komaki.aichi.jp',
							'konan.aichi.jp',
							'kota.aichi.jp',
							'mihama.aichi.jp',
							'miyoshi.aichi.jp',
							'nishio.aichi.jp',
							'nisshin.aichi.jp',
							'obu.aichi.jp',
							'oguchi.aichi.jp',
							'oharu.aichi.jp',
							'okazaki.aichi.jp',
							'owariasahi.aichi.jp',
							'seto.aichi.jp',
							'shikatsu.aichi.jp',
							'shinshiro.aichi.jp',
							'shitara.aichi.jp',
							'tahara.aichi.jp',
							'takahama.aichi.jp',
							'tobishima.aichi.jp',
							'toei.aichi.jp',
							'togo.aichi.jp',
							'tokai.aichi.jp',
							'tokoname.aichi.jp',
							'toyoake.aichi.jp',
							'toyohashi.aichi.jp',
							'toyokawa.aichi.jp',
							'toyone.aichi.jp',
							'toyota.aichi.jp',
							'tsushima.aichi.jp',
							'yatomi.aichi.jp',
							'akita.akita.jp',
							'daisen.akita.jp',
							'fujisato.akita.jp',
							'gojome.akita.jp',
							'hachirogata.akita.jp',
							'happou.akita.jp',
							'higashinaruse.akita.jp',
							'honjo.akita.jp',
							'honjyo.akita.jp',
							'ikawa.akita.jp',
							'kamikoani.akita.jp',
							'kamioka.akita.jp',
							'katagami.akita.jp',
							'kazuno.akita.jp',
							'kitaakita.akita.jp',
							'kosaka.akita.jp',
							'kyowa.akita.jp',
							'misato.akita.jp',
							'mitane.akita.jp',
							'moriyoshi.akita.jp',
							'nikaho.akita.jp',
							'noshiro.akita.jp',
							'odate.akita.jp',
							'oga.akita.jp',
							'ogata.akita.jp',
							'semboku.akita.jp',
							'yokote.akita.jp',
							'yurihonjo.akita.jp',
							'aomori.aomori.jp',
							'gonohe.aomori.jp',
							'hachinohe.aomori.jp',
							'hashikami.aomori.jp',
							'hiranai.aomori.jp',
							'hirosaki.aomori.jp',
							'itayanagi.aomori.jp',
							'kuroishi.aomori.jp',
							'misawa.aomori.jp',
							'mutsu.aomori.jp',
							'nakadomari.aomori.jp',
							'noheji.aomori.jp',
							'oirase.aomori.jp',
							'owani.aomori.jp',
							'rokunohe.aomori.jp',
							'sannohe.aomori.jp',
							'shichinohe.aomori.jp',
							'shingo.aomori.jp',
							'takko.aomori.jp',
							'towada.aomori.jp',
							'tsugaru.aomori.jp',
							'tsuruta.aomori.jp',
							'abiko.chiba.jp',
							'asahi.chiba.jp',
							'chonan.chiba.jp',
							'chosei.chiba.jp',
							'choshi.chiba.jp',
							'chuo.chiba.jp',
							'funabashi.chiba.jp',
							'futtsu.chiba.jp',
							'hanamigawa.chiba.jp',
							'ichihara.chiba.jp',
							'ichikawa.chiba.jp',
							'ichinomiya.chiba.jp',
							'inzai.chiba.jp',
							'isumi.chiba.jp',
							'kamagaya.chiba.jp',
							'kamogawa.chiba.jp',
							'kashiwa.chiba.jp',
							'katori.chiba.jp',
							'katsuura.chiba.jp',
							'kimitsu.chiba.jp',
							'kisarazu.chiba.jp',
							'kozaki.chiba.jp',
							'kujukuri.chiba.jp',
							'kyonan.chiba.jp',
							'matsudo.chiba.jp',
							'midori.chiba.jp',
							'mihama.chiba.jp',
							'minamiboso.chiba.jp',
							'mobara.chiba.jp',
							'mutsuzawa.chiba.jp',
							'nagara.chiba.jp',
							'nagareyama.chiba.jp',
							'narashino.chiba.jp',
							'narita.chiba.jp',
							'noda.chiba.jp',
							'oamishirasato.chiba.jp',
							'omigawa.chiba.jp',
							'onjuku.chiba.jp',
							'otaki.chiba.jp',
							'sakae.chiba.jp',
							'sakura.chiba.jp',
							'shimofusa.chiba.jp',
							'shirako.chiba.jp',
							'shiroi.chiba.jp',
							'shisui.chiba.jp',
							'sodegaura.chiba.jp',
							'sosa.chiba.jp',
							'tako.chiba.jp',
							'tateyama.chiba.jp',
							'togane.chiba.jp',
							'tohnosho.chiba.jp',
							'tomisato.chiba.jp',
							'urayasu.chiba.jp',
							'yachimata.chiba.jp',
							'yachiyo.chiba.jp',
							'yokaichiba.chiba.jp',
							'yokoshibahikari.chiba.jp',
							'yotsukaido.chiba.jp',
							'ainan.ehime.jp',
							'honai.ehime.jp',
							'ikata.ehime.jp',
							'imabari.ehime.jp',
							'iyo.ehime.jp',
							'kamijima.ehime.jp',
							'kihoku.ehime.jp',
							'kumakogen.ehime.jp',
							'masaki.ehime.jp',
							'matsuno.ehime.jp',
							'matsuyama.ehime.jp',
							'namikata.ehime.jp',
							'niihama.ehime.jp',
							'ozu.ehime.jp',
							'saijo.ehime.jp',
							'seiyo.ehime.jp',
							'shikokuchuo.ehime.jp',
							'tobe.ehime.jp',
							'toon.ehime.jp',
							'uchiko.ehime.jp',
							'uwajima.ehime.jp',
							'yawatahama.ehime.jp',
							'echizen.fukui.jp',
							'eiheiji.fukui.jp',
							'fukui.fukui.jp',
							'ikeda.fukui.jp',
							'katsuyama.fukui.jp',
							'mihama.fukui.jp',
							'minamiechizen.fukui.jp',
							'obama.fukui.jp',
							'ohi.fukui.jp',
							'ono.fukui.jp',
							'sabae.fukui.jp',
							'sakai.fukui.jp',
							'takahama.fukui.jp',
							'tsuruga.fukui.jp',
							'wakasa.fukui.jp',
							'ashiya.fukuoka.jp',
							'buzen.fukuoka.jp',
							'chikugo.fukuoka.jp',
							'chikuho.fukuoka.jp',
							'chikujo.fukuoka.jp',
							'chikushino.fukuoka.jp',
							'chikuzen.fukuoka.jp',
							'chuo.fukuoka.jp',
							'dazaifu.fukuoka.jp',
							'fukuchi.fukuoka.jp',
							'hakata.fukuoka.jp',
							'higashi.fukuoka.jp',
							'hirokawa.fukuoka.jp',
							'hisayama.fukuoka.jp',
							'iizuka.fukuoka.jp',
							'inatsuki.fukuoka.jp',
							'kaho.fukuoka.jp',
							'kasuga.fukuoka.jp',
							'kasuya.fukuoka.jp',
							'kawara.fukuoka.jp',
							'keisen.fukuoka.jp',
							'koga.fukuoka.jp',
							'kurate.fukuoka.jp',
							'kurogi.fukuoka.jp',
							'kurume.fukuoka.jp',
							'minami.fukuoka.jp',
							'miyako.fukuoka.jp',
							'miyama.fukuoka.jp',
							'miyawaka.fukuoka.jp',
							'mizumaki.fukuoka.jp',
							'munakata.fukuoka.jp',
							'nakagawa.fukuoka.jp',
							'nakama.fukuoka.jp',
							'nishi.fukuoka.jp',
							'nogata.fukuoka.jp',
							'ogori.fukuoka.jp',
							'okagaki.fukuoka.jp',
							'okawa.fukuoka.jp',
							'oki.fukuoka.jp',
							'omuta.fukuoka.jp',
							'onga.fukuoka.jp',
							'onojo.fukuoka.jp',
							'oto.fukuoka.jp',
							'saigawa.fukuoka.jp',
							'sasaguri.fukuoka.jp',
							'shingu.fukuoka.jp',
							'shinyoshitomi.fukuoka.jp',
							'shonai.fukuoka.jp',
							'soeda.fukuoka.jp',
							'sue.fukuoka.jp',
							'tachiarai.fukuoka.jp',
							'tagawa.fukuoka.jp',
							'takata.fukuoka.jp',
							'toho.fukuoka.jp',
							'toyotsu.fukuoka.jp',
							'tsuiki.fukuoka.jp',
							'ukiha.fukuoka.jp',
							'umi.fukuoka.jp',
							'usui.fukuoka.jp',
							'yamada.fukuoka.jp',
							'yame.fukuoka.jp',
							'yanagawa.fukuoka.jp',
							'yukuhashi.fukuoka.jp',
							'aizubange.fukushima.jp',
							'aizumisato.fukushima.jp',
							'aizuwakamatsu.fukushima.jp',
							'asakawa.fukushima.jp',
							'bandai.fukushima.jp',
							'date.fukushima.jp',
							'fukushima.fukushima.jp',
							'furudono.fukushima.jp',
							'futaba.fukushima.jp',
							'hanawa.fukushima.jp',
							'higashi.fukushima.jp',
							'hirata.fukushima.jp',
							'hirono.fukushima.jp',
							'iitate.fukushima.jp',
							'inawashiro.fukushima.jp',
							'ishikawa.fukushima.jp',
							'iwaki.fukushima.jp',
							'izumizaki.fukushima.jp',
							'kagamiishi.fukushima.jp',
							'kaneyama.fukushima.jp',
							'kawamata.fukushima.jp',
							'kitakata.fukushima.jp',
							'kitashiobara.fukushima.jp',
							'koori.fukushima.jp',
							'koriyama.fukushima.jp',
							'kunimi.fukushima.jp',
							'miharu.fukushima.jp',
							'mishima.fukushima.jp',
							'namie.fukushima.jp',
							'nango.fukushima.jp',
							'nishiaizu.fukushima.jp',
							'nishigo.fukushima.jp',
							'okuma.fukushima.jp',
							'omotego.fukushima.jp',
							'ono.fukushima.jp',
							'otama.fukushima.jp',
							'samegawa.fukushima.jp',
							'shimogo.fukushima.jp',
							'shirakawa.fukushima.jp',
							'showa.fukushima.jp',
							'soma.fukushima.jp',
							'sukagawa.fukushima.jp',
							'taishin.fukushima.jp',
							'tamakawa.fukushima.jp',
							'tanagura.fukushima.jp',
							'tenei.fukushima.jp',
							'yabuki.fukushima.jp',
							'yamato.fukushima.jp',
							'yamatsuri.fukushima.jp',
							'yanaizu.fukushima.jp',
							'yugawa.fukushima.jp',
							'anpachi.gifu.jp',
							'ena.gifu.jp',
							'gifu.gifu.jp',
							'ginan.gifu.jp',
							'godo.gifu.jp',
							'gujo.gifu.jp',
							'hashima.gifu.jp',
							'hichiso.gifu.jp',
							'hida.gifu.jp',
							'higashishirakawa.gifu.jp',
							'ibigawa.gifu.jp',
							'ikeda.gifu.jp',
							'kakamigahara.gifu.jp',
							'kani.gifu.jp',
							'kasahara.gifu.jp',
							'kasamatsu.gifu.jp',
							'kawaue.gifu.jp',
							'kitagata.gifu.jp',
							'mino.gifu.jp',
							'minokamo.gifu.jp',
							'mitake.gifu.jp',
							'mizunami.gifu.jp',
							'motosu.gifu.jp',
							'nakatsugawa.gifu.jp',
							'ogaki.gifu.jp',
							'sakahogi.gifu.jp',
							'seki.gifu.jp',
							'sekigahara.gifu.jp',
							'shirakawa.gifu.jp',
							'tajimi.gifu.jp',
							'takayama.gifu.jp',
							'tarui.gifu.jp',
							'toki.gifu.jp',
							'tomika.gifu.jp',
							'wanouchi.gifu.jp',
							'yamagata.gifu.jp',
							'yaotsu.gifu.jp',
							'yoro.gifu.jp',
							'annaka.gunma.jp',
							'chiyoda.gunma.jp',
							'fujioka.gunma.jp',
							'higashiagatsuma.gunma.jp',
							'isesaki.gunma.jp',
							'itakura.gunma.jp',
							'kanna.gunma.jp',
							'kanra.gunma.jp',
							'katashina.gunma.jp',
							'kawaba.gunma.jp',
							'kiryu.gunma.jp',
							'kusatsu.gunma.jp',
							'maebashi.gunma.jp',
							'meiwa.gunma.jp',
							'midori.gunma.jp',
							'minakami.gunma.jp',
							'naganohara.gunma.jp',
							'nakanojo.gunma.jp',
							'nanmoku.gunma.jp',
							'numata.gunma.jp',
							'oizumi.gunma.jp',
							'ora.gunma.jp',
							'ota.gunma.jp',
							'shibukawa.gunma.jp',
							'shimonita.gunma.jp',
							'shinto.gunma.jp',
							'showa.gunma.jp',
							'takasaki.gunma.jp',
							'takayama.gunma.jp',
							'tamamura.gunma.jp',
							'tatebayashi.gunma.jp',
							'tomioka.gunma.jp',
							'tsukiyono.gunma.jp',
							'tsumagoi.gunma.jp',
							'ueno.gunma.jp',
							'yoshioka.gunma.jp',
							'asaminami.hiroshima.jp',
							'daiwa.hiroshima.jp',
							'etajima.hiroshima.jp',
							'fuchu.hiroshima.jp',
							'fukuyama.hiroshima.jp',
							'hatsukaichi.hiroshima.jp',
							'higashihiroshima.hiroshima.jp',
							'hongo.hiroshima.jp',
							'jinsekikogen.hiroshima.jp',
							'kaita.hiroshima.jp',
							'kui.hiroshima.jp',
							'kumano.hiroshima.jp',
							'kure.hiroshima.jp',
							'mihara.hiroshima.jp',
							'miyoshi.hiroshima.jp',
							'naka.hiroshima.jp',
							'onomichi.hiroshima.jp',
							'osakikamijima.hiroshima.jp',
							'otake.hiroshima.jp',
							'saka.hiroshima.jp',
							'sera.hiroshima.jp',
							'seranishi.hiroshima.jp',
							'shinichi.hiroshima.jp',
							'shobara.hiroshima.jp',
							'takehara.hiroshima.jp',
							'abashiri.hokkaido.jp',
							'abira.hokkaido.jp',
							'aibetsu.hokkaido.jp',
							'akabira.hokkaido.jp',
							'akkeshi.hokkaido.jp',
							'asahikawa.hokkaido.jp',
							'ashibetsu.hokkaido.jp',
							'ashoro.hokkaido.jp',
							'assabu.hokkaido.jp',
							'atsuma.hokkaido.jp',
							'bibai.hokkaido.jp',
							'biei.hokkaido.jp',
							'bifuka.hokkaido.jp',
							'bihoro.hokkaido.jp',
							'biratori.hokkaido.jp',
							'chippubetsu.hokkaido.jp',
							'chitose.hokkaido.jp',
							'date.hokkaido.jp',
							'ebetsu.hokkaido.jp',
							'embetsu.hokkaido.jp',
							'eniwa.hokkaido.jp',
							'erimo.hokkaido.jp',
							'esan.hokkaido.jp',
							'esashi.hokkaido.jp',
							'fukagawa.hokkaido.jp',
							'fukushima.hokkaido.jp',
							'furano.hokkaido.jp',
							'furubira.hokkaido.jp',
							'haboro.hokkaido.jp',
							'hakodate.hokkaido.jp',
							'hamatonbetsu.hokkaido.jp',
							'hidaka.hokkaido.jp',
							'higashikagura.hokkaido.jp',
							'higashikawa.hokkaido.jp',
							'hiroo.hokkaido.jp',
							'hokuryu.hokkaido.jp',
							'hokuto.hokkaido.jp',
							'honbetsu.hokkaido.jp',
							'horokanai.hokkaido.jp',
							'horonobe.hokkaido.jp',
							'ikeda.hokkaido.jp',
							'imakane.hokkaido.jp',
							'ishikari.hokkaido.jp',
							'iwamizawa.hokkaido.jp',
							'iwanai.hokkaido.jp',
							'kamifurano.hokkaido.jp',
							'kamikawa.hokkaido.jp',
							'kamishihoro.hokkaido.jp',
							'kamisunagawa.hokkaido.jp',
							'kamoenai.hokkaido.jp',
							'kayabe.hokkaido.jp',
							'kembuchi.hokkaido.jp',
							'kikonai.hokkaido.jp',
							'kimobetsu.hokkaido.jp',
							'kitahiroshima.hokkaido.jp',
							'kitami.hokkaido.jp',
							'kiyosato.hokkaido.jp',
							'koshimizu.hokkaido.jp',
							'kunneppu.hokkaido.jp',
							'kuriyama.hokkaido.jp',
							'kuromatsunai.hokkaido.jp',
							'kushiro.hokkaido.jp',
							'kutchan.hokkaido.jp',
							'kyowa.hokkaido.jp',
							'mashike.hokkaido.jp',
							'matsumae.hokkaido.jp',
							'mikasa.hokkaido.jp',
							'minamifurano.hokkaido.jp',
							'mombetsu.hokkaido.jp',
							'moseushi.hokkaido.jp',
							'mukawa.hokkaido.jp',
							'muroran.hokkaido.jp',
							'naie.hokkaido.jp',
							'nakagawa.hokkaido.jp',
							'nakasatsunai.hokkaido.jp',
							'nakatombetsu.hokkaido.jp',
							'nanae.hokkaido.jp',
							'nanporo.hokkaido.jp',
							'nayoro.hokkaido.jp',
							'nemuro.hokkaido.jp',
							'niikappu.hokkaido.jp',
							'niki.hokkaido.jp',
							'nishiokoppe.hokkaido.jp',
							'noboribetsu.hokkaido.jp',
							'numata.hokkaido.jp',
							'obihiro.hokkaido.jp',
							'obira.hokkaido.jp',
							'oketo.hokkaido.jp',
							'okoppe.hokkaido.jp',
							'otaru.hokkaido.jp',
							'otobe.hokkaido.jp',
							'otofuke.hokkaido.jp',
							'otoineppu.hokkaido.jp',
							'oumu.hokkaido.jp',
							'ozora.hokkaido.jp',
							'pippu.hokkaido.jp',
							'rankoshi.hokkaido.jp',
							'rebun.hokkaido.jp',
							'rikubetsu.hokkaido.jp',
							'rishiri.hokkaido.jp',
							'rishirifuji.hokkaido.jp',
							'saroma.hokkaido.jp',
							'sarufutsu.hokkaido.jp',
							'shakotan.hokkaido.jp',
							'shari.hokkaido.jp',
							'shibecha.hokkaido.jp',
							'shibetsu.hokkaido.jp',
							'shikabe.hokkaido.jp',
							'shikaoi.hokkaido.jp',
							'shimamaki.hokkaido.jp',
							'shimizu.hokkaido.jp',
							'shimokawa.hokkaido.jp',
							'shinshinotsu.hokkaido.jp',
							'shintoku.hokkaido.jp',
							'shiranuka.hokkaido.jp',
							'shiraoi.hokkaido.jp',
							'shiriuchi.hokkaido.jp',
							'sobetsu.hokkaido.jp',
							'sunagawa.hokkaido.jp',
							'taiki.hokkaido.jp',
							'takasu.hokkaido.jp',
							'takikawa.hokkaido.jp',
							'takinoue.hokkaido.jp',
							'teshikaga.hokkaido.jp',
							'tobetsu.hokkaido.jp',
							'tohma.hokkaido.jp',
							'tomakomai.hokkaido.jp',
							'tomari.hokkaido.jp',
							'toya.hokkaido.jp',
							'toyako.hokkaido.jp',
							'toyotomi.hokkaido.jp',
							'toyoura.hokkaido.jp',
							'tsubetsu.hokkaido.jp',
							'tsukigata.hokkaido.jp',
							'urakawa.hokkaido.jp',
							'urausu.hokkaido.jp',
							'uryu.hokkaido.jp',
							'utashinai.hokkaido.jp',
							'wakkanai.hokkaido.jp',
							'wassamu.hokkaido.jp',
							'yakumo.hokkaido.jp',
							'yoichi.hokkaido.jp',
							'aioi.hyogo.jp',
							'akashi.hyogo.jp',
							'ako.hyogo.jp',
							'amagasaki.hyogo.jp',
							'aogaki.hyogo.jp',
							'asago.hyogo.jp',
							'ashiya.hyogo.jp',
							'awaji.hyogo.jp',
							'fukusaki.hyogo.jp',
							'goshiki.hyogo.jp',
							'harima.hyogo.jp',
							'himeji.hyogo.jp',
							'ichikawa.hyogo.jp',
							'inagawa.hyogo.jp',
							'itami.hyogo.jp',
							'kakogawa.hyogo.jp',
							'kamigori.hyogo.jp',
							'kamikawa.hyogo.jp',
							'kasai.hyogo.jp',
							'kasuga.hyogo.jp',
							'kawanishi.hyogo.jp',
							'miki.hyogo.jp',
							'minamiawaji.hyogo.jp',
							'nishinomiya.hyogo.jp',
							'nishiwaki.hyogo.jp',
							'ono.hyogo.jp',
							'sanda.hyogo.jp',
							'sannan.hyogo.jp',
							'sasayama.hyogo.jp',
							'sayo.hyogo.jp',
							'shingu.hyogo.jp',
							'shinonsen.hyogo.jp',
							'shiso.hyogo.jp',
							'sumoto.hyogo.jp',
							'taishi.hyogo.jp',
							'taka.hyogo.jp',
							'takarazuka.hyogo.jp',
							'takasago.hyogo.jp',
							'takino.hyogo.jp',
							'tamba.hyogo.jp',
							'tatsuno.hyogo.jp',
							'toyooka.hyogo.jp',
							'yabu.hyogo.jp',
							'yashiro.hyogo.jp',
							'yoka.hyogo.jp',
							'yokawa.hyogo.jp',
							'ami.ibaraki.jp',
							'asahi.ibaraki.jp',
							'bando.ibaraki.jp',
							'chikusei.ibaraki.jp',
							'daigo.ibaraki.jp',
							'fujishiro.ibaraki.jp',
							'hitachi.ibaraki.jp',
							'hitachinaka.ibaraki.jp',
							'hitachiomiya.ibaraki.jp',
							'hitachiota.ibaraki.jp',
							'ibaraki.ibaraki.jp',
							'ina.ibaraki.jp',
							'inashiki.ibaraki.jp',
							'itako.ibaraki.jp',
							'iwama.ibaraki.jp',
							'joso.ibaraki.jp',
							'kamisu.ibaraki.jp',
							'kasama.ibaraki.jp',
							'kashima.ibaraki.jp',
							'kasumigaura.ibaraki.jp',
							'koga.ibaraki.jp',
							'miho.ibaraki.jp',
							'mito.ibaraki.jp',
							'moriya.ibaraki.jp',
							'naka.ibaraki.jp',
							'namegata.ibaraki.jp',
							'oarai.ibaraki.jp',
							'ogawa.ibaraki.jp',
							'omitama.ibaraki.jp',
							'ryugasaki.ibaraki.jp',
							'sakai.ibaraki.jp',
							'sakuragawa.ibaraki.jp',
							'shimodate.ibaraki.jp',
							'shimotsuma.ibaraki.jp',
							'shirosato.ibaraki.jp',
							'sowa.ibaraki.jp',
							'suifu.ibaraki.jp',
							'takahagi.ibaraki.jp',
							'tamatsukuri.ibaraki.jp',
							'tokai.ibaraki.jp',
							'tomobe.ibaraki.jp',
							'tone.ibaraki.jp',
							'toride.ibaraki.jp',
							'tsuchiura.ibaraki.jp',
							'tsukuba.ibaraki.jp',
							'uchihara.ibaraki.jp',
							'ushiku.ibaraki.jp',
							'yachiyo.ibaraki.jp',
							'yamagata.ibaraki.jp',
							'yawara.ibaraki.jp',
							'yuki.ibaraki.jp',
							'anamizu.ishikawa.jp',
							'hakui.ishikawa.jp',
							'hakusan.ishikawa.jp',
							'kaga.ishikawa.jp',
							'kahoku.ishikawa.jp',
							'kanazawa.ishikawa.jp',
							'kawakita.ishikawa.jp',
							'komatsu.ishikawa.jp',
							'nakanoto.ishikawa.jp',
							'nanao.ishikawa.jp',
							'nomi.ishikawa.jp',
							'nonoichi.ishikawa.jp',
							'noto.ishikawa.jp',
							'shika.ishikawa.jp',
							'suzu.ishikawa.jp',
							'tsubata.ishikawa.jp',
							'tsurugi.ishikawa.jp',
							'uchinada.ishikawa.jp',
							'wajima.ishikawa.jp',
							'fudai.iwate.jp',
							'fujisawa.iwate.jp',
							'hanamaki.iwate.jp',
							'hiraizumi.iwate.jp',
							'hirono.iwate.jp',
							'ichinohe.iwate.jp',
							'ichinoseki.iwate.jp',
							'iwaizumi.iwate.jp',
							'iwate.iwate.jp',
							'joboji.iwate.jp',
							'kamaishi.iwate.jp',
							'kanegasaki.iwate.jp',
							'karumai.iwate.jp',
							'kawai.iwate.jp',
							'kitakami.iwate.jp',
							'kuji.iwate.jp',
							'kunohe.iwate.jp',
							'kuzumaki.iwate.jp',
							'miyako.iwate.jp',
							'mizusawa.iwate.jp',
							'morioka.iwate.jp',
							'ninohe.iwate.jp',
							'noda.iwate.jp',
							'ofunato.iwate.jp',
							'oshu.iwate.jp',
							'otsuchi.iwate.jp',
							'rikuzentakata.iwate.jp',
							'shiwa.iwate.jp',
							'shizukuishi.iwate.jp',
							'sumita.iwate.jp',
							'tanohata.iwate.jp',
							'tono.iwate.jp',
							'yahaba.iwate.jp',
							'yamada.iwate.jp',
							'ayagawa.kagawa.jp',
							'higashikagawa.kagawa.jp',
							'kanonji.kagawa.jp',
							'kotohira.kagawa.jp',
							'manno.kagawa.jp',
							'marugame.kagawa.jp',
							'mitoyo.kagawa.jp',
							'naoshima.kagawa.jp',
							'sanuki.kagawa.jp',
							'tadotsu.kagawa.jp',
							'takamatsu.kagawa.jp',
							'tonosho.kagawa.jp',
							'uchinomi.kagawa.jp',
							'utazu.kagawa.jp',
							'zentsuji.kagawa.jp',
							'akune.kagoshima.jp',
							'amami.kagoshima.jp',
							'hioki.kagoshima.jp',
							'isa.kagoshima.jp',
							'isen.kagoshima.jp',
							'izumi.kagoshima.jp',
							'kagoshima.kagoshima.jp',
							'kanoya.kagoshima.jp',
							'kawanabe.kagoshima.jp',
							'kinko.kagoshima.jp',
							'kouyama.kagoshima.jp',
							'makurazaki.kagoshima.jp',
							'matsumoto.kagoshima.jp',
							'minamitane.kagoshima.jp',
							'nakatane.kagoshima.jp',
							'nishinoomote.kagoshima.jp',
							'satsumasendai.kagoshima.jp',
							'soo.kagoshima.jp',
							'tarumizu.kagoshima.jp',
							'yusui.kagoshima.jp',
							'aikawa.kanagawa.jp',
							'atsugi.kanagawa.jp',
							'ayase.kanagawa.jp',
							'chigasaki.kanagawa.jp',
							'ebina.kanagawa.jp',
							'fujisawa.kanagawa.jp',
							'hadano.kanagawa.jp',
							'hakone.kanagawa.jp',
							'hiratsuka.kanagawa.jp',
							'isehara.kanagawa.jp',
							'kaisei.kanagawa.jp',
							'kamakura.kanagawa.jp',
							'kiyokawa.kanagawa.jp',
							'matsuda.kanagawa.jp',
							'minamiashigara.kanagawa.jp',
							'miura.kanagawa.jp',
							'nakai.kanagawa.jp',
							'ninomiya.kanagawa.jp',
							'odawara.kanagawa.jp',
							'oi.kanagawa.jp',
							'oiso.kanagawa.jp',
							'sagamihara.kanagawa.jp',
							'samukawa.kanagawa.jp',
							'tsukui.kanagawa.jp',
							'yamakita.kanagawa.jp',
							'yamato.kanagawa.jp',
							'yokosuka.kanagawa.jp',
							'yugawara.kanagawa.jp',
							'zama.kanagawa.jp',
							'zushi.kanagawa.jp',
							'aki.kochi.jp',
							'geisei.kochi.jp',
							'hidaka.kochi.jp',
							'higashitsuno.kochi.jp',
							'ino.kochi.jp',
							'kagami.kochi.jp',
							'kami.kochi.jp',
							'kitagawa.kochi.jp',
							'kochi.kochi.jp',
							'mihara.kochi.jp',
							'motoyama.kochi.jp',
							'muroto.kochi.jp',
							'nahari.kochi.jp',
							'nakamura.kochi.jp',
							'nankoku.kochi.jp',
							'nishitosa.kochi.jp',
							'niyodogawa.kochi.jp',
							'ochi.kochi.jp',
							'okawa.kochi.jp',
							'otoyo.kochi.jp',
							'otsuki.kochi.jp',
							'sakawa.kochi.jp',
							'sukumo.kochi.jp',
							'susaki.kochi.jp',
							'tosa.kochi.jp',
							'tosashimizu.kochi.jp',
							'toyo.kochi.jp',
							'tsuno.kochi.jp',
							'umaji.kochi.jp',
							'yasuda.kochi.jp',
							'yusuhara.kochi.jp',
							'amakusa.kumamoto.jp',
							'arao.kumamoto.jp',
							'aso.kumamoto.jp',
							'choyo.kumamoto.jp',
							'gyokuto.kumamoto.jp',
							'kamiamakusa.kumamoto.jp',
							'kikuchi.kumamoto.jp',
							'kumamoto.kumamoto.jp',
							'mashiki.kumamoto.jp',
							'mifune.kumamoto.jp',
							'minamata.kumamoto.jp',
							'minamioguni.kumamoto.jp',
							'nagasu.kumamoto.jp',
							'nishihara.kumamoto.jp',
							'oguni.kumamoto.jp',
							'ozu.kumamoto.jp',
							'sumoto.kumamoto.jp',
							'takamori.kumamoto.jp',
							'uki.kumamoto.jp',
							'uto.kumamoto.jp',
							'yamaga.kumamoto.jp',
							'yamato.kumamoto.jp',
							'yatsushiro.kumamoto.jp',
							'ayabe.kyoto.jp',
							'fukuchiyama.kyoto.jp',
							'higashiyama.kyoto.jp',
							'ide.kyoto.jp',
							'ine.kyoto.jp',
							'joyo.kyoto.jp',
							'kameoka.kyoto.jp',
							'kamo.kyoto.jp',
							'kita.kyoto.jp',
							'kizu.kyoto.jp',
							'kumiyama.kyoto.jp',
							'kyotamba.kyoto.jp',
							'kyotanabe.kyoto.jp',
							'kyotango.kyoto.jp',
							'maizuru.kyoto.jp',
							'minami.kyoto.jp',
							'minamiyamashiro.kyoto.jp',
							'miyazu.kyoto.jp',
							'muko.kyoto.jp',
							'nagaokakyo.kyoto.jp',
							'nakagyo.kyoto.jp',
							'nantan.kyoto.jp',
							'oyamazaki.kyoto.jp',
							'sakyo.kyoto.jp',
							'seika.kyoto.jp',
							'tanabe.kyoto.jp',
							'uji.kyoto.jp',
							'ujitawara.kyoto.jp',
							'wazuka.kyoto.jp',
							'yamashina.kyoto.jp',
							'yawata.kyoto.jp',
							'asahi.mie.jp',
							'inabe.mie.jp',
							'ise.mie.jp',
							'kameyama.mie.jp',
							'kawagoe.mie.jp',
							'kiho.mie.jp',
							'kisosaki.mie.jp',
							'kiwa.mie.jp',
							'komono.mie.jp',
							'kumano.mie.jp',
							'kuwana.mie.jp',
							'matsusaka.mie.jp',
							'meiwa.mie.jp',
							'mihama.mie.jp',
							'minamiise.mie.jp',
							'misugi.mie.jp',
							'miyama.mie.jp',
							'nabari.mie.jp',
							'shima.mie.jp',
							'suzuka.mie.jp',
							'tado.mie.jp',
							'taiki.mie.jp',
							'taki.mie.jp',
							'tamaki.mie.jp',
							'toba.mie.jp',
							'tsu.mie.jp',
							'udono.mie.jp',
							'ureshino.mie.jp',
							'watarai.mie.jp',
							'yokkaichi.mie.jp',
							'furukawa.miyagi.jp',
							'higashimatsushima.miyagi.jp',
							'ishinomaki.miyagi.jp',
							'iwanuma.miyagi.jp',
							'kakuda.miyagi.jp',
							'kami.miyagi.jp',
							'kawasaki.miyagi.jp',
							'marumori.miyagi.jp',
							'matsushima.miyagi.jp',
							'minamisanriku.miyagi.jp',
							'misato.miyagi.jp',
							'murata.miyagi.jp',
							'natori.miyagi.jp',
							'ogawara.miyagi.jp',
							'ohira.miyagi.jp',
							'onagawa.miyagi.jp',
							'osaki.miyagi.jp',
							'rifu.miyagi.jp',
							'semine.miyagi.jp',
							'shibata.miyagi.jp',
							'shichikashuku.miyagi.jp',
							'shikama.miyagi.jp',
							'shiogama.miyagi.jp',
							'shiroishi.miyagi.jp',
							'tagajo.miyagi.jp',
							'taiwa.miyagi.jp',
							'tome.miyagi.jp',
							'tomiya.miyagi.jp',
							'wakuya.miyagi.jp',
							'watari.miyagi.jp',
							'yamamoto.miyagi.jp',
							'zao.miyagi.jp',
							'aya.miyazaki.jp',
							'ebino.miyazaki.jp',
							'gokase.miyazaki.jp',
							'hyuga.miyazaki.jp',
							'kadogawa.miyazaki.jp',
							'kawaminami.miyazaki.jp',
							'kijo.miyazaki.jp',
							'kitagawa.miyazaki.jp',
							'kitakata.miyazaki.jp',
							'kitaura.miyazaki.jp',
							'kobayashi.miyazaki.jp',
							'kunitomi.miyazaki.jp',
							'kushima.miyazaki.jp',
							'mimata.miyazaki.jp',
							'miyakonojo.miyazaki.jp',
							'miyazaki.miyazaki.jp',
							'morotsuka.miyazaki.jp',
							'nichinan.miyazaki.jp',
							'nishimera.miyazaki.jp',
							'nobeoka.miyazaki.jp',
							'saito.miyazaki.jp',
							'shiiba.miyazaki.jp',
							'shintomi.miyazaki.jp',
							'takaharu.miyazaki.jp',
							'takanabe.miyazaki.jp',
							'takazaki.miyazaki.jp',
							'tsuno.miyazaki.jp',
							'achi.nagano.jp',
							'agematsu.nagano.jp',
							'anan.nagano.jp',
							'aoki.nagano.jp',
							'asahi.nagano.jp',
							'azumino.nagano.jp',
							'chikuhoku.nagano.jp',
							'chikuma.nagano.jp',
							'chino.nagano.jp',
							'fujimi.nagano.jp',
							'hakuba.nagano.jp',
							'hara.nagano.jp',
							'hiraya.nagano.jp',
							'iida.nagano.jp',
							'iijima.nagano.jp',
							'iiyama.nagano.jp',
							'iizuna.nagano.jp',
							'ikeda.nagano.jp',
							'ikusaka.nagano.jp',
							'ina.nagano.jp',
							'karuizawa.nagano.jp',
							'kawakami.nagano.jp',
							'kiso.nagano.jp',
							'kisofukushima.nagano.jp',
							'kitaaiki.nagano.jp',
							'komagane.nagano.jp',
							'komoro.nagano.jp',
							'matsukawa.nagano.jp',
							'matsumoto.nagano.jp',
							'miasa.nagano.jp',
							'minamiaiki.nagano.jp',
							'minamimaki.nagano.jp',
							'minamiminowa.nagano.jp',
							'minowa.nagano.jp',
							'miyada.nagano.jp',
							'miyota.nagano.jp',
							'mochizuki.nagano.jp',
							'nagano.nagano.jp',
							'nagawa.nagano.jp',
							'nagiso.nagano.jp',
							'nakagawa.nagano.jp',
							'nakano.nagano.jp',
							'nozawaonsen.nagano.jp',
							'obuse.nagano.jp',
							'ogawa.nagano.jp',
							'okaya.nagano.jp',
							'omachi.nagano.jp',
							'omi.nagano.jp',
							'ookuwa.nagano.jp',
							'ooshika.nagano.jp',
							'otaki.nagano.jp',
							'otari.nagano.jp',
							'sakae.nagano.jp',
							'sakaki.nagano.jp',
							'saku.nagano.jp',
							'sakuho.nagano.jp',
							'shimosuwa.nagano.jp',
							'shinanomachi.nagano.jp',
							'shiojiri.nagano.jp',
							'suwa.nagano.jp',
							'suzaka.nagano.jp',
							'takagi.nagano.jp',
							'takamori.nagano.jp',
							'takayama.nagano.jp',
							'tateshina.nagano.jp',
							'tatsuno.nagano.jp',
							'togakushi.nagano.jp',
							'togura.nagano.jp',
							'tomi.nagano.jp',
							'ueda.nagano.jp',
							'wada.nagano.jp',
							'yamagata.nagano.jp',
							'yamanouchi.nagano.jp',
							'yasaka.nagano.jp',
							'yasuoka.nagano.jp',
							'chijiwa.nagasaki.jp',
							'futsu.nagasaki.jp',
							'goto.nagasaki.jp',
							'hasami.nagasaki.jp',
							'hirado.nagasaki.jp',
							'iki.nagasaki.jp',
							'isahaya.nagasaki.jp',
							'kawatana.nagasaki.jp',
							'kuchinotsu.nagasaki.jp',
							'matsuura.nagasaki.jp',
							'nagasaki.nagasaki.jp',
							'obama.nagasaki.jp',
							'omura.nagasaki.jp',
							'oseto.nagasaki.jp',
							'saikai.nagasaki.jp',
							'sasebo.nagasaki.jp',
							'seihi.nagasaki.jp',
							'shimabara.nagasaki.jp',
							'shinkamigoto.nagasaki.jp',
							'togitsu.nagasaki.jp',
							'tsushima.nagasaki.jp',
							'unzen.nagasaki.jp',
							'ando.nara.jp',
							'gose.nara.jp',
							'heguri.nara.jp',
							'higashiyoshino.nara.jp',
							'ikaruga.nara.jp',
							'ikoma.nara.jp',
							'kamikitayama.nara.jp',
							'kanmaki.nara.jp',
							'kashiba.nara.jp',
							'kashihara.nara.jp',
							'katsuragi.nara.jp',
							'kawai.nara.jp',
							'kawakami.nara.jp',
							'kawanishi.nara.jp',
							'koryo.nara.jp',
							'kurotaki.nara.jp',
							'mitsue.nara.jp',
							'miyake.nara.jp',
							'nara.nara.jp',
							'nosegawa.nara.jp',
							'oji.nara.jp',
							'ouda.nara.jp',
							'oyodo.nara.jp',
							'sakurai.nara.jp',
							'sango.nara.jp',
							'shimoichi.nara.jp',
							'shimokitayama.nara.jp',
							'shinjo.nara.jp',
							'soni.nara.jp',
							'takatori.nara.jp',
							'tawaramoto.nara.jp',
							'tenkawa.nara.jp',
							'tenri.nara.jp',
							'uda.nara.jp',
							'yamatokoriyama.nara.jp',
							'yamatotakada.nara.jp',
							'yamazoe.nara.jp',
							'yoshino.nara.jp',
							'aga.niigata.jp',
							'agano.niigata.jp',
							'gosen.niigata.jp',
							'itoigawa.niigata.jp',
							'izumozaki.niigata.jp',
							'joetsu.niigata.jp',
							'kamo.niigata.jp',
							'kariwa.niigata.jp',
							'kashiwazaki.niigata.jp',
							'minamiuonuma.niigata.jp',
							'mitsuke.niigata.jp',
							'muika.niigata.jp',
							'murakami.niigata.jp',
							'myoko.niigata.jp',
							'nagaoka.niigata.jp',
							'niigata.niigata.jp',
							'ojiya.niigata.jp',
							'omi.niigata.jp',
							'sado.niigata.jp',
							'sanjo.niigata.jp',
							'seiro.niigata.jp',
							'seirou.niigata.jp',
							'sekikawa.niigata.jp',
							'shibata.niigata.jp',
							'tagami.niigata.jp',
							'tainai.niigata.jp',
							'tochio.niigata.jp',
							'tokamachi.niigata.jp',
							'tsubame.niigata.jp',
							'tsunan.niigata.jp',
							'uonuma.niigata.jp',
							'yahiko.niigata.jp',
							'yoita.niigata.jp',
							'yuzawa.niigata.jp',
							'beppu.oita.jp',
							'bungoono.oita.jp',
							'bungotakada.oita.jp',
							'hasama.oita.jp',
							'hiji.oita.jp',
							'himeshima.oita.jp',
							'hita.oita.jp',
							'kamitsue.oita.jp',
							'kokonoe.oita.jp',
							'kuju.oita.jp',
							'kunisaki.oita.jp',
							'kusu.oita.jp',
							'oita.oita.jp',
							'saiki.oita.jp',
							'taketa.oita.jp',
							'tsukumi.oita.jp',
							'usa.oita.jp',
							'usuki.oita.jp',
							'yufu.oita.jp',
							'akaiwa.okayama.jp',
							'asakuchi.okayama.jp',
							'bizen.okayama.jp',
							'hayashima.okayama.jp',
							'ibara.okayama.jp',
							'kagamino.okayama.jp',
							'kasaoka.okayama.jp',
							'kibichuo.okayama.jp',
							'kumenan.okayama.jp',
							'kurashiki.okayama.jp',
							'maniwa.okayama.jp',
							'misaki.okayama.jp',
							'nagi.okayama.jp',
							'niimi.okayama.jp',
							'nishiawakura.okayama.jp',
							'okayama.okayama.jp',
							'satosho.okayama.jp',
							'setouchi.okayama.jp',
							'shinjo.okayama.jp',
							'shoo.okayama.jp',
							'soja.okayama.jp',
							'takahashi.okayama.jp',
							'tamano.okayama.jp',
							'tsuyama.okayama.jp',
							'wake.okayama.jp',
							'yakage.okayama.jp',
							'aguni.okinawa.jp',
							'ginowan.okinawa.jp',
							'ginoza.okinawa.jp',
							'gushikami.okinawa.jp',
							'haebaru.okinawa.jp',
							'higashi.okinawa.jp',
							'hirara.okinawa.jp',
							'iheya.okinawa.jp',
							'ishigaki.okinawa.jp',
							'ishikawa.okinawa.jp',
							'itoman.okinawa.jp',
							'izena.okinawa.jp',
							'kadena.okinawa.jp',
							'kin.okinawa.jp',
							'kitadaito.okinawa.jp',
							'kitanakagusuku.okinawa.jp',
							'kumejima.okinawa.jp',
							'kunigami.okinawa.jp',
							'minamidaito.okinawa.jp',
							'motobu.okinawa.jp',
							'nago.okinawa.jp',
							'naha.okinawa.jp',
							'nakagusuku.okinawa.jp',
							'nakijin.okinawa.jp',
							'nanjo.okinawa.jp',
							'nishihara.okinawa.jp',
							'ogimi.okinawa.jp',
							'okinawa.okinawa.jp',
							'onna.okinawa.jp',
							'shimoji.okinawa.jp',
							'taketomi.okinawa.jp',
							'tarama.okinawa.jp',
							'tokashiki.okinawa.jp',
							'tomigusuku.okinawa.jp',
							'tonaki.okinawa.jp',
							'urasoe.okinawa.jp',
							'uruma.okinawa.jp',
							'yaese.okinawa.jp',
							'yomitan.okinawa.jp',
							'yonabaru.okinawa.jp',
							'yonaguni.okinawa.jp',
							'zamami.okinawa.jp',
							'abeno.osaka.jp',
							'chihayaakasaka.osaka.jp',
							'chuo.osaka.jp',
							'daito.osaka.jp',
							'fujiidera.osaka.jp',
							'habikino.osaka.jp',
							'hannan.osaka.jp',
							'higashiosaka.osaka.jp',
							'higashisumiyoshi.osaka.jp',
							'higashiyodogawa.osaka.jp',
							'hirakata.osaka.jp',
							'ibaraki.osaka.jp',
							'ikeda.osaka.jp',
							'izumi.osaka.jp',
							'izumiotsu.osaka.jp',
							'izumisano.osaka.jp',
							'kadoma.osaka.jp',
							'kaizuka.osaka.jp',
							'kanan.osaka.jp',
							'kashiwara.osaka.jp',
							'katano.osaka.jp',
							'kawachinagano.osaka.jp',
							'kishiwada.osaka.jp',
							'kita.osaka.jp',
							'kumatori.osaka.jp',
							'matsubara.osaka.jp',
							'minato.osaka.jp',
							'minoh.osaka.jp',
							'misaki.osaka.jp',
							'moriguchi.osaka.jp',
							'neyagawa.osaka.jp',
							'nishi.osaka.jp',
							'nose.osaka.jp',
							'osakasayama.osaka.jp',
							'sakai.osaka.jp',
							'sayama.osaka.jp',
							'sennan.osaka.jp',
							'settsu.osaka.jp',
							'shijonawate.osaka.jp',
							'shimamoto.osaka.jp',
							'suita.osaka.jp',
							'tadaoka.osaka.jp',
							'taishi.osaka.jp',
							'tajiri.osaka.jp',
							'takaishi.osaka.jp',
							'takatsuki.osaka.jp',
							'tondabayashi.osaka.jp',
							'toyonaka.osaka.jp',
							'toyono.osaka.jp',
							'yao.osaka.jp',
							'ariake.saga.jp',
							'arita.saga.jp',
							'fukudomi.saga.jp',
							'genkai.saga.jp',
							'hamatama.saga.jp',
							'hizen.saga.jp',
							'imari.saga.jp',
							'kamimine.saga.jp',
							'kanzaki.saga.jp',
							'karatsu.saga.jp',
							'kashima.saga.jp',
							'kitagata.saga.jp',
							'kitahata.saga.jp',
							'kiyama.saga.jp',
							'kouhoku.saga.jp',
							'kyuragi.saga.jp',
							'nishiarita.saga.jp',
							'ogi.saga.jp',
							'omachi.saga.jp',
							'ouchi.saga.jp',
							'saga.saga.jp',
							'shiroishi.saga.jp',
							'taku.saga.jp',
							'tara.saga.jp',
							'tosu.saga.jp',
							'yoshinogari.saga.jp',
							'arakawa.saitama.jp',
							'asaka.saitama.jp',
							'chichibu.saitama.jp',
							'fujimi.saitama.jp',
							'fujimino.saitama.jp',
							'fukaya.saitama.jp',
							'hanno.saitama.jp',
							'hanyu.saitama.jp',
							'hasuda.saitama.jp',
							'hatogaya.saitama.jp',
							'hatoyama.saitama.jp',
							'hidaka.saitama.jp',
							'higashichichibu.saitama.jp',
							'higashimatsuyama.saitama.jp',
							'honjo.saitama.jp',
							'ina.saitama.jp',
							'iruma.saitama.jp',
							'iwatsuki.saitama.jp',
							'kamiizumi.saitama.jp',
							'kamikawa.saitama.jp',
							'kamisato.saitama.jp',
							'kasukabe.saitama.jp',
							'kawagoe.saitama.jp',
							'kawaguchi.saitama.jp',
							'kawajima.saitama.jp',
							'kazo.saitama.jp',
							'kitamoto.saitama.jp',
							'koshigaya.saitama.jp',
							'kounosu.saitama.jp',
							'kuki.saitama.jp',
							'kumagaya.saitama.jp',
							'matsubushi.saitama.jp',
							'minano.saitama.jp',
							'misato.saitama.jp',
							'miyashiro.saitama.jp',
							'miyoshi.saitama.jp',
							'moroyama.saitama.jp',
							'nagatoro.saitama.jp',
							'namegawa.saitama.jp',
							'niiza.saitama.jp',
							'ogano.saitama.jp',
							'ogawa.saitama.jp',
							'ogose.saitama.jp',
							'okegawa.saitama.jp',
							'omiya.saitama.jp',
							'otaki.saitama.jp',
							'ranzan.saitama.jp',
							'ryokami.saitama.jp',
							'saitama.saitama.jp',
							'sakado.saitama.jp',
							'satte.saitama.jp',
							'sayama.saitama.jp',
							'shiki.saitama.jp',
							'shiraoka.saitama.jp',
							'soka.saitama.jp',
							'sugito.saitama.jp',
							'toda.saitama.jp',
							'tokigawa.saitama.jp',
							'tokorozawa.saitama.jp',
							'tsurugashima.saitama.jp',
							'urawa.saitama.jp',
							'warabi.saitama.jp',
							'yashio.saitama.jp',
							'yokoze.saitama.jp',
							'yono.saitama.jp',
							'yorii.saitama.jp',
							'yoshida.saitama.jp',
							'yoshikawa.saitama.jp',
							'yoshimi.saitama.jp',
							'aisho.shiga.jp',
							'gamo.shiga.jp',
							'higashiomi.shiga.jp',
							'hikone.shiga.jp',
							'koka.shiga.jp',
							'konan.shiga.jp',
							'kosei.shiga.jp',
							'koto.shiga.jp',
							'kusatsu.shiga.jp',
							'maibara.shiga.jp',
							'moriyama.shiga.jp',
							'nagahama.shiga.jp',
							'nishiazai.shiga.jp',
							'notogawa.shiga.jp',
							'omihachiman.shiga.jp',
							'otsu.shiga.jp',
							'ritto.shiga.jp',
							'ryuoh.shiga.jp',
							'takashima.shiga.jp',
							'takatsuki.shiga.jp',
							'torahime.shiga.jp',
							'toyosato.shiga.jp',
							'yasu.shiga.jp',
							'akagi.shimane.jp',
							'ama.shimane.jp',
							'gotsu.shimane.jp',
							'hamada.shimane.jp',
							'higashiizumo.shimane.jp',
							'hikawa.shimane.jp',
							'hikimi.shimane.jp',
							'izumo.shimane.jp',
							'kakinoki.shimane.jp',
							'masuda.shimane.jp',
							'matsue.shimane.jp',
							'misato.shimane.jp',
							'nishinoshima.shimane.jp',
							'ohda.shimane.jp',
							'okinoshima.shimane.jp',
							'okuizumo.shimane.jp',
							'shimane.shimane.jp',
							'tamayu.shimane.jp',
							'tsuwano.shimane.jp',
							'unnan.shimane.jp',
							'yakumo.shimane.jp',
							'yasugi.shimane.jp',
							'yatsuka.shimane.jp',
							'arai.shizuoka.jp',
							'atami.shizuoka.jp',
							'fuji.shizuoka.jp',
							'fujieda.shizuoka.jp',
							'fujikawa.shizuoka.jp',
							'fujinomiya.shizuoka.jp',
							'fukuroi.shizuoka.jp',
							'gotemba.shizuoka.jp',
							'haibara.shizuoka.jp',
							'hamamatsu.shizuoka.jp',
							'higashiizu.shizuoka.jp',
							'ito.shizuoka.jp',
							'iwata.shizuoka.jp',
							'izu.shizuoka.jp',
							'izunokuni.shizuoka.jp',
							'kakegawa.shizuoka.jp',
							'kannami.shizuoka.jp',
							'kawanehon.shizuoka.jp',
							'kawazu.shizuoka.jp',
							'kikugawa.shizuoka.jp',
							'kosai.shizuoka.jp',
							'makinohara.shizuoka.jp',
							'matsuzaki.shizuoka.jp',
							'minamiizu.shizuoka.jp',
							'mishima.shizuoka.jp',
							'morimachi.shizuoka.jp',
							'nishiizu.shizuoka.jp',
							'numazu.shizuoka.jp',
							'omaezaki.shizuoka.jp',
							'shimada.shizuoka.jp',
							'shimizu.shizuoka.jp',
							'shimoda.shizuoka.jp',
							'shizuoka.shizuoka.jp',
							'susono.shizuoka.jp',
							'yaizu.shizuoka.jp',
							'yoshida.shizuoka.jp',
							'ashikaga.tochigi.jp',
							'bato.tochigi.jp',
							'haga.tochigi.jp',
							'ichikai.tochigi.jp',
							'iwafune.tochigi.jp',
							'kaminokawa.tochigi.jp',
							'kanuma.tochigi.jp',
							'karasuyama.tochigi.jp',
							'kuroiso.tochigi.jp',
							'mashiko.tochigi.jp',
							'mibu.tochigi.jp',
							'moka.tochigi.jp',
							'motegi.tochigi.jp',
							'nasu.tochigi.jp',
							'nasushiobara.tochigi.jp',
							'nikko.tochigi.jp',
							'nishikata.tochigi.jp',
							'nogi.tochigi.jp',
							'ohira.tochigi.jp',
							'ohtawara.tochigi.jp',
							'oyama.tochigi.jp',
							'sakura.tochigi.jp',
							'sano.tochigi.jp',
							'shimotsuke.tochigi.jp',
							'shioya.tochigi.jp',
							'takanezawa.tochigi.jp',
							'tochigi.tochigi.jp',
							'tsuga.tochigi.jp',
							'ujiie.tochigi.jp',
							'utsunomiya.tochigi.jp',
							'yaita.tochigi.jp',
							'aizumi.tokushima.jp',
							'anan.tokushima.jp',
							'ichiba.tokushima.jp',
							'itano.tokushima.jp',
							'kainan.tokushima.jp',
							'komatsushima.tokushima.jp',
							'matsushige.tokushima.jp',
							'mima.tokushima.jp',
							'minami.tokushima.jp',
							'miyoshi.tokushima.jp',
							'mugi.tokushima.jp',
							'nakagawa.tokushima.jp',
							'naruto.tokushima.jp',
							'sanagochi.tokushima.jp',
							'shishikui.tokushima.jp',
							'tokushima.tokushima.jp',
							'wajiki.tokushima.jp',
							'adachi.tokyo.jp',
							'akiruno.tokyo.jp',
							'akishima.tokyo.jp',
							'aogashima.tokyo.jp',
							'arakawa.tokyo.jp',
							'bunkyo.tokyo.jp',
							'chiyoda.tokyo.jp',
							'chofu.tokyo.jp',
							'chuo.tokyo.jp',
							'edogawa.tokyo.jp',
							'fuchu.tokyo.jp',
							'fussa.tokyo.jp',
							'hachijo.tokyo.jp',
							'hachioji.tokyo.jp',
							'hamura.tokyo.jp',
							'higashikurume.tokyo.jp',
							'higashimurayama.tokyo.jp',
							'higashiyamato.tokyo.jp',
							'hino.tokyo.jp',
							'hinode.tokyo.jp',
							'hinohara.tokyo.jp',
							'inagi.tokyo.jp',
							'itabashi.tokyo.jp',
							'katsushika.tokyo.jp',
							'kita.tokyo.jp',
							'kiyose.tokyo.jp',
							'kodaira.tokyo.jp',
							'koganei.tokyo.jp',
							'kokubunji.tokyo.jp',
							'komae.tokyo.jp',
							'koto.tokyo.jp',
							'kouzushima.tokyo.jp',
							'kunitachi.tokyo.jp',
							'machida.tokyo.jp',
							'meguro.tokyo.jp',
							'minato.tokyo.jp',
							'mitaka.tokyo.jp',
							'mizuho.tokyo.jp',
							'musashimurayama.tokyo.jp',
							'musashino.tokyo.jp',
							'nakano.tokyo.jp',
							'nerima.tokyo.jp',
							'ogasawara.tokyo.jp',
							'okutama.tokyo.jp',
							'ome.tokyo.jp',
							'oshima.tokyo.jp',
							'ota.tokyo.jp',
							'setagaya.tokyo.jp',
							'shibuya.tokyo.jp',
							'shinagawa.tokyo.jp',
							'shinjuku.tokyo.jp',
							'suginami.tokyo.jp',
							'sumida.tokyo.jp',
							'tachikawa.tokyo.jp',
							'taito.tokyo.jp',
							'tama.tokyo.jp',
							'toshima.tokyo.jp',
							'chizu.tottori.jp',
							'hino.tottori.jp',
							'kawahara.tottori.jp',
							'koge.tottori.jp',
							'kotoura.tottori.jp',
							'misasa.tottori.jp',
							'nanbu.tottori.jp',
							'nichinan.tottori.jp',
							'sakaiminato.tottori.jp',
							'tottori.tottori.jp',
							'wakasa.tottori.jp',
							'yazu.tottori.jp',
							'yonago.tottori.jp',
							'asahi.toyama.jp',
							'fuchu.toyama.jp',
							'fukumitsu.toyama.jp',
							'funahashi.toyama.jp',
							'himi.toyama.jp',
							'imizu.toyama.jp',
							'inami.toyama.jp',
							'johana.toyama.jp',
							'kamiichi.toyama.jp',
							'kurobe.toyama.jp',
							'nakaniikawa.toyama.jp',
							'namerikawa.toyama.jp',
							'nanto.toyama.jp',
							'nyuzen.toyama.jp',
							'oyabe.toyama.jp',
							'taira.toyama.jp',
							'takaoka.toyama.jp',
							'tateyama.toyama.jp',
							'toga.toyama.jp',
							'tonami.toyama.jp',
							'toyama.toyama.jp',
							'unazuki.toyama.jp',
							'uozu.toyama.jp',
							'yamada.toyama.jp',
							'arida.wakayama.jp',
							'aridagawa.wakayama.jp',
							'gobo.wakayama.jp',
							'hashimoto.wakayama.jp',
							'hidaka.wakayama.jp',
							'hirogawa.wakayama.jp',
							'inami.wakayama.jp',
							'iwade.wakayama.jp',
							'kainan.wakayama.jp',
							'kamitonda.wakayama.jp',
							'katsuragi.wakayama.jp',
							'kimino.wakayama.jp',
							'kinokawa.wakayama.jp',
							'kitayama.wakayama.jp',
							'koya.wakayama.jp',
							'koza.wakayama.jp',
							'kozagawa.wakayama.jp',
							'kudoyama.wakayama.jp',
							'kushimoto.wakayama.jp',
							'mihama.wakayama.jp',
							'misato.wakayama.jp',
							'nachikatsuura.wakayama.jp',
							'shingu.wakayama.jp',
							'shirahama.wakayama.jp',
							'taiji.wakayama.jp',
							'tanabe.wakayama.jp',
							'wakayama.wakayama.jp',
							'yuasa.wakayama.jp',
							'yura.wakayama.jp',
							'asahi.yamagata.jp',
							'funagata.yamagata.jp',
							'higashine.yamagata.jp',
							'iide.yamagata.jp',
							'kahoku.yamagata.jp',
							'kaminoyama.yamagata.jp',
							'kaneyama.yamagata.jp',
							'kawanishi.yamagata.jp',
							'mamurogawa.yamagata.jp',
							'mikawa.yamagata.jp',
							'murayama.yamagata.jp',
							'nagai.yamagata.jp',
							'nakayama.yamagata.jp',
							'nanyo.yamagata.jp',
							'nishikawa.yamagata.jp',
							'obanazawa.yamagata.jp',
							'oe.yamagata.jp',
							'oguni.yamagata.jp',
							'ohkura.yamagata.jp',
							'oishida.yamagata.jp',
							'sagae.yamagata.jp',
							'sakata.yamagata.jp',
							'sakegawa.yamagata.jp',
							'shinjo.yamagata.jp',
							'shirataka.yamagata.jp',
							'shonai.yamagata.jp',
							'takahata.yamagata.jp',
							'tendo.yamagata.jp',
							'tozawa.yamagata.jp',
							'tsuruoka.yamagata.jp',
							'yamagata.yamagata.jp',
							'yamanobe.yamagata.jp',
							'yonezawa.yamagata.jp',
							'yuza.yamagata.jp',
							'abu.yamaguchi.jp',
							'hagi.yamaguchi.jp',
							'hikari.yamaguchi.jp',
							'hofu.yamaguchi.jp',
							'iwakuni.yamaguchi.jp',
							'kudamatsu.yamaguchi.jp',
							'mitou.yamaguchi.jp',
							'nagato.yamaguchi.jp',
							'oshima.yamaguchi.jp',
							'shimonoseki.yamaguchi.jp',
							'shunan.yamaguchi.jp',
							'tabuse.yamaguchi.jp',
							'tokuyama.yamaguchi.jp',
							'toyota.yamaguchi.jp',
							'ube.yamaguchi.jp',
							'yuu.yamaguchi.jp',
							'chuo.yamanashi.jp',
							'doshi.yamanashi.jp',
							'fuefuki.yamanashi.jp',
							'fujikawa.yamanashi.jp',
							'fujikawaguchiko.yamanashi.jp',
							'fujiyoshida.yamanashi.jp',
							'hayakawa.yamanashi.jp',
							'hokuto.yamanashi.jp',
							'ichikawamisato.yamanashi.jp',
							'kai.yamanashi.jp',
							'kofu.yamanashi.jp',
							'koshu.yamanashi.jp',
							'kosuge.yamanashi.jp',
							'minami-alps.yamanashi.jp',
							'minobu.yamanashi.jp',
							'nakamichi.yamanashi.jp',
							'nanbu.yamanashi.jp',
							'narusawa.yamanashi.jp',
							'nirasaki.yamanashi.jp',
							'nishikatsura.yamanashi.jp',
							'oshino.yamanashi.jp',
							'otsuki.yamanashi.jp',
							'showa.yamanashi.jp',
							'tabayama.yamanashi.jp',
							'tsuru.yamanashi.jp',
							'uenohara.yamanashi.jp',
							'yamanakako.yamanashi.jp',
							'yamanashi.yamanashi.jp',
							'ke',
							'ac.ke',
							'co.ke',
							'go.ke',
							'info.ke',
							'me.ke',
							'mobi.ke',
							'ne.ke',
							'or.ke',
							'sc.ke',
							'kg',
							'org.kg',
							'net.kg',
							'com.kg',
							'edu.kg',
							'gov.kg',
							'mil.kg',
							'*.kh',
							'ki',
							'edu.ki',
							'biz.ki',
							'net.ki',
							'org.ki',
							'gov.ki',
							'info.ki',
							'com.ki',
							'km',
							'org.km',
							'nom.km',
							'gov.km',
							'prd.km',
							'tm.km',
							'edu.km',
							'mil.km',
							'ass.km',
							'com.km',
							'coop.km',
							'asso.km',
							'presse.km',
							'medecin.km',
							'notaires.km',
							'pharmaciens.km',
							'veterinaire.km',
							'gouv.km',
							'kn',
							'net.kn',
							'org.kn',
							'edu.kn',
							'gov.kn',
							'kp',
							'com.kp',
							'edu.kp',
							'gov.kp',
							'org.kp',
							'rep.kp',
							'tra.kp',
							'kr',
							'ac.kr',
							'co.kr',
							'es.kr',
							'go.kr',
							'hs.kr',
							'kg.kr',
							'mil.kr',
							'ms.kr',
							'ne.kr',
							'or.kr',
							'pe.kr',
							're.kr',
							'sc.kr',
							'busan.kr',
							'chungbuk.kr',
							'chungnam.kr',
							'daegu.kr',
							'daejeon.kr',
							'gangwon.kr',
							'gwangju.kr',
							'gyeongbuk.kr',
							'gyeonggi.kr',
							'gyeongnam.kr',
							'incheon.kr',
							'jeju.kr',
							'jeonbuk.kr',
							'jeonnam.kr',
							'seoul.kr',
							'ulsan.kr',
							'kw',
							'com.kw',
							'edu.kw',
							'emb.kw',
							'gov.kw',
							'ind.kw',
							'net.kw',
							'org.kw',
							'ky',
							'com.ky',
							'edu.ky',
							'net.ky',
							'org.ky',
							'kz',
							'org.kz',
							'edu.kz',
							'net.kz',
							'gov.kz',
							'mil.kz',
							'com.kz',
							'la',
							'int.la',
							'net.la',
							'info.la',
							'edu.la',
							'gov.la',
							'per.la',
							'com.la',
							'org.la',
							'lb',
							'com.lb',
							'edu.lb',
							'gov.lb',
							'net.lb',
							'org.lb',
							'lc',
							'com.lc',
							'net.lc',
							'co.lc',
							'org.lc',
							'edu.lc',
							'gov.lc',
							'li',
							'lk',
							'gov.lk',
							'sch.lk',
							'net.lk',
							'int.lk',
							'com.lk',
							'org.lk',
							'edu.lk',
							'ngo.lk',
							'soc.lk',
							'web.lk',
							'ltd.lk',
							'assn.lk',
							'grp.lk',
							'hotel.lk',
							'ac.lk',
							'lr',
							'com.lr',
							'edu.lr',
							'gov.lr',
							'org.lr',
							'net.lr',
							'ls',
							'ac.ls',
							'biz.ls',
							'co.ls',
							'edu.ls',
							'gov.ls',
							'info.ls',
							'net.ls',
							'org.ls',
							'sc.ls',
							'lt',
							'gov.lt',
							'lu',
							'lv',
							'com.lv',
							'edu.lv',
							'gov.lv',
							'org.lv',
							'mil.lv',
							'id.lv',
							'net.lv',
							'asn.lv',
							'conf.lv',
							'ly',
							'com.ly',
							'net.ly',
							'gov.ly',
							'plc.ly',
							'edu.ly',
							'sch.ly',
							'med.ly',
							'org.ly',
							'id.ly',
							'ma',
							'co.ma',
							'net.ma',
							'gov.ma',
							'org.ma',
							'ac.ma',
							'press.ma',
							'mc',
							'tm.mc',
							'asso.mc',
							'md',
							'me',
							'co.me',
							'net.me',
							'org.me',
							'edu.me',
							'ac.me',
							'gov.me',
							'its.me',
							'priv.me',
							'mg',
							'org.mg',
							'nom.mg',
							'gov.mg',
							'prd.mg',
							'tm.mg',
							'edu.mg',
							'mil.mg',
							'com.mg',
							'co.mg',
							'mh',
							'mil',
							'mk',
							'com.mk',
							'org.mk',
							'net.mk',
							'edu.mk',
							'gov.mk',
							'inf.mk',
							'name.mk',
							'ml',
							'com.ml',
							'edu.ml',
							'gouv.ml',
							'gov.ml',
							'net.ml',
							'org.ml',
							'presse.ml',
							'*.mm',
							'mn',
							'gov.mn',
							'edu.mn',
							'org.mn',
							'mo',
							'com.mo',
							'net.mo',
							'org.mo',
							'edu.mo',
							'gov.mo',
							'mobi',
							'mp',
							'mq',
							'mr',
							'gov.mr',
							'ms',
							'com.ms',
							'edu.ms',
							'gov.ms',
							'net.ms',
							'org.ms',
							'mt',
							'com.mt',
							'edu.mt',
							'net.mt',
							'org.mt',
							'mu',
							'com.mu',
							'net.mu',
							'org.mu',
							'gov.mu',
							'ac.mu',
							'co.mu',
							'or.mu',
							'museum',
							'academy.museum',
							'agriculture.museum',
							'air.museum',
							'airguard.museum',
							'alabama.museum',
							'alaska.museum',
							'amber.museum',
							'ambulance.museum',
							'american.museum',
							'americana.museum',
							'americanantiques.museum',
							'americanart.museum',
							'amsterdam.museum',
							'and.museum',
							'annefrank.museum',
							'anthro.museum',
							'anthropology.museum',
							'antiques.museum',
							'aquarium.museum',
							'arboretum.museum',
							'archaeological.museum',
							'archaeology.museum',
							'architecture.museum',
							'art.museum',
							'artanddesign.museum',
							'artcenter.museum',
							'artdeco.museum',
							'arteducation.museum',
							'artgallery.museum',
							'arts.museum',
							'artsandcrafts.museum',
							'asmatart.museum',
							'assassination.museum',
							'assisi.museum',
							'association.museum',
							'astronomy.museum',
							'atlanta.museum',
							'austin.museum',
							'australia.museum',
							'automotive.museum',
							'aviation.museum',
							'axis.museum',
							'badajoz.museum',
							'baghdad.museum',
							'bahn.museum',
							'bale.museum',
							'baltimore.museum',
							'barcelona.museum',
							'baseball.museum',
							'basel.museum',
							'baths.museum',
							'bauern.museum',
							'beauxarts.museum',
							'beeldengeluid.museum',
							'bellevue.museum',
							'bergbau.museum',
							'berkeley.museum',
							'berlin.museum',
							'bern.museum',
							'bible.museum',
							'bilbao.museum',
							'bill.museum',
							'birdart.museum',
							'birthplace.museum',
							'bonn.museum',
							'boston.museum',
							'botanical.museum',
							'botanicalgarden.museum',
							'botanicgarden.museum',
							'botany.museum',
							'brandywinevalley.museum',
							'brasil.museum',
							'bristol.museum',
							'british.museum',
							'britishcolumbia.museum',
							'broadcast.museum',
							'brunel.museum',
							'brussel.museum',
							'brussels.museum',
							'bruxelles.museum',
							'building.museum',
							'burghof.museum',
							'bus.museum',
							'bushey.museum',
							'cadaques.museum',
							'california.museum',
							'cambridge.museum',
							'can.museum',
							'canada.museum',
							'capebreton.museum',
							'carrier.museum',
							'cartoonart.museum',
							'casadelamoneda.museum',
							'castle.museum',
							'castres.museum',
							'celtic.museum',
							'center.museum',
							'chattanooga.museum',
							'cheltenham.museum',
							'chesapeakebay.museum',
							'chicago.museum',
							'children.museum',
							'childrens.museum',
							'childrensgarden.museum',
							'chiropractic.museum',
							'chocolate.museum',
							'christiansburg.museum',
							'cincinnati.museum',
							'cinema.museum',
							'circus.museum',
							'civilisation.museum',
							'civilization.museum',
							'civilwar.museum',
							'clinton.museum',
							'clock.museum',
							'coal.museum',
							'coastaldefence.museum',
							'cody.museum',
							'coldwar.museum',
							'collection.museum',
							'colonialwilliamsburg.museum',
							'coloradoplateau.museum',
							'columbia.museum',
							'columbus.museum',
							'communication.museum',
							'communications.museum',
							'community.museum',
							'computer.museum',
							'computerhistory.museum',
							'comunicações.museum',
							'contemporary.museum',
							'contemporaryart.museum',
							'convent.museum',
							'copenhagen.museum',
							'corporation.museum',
							'correios-e-telecomunicações.museum',
							'corvette.museum',
							'costume.museum',
							'countryestate.museum',
							'county.museum',
							'crafts.museum',
							'cranbrook.museum',
							'creation.museum',
							'cultural.museum',
							'culturalcenter.museum',
							'culture.museum',
							'cyber.museum',
							'cymru.museum',
							'dali.museum',
							'dallas.museum',
							'database.museum',
							'ddr.museum',
							'decorativearts.museum',
							'delaware.museum',
							'delmenhorst.museum',
							'denmark.museum',
							'depot.museum',
							'design.museum',
							'detroit.museum',
							'dinosaur.museum',
							'discovery.museum',
							'dolls.museum',
							'donostia.museum',
							'durham.museum',
							'eastafrica.museum',
							'eastcoast.museum',
							'education.museum',
							'educational.museum',
							'egyptian.museum',
							'eisenbahn.museum',
							'elburg.museum',
							'elvendrell.museum',
							'embroidery.museum',
							'encyclopedic.museum',
							'england.museum',
							'entomology.museum',
							'environment.museum',
							'environmentalconservation.museum',
							'epilepsy.museum',
							'essex.museum',
							'estate.museum',
							'ethnology.museum',
							'exeter.museum',
							'exhibition.museum',
							'family.museum',
							'farm.museum',
							'farmequipment.museum',
							'farmers.museum',
							'farmstead.museum',
							'field.museum',
							'figueres.museum',
							'filatelia.museum',
							'film.museum',
							'fineart.museum',
							'finearts.museum',
							'finland.museum',
							'flanders.museum',
							'florida.museum',
							'force.museum',
							'fortmissoula.museum',
							'fortworth.museum',
							'foundation.museum',
							'francaise.museum',
							'frankfurt.museum',
							'franziskaner.museum',
							'freemasonry.museum',
							'freiburg.museum',
							'fribourg.museum',
							'frog.museum',
							'fundacio.museum',
							'furniture.museum',
							'gallery.museum',
							'garden.museum',
							'gateway.museum',
							'geelvinck.museum',
							'gemological.museum',
							'geology.museum',
							'georgia.museum',
							'giessen.museum',
							'glas.museum',
							'glass.museum',
							'gorge.museum',
							'grandrapids.museum',
							'graz.museum',
							'guernsey.museum',
							'halloffame.museum',
							'hamburg.museum',
							'handson.museum',
							'harvestcelebration.museum',
							'hawaii.museum',
							'health.museum',
							'heimatunduhren.museum',
							'hellas.museum',
							'helsinki.museum',
							'hembygdsforbund.museum',
							'heritage.museum',
							'histoire.museum',
							'historical.museum',
							'historicalsociety.museum',
							'historichouses.museum',
							'historisch.museum',
							'historisches.museum',
							'history.museum',
							'historyofscience.museum',
							'horology.museum',
							'house.museum',
							'humanities.museum',
							'illustration.museum',
							'imageandsound.museum',
							'indian.museum',
							'indiana.museum',
							'indianapolis.museum',
							'indianmarket.museum',
							'intelligence.museum',
							'interactive.museum',
							'iraq.museum',
							'iron.museum',
							'isleofman.museum',
							'jamison.museum',
							'jefferson.museum',
							'jerusalem.museum',
							'jewelry.museum',
							'jewish.museum',
							'jewishart.museum',
							'jfk.museum',
							'journalism.museum',
							'judaica.museum',
							'judygarland.museum',
							'juedisches.museum',
							'juif.museum',
							'karate.museum',
							'karikatur.museum',
							'kids.museum',
							'koebenhavn.museum',
							'koeln.museum',
							'kunst.museum',
							'kunstsammlung.museum',
							'kunstunddesign.museum',
							'labor.museum',
							'labour.museum',
							'lajolla.museum',
							'lancashire.museum',
							'landes.museum',
							'lans.museum',
							'läns.museum',
							'larsson.museum',
							'lewismiller.museum',
							'lincoln.museum',
							'linz.museum',
							'living.museum',
							'livinghistory.museum',
							'localhistory.museum',
							'london.museum',
							'losangeles.museum',
							'louvre.museum',
							'loyalist.museum',
							'lucerne.museum',
							'luxembourg.museum',
							'luzern.museum',
							'mad.museum',
							'madrid.museum',
							'mallorca.museum',
							'manchester.museum',
							'mansion.museum',
							'mansions.museum',
							'manx.museum',
							'marburg.museum',
							'maritime.museum',
							'maritimo.museum',
							'maryland.museum',
							'marylhurst.museum',
							'media.museum',
							'medical.museum',
							'medizinhistorisches.museum',
							'meeres.museum',
							'memorial.museum',
							'mesaverde.museum',
							'michigan.museum',
							'midatlantic.museum',
							'military.museum',
							'mill.museum',
							'miners.museum',
							'mining.museum',
							'minnesota.museum',
							'missile.museum',
							'missoula.museum',
							'modern.museum',
							'moma.museum',
							'money.museum',
							'monmouth.museum',
							'monticello.museum',
							'montreal.museum',
							'moscow.museum',
							'motorcycle.museum',
							'muenchen.museum',
							'muenster.museum',
							'mulhouse.museum',
							'muncie.museum',
							'museet.museum',
							'museumcenter.museum',
							'museumvereniging.museum',
							'music.museum',
							'national.museum',
							'nationalfirearms.museum',
							'nationalheritage.museum',
							'nativeamerican.museum',
							'naturalhistory.museum',
							'naturalhistorymuseum.museum',
							'naturalsciences.museum',
							'nature.museum',
							'naturhistorisches.museum',
							'natuurwetenschappen.museum',
							'naumburg.museum',
							'naval.museum',
							'nebraska.museum',
							'neues.museum',
							'newhampshire.museum',
							'newjersey.museum',
							'newmexico.museum',
							'newport.museum',
							'newspaper.museum',
							'newyork.museum',
							'niepce.museum',
							'norfolk.museum',
							'north.museum',
							'nrw.museum',
							'nyc.museum',
							'nyny.museum',
							'oceanographic.museum',
							'oceanographique.museum',
							'omaha.museum',
							'online.museum',
							'ontario.museum',
							'openair.museum',
							'oregon.museum',
							'oregontrail.museum',
							'otago.museum',
							'oxford.museum',
							'pacific.museum',
							'paderborn.museum',
							'palace.museum',
							'paleo.museum',
							'palmsprings.museum',
							'panama.museum',
							'paris.museum',
							'pasadena.museum',
							'pharmacy.museum',
							'philadelphia.museum',
							'philadelphiaarea.museum',
							'philately.museum',
							'phoenix.museum',
							'photography.museum',
							'pilots.museum',
							'pittsburgh.museum',
							'planetarium.museum',
							'plantation.museum',
							'plants.museum',
							'plaza.museum',
							'portal.museum',
							'portland.museum',
							'portlligat.museum',
							'posts-and-telecommunications.museum',
							'preservation.museum',
							'presidio.museum',
							'press.museum',
							'project.museum',
							'public.museum',
							'pubol.museum',
							'quebec.museum',
							'railroad.museum',
							'railway.museum',
							'research.museum',
							'resistance.museum',
							'riodejaneiro.museum',
							'rochester.museum',
							'rockart.museum',
							'roma.museum',
							'russia.museum',
							'saintlouis.museum',
							'salem.museum',
							'salvadordali.museum',
							'salzburg.museum',
							'sandiego.museum',
							'sanfrancisco.museum',
							'santabarbara.museum',
							'santacruz.museum',
							'santafe.museum',
							'saskatchewan.museum',
							'satx.museum',
							'savannahga.museum',
							'schlesisches.museum',
							'schoenbrunn.museum',
							'schokoladen.museum',
							'school.museum',
							'schweiz.museum',
							'science.museum',
							'scienceandhistory.museum',
							'scienceandindustry.museum',
							'sciencecenter.museum',
							'sciencecenters.museum',
							'science-fiction.museum',
							'sciencehistory.museum',
							'sciences.museum',
							'sciencesnaturelles.museum',
							'scotland.museum',
							'seaport.museum',
							'settlement.museum',
							'settlers.museum',
							'shell.museum',
							'sherbrooke.museum',
							'sibenik.museum',
							'silk.museum',
							'ski.museum',
							'skole.museum',
							'society.museum',
							'sologne.museum',
							'soundandvision.museum',
							'southcarolina.museum',
							'southwest.museum',
							'space.museum',
							'spy.museum',
							'square.museum',
							'stadt.museum',
							'stalbans.museum',
							'starnberg.museum',
							'state.museum',
							'stateofdelaware.museum',
							'station.museum',
							'steam.museum',
							'steiermark.museum',
							'stjohn.museum',
							'stockholm.museum',
							'stpetersburg.museum',
							'stuttgart.museum',
							'suisse.museum',
							'surgeonshall.museum',
							'surrey.museum',
							'svizzera.museum',
							'sweden.museum',
							'sydney.museum',
							'tank.museum',
							'tcm.museum',
							'technology.museum',
							'telekommunikation.museum',
							'television.museum',
							'texas.museum',
							'textile.museum',
							'theater.museum',
							'time.museum',
							'timekeeping.museum',
							'topology.museum',
							'torino.museum',
							'touch.museum',
							'town.museum',
							'transport.museum',
							'tree.museum',
							'trolley.museum',
							'trust.museum',
							'trustee.museum',
							'uhren.museum',
							'ulm.museum',
							'undersea.museum',
							'university.museum',
							'usa.museum',
							'usantiques.museum',
							'usarts.museum',
							'uscountryestate.museum',
							'usculture.museum',
							'usdecorativearts.museum',
							'usgarden.museum',
							'ushistory.museum',
							'ushuaia.museum',
							'uslivinghistory.museum',
							'utah.museum',
							'uvic.museum',
							'valley.museum',
							'vantaa.museum',
							'versailles.museum',
							'viking.museum',
							'village.museum',
							'virginia.museum',
							'virtual.museum',
							'virtuel.museum',
							'vlaanderen.museum',
							'volkenkunde.museum',
							'wales.museum',
							'wallonie.museum',
							'war.museum',
							'washingtondc.museum',
							'watchandclock.museum',
							'watch-and-clock.museum',
							'western.museum',
							'westfalen.museum',
							'whaling.museum',
							'wildlife.museum',
							'williamsburg.museum',
							'windmill.museum',
							'workshop.museum',
							'york.museum',
							'yorkshire.museum',
							'yosemite.museum',
							'youth.museum',
							'zoological.museum',
							'zoology.museum',
							'ירושלים.museum',
							'иком.museum',
							'mv',
							'aero.mv',
							'biz.mv',
							'com.mv',
							'coop.mv',
							'edu.mv',
							'gov.mv',
							'info.mv',
							'int.mv',
							'mil.mv',
							'museum.mv',
							'name.mv',
							'net.mv',
							'org.mv',
							'pro.mv',
							'mw',
							'ac.mw',
							'biz.mw',
							'co.mw',
							'com.mw',
							'coop.mw',
							'edu.mw',
							'gov.mw',
							'int.mw',
							'museum.mw',
							'net.mw',
							'org.mw',
							'mx',
							'com.mx',
							'org.mx',
							'gob.mx',
							'edu.mx',
							'net.mx',
							'my',
							'biz.my',
							'com.my',
							'edu.my',
							'gov.my',
							'mil.my',
							'name.my',
							'net.my',
							'org.my',
							'mz',
							'ac.mz',
							'adv.mz',
							'co.mz',
							'edu.mz',
							'gov.mz',
							'mil.mz',
							'net.mz',
							'org.mz',
							'na',
							'info.na',
							'pro.na',
							'name.na',
							'school.na',
							'or.na',
							'dr.na',
							'us.na',
							'mx.na',
							'ca.na',
							'in.na',
							'cc.na',
							'tv.na',
							'ws.na',
							'mobi.na',
							'co.na',
							'com.na',
							'org.na',
							'name',
							'nc',
							'asso.nc',
							'nom.nc',
							'ne',
							'net',
							'nf',
							'com.nf',
							'net.nf',
							'per.nf',
							'rec.nf',
							'web.nf',
							'arts.nf',
							'firm.nf',
							'info.nf',
							'other.nf',
							'store.nf',
							'ng',
							'com.ng',
							'edu.ng',
							'gov.ng',
							'i.ng',
							'mil.ng',
							'mobi.ng',
							'name.ng',
							'net.ng',
							'org.ng',
							'sch.ng',
							'ni',
							'ac.ni',
							'biz.ni',
							'co.ni',
							'com.ni',
							'edu.ni',
							'gob.ni',
							'in.ni',
							'info.ni',
							'int.ni',
							'mil.ni',
							'net.ni',
							'nom.ni',
							'org.ni',
							'web.ni',
							'nl',
							'no',
							'fhs.no',
							'vgs.no',
							'fylkesbibl.no',
							'folkebibl.no',
							'museum.no',
							'idrett.no',
							'priv.no',
							'mil.no',
							'stat.no',
							'dep.no',
							'kommune.no',
							'herad.no',
							'aa.no',
							'ah.no',
							'bu.no',
							'fm.no',
							'hl.no',
							'hm.no',
							'jan-mayen.no',
							'mr.no',
							'nl.no',
							'nt.no',
							'of.no',
							'ol.no',
							'oslo.no',
							'rl.no',
							'sf.no',
							'st.no',
							'svalbard.no',
							'tm.no',
							'tr.no',
							'va.no',
							'vf.no',
							'gs.aa.no',
							'gs.ah.no',
							'gs.bu.no',
							'gs.fm.no',
							'gs.hl.no',
							'gs.hm.no',
							'gs.jan-mayen.no',
							'gs.mr.no',
							'gs.nl.no',
							'gs.nt.no',
							'gs.of.no',
							'gs.ol.no',
							'gs.oslo.no',
							'gs.rl.no',
							'gs.sf.no',
							'gs.st.no',
							'gs.svalbard.no',
							'gs.tm.no',
							'gs.tr.no',
							'gs.va.no',
							'gs.vf.no',
							'akrehamn.no',
							'åkrehamn.no',
							'algard.no',
							'ålgård.no',
							'arna.no',
							'brumunddal.no',
							'bryne.no',
							'bronnoysund.no',
							'brønnøysund.no',
							'drobak.no',
							'drøbak.no',
							'egersund.no',
							'fetsund.no',
							'floro.no',
							'florø.no',
							'fredrikstad.no',
							'hokksund.no',
							'honefoss.no',
							'hønefoss.no',
							'jessheim.no',
							'jorpeland.no',
							'jørpeland.no',
							'kirkenes.no',
							'kopervik.no',
							'krokstadelva.no',
							'langevag.no',
							'langevåg.no',
							'leirvik.no',
							'mjondalen.no',
							'mjøndalen.no',
							'mo-i-rana.no',
							'mosjoen.no',
							'mosjøen.no',
							'nesoddtangen.no',
							'orkanger.no',
							'osoyro.no',
							'osøyro.no',
							'raholt.no',
							'råholt.no',
							'sandnessjoen.no',
							'sandnessjøen.no',
							'skedsmokorset.no',
							'slattum.no',
							'spjelkavik.no',
							'stathelle.no',
							'stavern.no',
							'stjordalshalsen.no',
							'stjørdalshalsen.no',
							'tananger.no',
							'tranby.no',
							'vossevangen.no',
							'afjord.no',
							'åfjord.no',
							'agdenes.no',
							'al.no',
							'ål.no',
							'alesund.no',
							'ålesund.no',
							'alstahaug.no',
							'alta.no',
							'áltá.no',
							'alaheadju.no',
							'álaheadju.no',
							'alvdal.no',
							'amli.no',
							'åmli.no',
							'amot.no',
							'åmot.no',
							'andebu.no',
							'andoy.no',
							'andøy.no',
							'andasuolo.no',
							'ardal.no',
							'årdal.no',
							'aremark.no',
							'arendal.no',
							'ås.no',
							'aseral.no',
							'åseral.no',
							'asker.no',
							'askim.no',
							'askvoll.no',
							'askoy.no',
							'askøy.no',
							'asnes.no',
							'åsnes.no',
							'audnedaln.no',
							'aukra.no',
							'aure.no',
							'aurland.no',
							'aurskog-holand.no',
							'aurskog-høland.no',
							'austevoll.no',
							'austrheim.no',
							'averoy.no',
							'averøy.no',
							'balestrand.no',
							'ballangen.no',
							'balat.no',
							'bálát.no',
							'balsfjord.no',
							'bahccavuotna.no',
							'báhccavuotna.no',
							'bamble.no',
							'bardu.no',
							'beardu.no',
							'beiarn.no',
							'bajddar.no',
							'bájddar.no',
							'baidar.no',
							'báidár.no',
							'berg.no',
							'bergen.no',
							'berlevag.no',
							'berlevåg.no',
							'bearalvahki.no',
							'bearalváhki.no',
							'bindal.no',
							'birkenes.no',
							'bjarkoy.no',
							'bjarkøy.no',
							'bjerkreim.no',
							'bjugn.no',
							'bodo.no',
							'bodø.no',
							'badaddja.no',
							'bådåddjå.no',
							'budejju.no',
							'bokn.no',
							'bremanger.no',
							'bronnoy.no',
							'brønnøy.no',
							'bygland.no',
							'bykle.no',
							'barum.no',
							'bærum.no',
							'bo.telemark.no',
							'bø.telemark.no',
							'bo.nordland.no',
							'bø.nordland.no',
							'bievat.no',
							'bievát.no',
							'bomlo.no',
							'bømlo.no',
							'batsfjord.no',
							'båtsfjord.no',
							'bahcavuotna.no',
							'báhcavuotna.no',
							'dovre.no',
							'drammen.no',
							'drangedal.no',
							'dyroy.no',
							'dyrøy.no',
							'donna.no',
							'dønna.no',
							'eid.no',
							'eidfjord.no',
							'eidsberg.no',
							'eidskog.no',
							'eidsvoll.no',
							'eigersund.no',
							'elverum.no',
							'enebakk.no',
							'engerdal.no',
							'etne.no',
							'etnedal.no',
							'evenes.no',
							'evenassi.no',
							'evenášši.no',
							'evje-og-hornnes.no',
							'farsund.no',
							'fauske.no',
							'fuossko.no',
							'fuoisku.no',
							'fedje.no',
							'fet.no',
							'finnoy.no',
							'finnøy.no',
							'fitjar.no',
							'fjaler.no',
							'fjell.no',
							'flakstad.no',
							'flatanger.no',
							'flekkefjord.no',
							'flesberg.no',
							'flora.no',
							'fla.no',
							'flå.no',
							'folldal.no',
							'forsand.no',
							'fosnes.no',
							'frei.no',
							'frogn.no',
							'froland.no',
							'frosta.no',
							'frana.no',
							'fræna.no',
							'froya.no',
							'frøya.no',
							'fusa.no',
							'fyresdal.no',
							'forde.no',
							'førde.no',
							'gamvik.no',
							'gangaviika.no',
							'gáŋgaviika.no',
							'gaular.no',
							'gausdal.no',
							'gildeskal.no',
							'gildeskål.no',
							'giske.no',
							'gjemnes.no',
							'gjerdrum.no',
							'gjerstad.no',
							'gjesdal.no',
							'gjovik.no',
							'gjøvik.no',
							'gloppen.no',
							'gol.no',
							'gran.no',
							'grane.no',
							'granvin.no',
							'gratangen.no',
							'grimstad.no',
							'grong.no',
							'kraanghke.no',
							'kråanghke.no',
							'grue.no',
							'gulen.no',
							'hadsel.no',
							'halden.no',
							'halsa.no',
							'hamar.no',
							'hamaroy.no',
							'habmer.no',
							'hábmer.no',
							'hapmir.no',
							'hápmir.no',
							'hammerfest.no',
							'hammarfeasta.no',
							'hámmárfeasta.no',
							'haram.no',
							'hareid.no',
							'harstad.no',
							'hasvik.no',
							'aknoluokta.no',
							'ákŋoluokta.no',
							'hattfjelldal.no',
							'aarborte.no',
							'haugesund.no',
							'hemne.no',
							'hemnes.no',
							'hemsedal.no',
							'heroy.more-og-romsdal.no',
							'herøy.møre-og-romsdal.no',
							'heroy.nordland.no',
							'herøy.nordland.no',
							'hitra.no',
							'hjartdal.no',
							'hjelmeland.no',
							'hobol.no',
							'hobøl.no',
							'hof.no',
							'hol.no',
							'hole.no',
							'holmestrand.no',
							'holtalen.no',
							'holtålen.no',
							'hornindal.no',
							'horten.no',
							'hurdal.no',
							'hurum.no',
							'hvaler.no',
							'hyllestad.no',
							'hagebostad.no',
							'hægebostad.no',
							'hoyanger.no',
							'høyanger.no',
							'hoylandet.no',
							'høylandet.no',
							'ha.no',
							'hå.no',
							'ibestad.no',
							'inderoy.no',
							'inderøy.no',
							'iveland.no',
							'jevnaker.no',
							'jondal.no',
							'jolster.no',
							'jølster.no',
							'karasjok.no',
							'karasjohka.no',
							'kárášjohka.no',
							'karlsoy.no',
							'galsa.no',
							'gálsá.no',
							'karmoy.no',
							'karmøy.no',
							'kautokeino.no',
							'guovdageaidnu.no',
							'klepp.no',
							'klabu.no',
							'klæbu.no',
							'kongsberg.no',
							'kongsvinger.no',
							'kragero.no',
							'kragerø.no',
							'kristiansand.no',
							'kristiansund.no',
							'krodsherad.no',
							'krødsherad.no',
							'kvalsund.no',
							'rahkkeravju.no',
							'ráhkkerávju.no',
							'kvam.no',
							'kvinesdal.no',
							'kvinnherad.no',
							'kviteseid.no',
							'kvitsoy.no',
							'kvitsøy.no',
							'kvafjord.no',
							'kvæfjord.no',
							'giehtavuoatna.no',
							'kvanangen.no',
							'kvænangen.no',
							'navuotna.no',
							'návuotna.no',
							'kafjord.no',
							'kåfjord.no',
							'gaivuotna.no',
							'gáivuotna.no',
							'larvik.no',
							'lavangen.no',
							'lavagis.no',
							'loabat.no',
							'loabát.no',
							'lebesby.no',
							'davvesiida.no',
							'leikanger.no',
							'leirfjord.no',
							'leka.no',
							'leksvik.no',
							'lenvik.no',
							'leangaviika.no',
							'leaŋgaviika.no',
							'lesja.no',
							'levanger.no',
							'lier.no',
							'lierne.no',
							'lillehammer.no',
							'lillesand.no',
							'lindesnes.no',
							'lindas.no',
							'lindås.no',
							'lom.no',
							'loppa.no',
							'lahppi.no',
							'láhppi.no',
							'lund.no',
							'lunner.no',
							'luroy.no',
							'lurøy.no',
							'luster.no',
							'lyngdal.no',
							'lyngen.no',
							'ivgu.no',
							'lardal.no',
							'lerdal.no',
							'lærdal.no',
							'lodingen.no',
							'lødingen.no',
							'lorenskog.no',
							'lørenskog.no',
							'loten.no',
							'løten.no',
							'malvik.no',
							'masoy.no',
							'måsøy.no',
							'muosat.no',
							'muosát.no',
							'mandal.no',
							'marker.no',
							'marnardal.no',
							'masfjorden.no',
							'meland.no',
							'meldal.no',
							'melhus.no',
							'meloy.no',
							'meløy.no',
							'meraker.no',
							'meråker.no',
							'moareke.no',
							'moåreke.no',
							'midsund.no',
							'midtre-gauldal.no',
							'modalen.no',
							'modum.no',
							'molde.no',
							'moskenes.no',
							'moss.no',
							'mosvik.no',
							'malselv.no',
							'målselv.no',
							'malatvuopmi.no',
							'málatvuopmi.no',
							'namdalseid.no',
							'aejrie.no',
							'namsos.no',
							'namsskogan.no',
							'naamesjevuemie.no',
							'nååmesjevuemie.no',
							'laakesvuemie.no',
							'nannestad.no',
							'narvik.no',
							'narviika.no',
							'naustdal.no',
							'nedre-eiker.no',
							'nes.akershus.no',
							'nes.buskerud.no',
							'nesna.no',
							'nesodden.no',
							'nesseby.no',
							'unjarga.no',
							'unjárga.no',
							'nesset.no',
							'nissedal.no',
							'nittedal.no',
							'nord-aurdal.no',
							'nord-fron.no',
							'nord-odal.no',
							'norddal.no',
							'nordkapp.no',
							'davvenjarga.no',
							'davvenjárga.no',
							'nordre-land.no',
							'nordreisa.no',
							'raisa.no',
							'ráisa.no',
							'nore-og-uvdal.no',
							'notodden.no',
							'naroy.no',
							'nærøy.no',
							'notteroy.no',
							'nøtterøy.no',
							'odda.no',
							'oksnes.no',
							'øksnes.no',
							'oppdal.no',
							'oppegard.no',
							'oppegård.no',
							'orkdal.no',
							'orland.no',
							'ørland.no',
							'orskog.no',
							'ørskog.no',
							'orsta.no',
							'ørsta.no',
							'os.hedmark.no',
							'os.hordaland.no',
							'osen.no',
							'osteroy.no',
							'osterøy.no',
							'ostre-toten.no',
							'østre-toten.no',
							'overhalla.no',
							'ovre-eiker.no',
							'øvre-eiker.no',
							'oyer.no',
							'øyer.no',
							'oygarden.no',
							'øygarden.no',
							'oystre-slidre.no',
							'øystre-slidre.no',
							'porsanger.no',
							'porsangu.no',
							'porsáŋgu.no',
							'porsgrunn.no',
							'radoy.no',
							'radøy.no',
							'rakkestad.no',
							'rana.no',
							'ruovat.no',
							'randaberg.no',
							'rauma.no',
							'rendalen.no',
							'rennebu.no',
							'rennesoy.no',
							'rennesøy.no',
							'rindal.no',
							'ringebu.no',
							'ringerike.no',
							'ringsaker.no',
							'rissa.no',
							'risor.no',
							'risør.no',
							'roan.no',
							'rollag.no',
							'rygge.no',
							'ralingen.no',
							'rælingen.no',
							'rodoy.no',
							'rødøy.no',
							'romskog.no',
							'rømskog.no',
							'roros.no',
							'røros.no',
							'rost.no',
							'røst.no',
							'royken.no',
							'røyken.no',
							'royrvik.no',
							'røyrvik.no',
							'rade.no',
							'råde.no',
							'salangen.no',
							'siellak.no',
							'saltdal.no',
							'salat.no',
							'sálát.no',
							'sálat.no',
							'samnanger.no',
							'sande.more-og-romsdal.no',
							'sande.møre-og-romsdal.no',
							'sande.vestfold.no',
							'sandefjord.no',
							'sandnes.no',
							'sandoy.no',
							'sandøy.no',
							'sarpsborg.no',
							'sauda.no',
							'sauherad.no',
							'sel.no',
							'selbu.no',
							'selje.no',
							'seljord.no',
							'sigdal.no',
							'siljan.no',
							'sirdal.no',
							'skaun.no',
							'skedsmo.no',
							'ski.no',
							'skien.no',
							'skiptvet.no',
							'skjervoy.no',
							'skjervøy.no',
							'skierva.no',
							'skiervá.no',
							'skjak.no',
							'skjåk.no',
							'skodje.no',
							'skanland.no',
							'skånland.no',
							'skanit.no',
							'skánit.no',
							'smola.no',
							'smøla.no',
							'snillfjord.no',
							'snasa.no',
							'snåsa.no',
							'snoasa.no',
							'snaase.no',
							'snåase.no',
							'sogndal.no',
							'sokndal.no',
							'sola.no',
							'solund.no',
							'songdalen.no',
							'sortland.no',
							'spydeberg.no',
							'stange.no',
							'stavanger.no',
							'steigen.no',
							'steinkjer.no',
							'stjordal.no',
							'stjørdal.no',
							'stokke.no',
							'stor-elvdal.no',
							'stord.no',
							'stordal.no',
							'storfjord.no',
							'omasvuotna.no',
							'strand.no',
							'stranda.no',
							'stryn.no',
							'sula.no',
							'suldal.no',
							'sund.no',
							'sunndal.no',
							'surnadal.no',
							'sveio.no',
							'svelvik.no',
							'sykkylven.no',
							'sogne.no',
							'søgne.no',
							'somna.no',
							'sømna.no',
							'sondre-land.no',
							'søndre-land.no',
							'sor-aurdal.no',
							'sør-aurdal.no',
							'sor-fron.no',
							'sør-fron.no',
							'sor-odal.no',
							'sør-odal.no',
							'sor-varanger.no',
							'sør-varanger.no',
							'matta-varjjat.no',
							'mátta-várjjat.no',
							'sorfold.no',
							'sørfold.no',
							'sorreisa.no',
							'sørreisa.no',
							'sorum.no',
							'sørum.no',
							'tana.no',
							'deatnu.no',
							'time.no',
							'tingvoll.no',
							'tinn.no',
							'tjeldsund.no',
							'dielddanuorri.no',
							'tjome.no',
							'tjøme.no',
							'tokke.no',
							'tolga.no',
							'torsken.no',
							'tranoy.no',
							'tranøy.no',
							'tromso.no',
							'tromsø.no',
							'tromsa.no',
							'romsa.no',
							'trondheim.no',
							'troandin.no',
							'trysil.no',
							'trana.no',
							'træna.no',
							'trogstad.no',
							'trøgstad.no',
							'tvedestrand.no',
							'tydal.no',
							'tynset.no',
							'tysfjord.no',
							'divtasvuodna.no',
							'divttasvuotna.no',
							'tysnes.no',
							'tysvar.no',
							'tysvær.no',
							'tonsberg.no',
							'tønsberg.no',
							'ullensaker.no',
							'ullensvang.no',
							'ulvik.no',
							'utsira.no',
							'vadso.no',
							'vadsø.no',
							'cahcesuolo.no',
							'čáhcesuolo.no',
							'vaksdal.no',
							'valle.no',
							'vang.no',
							'vanylven.no',
							'vardo.no',
							'vardø.no',
							'varggat.no',
							'várggát.no',
							'vefsn.no',
							'vaapste.no',
							'vega.no',
							'vegarshei.no',
							'vegårshei.no',
							'vennesla.no',
							'verdal.no',
							'verran.no',
							'vestby.no',
							'vestnes.no',
							'vestre-slidre.no',
							'vestre-toten.no',
							'vestvagoy.no',
							'vestvågøy.no',
							'vevelstad.no',
							'vik.no',
							'vikna.no',
							'vindafjord.no',
							'volda.no',
							'voss.no',
							'varoy.no',
							'værøy.no',
							'vagan.no',
							'vågan.no',
							'voagat.no',
							'vagsoy.no',
							'vågsøy.no',
							'vaga.no',
							'vågå.no',
							'valer.ostfold.no',
							'våler.østfold.no',
							'valer.hedmark.no',
							'våler.hedmark.no',
							'*.np',
							'nr',
							'biz.nr',
							'info.nr',
							'gov.nr',
							'edu.nr',
							'org.nr',
							'net.nr',
							'com.nr',
							'nu',
							'nz',
							'ac.nz',
							'co.nz',
							'cri.nz',
							'geek.nz',
							'gen.nz',
							'govt.nz',
							'health.nz',
							'iwi.nz',
							'kiwi.nz',
							'maori.nz',
							'mil.nz',
							'māori.nz',
							'net.nz',
							'org.nz',
							'parliament.nz',
							'school.nz',
							'om',
							'co.om',
							'com.om',
							'edu.om',
							'gov.om',
							'med.om',
							'museum.om',
							'net.om',
							'org.om',
							'pro.om',
							'onion',
							'org',
							'pa',
							'ac.pa',
							'gob.pa',
							'com.pa',
							'org.pa',
							'sld.pa',
							'edu.pa',
							'net.pa',
							'ing.pa',
							'abo.pa',
							'med.pa',
							'nom.pa',
							'pe',
							'edu.pe',
							'gob.pe',
							'nom.pe',
							'mil.pe',
							'org.pe',
							'com.pe',
							'net.pe',
							'pf',
							'com.pf',
							'org.pf',
							'edu.pf',
							'*.pg',
							'ph',
							'com.ph',
							'net.ph',
							'org.ph',
							'gov.ph',
							'edu.ph',
							'ngo.ph',
							'mil.ph',
							'i.ph',
							'pk',
							'com.pk',
							'net.pk',
							'edu.pk',
							'org.pk',
							'fam.pk',
							'biz.pk',
							'web.pk',
							'gov.pk',
							'gob.pk',
							'gok.pk',
							'gon.pk',
							'gop.pk',
							'gos.pk',
							'info.pk',
							'pl',
							'com.pl',
							'net.pl',
							'org.pl',
							'aid.pl',
							'agro.pl',
							'atm.pl',
							'auto.pl',
							'biz.pl',
							'edu.pl',
							'gmina.pl',
							'gsm.pl',
							'info.pl',
							'mail.pl',
							'miasta.pl',
							'media.pl',
							'mil.pl',
							'nieruchomosci.pl',
							'nom.pl',
							'pc.pl',
							'powiat.pl',
							'priv.pl',
							'realestate.pl',
							'rel.pl',
							'sex.pl',
							'shop.pl',
							'sklep.pl',
							'sos.pl',
							'szkola.pl',
							'targi.pl',
							'tm.pl',
							'tourism.pl',
							'travel.pl',
							'turystyka.pl',
							'gov.pl',
							'ap.gov.pl',
							'ic.gov.pl',
							'is.gov.pl',
							'us.gov.pl',
							'kmpsp.gov.pl',
							'kppsp.gov.pl',
							'kwpsp.gov.pl',
							'psp.gov.pl',
							'wskr.gov.pl',
							'kwp.gov.pl',
							'mw.gov.pl',
							'ug.gov.pl',
							'um.gov.pl',
							'umig.gov.pl',
							'ugim.gov.pl',
							'upow.gov.pl',
							'uw.gov.pl',
							'starostwo.gov.pl',
							'pa.gov.pl',
							'po.gov.pl',
							'psse.gov.pl',
							'pup.gov.pl',
							'rzgw.gov.pl',
							'sa.gov.pl',
							'so.gov.pl',
							'sr.gov.pl',
							'wsa.gov.pl',
							'sko.gov.pl',
							'uzs.gov.pl',
							'wiih.gov.pl',
							'winb.gov.pl',
							'pinb.gov.pl',
							'wios.gov.pl',
							'witd.gov.pl',
							'wzmiuw.gov.pl',
							'piw.gov.pl',
							'wiw.gov.pl',
							'griw.gov.pl',
							'wif.gov.pl',
							'oum.gov.pl',
							'sdn.gov.pl',
							'zp.gov.pl',
							'uppo.gov.pl',
							'mup.gov.pl',
							'wuoz.gov.pl',
							'konsulat.gov.pl',
							'oirm.gov.pl',
							'augustow.pl',
							'babia-gora.pl',
							'bedzin.pl',
							'beskidy.pl',
							'bialowieza.pl',
							'bialystok.pl',
							'bielawa.pl',
							'bieszczady.pl',
							'boleslawiec.pl',
							'bydgoszcz.pl',
							'bytom.pl',
							'cieszyn.pl',
							'czeladz.pl',
							'czest.pl',
							'dlugoleka.pl',
							'elblag.pl',
							'elk.pl',
							'glogow.pl',
							'gniezno.pl',
							'gorlice.pl',
							'grajewo.pl',
							'ilawa.pl',
							'jaworzno.pl',
							'jelenia-gora.pl',
							'jgora.pl',
							'kalisz.pl',
							'kazimierz-dolny.pl',
							'karpacz.pl',
							'kartuzy.pl',
							'kaszuby.pl',
							'katowice.pl',
							'kepno.pl',
							'ketrzyn.pl',
							'klodzko.pl',
							'kobierzyce.pl',
							'kolobrzeg.pl',
							'konin.pl',
							'konskowola.pl',
							'kutno.pl',
							'lapy.pl',
							'lebork.pl',
							'legnica.pl',
							'lezajsk.pl',
							'limanowa.pl',
							'lomza.pl',
							'lowicz.pl',
							'lubin.pl',
							'lukow.pl',
							'malbork.pl',
							'malopolska.pl',
							'mazowsze.pl',
							'mazury.pl',
							'mielec.pl',
							'mielno.pl',
							'mragowo.pl',
							'naklo.pl',
							'nowaruda.pl',
							'nysa.pl',
							'olawa.pl',
							'olecko.pl',
							'olkusz.pl',
							'olsztyn.pl',
							'opoczno.pl',
							'opole.pl',
							'ostroda.pl',
							'ostroleka.pl',
							'ostrowiec.pl',
							'ostrowwlkp.pl',
							'pila.pl',
							'pisz.pl',
							'podhale.pl',
							'podlasie.pl',
							'polkowice.pl',
							'pomorze.pl',
							'pomorskie.pl',
							'prochowice.pl',
							'pruszkow.pl',
							'przeworsk.pl',
							'pulawy.pl',
							'radom.pl',
							'rawa-maz.pl',
							'rybnik.pl',
							'rzeszow.pl',
							'sanok.pl',
							'sejny.pl',
							'slask.pl',
							'slupsk.pl',
							'sosnowiec.pl',
							'stalowa-wola.pl',
							'skoczow.pl',
							'starachowice.pl',
							'stargard.pl',
							'suwalki.pl',
							'swidnica.pl',
							'swiebodzin.pl',
							'swinoujscie.pl',
							'szczecin.pl',
							'szczytno.pl',
							'tarnobrzeg.pl',
							'tgory.pl',
							'turek.pl',
							'tychy.pl',
							'ustka.pl',
							'walbrzych.pl',
							'warmia.pl',
							'warszawa.pl',
							'waw.pl',
							'wegrow.pl',
							'wielun.pl',
							'wlocl.pl',
							'wloclawek.pl',
							'wodzislaw.pl',
							'wolomin.pl',
							'wroclaw.pl',
							'zachpomor.pl',
							'zagan.pl',
							'zarow.pl',
							'zgora.pl',
							'zgorzelec.pl',
							'pm',
							'pn',
							'gov.pn',
							'co.pn',
							'org.pn',
							'edu.pn',
							'net.pn',
							'post',
							'pr',
							'com.pr',
							'net.pr',
							'org.pr',
							'gov.pr',
							'edu.pr',
							'isla.pr',
							'pro.pr',
							'biz.pr',
							'info.pr',
							'name.pr',
							'est.pr',
							'prof.pr',
							'ac.pr',
							'pro',
							'aaa.pro',
							'aca.pro',
							'acct.pro',
							'avocat.pro',
							'bar.pro',
							'cpa.pro',
							'eng.pro',
							'jur.pro',
							'law.pro',
							'med.pro',
							'recht.pro',
							'ps',
							'edu.ps',
							'gov.ps',
							'sec.ps',
							'plo.ps',
							'com.ps',
							'org.ps',
							'net.ps',
							'pt',
							'net.pt',
							'gov.pt',
							'org.pt',
							'edu.pt',
							'int.pt',
							'publ.pt',
							'com.pt',
							'nome.pt',
							'pw',
							'co.pw',
							'ne.pw',
							'or.pw',
							'ed.pw',
							'go.pw',
							'belau.pw',
							'py',
							'com.py',
							'coop.py',
							'edu.py',
							'gov.py',
							'mil.py',
							'net.py',
							'org.py',
							'qa',
							'com.qa',
							'edu.qa',
							'gov.qa',
							'mil.qa',
							'name.qa',
							'net.qa',
							'org.qa',
							'sch.qa',
							're',
							'asso.re',
							'com.re',
							'nom.re',
							'ro',
							'arts.ro',
							'com.ro',
							'firm.ro',
							'info.ro',
							'nom.ro',
							'nt.ro',
							'org.ro',
							'rec.ro',
							'store.ro',
							'tm.ro',
							'www.ro',
							'rs',
							'ac.rs',
							'co.rs',
							'edu.rs',
							'gov.rs',
							'in.rs',
							'org.rs',
							'ru',
							'rw',
							'ac.rw',
							'co.rw',
							'coop.rw',
							'gov.rw',
							'mil.rw',
							'net.rw',
							'org.rw',
							'sa',
							'com.sa',
							'net.sa',
							'org.sa',
							'gov.sa',
							'med.sa',
							'pub.sa',
							'edu.sa',
							'sch.sa',
							'sb',
							'com.sb',
							'edu.sb',
							'gov.sb',
							'net.sb',
							'org.sb',
							'sc',
							'com.sc',
							'gov.sc',
							'net.sc',
							'org.sc',
							'edu.sc',
							'sd',
							'com.sd',
							'net.sd',
							'org.sd',
							'edu.sd',
							'med.sd',
							'tv.sd',
							'gov.sd',
							'info.sd',
							'se',
							'a.se',
							'ac.se',
							'b.se',
							'bd.se',
							'brand.se',
							'c.se',
							'd.se',
							'e.se',
							'f.se',
							'fh.se',
							'fhsk.se',
							'fhv.se',
							'g.se',
							'h.se',
							'i.se',
							'k.se',
							'komforb.se',
							'kommunalforbund.se',
							'komvux.se',
							'l.se',
							'lanbib.se',
							'm.se',
							'n.se',
							'naturbruksgymn.se',
							'o.se',
							'org.se',
							'p.se',
							'parti.se',
							'pp.se',
							'press.se',
							'r.se',
							's.se',
							't.se',
							'tm.se',
							'u.se',
							'w.se',
							'x.se',
							'y.se',
							'z.se',
							'sg',
							'com.sg',
							'net.sg',
							'org.sg',
							'gov.sg',
							'edu.sg',
							'per.sg',
							'sh',
							'com.sh',
							'net.sh',
							'gov.sh',
							'org.sh',
							'mil.sh',
							'si',
							'sj',
							'sk',
							'sl',
							'com.sl',
							'net.sl',
							'edu.sl',
							'gov.sl',
							'org.sl',
							'sm',
							'sn',
							'art.sn',
							'com.sn',
							'edu.sn',
							'gouv.sn',
							'org.sn',
							'perso.sn',
							'univ.sn',
							'so',
							'com.so',
							'edu.so',
							'gov.so',
							'me.so',
							'net.so',
							'org.so',
							'sr',
							'ss',
							'biz.ss',
							'com.ss',
							'edu.ss',
							'gov.ss',
							'me.ss',
							'net.ss',
							'org.ss',
							'sch.ss',
							'st',
							'co.st',
							'com.st',
							'consulado.st',
							'edu.st',
							'embaixada.st',
							'mil.st',
							'net.st',
							'org.st',
							'principe.st',
							'saotome.st',
							'store.st',
							'su',
							'sv',
							'com.sv',
							'edu.sv',
							'gob.sv',
							'org.sv',
							'red.sv',
							'sx',
							'gov.sx',
							'sy',
							'edu.sy',
							'gov.sy',
							'net.sy',
							'mil.sy',
							'com.sy',
							'org.sy',
							'sz',
							'co.sz',
							'ac.sz',
							'org.sz',
							'tc',
							'td',
							'tel',
							'tf',
							'tg',
							'th',
							'ac.th',
							'co.th',
							'go.th',
							'in.th',
							'mi.th',
							'net.th',
							'or.th',
							'tj',
							'ac.tj',
							'biz.tj',
							'co.tj',
							'com.tj',
							'edu.tj',
							'go.tj',
							'gov.tj',
							'int.tj',
							'mil.tj',
							'name.tj',
							'net.tj',
							'nic.tj',
							'org.tj',
							'test.tj',
							'web.tj',
							'tk',
							'tl',
							'gov.tl',
							'tm',
							'com.tm',
							'co.tm',
							'org.tm',
							'net.tm',
							'nom.tm',
							'gov.tm',
							'mil.tm',
							'edu.tm',
							'tn',
							'com.tn',
							'ens.tn',
							'fin.tn',
							'gov.tn',
							'ind.tn',
							'info.tn',
							'intl.tn',
							'mincom.tn',
							'nat.tn',
							'net.tn',
							'org.tn',
							'perso.tn',
							'tourism.tn',
							'to',
							'com.to',
							'gov.to',
							'net.to',
							'org.to',
							'edu.to',
							'mil.to',
							'tr',
							'av.tr',
							'bbs.tr',
							'bel.tr',
							'biz.tr',
							'com.tr',
							'dr.tr',
							'edu.tr',
							'gen.tr',
							'gov.tr',
							'info.tr',
							'mil.tr',
							'k12.tr',
							'kep.tr',
							'name.tr',
							'net.tr',
							'org.tr',
							'pol.tr',
							'tel.tr',
							'tsk.tr',
							'tv.tr',
							'web.tr',
							'nc.tr',
							'gov.nc.tr',
							'tt',
							'co.tt',
							'com.tt',
							'org.tt',
							'net.tt',
							'biz.tt',
							'info.tt',
							'pro.tt',
							'int.tt',
							'coop.tt',
							'jobs.tt',
							'mobi.tt',
							'travel.tt',
							'museum.tt',
							'aero.tt',
							'name.tt',
							'gov.tt',
							'edu.tt',
							'tv',
							'tw',
							'edu.tw',
							'gov.tw',
							'mil.tw',
							'com.tw',
							'net.tw',
							'org.tw',
							'idv.tw',
							'game.tw',
							'ebiz.tw',
							'club.tw',
							'網路.tw',
							'組織.tw',
							'商業.tw',
							'tz',
							'ac.tz',
							'co.tz',
							'go.tz',
							'hotel.tz',
							'info.tz',
							'me.tz',
							'mil.tz',
							'mobi.tz',
							'ne.tz',
							'or.tz',
							'sc.tz',
							'tv.tz',
							'ua',
							'com.ua',
							'edu.ua',
							'gov.ua',
							'in.ua',
							'net.ua',
							'org.ua',
							'cherkassy.ua',
							'cherkasy.ua',
							'chernigov.ua',
							'chernihiv.ua',
							'chernivtsi.ua',
							'chernovtsy.ua',
							'ck.ua',
							'cn.ua',
							'cr.ua',
							'crimea.ua',
							'cv.ua',
							'dn.ua',
							'dnepropetrovsk.ua',
							'dnipropetrovsk.ua',
							'donetsk.ua',
							'dp.ua',
							'if.ua',
							'ivano-frankivsk.ua',
							'kh.ua',
							'kharkiv.ua',
							'kharkov.ua',
							'kherson.ua',
							'khmelnitskiy.ua',
							'khmelnytskyi.ua',
							'kiev.ua',
							'kirovograd.ua',
							'km.ua',
							'kr.ua',
							'krym.ua',
							'ks.ua',
							'kv.ua',
							'kyiv.ua',
							'lg.ua',
							'lt.ua',
							'lugansk.ua',
							'lutsk.ua',
							'lv.ua',
							'lviv.ua',
							'mk.ua',
							'mykolaiv.ua',
							'nikolaev.ua',
							'od.ua',
							'odesa.ua',
							'odessa.ua',
							'pl.ua',
							'poltava.ua',
							'rivne.ua',
							'rovno.ua',
							'rv.ua',
							'sb.ua',
							'sebastopol.ua',
							'sevastopol.ua',
							'sm.ua',
							'sumy.ua',
							'te.ua',
							'ternopil.ua',
							'uz.ua',
							'uzhgorod.ua',
							'vinnica.ua',
							'vinnytsia.ua',
							'vn.ua',
							'volyn.ua',
							'yalta.ua',
							'zaporizhzhe.ua',
							'zaporizhzhia.ua',
							'zhitomir.ua',
							'zhytomyr.ua',
							'zp.ua',
							'zt.ua',
							'ug',
							'co.ug',
							'or.ug',
							'ac.ug',
							'sc.ug',
							'go.ug',
							'ne.ug',
							'com.ug',
							'org.ug',
							'uk',
							'ac.uk',
							'co.uk',
							'gov.uk',
							'ltd.uk',
							'me.uk',
							'net.uk',
							'nhs.uk',
							'org.uk',
							'plc.uk',
							'police.uk',
							'*.sch.uk',
							'us',
							'dni.us',
							'fed.us',
							'isa.us',
							'kids.us',
							'nsn.us',
							'ak.us',
							'al.us',
							'ar.us',
							'as.us',
							'az.us',
							'ca.us',
							'co.us',
							'ct.us',
							'dc.us',
							'de.us',
							'fl.us',
							'ga.us',
							'gu.us',
							'hi.us',
							'ia.us',
							'id.us',
							'il.us',
							'in.us',
							'ks.us',
							'ky.us',
							'la.us',
							'ma.us',
							'md.us',
							'me.us',
							'mi.us',
							'mn.us',
							'mo.us',
							'ms.us',
							'mt.us',
							'nc.us',
							'nd.us',
							'ne.us',
							'nh.us',
							'nj.us',
							'nm.us',
							'nv.us',
							'ny.us',
							'oh.us',
							'ok.us',
							'or.us',
							'pa.us',
							'pr.us',
							'ri.us',
							'sc.us',
							'sd.us',
							'tn.us',
							'tx.us',
							'ut.us',
							'vi.us',
							'vt.us',
							'va.us',
							'wa.us',
							'wi.us',
							'wv.us',
							'wy.us',
							'k12.ak.us',
							'k12.al.us',
							'k12.ar.us',
							'k12.as.us',
							'k12.az.us',
							'k12.ca.us',
							'k12.co.us',
							'k12.ct.us',
							'k12.dc.us',
							'k12.de.us',
							'k12.fl.us',
							'k12.ga.us',
							'k12.gu.us',
							'k12.ia.us',
							'k12.id.us',
							'k12.il.us',
							'k12.in.us',
							'k12.ks.us',
							'k12.ky.us',
							'k12.la.us',
							'k12.ma.us',
							'k12.md.us',
							'k12.me.us',
							'k12.mi.us',
							'k12.mn.us',
							'k12.mo.us',
							'k12.ms.us',
							'k12.mt.us',
							'k12.nc.us',
							'k12.ne.us',
							'k12.nh.us',
							'k12.nj.us',
							'k12.nm.us',
							'k12.nv.us',
							'k12.ny.us',
							'k12.oh.us',
							'k12.ok.us',
							'k12.or.us',
							'k12.pa.us',
							'k12.pr.us',
							'k12.sc.us',
							'k12.tn.us',
							'k12.tx.us',
							'k12.ut.us',
							'k12.vi.us',
							'k12.vt.us',
							'k12.va.us',
							'k12.wa.us',
							'k12.wi.us',
							'k12.wy.us',
							'cc.ak.us',
							'cc.al.us',
							'cc.ar.us',
							'cc.as.us',
							'cc.az.us',
							'cc.ca.us',
							'cc.co.us',
							'cc.ct.us',
							'cc.dc.us',
							'cc.de.us',
							'cc.fl.us',
							'cc.ga.us',
							'cc.gu.us',
							'cc.hi.us',
							'cc.ia.us',
							'cc.id.us',
							'cc.il.us',
							'cc.in.us',
							'cc.ks.us',
							'cc.ky.us',
							'cc.la.us',
							'cc.ma.us',
							'cc.md.us',
							'cc.me.us',
							'cc.mi.us',
							'cc.mn.us',
							'cc.mo.us',
							'cc.ms.us',
							'cc.mt.us',
							'cc.nc.us',
							'cc.nd.us',
							'cc.ne.us',
							'cc.nh.us',
							'cc.nj.us',
							'cc.nm.us',
							'cc.nv.us',
							'cc.ny.us',
							'cc.oh.us',
							'cc.ok.us',
							'cc.or.us',
							'cc.pa.us',
							'cc.pr.us',
							'cc.ri.us',
							'cc.sc.us',
							'cc.sd.us',
							'cc.tn.us',
							'cc.tx.us',
							'cc.ut.us',
							'cc.vi.us',
							'cc.vt.us',
							'cc.va.us',
							'cc.wa.us',
							'cc.wi.us',
							'cc.wv.us',
							'cc.wy.us',
							'lib.ak.us',
							'lib.al.us',
							'lib.ar.us',
							'lib.as.us',
							'lib.az.us',
							'lib.ca.us',
							'lib.co.us',
							'lib.ct.us',
							'lib.dc.us',
							'lib.fl.us',
							'lib.ga.us',
							'lib.gu.us',
							'lib.hi.us',
							'lib.ia.us',
							'lib.id.us',
							'lib.il.us',
							'lib.in.us',
							'lib.ks.us',
							'lib.ky.us',
							'lib.la.us',
							'lib.ma.us',
							'lib.md.us',
							'lib.me.us',
							'lib.mi.us',
							'lib.mn.us',
							'lib.mo.us',
							'lib.ms.us',
							'lib.mt.us',
							'lib.nc.us',
							'lib.nd.us',
							'lib.ne.us',
							'lib.nh.us',
							'lib.nj.us',
							'lib.nm.us',
							'lib.nv.us',
							'lib.ny.us',
							'lib.oh.us',
							'lib.ok.us',
							'lib.or.us',
							'lib.pa.us',
							'lib.pr.us',
							'lib.ri.us',
							'lib.sc.us',
							'lib.sd.us',
							'lib.tn.us',
							'lib.tx.us',
							'lib.ut.us',
							'lib.vi.us',
							'lib.vt.us',
							'lib.va.us',
							'lib.wa.us',
							'lib.wi.us',
							'lib.wy.us',
							'pvt.k12.ma.us',
							'chtr.k12.ma.us',
							'paroch.k12.ma.us',
							'ann-arbor.mi.us',
							'cog.mi.us',
							'dst.mi.us',
							'eaton.mi.us',
							'gen.mi.us',
							'mus.mi.us',
							'tec.mi.us',
							'washtenaw.mi.us',
							'uy',
							'com.uy',
							'edu.uy',
							'gub.uy',
							'mil.uy',
							'net.uy',
							'org.uy',
							'uz',
							'co.uz',
							'com.uz',
							'net.uz',
							'org.uz',
							'va',
							'vc',
							'com.vc',
							'net.vc',
							'org.vc',
							'gov.vc',
							'mil.vc',
							'edu.vc',
							've',
							'arts.ve',
							'bib.ve',
							'co.ve',
							'com.ve',
							'e12.ve',
							'edu.ve',
							'firm.ve',
							'gob.ve',
							'gov.ve',
							'info.ve',
							'int.ve',
							'mil.ve',
							'net.ve',
							'nom.ve',
							'org.ve',
							'rar.ve',
							'rec.ve',
							'store.ve',
							'tec.ve',
							'web.ve',
							'vg',
							'vi',
							'co.vi',
							'com.vi',
							'k12.vi',
							'net.vi',
							'org.vi',
							'vn',
							'com.vn',
							'net.vn',
							'org.vn',
							'edu.vn',
							'gov.vn',
							'int.vn',
							'ac.vn',
							'biz.vn',
							'info.vn',
							'name.vn',
							'pro.vn',
							'health.vn',
							'vu',
							'com.vu',
							'edu.vu',
							'net.vu',
							'org.vu',
							'wf',
							'ws',
							'com.ws',
							'net.ws',
							'org.ws',
							'gov.ws',
							'edu.ws',
							'yt',
							'امارات',
							'հայ',
							'বাংলা',
							'бг',
							'البحرين',
							'бел',
							'中国',
							'中國',
							'الجزائر',
							'مصر',
							'ею',
							'ευ',
							'موريتانيا',
							'გე',
							'ελ',
							'香港',
							'公司.香港',
							'教育.香港',
							'政府.香港',
							'個人.香港',
							'網絡.香港',
							'組織.香港',
							'ಭಾರತ',
							'ଭାରତ',
							'ভাৰত',
							'भारतम्',
							'भारोत',
							'ڀارت',
							'ഭാരതം',
							'भारत',
							'بارت',
							'بھارت',
							'భారత్',
							'ભારત',
							'ਭਾਰਤ',
							'ভারত',
							'இந்தியா',
							'ایران',
							'ايران',
							'عراق',
							'الاردن',
							'한국',
							'қаз',
							'ລາວ',
							'ලංකා',
							'இலங்கை',
							'المغرب',
							'мкд',
							'мон',
							'澳門',
							'澳门',
							'مليسيا',
							'عمان',
							'پاکستان',
							'پاكستان',
							'فلسطين',
							'срб',
							'пр.срб',
							'орг.срб',
							'обр.срб',
							'од.срб',
							'упр.срб',
							'ак.срб',
							'рф',
							'قطر',
							'السعودية',
							'السعودیة',
							'السعودیۃ',
							'السعوديه',
							'سودان',
							'新加坡',
							'சிங்கப்பூர்',
							'سورية',
							'سوريا',
							'ไทย',
							'ศึกษา.ไทย',
							'ธุรกิจ.ไทย',
							'รัฐบาล.ไทย',
							'ทหาร.ไทย',
							'เน็ต.ไทย',
							'องค์กร.ไทย',
							'تونس',
							'台灣',
							'台湾',
							'臺灣',
							'укр',
							'اليمن',
							'xxx',
							'ye',
							'com.ye',
							'edu.ye',
							'gov.ye',
							'net.ye',
							'mil.ye',
							'org.ye',
							'ac.za',
							'agric.za',
							'alt.za',
							'co.za',
							'edu.za',
							'gov.za',
							'grondar.za',
							'law.za',
							'mil.za',
							'net.za',
							'ngo.za',
							'nic.za',
							'nis.za',
							'nom.za',
							'org.za',
							'school.za',
							'tm.za',
							'web.za',
							'zm',
							'ac.zm',
							'biz.zm',
							'co.zm',
							'com.zm',
							'edu.zm',
							'gov.zm',
							'info.zm',
							'mil.zm',
							'net.zm',
							'org.zm',
							'sch.zm',
							'zw',
							'ac.zw',
							'co.zw',
							'gov.zw',
							'mil.zw',
							'org.zw',
							'aaa',
							'aarp',
							'abarth',
							'abb',
							'abbott',
							'abbvie',
							'abc',
							'able',
							'abogado',
							'abudhabi',
							'academy',
							'accenture',
							'accountant',
							'accountants',
							'aco',
							'actor',
							'adac',
							'ads',
							'adult',
							'aeg',
							'aetna',
							'afl',
							'africa',
							'agakhan',
							'agency',
							'aig',
							'airbus',
							'airforce',
							'airtel',
							'akdn',
							'alfaromeo',
							'alibaba',
							'alipay',
							'allfinanz',
							'allstate',
							'ally',
							'alsace',
							'alstom',
							'amazon',
							'americanexpress',
							'americanfamily',
							'amex',
							'amfam',
							'amica',
							'amsterdam',
							'analytics',
							'android',
							'anquan',
							'anz',
							'aol',
							'apartments',
							'app',
							'apple',
							'aquarelle',
							'arab',
							'aramco',
							'archi',
							'army',
							'art',
							'arte',
							'asda',
							'associates',
							'athleta',
							'attorney',
							'auction',
							'audi',
							'audible',
							'audio',
							'auspost',
							'author',
							'auto',
							'autos',
							'avianca',
							'aws',
							'axa',
							'azure',
							'baby',
							'baidu',
							'banamex',
							'bananarepublic',
							'band',
							'bank',
							'bar',
							'barcelona',
							'barclaycard',
							'barclays',
							'barefoot',
							'bargains',
							'baseball',
							'basketball',
							'bauhaus',
							'bayern',
							'bbc',
							'bbt',
							'bbva',
							'bcg',
							'bcn',
							'beats',
							'beauty',
							'beer',
							'bentley',
							'berlin',
							'best',
							'bestbuy',
							'bet',
							'bharti',
							'bible',
							'bid',
							'bike',
							'bing',
							'bingo',
							'bio',
							'black',
							'blackfriday',
							'blockbuster',
							'blog',
							'bloomberg',
							'blue',
							'bms',
							'bmw',
							'bnpparibas',
							'boats',
							'boehringer',
							'bofa',
							'bom',
							'bond',
							'boo',
							'book',
							'booking',
							'bosch',
							'bostik',
							'boston',
							'bot',
							'boutique',
							'box',
							'bradesco',
							'bridgestone',
							'broadway',
							'broker',
							'brother',
							'brussels',
							'bugatti',
							'build',
							'builders',
							'business',
							'buy',
							'buzz',
							'bzh',
							'cab',
							'cafe',
							'cal',
							'call',
							'calvinklein',
							'cam',
							'camera',
							'camp',
							'cancerresearch',
							'canon',
							'capetown',
							'capital',
							'capitalone',
							'car',
							'caravan',
							'cards',
							'care',
							'career',
							'careers',
							'cars',
							'casa',
							'case',
							'cash',
							'casino',
							'catering',
							'catholic',
							'cba',
							'cbn',
							'cbre',
							'cbs',
							'center',
							'ceo',
							'cern',
							'cfa',
							'cfd',
							'chanel',
							'channel',
							'charity',
							'chase',
							'chat',
							'cheap',
							'chintai',
							'christmas',
							'chrome',
							'church',
							'cipriani',
							'circle',
							'cisco',
							'citadel',
							'citi',
							'citic',
							'city',
							'cityeats',
							'claims',
							'cleaning',
							'click',
							'clinic',
							'clinique',
							'clothing',
							'cloud',
							'club',
							'clubmed',
							'coach',
							'codes',
							'coffee',
							'college',
							'cologne',
							'comcast',
							'commbank',
							'community',
							'company',
							'compare',
							'computer',
							'comsec',
							'condos',
							'construction',
							'consulting',
							'contact',
							'contractors',
							'cooking',
							'cookingchannel',
							'cool',
							'corsica',
							'country',
							'coupon',
							'coupons',
							'courses',
							'cpa',
							'credit',
							'creditcard',
							'creditunion',
							'cricket',
							'crown',
							'crs',
							'cruise',
							'cruises',
							'cuisinella',
							'cymru',
							'cyou',
							'dabur',
							'dad',
							'dance',
							'data',
							'date',
							'dating',
							'datsun',
							'day',
							'dclk',
							'dds',
							'deal',
							'dealer',
							'deals',
							'degree',
							'delivery',
							'dell',
							'deloitte',
							'delta',
							'democrat',
							'dental',
							'dentist',
							'desi',
							'design',
							'dev',
							'dhl',
							'diamonds',
							'diet',
							'digital',
							'direct',
							'directory',
							'discount',
							'discover',
							'dish',
							'diy',
							'dnp',
							'docs',
							'doctor',
							'dog',
							'domains',
							'dot',
							'download',
							'drive',
							'dtv',
							'dubai',
							'dunlop',
							'dupont',
							'durban',
							'dvag',
							'dvr',
							'earth',
							'eat',
							'eco',
							'edeka',
							'education',
							'email',
							'emerck',
							'energy',
							'engineer',
							'engineering',
							'enterprises',
							'epson',
							'equipment',
							'ericsson',
							'erni',
							'esq',
							'estate',
							'etisalat',
							'eurovision',
							'eus',
							'events',
							'exchange',
							'expert',
							'exposed',
							'express',
							'extraspace',
							'fage',
							'fail',
							'fairwinds',
							'faith',
							'family',
							'fan',
							'fans',
							'farm',
							'farmers',
							'fashion',
							'fast',
							'fedex',
							'feedback',
							'ferrari',
							'ferrero',
							'fiat',
							'fidelity',
							'fido',
							'film',
							'final',
							'finance',
							'financial',
							'fire',
							'firestone',
							'firmdale',
							'fish',
							'fishing',
							'fit',
							'fitness',
							'flickr',
							'flights',
							'flir',
							'florist',
							'flowers',
							'fly',
							'foo',
							'food',
							'foodnetwork',
							'football',
							'ford',
							'forex',
							'forsale',
							'forum',
							'foundation',
							'fox',
							'free',
							'fresenius',
							'frl',
							'frogans',
							'frontdoor',
							'frontier',
							'ftr',
							'fujitsu',
							'fun',
							'fund',
							'furniture',
							'futbol',
							'fyi',
							'gal',
							'gallery',
							'gallo',
							'gallup',
							'game',
							'games',
							'gap',
							'garden',
							'gay',
							'gbiz',
							'gdn',
							'gea',
							'gent',
							'genting',
							'george',
							'ggee',
							'gift',
							'gifts',
							'gives',
							'giving',
							'glass',
							'gle',
							'global',
							'globo',
							'gmail',
							'gmbh',
							'gmo',
							'gmx',
							'godaddy',
							'gold',
							'goldpoint',
							'golf',
							'goo',
							'goodyear',
							'goog',
							'google',
							'gop',
							'got',
							'grainger',
							'graphics',
							'gratis',
							'green',
							'gripe',
							'grocery',
							'group',
							'guardian',
							'gucci',
							'guge',
							'guide',
							'guitars',
							'guru',
							'hair',
							'hamburg',
							'hangout',
							'haus',
							'hbo',
							'hdfc',
							'hdfcbank',
							'health',
							'healthcare',
							'help',
							'helsinki',
							'here',
							'hermes',
							'hgtv',
							'hiphop',
							'hisamitsu',
							'hitachi',
							'hiv',
							'hkt',
							'hockey',
							'holdings',
							'holiday',
							'homedepot',
							'homegoods',
							'homes',
							'homesense',
							'honda',
							'horse',
							'hospital',
							'host',
							'hosting',
							'hot',
							'hoteles',
							'hotels',
							'hotmail',
							'house',
							'how',
							'hsbc',
							'hughes',
							'hyatt',
							'hyundai',
							'ibm',
							'icbc',
							'ice',
							'icu',
							'ieee',
							'ifm',
							'ikano',
							'imamat',
							'imdb',
							'immo',
							'immobilien',
							'inc',
							'industries',
							'infiniti',
							'ing',
							'ink',
							'institute',
							'insurance',
							'insure',
							'international',
							'intuit',
							'investments',
							'ipiranga',
							'irish',
							'ismaili',
							'ist',
							'istanbul',
							'itau',
							'itv',
							'jaguar',
							'java',
							'jcb',
							'jeep',
							'jetzt',
							'jewelry',
							'jio',
							'jll',
							'jmp',
							'jnj',
							'joburg',
							'jot',
							'joy',
							'jpmorgan',
							'jprs',
							'juegos',
							'juniper',
							'kaufen',
							'kddi',
							'kerryhotels',
							'kerrylogistics',
							'kerryproperties',
							'kfh',
							'kia',
							'kids',
							'kim',
							'kinder',
							'kindle',
							'kitchen',
							'kiwi',
							'koeln',
							'komatsu',
							'kosher',
							'kpmg',
							'kpn',
							'krd',
							'kred',
							'kuokgroup',
							'kyoto',
							'lacaixa',
							'lamborghini',
							'lamer',
							'lancaster',
							'lancia',
							'land',
							'landrover',
							'lanxess',
							'lasalle',
							'lat',
							'latino',
							'latrobe',
							'law',
							'lawyer',
							'lds',
							'lease',
							'leclerc',
							'lefrak',
							'legal',
							'lego',
							'lexus',
							'lgbt',
							'lidl',
							'life',
							'lifeinsurance',
							'lifestyle',
							'lighting',
							'like',
							'lilly',
							'limited',
							'limo',
							'lincoln',
							'linde',
							'link',
							'lipsy',
							'live',
							'living',
							'llc',
							'llp',
							'loan',
							'loans',
							'locker',
							'locus',
							'loft',
							'lol',
							'london',
							'lotte',
							'lotto',
							'love',
							'lpl',
							'lplfinancial',
							'ltd',
							'ltda',
							'lundbeck',
							'luxe',
							'luxury',
							'macys',
							'madrid',
							'maif',
							'maison',
							'makeup',
							'man',
							'management',
							'mango',
							'map',
							'market',
							'marketing',
							'markets',
							'marriott',
							'marshalls',
							'maserati',
							'mattel',
							'mba',
							'mckinsey',
							'med',
							'media',
							'meet',
							'melbourne',
							'meme',
							'memorial',
							'men',
							'menu',
							'merckmsd',
							'miami',
							'microsoft',
							'mini',
							'mint',
							'mit',
							'mitsubishi',
							'mlb',
							'mls',
							'mma',
							'mobile',
							'moda',
							'moe',
							'moi',
							'mom',
							'monash',
							'money',
							'monster',
							'mormon',
							'mortgage',
							'moscow',
							'moto',
							'motorcycles',
							'mov',
							'movie',
							'msd',
							'mtn',
							'mtr',
							'music',
							'mutual',
							'nab',
							'nagoya',
							'natura',
							'navy',
							'nba',
							'nec',
							'netbank',
							'netflix',
							'network',
							'neustar',
							'new',
							'news',
							'next',
							'nextdirect',
							'nexus',
							'nfl',
							'ngo',
							'nhk',
							'nico',
							'nike',
							'nikon',
							'ninja',
							'nissan',
							'nissay',
							'nokia',
							'northwesternmutual',
							'norton',
							'now',
							'nowruz',
							'nowtv',
							'nra',
							'nrw',
							'ntt',
							'nyc',
							'obi',
							'observer',
							'office',
							'okinawa',
							'olayan',
							'olayangroup',
							'oldnavy',
							'ollo',
							'omega',
							'one',
							'ong',
							'onl',
							'online',
							'ooo',
							'open',
							'oracle',
							'orange',
							'organic',
							'origins',
							'osaka',
							'otsuka',
							'ott',
							'ovh',
							'page',
							'panasonic',
							'paris',
							'pars',
							'partners',
							'parts',
							'party',
							'passagens',
							'pay',
							'pccw',
							'pet',
							'pfizer',
							'pharmacy',
							'phd',
							'philips',
							'phone',
							'photo',
							'photography',
							'photos',
							'physio',
							'pics',
							'pictet',
							'pictures',
							'pid',
							'pin',
							'ping',
							'pink',
							'pioneer',
							'pizza',
							'place',
							'play',
							'playstation',
							'plumbing',
							'plus',
							'pnc',
							'pohl',
							'poker',
							'politie',
							'porn',
							'pramerica',
							'praxi',
							'press',
							'prime',
							'prod',
							'productions',
							'prof',
							'progressive',
							'promo',
							'properties',
							'property',
							'protection',
							'pru',
							'prudential',
							'pub',
							'pwc',
							'qpon',
							'quebec',
							'quest',
							'racing',
							'radio',
							'read',
							'realestate',
							'realtor',
							'realty',
							'recipes',
							'red',
							'redstone',
							'redumbrella',
							'rehab',
							'reise',
							'reisen',
							'reit',
							'reliance',
							'ren',
							'rent',
							'rentals',
							'repair',
							'report',
							'republican',
							'rest',
							'restaurant',
							'review',
							'reviews',
							'rexroth',
							'rich',
							'richardli',
							'ricoh',
							'ril',
							'rio',
							'rip',
							'rocher',
							'rocks',
							'rodeo',
							'rogers',
							'room',
							'rsvp',
							'rugby',
							'ruhr',
							'run',
							'rwe',
							'ryukyu',
							'saarland',
							'safe',
							'safety',
							'sakura',
							'sale',
							'salon',
							'samsclub',
							'samsung',
							'sandvik',
							'sandvikcoromant',
							'sanofi',
							'sap',
							'sarl',
							'sas',
							'save',
							'saxo',
							'sbi',
							'sbs',
							'sca',
							'scb',
							'schaeffler',
							'schmidt',
							'scholarships',
							'school',
							'schule',
							'schwarz',
							'science',
							'scot',
							'search',
							'seat',
							'secure',
							'security',
							'seek',
							'select',
							'sener',
							'services',
							'ses',
							'seven',
							'sew',
							'sex',
							'sexy',
							'sfr',
							'shangrila',
							'sharp',
							'shaw',
							'shell',
							'shia',
							'shiksha',
							'shoes',
							'shop',
							'shopping',
							'shouji',
							'show',
							'showtime',
							'silk',
							'sina',
							'singles',
							'site',
							'ski',
							'skin',
							'sky',
							'skype',
							'sling',
							'smart',
							'smile',
							'sncf',
							'soccer',
							'social',
							'softbank',
							'software',
							'sohu',
							'solar',
							'solutions',
							'song',
							'sony',
							'soy',
							'spa',
							'space',
							'sport',
							'spot',
							'srl',
							'stada',
							'staples',
							'star',
							'statebank',
							'statefarm',
							'stc',
							'stcgroup',
							'stockholm',
							'storage',
							'store',
							'stream',
							'studio',
							'study',
							'style',
							'sucks',
							'supplies',
							'supply',
							'support',
							'surf',
							'surgery',
							'suzuki',
							'swatch',
							'swiss',
							'sydney',
							'systems',
							'tab',
							'taipei',
							'talk',
							'taobao',
							'target',
							'tatamotors',
							'tatar',
							'tattoo',
							'tax',
							'taxi',
							'tci',
							'tdk',
							'team',
							'tech',
							'technology',
							'temasek',
							'tennis',
							'teva',
							'thd',
							'theater',
							'theatre',
							'tiaa',
							'tickets',
							'tienda',
							'tiffany',
							'tips',
							'tires',
							'tirol',
							'tjmaxx',
							'tjx',
							'tkmaxx',
							'tmall',
							'today',
							'tokyo',
							'tools',
							'top',
							'toray',
							'toshiba',
							'total',
							'tours',
							'town',
							'toyota',
							'toys',
							'trade',
							'trading',
							'training',
							'travel',
							'travelchannel',
							'travelers',
							'travelersinsurance',
							'trust',
							'trv',
							'tube',
							'tui',
							'tunes',
							'tushu',
							'tvs',
							'ubank',
							'ubs',
							'unicom',
							'university',
							'uno',
							'uol',
							'ups',
							'vacations',
							'vana',
							'vanguard',
							'vegas',
							'ventures',
							'verisign',
							'versicherung',
							'vet',
							'viajes',
							'video',
							'vig',
							'viking',
							'villas',
							'vin',
							'vip',
							'virgin',
							'visa',
							'vision',
							'viva',
							'vivo',
							'vlaanderen',
							'vodka',
							'volkswagen',
							'volvo',
							'vote',
							'voting',
							'voto',
							'voyage',
							'vuelos',
							'wales',
							'walmart',
							'walter',
							'wang',
							'wanggou',
							'watch',
							'watches',
							'weather',
							'weatherchannel',
							'webcam',
							'weber',
							'website',
							'wedding',
							'weibo',
							'weir',
							'whoswho',
							'wien',
							'wiki',
							'williamhill',
							'win',
							'windows',
							'wine',
							'winners',
							'wme',
							'wolterskluwer',
							'woodside',
							'work',
							'works',
							'world',
							'wow',
							'wtc',
							'wtf',
							'xbox',
							'xerox',
							'xfinity',
							'xihuan',
							'xin',
							'कॉम',
							'セール',
							'佛山',
							'慈善',
							'集团',
							'在线',
							'点看',
							'คอม',
							'八卦',
							'موقع',
							'公益',
							'公司',
							'香格里拉',
							'网站',
							'移动',
							'我爱你',
							'москва',
							'католик',
							'онлайн',
							'сайт',
							'联通',
							'קום',
							'时尚',
							'微博',
							'淡马锡',
							'ファッション',
							'орг',
							'नेट',
							'ストア',
							'アマゾン',
							'삼성',
							'商标',
							'商店',
							'商城',
							'дети',
							'ポイント',
							'新闻',
							'家電',
							'كوم',
							'中文网',
							'中信',
							'娱乐',
							'谷歌',
							'電訊盈科',
							'购物',
							'クラウド',
							'通販',
							'网店',
							'संगठन',
							'餐厅',
							'网络',
							'ком',
							'亚马逊',
							'诺基亚',
							'食品',
							'飞利浦',
							'手机',
							'ارامكو',
							'العليان',
							'اتصالات',
							'بازار',
							'ابوظبي',
							'كاثوليك',
							'همراه',
							'닷컴',
							'政府',
							'شبكة',
							'بيتك',
							'عرب',
							'机构',
							'组织机构',
							'健康',
							'招聘',
							'рус',
							'大拿',
							'みんな',
							'グーグル',
							'世界',
							'書籍',
							'网址',
							'닷넷',
							'コム',
							'天主教',
							'游戏',
							'vermögensberater',
							'vermögensberatung',
							'企业',
							'信息',
							'嘉里大酒店',
							'嘉里',
							'广东',
							'政务',
							'xyz',
							'yachts',
							'yahoo',
							'yamaxun',
							'yandex',
							'yodobashi',
							'yoga',
							'yokohama',
							'you',
							'youtube',
							'yun',
							'zappos',
							'zara',
							'zero',
							'zip',
							'zone',
							'zuerich',
							'cc.ua',
							'inf.ua',
							'ltd.ua',
							'611.to',
							'graphox.us',
							'*.devcdnaccesso.com',
							'adobeaemcloud.com',
							'*.dev.adobeaemcloud.com',
							'hlx.live',
							'adobeaemcloud.net',
							'hlx.page',
							'hlx3.page',
							'beep.pl',
							'airkitapps.com',
							'airkitapps-au.com',
							'airkitapps.eu',
							'aivencloud.com',
							'barsy.ca',
							'*.compute.estate',
							'*.alces.network',
							'kasserver.com',
							'altervista.org',
							'alwaysdata.net',
							'cloudfront.net',
							'*.compute.amazonaws.com',
							'*.compute-1.amazonaws.com',
							'*.compute.amazonaws.com.cn',
							'us-east-1.amazonaws.com',
							'cn-north-1.eb.amazonaws.com.cn',
							'cn-northwest-1.eb.amazonaws.com.cn',
							'elasticbeanstalk.com',
							'ap-northeast-1.elasticbeanstalk.com',
							'ap-northeast-2.elasticbeanstalk.com',
							'ap-northeast-3.elasticbeanstalk.com',
							'ap-south-1.elasticbeanstalk.com',
							'ap-southeast-1.elasticbeanstalk.com',
							'ap-southeast-2.elasticbeanstalk.com',
							'ca-central-1.elasticbeanstalk.com',
							'eu-central-1.elasticbeanstalk.com',
							'eu-west-1.elasticbeanstalk.com',
							'eu-west-2.elasticbeanstalk.com',
							'eu-west-3.elasticbeanstalk.com',
							'sa-east-1.elasticbeanstalk.com',
							'us-east-1.elasticbeanstalk.com',
							'us-east-2.elasticbeanstalk.com',
							'us-gov-west-1.elasticbeanstalk.com',
							'us-west-1.elasticbeanstalk.com',
							'us-west-2.elasticbeanstalk.com',
							'*.elb.amazonaws.com',
							'*.elb.amazonaws.com.cn',
							'awsglobalaccelerator.com',
							's3.amazonaws.com',
							's3-ap-northeast-1.amazonaws.com',
							's3-ap-northeast-2.amazonaws.com',
							's3-ap-south-1.amazonaws.com',
							's3-ap-southeast-1.amazonaws.com',
							's3-ap-southeast-2.amazonaws.com',
							's3-ca-central-1.amazonaws.com',
							's3-eu-central-1.amazonaws.com',
							's3-eu-west-1.amazonaws.com',
							's3-eu-west-2.amazonaws.com',
							's3-eu-west-3.amazonaws.com',
							's3-external-1.amazonaws.com',
							's3-fips-us-gov-west-1.amazonaws.com',
							's3-sa-east-1.amazonaws.com',
							's3-us-gov-west-1.amazonaws.com',
							's3-us-east-2.amazonaws.com',
							's3-us-west-1.amazonaws.com',
							's3-us-west-2.amazonaws.com',
							's3.ap-northeast-2.amazonaws.com',
							's3.ap-south-1.amazonaws.com',
							's3.cn-north-1.amazonaws.com.cn',
							's3.ca-central-1.amazonaws.com',
							's3.eu-central-1.amazonaws.com',
							's3.eu-west-2.amazonaws.com',
							's3.eu-west-3.amazonaws.com',
							's3.us-east-2.amazonaws.com',
							's3.dualstack.ap-northeast-1.amazonaws.com',
							's3.dualstack.ap-northeast-2.amazonaws.com',
							's3.dualstack.ap-south-1.amazonaws.com',
							's3.dualstack.ap-southeast-1.amazonaws.com',
							's3.dualstack.ap-southeast-2.amazonaws.com',
							's3.dualstack.ca-central-1.amazonaws.com',
							's3.dualstack.eu-central-1.amazonaws.com',
							's3.dualstack.eu-west-1.amazonaws.com',
							's3.dualstack.eu-west-2.amazonaws.com',
							's3.dualstack.eu-west-3.amazonaws.com',
							's3.dualstack.sa-east-1.amazonaws.com',
							's3.dualstack.us-east-1.amazonaws.com',
							's3.dualstack.us-east-2.amazonaws.com',
							's3-website-us-east-1.amazonaws.com',
							's3-website-us-west-1.amazonaws.com',
							's3-website-us-west-2.amazonaws.com',
							's3-website-ap-northeast-1.amazonaws.com',
							's3-website-ap-southeast-1.amazonaws.com',
							's3-website-ap-southeast-2.amazonaws.com',
							's3-website-eu-west-1.amazonaws.com',
							's3-website-sa-east-1.amazonaws.com',
							's3-website.ap-northeast-2.amazonaws.com',
							's3-website.ap-south-1.amazonaws.com',
							's3-website.ca-central-1.amazonaws.com',
							's3-website.eu-central-1.amazonaws.com',
							's3-website.eu-west-2.amazonaws.com',
							's3-website.eu-west-3.amazonaws.com',
							's3-website.us-east-2.amazonaws.com',
							't3l3p0rt.net',
							'tele.amune.org',
							'apigee.io',
							'siiites.com',
							'appspacehosted.com',
							'appspaceusercontent.com',
							'appudo.net',
							'on-aptible.com',
							'user.aseinet.ne.jp',
							'gv.vc',
							'd.gv.vc',
							'user.party.eus',
							'pimienta.org',
							'poivron.org',
							'potager.org',
							'sweetpepper.org',
							'myasustor.com',
							'cdn.prod.atlassian-dev.net',
							'translated.page',
							'myfritz.net',
							'onavstack.net',
							'*.awdev.ca',
							'*.advisor.ws',
							'ecommerce-shop.pl',
							'b-data.io',
							'backplaneapp.io',
							'balena-devices.com',
							'rs.ba',
							'*.banzai.cloud',
							'app.banzaicloud.io',
							'*.backyards.banzaicloud.io',
							'base.ec',
							'official.ec',
							'buyshop.jp',
							'fashionstore.jp',
							'handcrafted.jp',
							'kawaiishop.jp',
							'supersale.jp',
							'theshop.jp',
							'shopselect.net',
							'base.shop',
							'*.beget.app',
							'betainabox.com',
							'bnr.la',
							'bitbucket.io',
							'blackbaudcdn.net',
							'of.je',
							'bluebite.io',
							'boomla.net',
							'boutir.com',
							'boxfuse.io',
							'square7.ch',
							'bplaced.com',
							'bplaced.de',
							'square7.de',
							'bplaced.net',
							'square7.net',
							'shop.brendly.rs',
							'browsersafetymark.io',
							'uk0.bigv.io',
							'dh.bytemark.co.uk',
							'vm.bytemark.co.uk',
							'cafjs.com',
							'mycd.eu',
							'drr.ac',
							'uwu.ai',
							'carrd.co',
							'crd.co',
							'ju.mp',
							'ae.org',
							'br.com',
							'cn.com',
							'com.de',
							'com.se',
							'de.com',
							'eu.com',
							'gb.net',
							'hu.net',
							'jp.net',
							'jpn.com',
							'mex.com',
							'ru.com',
							'sa.com',
							'se.net',
							'uk.com',
							'uk.net',
							'us.com',
							'za.bz',
							'za.com',
							'ar.com',
							'hu.com',
							'kr.com',
							'no.com',
							'qc.com',
							'uy.com',
							'africa.com',
							'gr.com',
							'in.net',
							'web.in',
							'us.org',
							'co.com',
							'aus.basketball',
							'nz.basketball',
							'radio.am',
							'radio.fm',
							'c.la',
							'certmgr.org',
							'cx.ua',
							'discourse.group',
							'discourse.team',
							'cleverapps.io',
							'clerk.app',
							'clerkstage.app',
							'*.lcl.dev',
							'*.lclstage.dev',
							'*.stg.dev',
							'*.stgstage.dev',
							'clickrising.net',
							'c66.me',
							'cloud66.ws',
							'cloud66.zone',
							'jdevcloud.com',
							'wpdevcloud.com',
							'cloudaccess.host',
							'freesite.host',
							'cloudaccess.net',
							'cloudcontrolled.com',
							'cloudcontrolapp.com',
							'*.cloudera.site',
							'pages.dev',
							'trycloudflare.com',
							'workers.dev',
							'wnext.app',
							'co.ca',
							'*.otap.co',
							'co.cz',
							'c.cdn77.org',
							'cdn77-ssl.net',
							'r.cdn77.net',
							'rsc.cdn77.org',
							'ssl.origin.cdn77-secure.org',
							'cloudns.asia',
							'cloudns.biz',
							'cloudns.club',
							'cloudns.cc',
							'cloudns.eu',
							'cloudns.in',
							'cloudns.info',
							'cloudns.org',
							'cloudns.pro',
							'cloudns.pw',
							'cloudns.us',
							'cnpy.gdn',
							'codeberg.page',
							'co.nl',
							'co.no',
							'webhosting.be',
							'hosting-cluster.nl',
							'ac.ru',
							'edu.ru',
							'gov.ru',
							'int.ru',
							'mil.ru',
							'test.ru',
							'dyn.cosidns.de',
							'dynamisches-dns.de',
							'dnsupdater.de',
							'internet-dns.de',
							'l-o-g-i-n.de',
							'dynamic-dns.info',
							'feste-ip.net',
							'knx-server.net',
							'static-access.net',
							'realm.cz',
							'*.cryptonomic.net',
							'cupcake.is',
							'curv.dev',
							'*.customer-oci.com',
							'*.oci.customer-oci.com',
							'*.ocp.customer-oci.com',
							'*.ocs.customer-oci.com',
							'cyon.link',
							'cyon.site',
							'fnwk.site',
							'folionetwork.site',
							'platform0.app',
							'daplie.me',
							'localhost.daplie.me',
							'dattolocal.com',
							'dattorelay.com',
							'dattoweb.com',
							'mydatto.com',
							'dattolocal.net',
							'mydatto.net',
							'biz.dk',
							'co.dk',
							'firm.dk',
							'reg.dk',
							'store.dk',
							'dyndns.dappnode.io',
							'*.dapps.earth',
							'*.bzz.dapps.earth',
							'builtwithdark.com',
							'demo.datadetect.com',
							'instance.datadetect.com',
							'edgestack.me',
							'ddns5.com',
							'debian.net',
							'deno.dev',
							'deno-staging.dev',
							'dedyn.io',
							'deta.app',
							'deta.dev',
							'*.rss.my.id',
							'*.diher.solutions',
							'discordsays.com',
							'discordsez.com',
							'jozi.biz',
							'dnshome.de',
							'online.th',
							'shop.th',
							'drayddns.com',
							'shoparena.pl',
							'dreamhosters.com',
							'mydrobo.com',
							'drud.io',
							'drud.us',
							'duckdns.org',
							'bip.sh',
							'bitbridge.net',
							'dy.fi',
							'tunk.org',
							'dyndns-at-home.com',
							'dyndns-at-work.com',
							'dyndns-blog.com',
							'dyndns-free.com',
							'dyndns-home.com',
							'dyndns-ip.com',
							'dyndns-mail.com',
							'dyndns-office.com',
							'dyndns-pics.com',
							'dyndns-remote.com',
							'dyndns-server.com',
							'dyndns-web.com',
							'dyndns-wiki.com',
							'dyndns-work.com',
							'dyndns.biz',
							'dyndns.info',
							'dyndns.org',
							'dyndns.tv',
							'at-band-camp.net',
							'ath.cx',
							'barrel-of-knowledge.info',
							'barrell-of-knowledge.info',
							'better-than.tv',
							'blogdns.com',
							'blogdns.net',
							'blogdns.org',
							'blogsite.org',
							'boldlygoingnowhere.org',
							'broke-it.net',
							'buyshouses.net',
							'cechire.com',
							'dnsalias.com',
							'dnsalias.net',
							'dnsalias.org',
							'dnsdojo.com',
							'dnsdojo.net',
							'dnsdojo.org',
							'does-it.net',
							'doesntexist.com',
							'doesntexist.org',
							'dontexist.com',
							'dontexist.net',
							'dontexist.org',
							'doomdns.com',
							'doomdns.org',
							'dvrdns.org',
							'dyn-o-saur.com',
							'dynalias.com',
							'dynalias.net',
							'dynalias.org',
							'dynathome.net',
							'dyndns.ws',
							'endofinternet.net',
							'endofinternet.org',
							'endoftheinternet.org',
							'est-a-la-maison.com',
							'est-a-la-masion.com',
							'est-le-patron.com',
							'est-mon-blogueur.com',
							'for-better.biz',
							'for-more.biz',
							'for-our.info',
							'for-some.biz',
							'for-the.biz',
							'forgot.her.name',
							'forgot.his.name',
							'from-ak.com',
							'from-al.com',
							'from-ar.com',
							'from-az.net',
							'from-ca.com',
							'from-co.net',
							'from-ct.com',
							'from-dc.com',
							'from-de.com',
							'from-fl.com',
							'from-ga.com',
							'from-hi.com',
							'from-ia.com',
							'from-id.com',
							'from-il.com',
							'from-in.com',
							'from-ks.com',
							'from-ky.com',
							'from-la.net',
							'from-ma.com',
							'from-md.com',
							'from-me.org',
							'from-mi.com',
							'from-mn.com',
							'from-mo.com',
							'from-ms.com',
							'from-mt.com',
							'from-nc.com',
							'from-nd.com',
							'from-ne.com',
							'from-nh.com',
							'from-nj.com',
							'from-nm.com',
							'from-nv.com',
							'from-ny.net',
							'from-oh.com',
							'from-ok.com',
							'from-or.com',
							'from-pa.com',
							'from-pr.com',
							'from-ri.com',
							'from-sc.com',
							'from-sd.com',
							'from-tn.com',
							'from-tx.com',
							'from-ut.com',
							'from-va.com',
							'from-vt.com',
							'from-wa.com',
							'from-wi.com',
							'from-wv.com',
							'from-wy.com',
							'ftpaccess.cc',
							'fuettertdasnetz.de',
							'game-host.org',
							'game-server.cc',
							'getmyip.com',
							'gets-it.net',
							'go.dyndns.org',
							'gotdns.com',
							'gotdns.org',
							'groks-the.info',
							'groks-this.info',
							'ham-radio-op.net',
							'here-for-more.info',
							'hobby-site.com',
							'hobby-site.org',
							'home.dyndns.org',
							'homedns.org',
							'homeftp.net',
							'homeftp.org',
							'homeip.net',
							'homelinux.com',
							'homelinux.net',
							'homelinux.org',
							'homeunix.com',
							'homeunix.net',
							'homeunix.org',
							'iamallama.com',
							'in-the-band.net',
							'is-a-anarchist.com',
							'is-a-blogger.com',
							'is-a-bookkeeper.com',
							'is-a-bruinsfan.org',
							'is-a-bulls-fan.com',
							'is-a-candidate.org',
							'is-a-caterer.com',
							'is-a-celticsfan.org',
							'is-a-chef.com',
							'is-a-chef.net',
							'is-a-chef.org',
							'is-a-conservative.com',
							'is-a-cpa.com',
							'is-a-cubicle-slave.com',
							'is-a-democrat.com',
							'is-a-designer.com',
							'is-a-doctor.com',
							'is-a-financialadvisor.com',
							'is-a-geek.com',
							'is-a-geek.net',
							'is-a-geek.org',
							'is-a-green.com',
							'is-a-guru.com',
							'is-a-hard-worker.com',
							'is-a-hunter.com',
							'is-a-knight.org',
							'is-a-landscaper.com',
							'is-a-lawyer.com',
							'is-a-liberal.com',
							'is-a-libertarian.com',
							'is-a-linux-user.org',
							'is-a-llama.com',
							'is-a-musician.com',
							'is-a-nascarfan.com',
							'is-a-nurse.com',
							'is-a-painter.com',
							'is-a-patsfan.org',
							'is-a-personaltrainer.com',
							'is-a-photographer.com',
							'is-a-player.com',
							'is-a-republican.com',
							'is-a-rockstar.com',
							'is-a-socialist.com',
							'is-a-soxfan.org',
							'is-a-student.com',
							'is-a-teacher.com',
							'is-a-techie.com',
							'is-a-therapist.com',
							'is-an-accountant.com',
							'is-an-actor.com',
							'is-an-actress.com',
							'is-an-anarchist.com',
							'is-an-artist.com',
							'is-an-engineer.com',
							'is-an-entertainer.com',
							'is-by.us',
							'is-certified.com',
							'is-found.org',
							'is-gone.com',
							'is-into-anime.com',
							'is-into-cars.com',
							'is-into-cartoons.com',
							'is-into-games.com',
							'is-leet.com',
							'is-lost.org',
							'is-not-certified.com',
							'is-saved.org',
							'is-slick.com',
							'is-uberleet.com',
							'is-very-bad.org',
							'is-very-evil.org',
							'is-very-good.org',
							'is-very-nice.org',
							'is-very-sweet.org',
							'is-with-theband.com',
							'isa-geek.com',
							'isa-geek.net',
							'isa-geek.org',
							'isa-hockeynut.com',
							'issmarterthanyou.com',
							'isteingeek.de',
							'istmein.de',
							'kicks-ass.net',
							'kicks-ass.org',
							'knowsitall.info',
							'land-4-sale.us',
							'lebtimnetz.de',
							'leitungsen.de',
							'likes-pie.com',
							'likescandy.com',
							'merseine.nu',
							'mine.nu',
							'misconfused.org',
							'mypets.ws',
							'myphotos.cc',
							'neat-url.com',
							'office-on-the.net',
							'on-the-web.tv',
							'podzone.net',
							'podzone.org',
							'readmyblog.org',
							'saves-the-whales.com',
							'scrapper-site.net',
							'scrapping.cc',
							'selfip.biz',
							'selfip.com',
							'selfip.info',
							'selfip.net',
							'selfip.org',
							'sells-for-less.com',
							'sells-for-u.com',
							'sells-it.net',
							'sellsyourhome.org',
							'servebbs.com',
							'servebbs.net',
							'servebbs.org',
							'serveftp.net',
							'serveftp.org',
							'servegame.org',
							'shacknet.nu',
							'simple-url.com',
							'space-to-rent.com',
							'stuff-4-sale.org',
							'stuff-4-sale.us',
							'teaches-yoga.com',
							'thruhere.net',
							'traeumtgerade.de',
							'webhop.biz',
							'webhop.info',
							'webhop.net',
							'webhop.org',
							'worse-than.tv',
							'writesthisblog.com',
							'ddnss.de',
							'dyn.ddnss.de',
							'dyndns.ddnss.de',
							'dyndns1.de',
							'dyn-ip24.de',
							'home-webserver.de',
							'dyn.home-webserver.de',
							'myhome-server.de',
							'ddnss.org',
							'definima.net',
							'definima.io',
							'ondigitalocean.app',
							'*.digitaloceanspaces.com',
							'bci.dnstrace.pro',
							'ddnsfree.com',
							'ddnsgeek.com',
							'giize.com',
							'gleeze.com',
							'kozow.com',
							'loseyourip.com',
							'ooguy.com',
							'theworkpc.com',
							'casacam.net',
							'dynu.net',
							'accesscam.org',
							'camdvr.org',
							'freeddns.org',
							'mywire.org',
							'webredirect.org',
							'myddns.rocks',
							'blogsite.xyz',
							'dynv6.net',
							'e4.cz',
							'eero.online',
							'eero-stage.online',
							'elementor.cloud',
							'elementor.cool',
							'en-root.fr',
							'mytuleap.com',
							'tuleap-partners.com',
							'encr.app',
							'encoreapi.com',
							'onred.one',
							'staging.onred.one',
							'eu.encoway.cloud',
							'eu.org',
							'al.eu.org',
							'asso.eu.org',
							'at.eu.org',
							'au.eu.org',
							'be.eu.org',
							'bg.eu.org',
							'ca.eu.org',
							'cd.eu.org',
							'ch.eu.org',
							'cn.eu.org',
							'cy.eu.org',
							'cz.eu.org',
							'de.eu.org',
							'dk.eu.org',
							'edu.eu.org',
							'ee.eu.org',
							'es.eu.org',
							'fi.eu.org',
							'fr.eu.org',
							'gr.eu.org',
							'hr.eu.org',
							'hu.eu.org',
							'ie.eu.org',
							'il.eu.org',
							'in.eu.org',
							'int.eu.org',
							'is.eu.org',
							'it.eu.org',
							'jp.eu.org',
							'kr.eu.org',
							'lt.eu.org',
							'lu.eu.org',
							'lv.eu.org',
							'mc.eu.org',
							'me.eu.org',
							'mk.eu.org',
							'mt.eu.org',
							'my.eu.org',
							'net.eu.org',
							'ng.eu.org',
							'nl.eu.org',
							'no.eu.org',
							'nz.eu.org',
							'paris.eu.org',
							'pl.eu.org',
							'pt.eu.org',
							'q-a.eu.org',
							'ro.eu.org',
							'ru.eu.org',
							'se.eu.org',
							'si.eu.org',
							'sk.eu.org',
							'tr.eu.org',
							'uk.eu.org',
							'us.eu.org',
							'eurodir.ru',
							'eu-1.evennode.com',
							'eu-2.evennode.com',
							'eu-3.evennode.com',
							'eu-4.evennode.com',
							'us-1.evennode.com',
							'us-2.evennode.com',
							'us-3.evennode.com',
							'us-4.evennode.com',
							'twmail.cc',
							'twmail.net',
							'twmail.org',
							'mymailer.com.tw',
							'url.tw',
							'onfabrica.com',
							'apps.fbsbx.com',
							'ru.net',
							'adygeya.ru',
							'bashkiria.ru',
							'bir.ru',
							'cbg.ru',
							'com.ru',
							'dagestan.ru',
							'grozny.ru',
							'kalmykia.ru',
							'kustanai.ru',
							'marine.ru',
							'mordovia.ru',
							'msk.ru',
							'mytis.ru',
							'nalchik.ru',
							'nov.ru',
							'pyatigorsk.ru',
							'spb.ru',
							'vladikavkaz.ru',
							'vladimir.ru',
							'abkhazia.su',
							'adygeya.su',
							'aktyubinsk.su',
							'arkhangelsk.su',
							'armenia.su',
							'ashgabad.su',
							'azerbaijan.su',
							'balashov.su',
							'bashkiria.su',
							'bryansk.su',
							'bukhara.su',
							'chimkent.su',
							'dagestan.su',
							'east-kazakhstan.su',
							'exnet.su',
							'georgia.su',
							'grozny.su',
							'ivanovo.su',
							'jambyl.su',
							'kalmykia.su',
							'kaluga.su',
							'karacol.su',
							'karaganda.su',
							'karelia.su',
							'khakassia.su',
							'krasnodar.su',
							'kurgan.su',
							'kustanai.su',
							'lenug.su',
							'mangyshlak.su',
							'mordovia.su',
							'msk.su',
							'murmansk.su',
							'nalchik.su',
							'navoi.su',
							'north-kazakhstan.su',
							'nov.su',
							'obninsk.su',
							'penza.su',
							'pokrovsk.su',
							'sochi.su',
							'spb.su',
							'tashkent.su',
							'termez.su',
							'togliatti.su',
							'troitsk.su',
							'tselinograd.su',
							'tula.su',
							'tuva.su',
							'vladikavkaz.su',
							'vladimir.su',
							'vologda.su',
							'channelsdvr.net',
							'u.channelsdvr.net',
							'edgecompute.app',
							'fastly-terrarium.com',
							'fastlylb.net',
							'map.fastlylb.net',
							'freetls.fastly.net',
							'map.fastly.net',
							'a.prod.fastly.net',
							'global.prod.fastly.net',
							'a.ssl.fastly.net',
							'b.ssl.fastly.net',
							'global.ssl.fastly.net',
							'fastvps-server.com',
							'fastvps.host',
							'myfast.host',
							'fastvps.site',
							'myfast.space',
							'fedorainfracloud.org',
							'fedorapeople.org',
							'cloud.fedoraproject.org',
							'app.os.fedoraproject.org',
							'app.os.stg.fedoraproject.org',
							'conn.uk',
							'copro.uk',
							'hosp.uk',
							'mydobiss.com',
							'fh-muenster.io',
							'filegear.me',
							'filegear-au.me',
							'filegear-de.me',
							'filegear-gb.me',
							'filegear-ie.me',
							'filegear-jp.me',
							'filegear-sg.me',
							'firebaseapp.com',
							'fireweb.app',
							'flap.id',
							'onflashdrive.app',
							'fldrv.com',
							'fly.dev',
							'edgeapp.net',
							'shw.io',
							'flynnhosting.net',
							'forgeblocks.com',
							'id.forgerock.io',
							'framer.app',
							'framercanvas.com',
							'*.frusky.de',
							'ravpage.co.il',
							'0e.vc',
							'freebox-os.com',
							'freeboxos.com',
							'fbx-os.fr',
							'fbxos.fr',
							'freebox-os.fr',
							'freeboxos.fr',
							'freedesktop.org',
							'freemyip.com',
							'wien.funkfeuer.at',
							'*.futurecms.at',
							'*.ex.futurecms.at',
							'*.in.futurecms.at',
							'futurehosting.at',
							'futuremailing.at',
							'*.ex.ortsinfo.at',
							'*.kunden.ortsinfo.at',
							'*.statics.cloud',
							'independent-commission.uk',
							'independent-inquest.uk',
							'independent-inquiry.uk',
							'independent-panel.uk',
							'independent-review.uk',
							'public-inquiry.uk',
							'royal-commission.uk',
							'campaign.gov.uk',
							'service.gov.uk',
							'api.gov.uk',
							'gehirn.ne.jp',
							'usercontent.jp',
							'gentapps.com',
							'gentlentapis.com',
							'lab.ms',
							'cdn-edges.net',
							'ghost.io',
							'gsj.bz',
							'githubusercontent.com',
							'githubpreview.dev',
							'github.io',
							'gitlab.io',
							'gitapp.si',
							'gitpage.si',
							'glitch.me',
							'nog.community',
							'co.ro',
							'shop.ro',
							'lolipop.io',
							'angry.jp',
							'babyblue.jp',
							'babymilk.jp',
							'backdrop.jp',
							'bambina.jp',
							'bitter.jp',
							'blush.jp',
							'boo.jp',
							'boy.jp',
							'boyfriend.jp',
							'but.jp',
							'candypop.jp',
							'capoo.jp',
							'catfood.jp',
							'cheap.jp',
							'chicappa.jp',
							'chillout.jp',
							'chips.jp',
							'chowder.jp',
							'chu.jp',
							'ciao.jp',
							'cocotte.jp',
							'coolblog.jp',
							'cranky.jp',
							'cutegirl.jp',
							'daa.jp',
							'deca.jp',
							'deci.jp',
							'digick.jp',
							'egoism.jp',
							'fakefur.jp',
							'fem.jp',
							'flier.jp',
							'floppy.jp',
							'fool.jp',
							'frenchkiss.jp',
							'girlfriend.jp',
							'girly.jp',
							'gloomy.jp',
							'gonna.jp',
							'greater.jp',
							'hacca.jp',
							'heavy.jp',
							'her.jp',
							'hiho.jp',
							'hippy.jp',
							'holy.jp',
							'hungry.jp',
							'icurus.jp',
							'itigo.jp',
							'jellybean.jp',
							'kikirara.jp',
							'kill.jp',
							'kilo.jp',
							'kuron.jp',
							'littlestar.jp',
							'lolipopmc.jp',
							'lolitapunk.jp',
							'lomo.jp',
							'lovepop.jp',
							'lovesick.jp',
							'main.jp',
							'mods.jp',
							'mond.jp',
							'mongolian.jp',
							'moo.jp',
							'namaste.jp',
							'nikita.jp',
							'nobushi.jp',
							'noor.jp',
							'oops.jp',
							'parallel.jp',
							'parasite.jp',
							'pecori.jp',
							'peewee.jp',
							'penne.jp',
							'pepper.jp',
							'perma.jp',
							'pigboat.jp',
							'pinoko.jp',
							'punyu.jp',
							'pupu.jp',
							'pussycat.jp',
							'pya.jp',
							'raindrop.jp',
							'readymade.jp',
							'sadist.jp',
							'schoolbus.jp',
							'secret.jp',
							'staba.jp',
							'stripper.jp',
							'sub.jp',
							'sunnyday.jp',
							'thick.jp',
							'tonkotsu.jp',
							'under.jp',
							'upper.jp',
							'velvet.jp',
							'verse.jp',
							'versus.jp',
							'vivian.jp',
							'watson.jp',
							'weblike.jp',
							'whitesnow.jp',
							'zombie.jp',
							'heteml.net',
							'cloudapps.digital',
							'london.cloudapps.digital',
							'pymnt.uk',
							'homeoffice.gov.uk',
							'ro.im',
							'goip.de',
							'run.app',
							'a.run.app',
							'web.app',
							'*.0emm.com',
							'appspot.com',
							'*.r.appspot.com',
							'codespot.com',
							'googleapis.com',
							'googlecode.com',
							'pagespeedmobilizer.com',
							'publishproxy.com',
							'withgoogle.com',
							'withyoutube.com',
							'*.gateway.dev',
							'cloud.goog',
							'translate.goog',
							'*.usercontent.goog',
							'cloudfunctions.net',
							'blogspot.ae',
							'blogspot.al',
							'blogspot.am',
							'blogspot.ba',
							'blogspot.be',
							'blogspot.bg',
							'blogspot.bj',
							'blogspot.ca',
							'blogspot.cf',
							'blogspot.ch',
							'blogspot.cl',
							'blogspot.co.at',
							'blogspot.co.id',
							'blogspot.co.il',
							'blogspot.co.ke',
							'blogspot.co.nz',
							'blogspot.co.uk',
							'blogspot.co.za',
							'blogspot.com',
							'blogspot.com.ar',
							'blogspot.com.au',
							'blogspot.com.br',
							'blogspot.com.by',
							'blogspot.com.co',
							'blogspot.com.cy',
							'blogspot.com.ee',
							'blogspot.com.eg',
							'blogspot.com.es',
							'blogspot.com.mt',
							'blogspot.com.ng',
							'blogspot.com.tr',
							'blogspot.com.uy',
							'blogspot.cv',
							'blogspot.cz',
							'blogspot.de',
							'blogspot.dk',
							'blogspot.fi',
							'blogspot.fr',
							'blogspot.gr',
							'blogspot.hk',
							'blogspot.hr',
							'blogspot.hu',
							'blogspot.ie',
							'blogspot.in',
							'blogspot.is',
							'blogspot.it',
							'blogspot.jp',
							'blogspot.kr',
							'blogspot.li',
							'blogspot.lt',
							'blogspot.lu',
							'blogspot.md',
							'blogspot.mk',
							'blogspot.mr',
							'blogspot.mx',
							'blogspot.my',
							'blogspot.nl',
							'blogspot.no',
							'blogspot.pe',
							'blogspot.pt',
							'blogspot.qa',
							'blogspot.re',
							'blogspot.ro',
							'blogspot.rs',
							'blogspot.ru',
							'blogspot.se',
							'blogspot.sg',
							'blogspot.si',
							'blogspot.sk',
							'blogspot.sn',
							'blogspot.td',
							'blogspot.tw',
							'blogspot.ug',
							'blogspot.vn',
							'goupile.fr',
							'gov.nl',
							'awsmppl.com',
							'günstigbestellen.de',
							'günstigliefern.de',
							'fin.ci',
							'free.hr',
							'caa.li',
							'ua.rs',
							'conf.se',
							'hs.zone',
							'hs.run',
							'hashbang.sh',
							'hasura.app',
							'hasura-app.io',
							'pages.it.hs-heilbronn.de',
							'hepforge.org',
							'herokuapp.com',
							'herokussl.com',
							'ravendb.cloud',
							'myravendb.com',
							'ravendb.community',
							'ravendb.me',
							'development.run',
							'ravendb.run',
							'homesklep.pl',
							'secaas.hk',
							'hoplix.shop',
							'orx.biz',
							'biz.gl',
							'col.ng',
							'firm.ng',
							'gen.ng',
							'ltd.ng',
							'ngo.ng',
							'edu.scot',
							'sch.so',
							'hostyhosting.io',
							'häkkinen.fi',
							'*.moonscale.io',
							'moonscale.net',
							'iki.fi',
							'ibxos.it',
							'iliadboxos.it',
							'impertrixcdn.com',
							'impertrix.com',
							'smushcdn.com',
							'wphostedmail.com',
							'wpmucdn.com',
							'tempurl.host',
							'wpmudev.host',
							'dyn-berlin.de',
							'in-berlin.de',
							'in-brb.de',
							'in-butter.de',
							'in-dsl.de',
							'in-dsl.net',
							'in-dsl.org',
							'in-vpn.de',
							'in-vpn.net',
							'in-vpn.org',
							'biz.at',
							'info.at',
							'info.cx',
							'ac.leg.br',
							'al.leg.br',
							'am.leg.br',
							'ap.leg.br',
							'ba.leg.br',
							'ce.leg.br',
							'df.leg.br',
							'es.leg.br',
							'go.leg.br',
							'ma.leg.br',
							'mg.leg.br',
							'ms.leg.br',
							'mt.leg.br',
							'pa.leg.br',
							'pb.leg.br',
							'pe.leg.br',
							'pi.leg.br',
							'pr.leg.br',
							'rj.leg.br',
							'rn.leg.br',
							'ro.leg.br',
							'rr.leg.br',
							'rs.leg.br',
							'sc.leg.br',
							'se.leg.br',
							'sp.leg.br',
							'to.leg.br',
							'pixolino.com',
							'na4u.ru',
							'iopsys.se',
							'ipifony.net',
							'iservschule.de',
							'mein-iserv.de',
							'schulplattform.de',
							'schulserver.de',
							'test-iserv.de',
							'iserv.dev',
							'iobb.net',
							'mel.cloudlets.com.au',
							'cloud.interhostsolutions.be',
							'users.scale.virtualcloud.com.br',
							'mycloud.by',
							'alp1.ae.flow.ch',
							'appengine.flow.ch',
							'es-1.axarnet.cloud',
							'diadem.cloud',
							'vip.jelastic.cloud',
							'jele.cloud',
							'it1.eur.aruba.jenv-aruba.cloud',
							'it1.jenv-aruba.cloud',
							'keliweb.cloud',
							'cs.keliweb.cloud',
							'oxa.cloud',
							'tn.oxa.cloud',
							'uk.oxa.cloud',
							'primetel.cloud',
							'uk.primetel.cloud',
							'ca.reclaim.cloud',
							'uk.reclaim.cloud',
							'us.reclaim.cloud',
							'ch.trendhosting.cloud',
							'de.trendhosting.cloud',
							'jele.club',
							'amscompute.com',
							'clicketcloud.com',
							'dopaas.com',
							'hidora.com',
							'paas.hosted-by-previder.com',
							'rag-cloud.hosteur.com',
							'rag-cloud-ch.hosteur.com',
							'jcloud.ik-server.com',
							'jcloud-ver-jpc.ik-server.com',
							'demo.jelastic.com',
							'kilatiron.com',
							'paas.massivegrid.com',
							'jed.wafaicloud.com',
							'lon.wafaicloud.com',
							'ryd.wafaicloud.com',
							'j.scaleforce.com.cy',
							'jelastic.dogado.eu',
							'fi.cloudplatform.fi',
							'demo.datacenter.fi',
							'paas.datacenter.fi',
							'jele.host',
							'mircloud.host',
							'paas.beebyte.io',
							'sekd1.beebyteapp.io',
							'jele.io',
							'cloud-fr1.unispace.io',
							'jc.neen.it',
							'cloud.jelastic.open.tim.it',
							'jcloud.kz',
							'upaas.kazteleport.kz',
							'cloudjiffy.net',
							'fra1-de.cloudjiffy.net',
							'west1-us.cloudjiffy.net',
							'jls-sto1.elastx.net',
							'jls-sto2.elastx.net',
							'jls-sto3.elastx.net',
							'faststacks.net',
							'fr-1.paas.massivegrid.net',
							'lon-1.paas.massivegrid.net',
							'lon-2.paas.massivegrid.net',
							'ny-1.paas.massivegrid.net',
							'ny-2.paas.massivegrid.net',
							'sg-1.paas.massivegrid.net',
							'jelastic.saveincloud.net',
							'nordeste-idc.saveincloud.net',
							'j.scaleforce.net',
							'jelastic.tsukaeru.net',
							'sdscloud.pl',
							'unicloud.pl',
							'mircloud.ru',
							'jelastic.regruhosting.ru',
							'enscaled.sg',
							'jele.site',
							'jelastic.team',
							'orangecloud.tn',
							'j.layershift.co.uk',
							'phx.enscaled.us',
							'mircloud.us',
							'myjino.ru',
							'*.hosting.myjino.ru',
							'*.landing.myjino.ru',
							'*.spectrum.myjino.ru',
							'*.vps.myjino.ru',
							'jotelulu.cloud',
							'*.triton.zone',
							'*.cns.joyent.com',
							'js.org',
							'kaas.gg',
							'khplay.nl',
							'ktistory.com',
							'kapsi.fi',
							'keymachine.de',
							'kinghost.net',
							'uni5.net',
							'knightpoint.systems',
							'koobin.events',
							'oya.to',
							'kuleuven.cloud',
							'ezproxy.kuleuven.be',
							'co.krd',
							'edu.krd',
							'krellian.net',
							'webthings.io',
							'git-repos.de',
							'lcube-server.de',
							'svn-repos.de',
							'leadpages.co',
							'lpages.co',
							'lpusercontent.com',
							'lelux.site',
							'co.business',
							'co.education',
							'co.events',
							'co.financial',
							'co.network',
							'co.place',
							'co.technology',
							'app.lmpm.com',
							'linkyard.cloud',
							'linkyard-cloud.ch',
							'members.linode.com',
							'*.nodebalancer.linode.com',
							'*.linodeobjects.com',
							'ip.linodeusercontent.com',
							'we.bs',
							'*.user.localcert.dev',
							'localzone.xyz',
							'loginline.app',
							'loginline.dev',
							'loginline.io',
							'loginline.services',
							'loginline.site',
							'servers.run',
							'lohmus.me',
							'krasnik.pl',
							'leczna.pl',
							'lubartow.pl',
							'lublin.pl',
							'poniatowa.pl',
							'swidnik.pl',
							'glug.org.uk',
							'lug.org.uk',
							'lugs.org.uk',
							'barsy.bg',
							'barsy.co.uk',
							'barsyonline.co.uk',
							'barsycenter.com',
							'barsyonline.com',
							'barsy.club',
							'barsy.de',
							'barsy.eu',
							'barsy.in',
							'barsy.info',
							'barsy.io',
							'barsy.me',
							'barsy.menu',
							'barsy.mobi',
							'barsy.net',
							'barsy.online',
							'barsy.org',
							'barsy.pro',
							'barsy.pub',
							'barsy.ro',
							'barsy.shop',
							'barsy.site',
							'barsy.support',
							'barsy.uk',
							'*.magentosite.cloud',
							'mayfirst.info',
							'mayfirst.org',
							'hb.cldmail.ru',
							'cn.vu',
							'mazeplay.com',
							'mcpe.me',
							'mcdir.me',
							'mcdir.ru',
							'mcpre.ru',
							'vps.mcdir.ru',
							'mediatech.by',
							'mediatech.dev',
							'hra.health',
							'miniserver.com',
							'memset.net',
							'messerli.app',
							'*.cloud.metacentrum.cz',
							'custom.metacentrum.cz',
							'flt.cloud.muni.cz',
							'usr.cloud.muni.cz',
							'meteorapp.com',
							'eu.meteorapp.com',
							'co.pl',
							'*.azurecontainer.io',
							'azurewebsites.net',
							'azure-mobile.net',
							'cloudapp.net',
							'azurestaticapps.net',
							'1.azurestaticapps.net',
							'centralus.azurestaticapps.net',
							'eastasia.azurestaticapps.net',
							'eastus2.azurestaticapps.net',
							'westeurope.azurestaticapps.net',
							'westus2.azurestaticapps.net',
							'csx.cc',
							'mintere.site',
							'forte.id',
							'mozilla-iot.org',
							'bmoattachments.org',
							'net.ru',
							'org.ru',
							'pp.ru',
							'hostedpi.com',
							'customer.mythic-beasts.com',
							'caracal.mythic-beasts.com',
							'fentiger.mythic-beasts.com',
							'lynx.mythic-beasts.com',
							'ocelot.mythic-beasts.com',
							'oncilla.mythic-beasts.com',
							'onza.mythic-beasts.com',
							'sphinx.mythic-beasts.com',
							'vs.mythic-beasts.com',
							'x.mythic-beasts.com',
							'yali.mythic-beasts.com',
							'cust.retrosnub.co.uk',
							'ui.nabu.casa',
							'pony.club',
							'of.fashion',
							'in.london',
							'of.london',
							'from.marketing',
							'with.marketing',
							'for.men',
							'repair.men',
							'and.mom',
							'for.mom',
							'for.one',
							'under.one',
							'for.sale',
							'that.win',
							'from.work',
							'to.work',
							'cloud.nospamproxy.com',
							'netlify.app',
							'4u.com',
							'ngrok.io',
							'nh-serv.co.uk',
							'nfshost.com',
							'*.developer.app',
							'noop.app',
							'*.northflank.app',
							'*.build.run',
							'*.code.run',
							'*.database.run',
							'*.migration.run',
							'noticeable.news',
							'dnsking.ch',
							'mypi.co',
							'n4t.co',
							'001www.com',
							'ddnslive.com',
							'myiphost.com',
							'forumz.info',
							'16-b.it',
							'32-b.it',
							'64-b.it',
							'soundcast.me',
							'tcp4.me',
							'dnsup.net',
							'hicam.net',
							'now-dns.net',
							'ownip.net',
							'vpndns.net',
							'dynserv.org',
							'now-dns.org',
							'x443.pw',
							'now-dns.top',
							'ntdll.top',
							'freeddns.us',
							'crafting.xyz',
							'zapto.xyz',
							'nsupdate.info',
							'nerdpol.ovh',
							'blogsyte.com',
							'brasilia.me',
							'cable-modem.org',
							'ciscofreak.com',
							'collegefan.org',
							'couchpotatofries.org',
							'damnserver.com',
							'ddns.me',
							'ditchyourip.com',
							'dnsfor.me',
							'dnsiskinky.com',
							'dvrcam.info',
							'dynns.com',
							'eating-organic.net',
							'fantasyleague.cc',
							'geekgalaxy.com',
							'golffan.us',
							'health-carereform.com',
							'homesecuritymac.com',
							'homesecuritypc.com',
							'hopto.me',
							'ilovecollege.info',
							'loginto.me',
							'mlbfan.org',
							'mmafan.biz',
							'myactivedirectory.com',
							'mydissent.net',
							'myeffect.net',
							'mymediapc.net',
							'mypsx.net',
							'mysecuritycamera.com',
							'mysecuritycamera.net',
							'mysecuritycamera.org',
							'net-freaks.com',
							'nflfan.org',
							'nhlfan.net',
							'no-ip.ca',
							'no-ip.co.uk',
							'no-ip.net',
							'noip.us',
							'onthewifi.com',
							'pgafan.net',
							'point2this.com',
							'pointto.us',
							'privatizehealthinsurance.net',
							'quicksytes.com',
							'read-books.org',
							'securitytactics.com',
							'serveexchange.com',
							'servehumour.com',
							'servep2p.com',
							'servesarcasm.com',
							'stufftoread.com',
							'ufcfan.org',
							'unusualperson.com',
							'workisboring.com',
							'3utilities.com',
							'bounceme.net',
							'ddns.net',
							'ddnsking.com',
							'gotdns.ch',
							'hopto.org',
							'myftp.biz',
							'myftp.org',
							'myvnc.com',
							'no-ip.biz',
							'no-ip.info',
							'no-ip.org',
							'noip.me',
							'redirectme.net',
							'servebeer.com',
							'serveblog.net',
							'servecounterstrike.com',
							'serveftp.com',
							'servegame.com',
							'servehalflife.com',
							'servehttp.com',
							'serveirc.com',
							'serveminecraft.net',
							'servemp3.com',
							'servepics.com',
							'servequake.com',
							'sytes.net',
							'webhop.me',
							'zapto.org',
							'stage.nodeart.io',
							'pcloud.host',
							'nyc.mn',
							'static.observableusercontent.com',
							'cya.gg',
							'omg.lol',
							'cloudycluster.net',
							'omniwe.site',
							'service.one',
							'nid.io',
							'opensocial.site',
							'opencraft.hosting',
							'orsites.com',
							'operaunite.com',
							'tech.orange',
							'authgear-staging.com',
							'authgearapps.com',
							'skygearapp.com',
							'outsystemscloud.com',
							'*.webpaas.ovh.net',
							'*.hosting.ovh.net',
							'ownprovider.com',
							'own.pm',
							'*.owo.codes',
							'ox.rs',
							'oy.lc',
							'pgfog.com',
							'pagefrontapp.com',
							'pagexl.com',
							'*.paywhirl.com',
							'bar0.net',
							'bar1.net',
							'bar2.net',
							'rdv.to',
							'art.pl',
							'gliwice.pl',
							'krakow.pl',
							'poznan.pl',
							'wroc.pl',
							'zakopane.pl',
							'pantheonsite.io',
							'gotpantheon.com',
							'mypep.link',
							'perspecta.cloud',
							'lk3.ru',
							'on-web.fr',
							'bc.platform.sh',
							'ent.platform.sh',
							'eu.platform.sh',
							'us.platform.sh',
							'*.platformsh.site',
							'*.tst.site',
							'platter-app.com',
							'platter-app.dev',
							'platterp.us',
							'pdns.page',
							'plesk.page',
							'pleskns.com',
							'dyn53.io',
							'onporter.run',
							'co.bn',
							'postman-echo.com',
							'pstmn.io',
							'mock.pstmn.io',
							'httpbin.org',
							'prequalifyme.today',
							'xen.prgmr.com',
							'priv.at',
							'prvcy.page',
							'*.dweb.link',
							'protonet.io',
							'chirurgiens-dentistes-en-france.fr',
							'byen.site',
							'pubtls.org',
							'pythonanywhere.com',
							'eu.pythonanywhere.com',
							'qoto.io',
							'qualifioapp.com',
							'qbuser.com',
							'cloudsite.builders',
							'instances.spawn.cc',
							'instantcloud.cn',
							'ras.ru',
							'qa2.com',
							'qcx.io',
							'*.sys.qcx.io',
							'dev-myqnapcloud.com',
							'alpha-myqnapcloud.com',
							'myqnapcloud.com',
							'*.quipelements.com',
							'vapor.cloud',
							'vaporcloud.io',
							'rackmaze.com',
							'rackmaze.net',
							'g.vbrplsbx.io',
							'*.on-k3s.io',
							'*.on-rancher.cloud',
							'*.on-rio.io',
							'readthedocs.io',
							'rhcloud.com',
							'app.render.com',
							'onrender.com',
							'repl.co',
							'id.repl.co',
							'repl.run',
							'resindevice.io',
							'devices.resinstaging.io',
							'hzc.io',
							'wellbeingzone.eu',
							'wellbeingzone.co.uk',
							'adimo.co.uk',
							'itcouldbewor.se',
							'git-pages.rit.edu',
							'rocky.page',
							'биз.рус',
							'ком.рус',
							'крым.рус',
							'мир.рус',
							'мск.рус',
							'орг.рус',
							'самара.рус',
							'сочи.рус',
							'спб.рус',
							'я.рус',
							'*.builder.code.com',
							'*.dev-builder.code.com',
							'*.stg-builder.code.com',
							'sandcats.io',
							'logoip.de',
							'logoip.com',
							'fr-par-1.baremetal.scw.cloud',
							'fr-par-2.baremetal.scw.cloud',
							'nl-ams-1.baremetal.scw.cloud',
							'fnc.fr-par.scw.cloud',
							'functions.fnc.fr-par.scw.cloud',
							'k8s.fr-par.scw.cloud',
							'nodes.k8s.fr-par.scw.cloud',
							's3.fr-par.scw.cloud',
							's3-website.fr-par.scw.cloud',
							'whm.fr-par.scw.cloud',
							'priv.instances.scw.cloud',
							'pub.instances.scw.cloud',
							'k8s.scw.cloud',
							'k8s.nl-ams.scw.cloud',
							'nodes.k8s.nl-ams.scw.cloud',
							's3.nl-ams.scw.cloud',
							's3-website.nl-ams.scw.cloud',
							'whm.nl-ams.scw.cloud',
							'k8s.pl-waw.scw.cloud',
							'nodes.k8s.pl-waw.scw.cloud',
							's3.pl-waw.scw.cloud',
							's3-website.pl-waw.scw.cloud',
							'scalebook.scw.cloud',
							'smartlabeling.scw.cloud',
							'dedibox.fr',
							'schokokeks.net',
							'gov.scot',
							'service.gov.scot',
							'scrysec.com',
							'firewall-gateway.com',
							'firewall-gateway.de',
							'my-gateway.de',
							'my-router.de',
							'spdns.de',
							'spdns.eu',
							'firewall-gateway.net',
							'my-firewall.org',
							'myfirewall.org',
							'spdns.org',
							'seidat.net',
							'sellfy.store',
							'senseering.net',
							'minisite.ms',
							'magnet.page',
							'biz.ua',
							'co.ua',
							'pp.ua',
							'shiftcrypto.dev',
							'shiftcrypto.io',
							'shiftedit.io',
							'myshopblocks.com',
							'myshopify.com',
							'shopitsite.com',
							'shopware.store',
							'mo-siemens.io',
							'1kapp.com',
							'appchizi.com',
							'applinzi.com',
							'sinaapp.com',
							'vipsinaapp.com',
							'siteleaf.net',
							'bounty-full.com',
							'alpha.bounty-full.com',
							'beta.bounty-full.com',
							'small-web.org',
							'vp4.me',
							'try-snowplow.com',
							'srht.site',
							'stackhero-network.com',
							'musician.io',
							'novecore.site',
							'static.land',
							'dev.static.land',
							'sites.static.land',
							'storebase.store',
							'vps-host.net',
							'atl.jelastic.vps-host.net',
							'njs.jelastic.vps-host.net',
							'ric.jelastic.vps-host.net',
							'playstation-cloud.com',
							'apps.lair.io',
							'*.stolos.io',
							'spacekit.io',
							'customer.speedpartner.de',
							'myspreadshop.at',
							'myspreadshop.com.au',
							'myspreadshop.be',
							'myspreadshop.ca',
							'myspreadshop.ch',
							'myspreadshop.com',
							'myspreadshop.de',
							'myspreadshop.dk',
							'myspreadshop.es',
							'myspreadshop.fi',
							'myspreadshop.fr',
							'myspreadshop.ie',
							'myspreadshop.it',
							'myspreadshop.net',
							'myspreadshop.nl',
							'myspreadshop.no',
							'myspreadshop.pl',
							'myspreadshop.se',
							'myspreadshop.co.uk',
							'api.stdlib.com',
							'storj.farm',
							'utwente.io',
							'soc.srcf.net',
							'user.srcf.net',
							'temp-dns.com',
							'supabase.co',
							'supabase.in',
							'supabase.net',
							'su.paba.se',
							'*.s5y.io',
							'*.sensiosite.cloud',
							'syncloud.it',
							'dscloud.biz',
							'direct.quickconnect.cn',
							'dsmynas.com',
							'familyds.com',
							'diskstation.me',
							'dscloud.me',
							'i234.me',
							'myds.me',
							'synology.me',
							'dscloud.mobi',
							'dsmynas.net',
							'familyds.net',
							'dsmynas.org',
							'familyds.org',
							'vpnplus.to',
							'direct.quickconnect.to',
							'tabitorder.co.il',
							'taifun-dns.de',
							'beta.tailscale.net',
							'ts.net',
							'gda.pl',
							'gdansk.pl',
							'gdynia.pl',
							'med.pl',
							'sopot.pl',
							'site.tb-hosting.com',
							'edugit.io',
							's3.teckids.org',
							'telebit.app',
							'telebit.io',
							'*.telebit.xyz',
							'gwiddle.co.uk',
							'*.firenet.ch',
							'*.svc.firenet.ch',
							'reservd.com',
							'thingdustdata.com',
							'cust.dev.thingdust.io',
							'cust.disrec.thingdust.io',
							'cust.prod.thingdust.io',
							'cust.testing.thingdust.io',
							'reservd.dev.thingdust.io',
							'reservd.disrec.thingdust.io',
							'reservd.testing.thingdust.io',
							'tickets.io',
							'arvo.network',
							'azimuth.network',
							'tlon.network',
							'torproject.net',
							'pages.torproject.net',
							'bloxcms.com',
							'townnews-staging.com',
							'tbits.me',
							'12hp.at',
							'2ix.at',
							'4lima.at',
							'lima-city.at',
							'12hp.ch',
							'2ix.ch',
							'4lima.ch',
							'lima-city.ch',
							'trafficplex.cloud',
							'de.cool',
							'12hp.de',
							'2ix.de',
							'4lima.de',
							'lima-city.de',
							'1337.pictures',
							'clan.rip',
							'lima-city.rocks',
							'webspace.rocks',
							'lima.zone',
							'*.transurl.be',
							'*.transurl.eu',
							'*.transurl.nl',
							'site.transip.me',
							'tuxfamily.org',
							'dd-dns.de',
							'diskstation.eu',
							'diskstation.org',
							'dray-dns.de',
							'draydns.de',
							'dyn-vpn.de',
							'dynvpn.de',
							'mein-vigor.de',
							'my-vigor.de',
							'my-wan.de',
							'syno-ds.de',
							'synology-diskstation.de',
							'synology-ds.de',
							'typedream.app',
							'pro.typeform.com',
							'uber.space',
							'*.uberspace.de',
							'hk.com',
							'hk.org',
							'ltd.hk',
							'inc.hk',
							'name.pm',
							'sch.tf',
							'biz.wf',
							'sch.wf',
							'org.yt',
							'virtualuser.de',
							'virtual-user.de',
							'upli.io',
							'urown.cloud',
							'dnsupdate.info',
							'lib.de.us',
							'2038.io',
							'vercel.app',
							'vercel.dev',
							'now.sh',
							'router.management',
							'v-info.info',
							'voorloper.cloud',
							'neko.am',
							'nyaa.am',
							'be.ax',
							'cat.ax',
							'es.ax',
							'eu.ax',
							'gg.ax',
							'mc.ax',
							'us.ax',
							'xy.ax',
							'nl.ci',
							'xx.gl',
							'app.gp',
							'blog.gt',
							'de.gt',
							'to.gt',
							'be.gy',
							'cc.hn',
							'blog.kg',
							'io.kg',
							'jp.kg',
							'tv.kg',
							'uk.kg',
							'us.kg',
							'de.ls',
							'at.md',
							'de.md',
							'jp.md',
							'to.md',
							'indie.porn',
							'vxl.sh',
							'ch.tc',
							'me.tc',
							'we.tc',
							'nyan.to',
							'at.vg',
							'blog.vu',
							'dev.vu',
							'me.vu',
							'v.ua',
							'*.vultrobjects.com',
							'wafflecell.com',
							'*.webhare.dev',
							'reserve-online.net',
							'reserve-online.com',
							'bookonline.app',
							'hotelwithflight.com',
							'wedeploy.io',
							'wedeploy.me',
							'wedeploy.sh',
							'remotewd.com',
							'pages.wiardweb.com',
							'wmflabs.org',
							'toolforge.org',
							'wmcloud.org',
							'panel.gg',
							'daemon.panel.gg',
							'messwithdns.com',
							'woltlab-demo.com',
							'myforum.community',
							'community-pro.de',
							'diskussionsbereich.de',
							'community-pro.net',
							'meinforum.net',
							'affinitylottery.org.uk',
							'raffleentry.org.uk',
							'weeklylottery.org.uk',
							'wpenginepowered.com',
							'js.wpenginepowered.com',
							'wixsite.com',
							'editorx.io',
							'half.host',
							'xnbay.com',
							'u2.xnbay.com',
							'u2-local.xnbay.com',
							'cistron.nl',
							'demon.nl',
							'xs4all.space',
							'yandexcloud.net',
							'storage.yandexcloud.net',
							'website.yandexcloud.net',
							'official.academy',
							'yolasite.com',
							'ybo.faith',
							'yombo.me',
							'homelink.one',
							'ybo.party',
							'ybo.review',
							'ybo.science',
							'ybo.trade',
							'ynh.fr',
							'nohost.me',
							'noho.st',
							'za.net',
							'za.org',
							'bss.design',
							'basicserver.io',
							'virtualserver.io',
							'enterprisecloud.nu',
						];
					},
				}),
				require_psl = __commonJS({
					'node_modules/psl/index.js'(exports) {
						var Punycode = require_punycode(),
							internals = {};
						(internals.rules = require_rules().map(function (rule) {
							return {
								rule,
								suffix: rule.replace(/^(\*\.|\!)/, ''),
								punySuffix: -1,
								wildcard: '*' === rule.charAt(0),
								exception: '!' === rule.charAt(0),
							};
						})),
							(internals.endsWith = function (str, suffix) {
								return (
									-1 !==
									str.indexOf(
										suffix,
										str.length - suffix.length,
									)
								);
							}),
							(internals.findRule = function (domain) {
								var punyDomain = Punycode.toASCII(domain);
								return internals.rules.reduce(function (
									memo,
									rule,
								) {
									return (
										-1 === rule.punySuffix &&
											(rule.punySuffix = Punycode.toASCII(
												rule.suffix,
											)),
										internals.endsWith(
											punyDomain,
											'.' + rule.punySuffix,
										) || punyDomain === rule.punySuffix
											? rule
											: memo
									);
								},
								null);
							}),
							(exports.errorCodes = {
								DOMAIN_TOO_SHORT: 'Domain name too short.',
								DOMAIN_TOO_LONG:
									'Domain name too long. It should be no more than 255 chars.',
								LABEL_STARTS_WITH_DASH:
									'Domain name label can not start with a dash.',
								LABEL_ENDS_WITH_DASH:
									'Domain name label can not end with a dash.',
								LABEL_TOO_LONG:
									'Domain name label should be at most 63 chars long.',
								LABEL_TOO_SHORT:
									'Domain name label should be at least 1 character long.',
								LABEL_INVALID_CHARS:
									'Domain name label can only contain alphanumeric characters or dashes.',
							}),
							(internals.validate = function (input) {
								var ascii = Punycode.toASCII(input);
								if (ascii.length < 1) return 'DOMAIN_TOO_SHORT';
								if (ascii.length > 255)
									return 'DOMAIN_TOO_LONG';
								for (
									var label, labels = ascii.split('.'), i = 0;
									i < labels.length;
									++i
								) {
									if (!(label = labels[i]).length)
										return 'LABEL_TOO_SHORT';
									if (label.length > 63)
										return 'LABEL_TOO_LONG';
									if ('-' === label.charAt(0))
										return 'LABEL_STARTS_WITH_DASH';
									if ('-' === label.charAt(label.length - 1))
										return 'LABEL_ENDS_WITH_DASH';
									if (!/^[a-z0-9\-]+$/.test(label))
										return 'LABEL_INVALID_CHARS';
								}
							}),
							(exports.parse = function (input) {
								if ('string' != typeof input)
									throw new TypeError(
										'Domain name must be a string.',
									);
								var domain = input.slice(0).toLowerCase();
								'.' === domain.charAt(domain.length - 1) &&
									(domain = domain.slice(
										0,
										domain.length - 1,
									));
								var error = internals.validate(domain);
								if (error)
									return {
										input,
										error: {
											message: exports.errorCodes[error],
											code: error,
										},
									};
								var parsed = {
										input,
										tld: null,
										sld: null,
										domain: null,
										subdomain: null,
										listed: !1,
									},
									domainParts = domain.split('.');
								if (
									'local' ===
									domainParts[domainParts.length - 1]
								)
									return parsed;
								var handlePunycode = function () {
										return /xn--/.test(domain)
											? (parsed.domain &&
													(parsed.domain =
														Punycode.toASCII(
															parsed.domain,
														)),
											  parsed.subdomain &&
													(parsed.subdomain =
														Punycode.toASCII(
															parsed.subdomain,
														)),
											  parsed)
											: parsed;
									},
									rule = internals.findRule(domain);
								if (!rule)
									return domainParts.length < 2
										? parsed
										: ((parsed.tld = domainParts.pop()),
										  (parsed.sld = domainParts.pop()),
										  (parsed.domain = [
												parsed.sld,
												parsed.tld,
										  ].join('.')),
										  domainParts.length &&
												(parsed.subdomain =
													domainParts.pop()),
										  handlePunycode());
								parsed.listed = !0;
								var tldParts = rule.suffix.split('.'),
									privateParts = domainParts.slice(
										0,
										domainParts.length - tldParts.length,
									);
								return (
									rule.exception &&
										privateParts.push(tldParts.shift()),
									(parsed.tld = tldParts.join('.')),
									privateParts.length
										? (rule.wildcard &&
												(tldParts.unshift(
													privateParts.pop(),
												),
												(parsed.tld =
													tldParts.join('.'))),
										  privateParts.length
												? ((parsed.sld =
														privateParts.pop()),
												  (parsed.domain = [
														parsed.sld,
														parsed.tld,
												  ].join('.')),
												  privateParts.length &&
														(parsed.subdomain =
															privateParts.join(
																'.',
															)),
												  handlePunycode())
												: handlePunycode())
										: handlePunycode()
								);
							}),
							(exports.get = function (domain) {
								return (
									(domain && exports.parse(domain).domain) ||
									null
								);
							}),
							(exports.isValid = function (domain) {
								var parsed = exports.parse(domain);
								return Boolean(parsed.domain && parsed.listed);
							});
					},
				}),
				require_pubsuffix_psl = __commonJS({
					'node_modules/tough-cookie/lib/pubsuffix-psl.js'(exports) {
						var psl = require_psl(),
							SPECIAL_USE_DOMAINS = [
								'local',
								'example',
								'invalid',
								'localhost',
								'test',
							],
							SPECIAL_TREATMENT_DOMAINS = [
								'localhost',
								'invalid',
							];
						exports.getPublicSuffix = function getPublicSuffix(
							domain,
							options = {},
						) {
							const domainParts = domain.split('.'),
								topLevelDomain =
									domainParts[domainParts.length - 1],
								allowSpecialUseDomain =
									!!options.allowSpecialUseDomain,
								ignoreError = !!options.ignoreError;
							if (
								allowSpecialUseDomain &&
								SPECIAL_USE_DOMAINS.includes(topLevelDomain)
							) {
								if (domainParts.length > 1) {
									return `${
										domainParts[domainParts.length - 2]
									}.${topLevelDomain}`;
								}
								if (
									SPECIAL_TREATMENT_DOMAINS.includes(
										topLevelDomain,
									)
								)
									return `${topLevelDomain}`;
							}
							if (
								!ignoreError &&
								SPECIAL_USE_DOMAINS.includes(topLevelDomain)
							)
								throw new Error(
									`Cookie has domain set to the public suffix "${topLevelDomain}" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`,
								);
							return psl.get(domain);
						};
					},
				}),
				require_store = __commonJS({
					'node_modules/tough-cookie/lib/store.js'(exports) {
						exports.Store = class {
							constructor() {
								this.synchronous = !1;
							}
							findCookie(domain, path, key, cb) {
								throw new Error(
									'findCookie is not implemented',
								);
							}
							findCookies(
								domain,
								path,
								allowSpecialUseDomain,
								cb,
							) {
								throw new Error(
									'findCookies is not implemented',
								);
							}
							putCookie(cookie, cb) {
								throw new Error('putCookie is not implemented');
							}
							updateCookie(oldCookie, newCookie, cb) {
								throw new Error(
									'updateCookie is not implemented',
								);
							}
							removeCookie(domain, path, key, cb) {
								throw new Error(
									'removeCookie is not implemented',
								);
							}
							removeCookies(domain, path, cb) {
								throw new Error(
									'removeCookies is not implemented',
								);
							}
							removeAllCookies(cb) {
								throw new Error(
									'removeAllCookies is not implemented',
								);
							}
							getAllCookies(cb) {
								throw new Error(
									'getAllCookies is not implemented (therefore jar cannot be serialized)',
								);
							}
						};
					},
				}),
				require_universalify = __commonJS({
					'node_modules/universalify/index.js'(exports) {
						(exports.fromCallback = function (fn) {
							return Object.defineProperty(
								function () {
									if (
										'function' !=
										typeof arguments[arguments.length - 1]
									)
										return new Promise(
											(resolve, reject) => {
												(arguments[arguments.length] = (
													err,
													res,
												) => {
													if (err) return reject(err);
													resolve(res);
												}),
													arguments.length++,
													fn.apply(this, arguments);
											},
										);
									fn.apply(this, arguments);
								},
								'name',
								{ value: fn.name },
							);
						}),
							(exports.fromPromise = function (fn) {
								return Object.defineProperty(
									function () {
										const cb =
											arguments[arguments.length - 1];
										if ('function' != typeof cb)
											return fn.apply(this, arguments);
										delete arguments[arguments.length - 1],
											arguments.length--,
											fn
												.apply(this, arguments)
												.then((r) => cb(null, r), cb);
									},
									'name',
									{ value: fn.name },
								);
							});
					},
				}),
				require_permuteDomain = __commonJS({
					'node_modules/tough-cookie/lib/permuteDomain.js'(exports) {
						var pubsuffix = require_pubsuffix_psl();
						exports.permuteDomain = function permuteDomain(
							domain,
							allowSpecialUseDomain,
						) {
							const pubSuf = pubsuffix.getPublicSuffix(domain, {
								allowSpecialUseDomain,
							});
							if (!pubSuf) return null;
							if (pubSuf == domain) return [domain];
							'.' == domain.slice(-1) &&
								(domain = domain.slice(0, -1));
							const parts = domain
								.slice(0, -(pubSuf.length + 1))
								.split('.')
								.reverse();
							let cur = pubSuf;
							const permutations = [cur];
							for (; parts.length; )
								(cur = `${parts.shift()}.${cur}`),
									permutations.push(cur);
							return permutations;
						};
					},
				}),
				require_pathMatch = __commonJS({
					'node_modules/tough-cookie/lib/pathMatch.js'(exports) {
						exports.pathMatch = function pathMatch(
							reqPath,
							cookiePath,
						) {
							if (cookiePath === reqPath) return !0;
							if (0 === reqPath.indexOf(cookiePath)) {
								if ('/' === cookiePath.substr(-1)) return !0;
								if (
									'/' === reqPath.substr(cookiePath.length, 1)
								)
									return !0;
							}
							return !1;
						};
					},
				}),
				require_utilHelper = __commonJS({
					'node_modules/tough-cookie/lib/utilHelper.js'(exports) {
						function requireUtil() {
							try {
								return __require('util');
							} catch (e) {
								return null;
							}
						}
						function lookupCustomInspectSymbol() {
							return Symbol.for('nodejs.util.inspect.custom');
						}
						(exports.getUtilInspect = function getUtilInspect(
							fallback,
							options = {},
						) {
							const util = (options.requireUtil || requireUtil)();
							return function inspect(value, showHidden, depth) {
								return util
									? util.inspect(value, showHidden, depth)
									: fallback(value);
							};
						}),
							(exports.getCustomInspectSymbol =
								function getCustomInspectSymbol(options = {}) {
									return (
										(
											options.lookupCustomInspectSymbol ||
											lookupCustomInspectSymbol
										)() ||
										(function tryReadingCustomSymbolFromUtilInspect(
											options,
										) {
											const util = (
												options.requireUtil ||
												requireUtil
											)();
											return util
												? util.inspect.custom
												: null;
										})(options)
									);
								});
					},
				}),
				require_memstore = __commonJS({
					'node_modules/tough-cookie/lib/memstore.js'(exports) {
						var { fromCallback } = require_universalify(),
							Store = require_store().Store,
							permuteDomain =
								require_permuteDomain().permuteDomain,
							pathMatch = require_pathMatch().pathMatch,
							{ getCustomInspectSymbol, getUtilInspect } =
								require_utilHelper(),
							MemoryCookieStore = class extends Store {
								constructor() {
									super(),
										(this.synchronous = !0),
										(this.idx = Object.create(null));
									const customInspectSymbol =
										getCustomInspectSymbol();
									customInspectSymbol &&
										(this[customInspectSymbol] =
											this.inspect);
								}
								inspect() {
									return `{ idx: ${{
										inspect:
											getUtilInspect(inspectFallback),
									}.inspect(this.idx, !1, 2)} }`;
								}
								findCookie(domain, path, key, cb) {
									return this.idx[domain] &&
										this.idx[domain][path]
										? cb(
												null,
												this.idx[domain][path][key] ||
													null,
										  )
										: cb(null, void 0);
								}
								findCookies(
									domain,
									path,
									allowSpecialUseDomain,
									cb,
								) {
									const results = [];
									if (
										('function' ==
											typeof allowSpecialUseDomain &&
											((cb = allowSpecialUseDomain),
											(allowSpecialUseDomain = !0)),
										!domain)
									)
										return cb(null, []);
									let pathMatcher;
									pathMatcher = path
										? function matchRFC(domainIndex) {
												Object.keys(
													domainIndex,
												).forEach((cookiePath) => {
													if (
														pathMatch(
															path,
															cookiePath,
														)
													) {
														const pathIndex =
															domainIndex[
																cookiePath
															];
														for (const key in pathIndex)
															results.push(
																pathIndex[key],
															);
													}
												});
										  }
										: function matchAll(domainIndex) {
												for (const curPath in domainIndex) {
													const pathIndex =
														domainIndex[curPath];
													for (const key in pathIndex)
														results.push(
															pathIndex[key],
														);
												}
										  };
									const domains = permuteDomain(
											domain,
											allowSpecialUseDomain,
										) || [domain],
										idx = this.idx;
									domains.forEach((curDomain) => {
										const domainIndex = idx[curDomain];
										domainIndex && pathMatcher(domainIndex);
									}),
										cb(null, results);
								}
								putCookie(cookie, cb) {
									this.idx[cookie.domain] ||
										(this.idx[cookie.domain] =
											Object.create(null)),
										this.idx[cookie.domain][cookie.path] ||
											(this.idx[cookie.domain][
												cookie.path
											] = Object.create(null)),
										(this.idx[cookie.domain][cookie.path][
											cookie.key
										] = cookie),
										cb(null);
								}
								updateCookie(oldCookie, newCookie, cb) {
									this.putCookie(newCookie, cb);
								}
								removeCookie(domain, path, key, cb) {
									this.idx[domain] &&
										this.idx[domain][path] &&
										this.idx[domain][path][key] &&
										delete this.idx[domain][path][key],
										cb(null);
								}
								removeCookies(domain, path, cb) {
									return (
										this.idx[domain] &&
											(path
												? delete this.idx[domain][path]
												: delete this.idx[domain]),
										cb(null)
									);
								}
								removeAllCookies(cb) {
									return (
										(this.idx = Object.create(null)),
										cb(null)
									);
								}
								getAllCookies(cb) {
									const cookies = [],
										idx = this.idx;
									Object.keys(idx).forEach((domain) => {
										Object.keys(idx[domain]).forEach(
											(path) => {
												Object.keys(
													idx[domain][path],
												).forEach((key) => {
													null !== key &&
														cookies.push(
															idx[domain][path][
																key
															],
														);
												});
											},
										);
									}),
										cookies.sort(
											(a, b) =>
												(a.creationIndex || 0) -
												(b.creationIndex || 0),
										),
										cb(null, cookies);
								}
							};
						function inspectFallback(val) {
							const domains = Object.keys(val);
							if (0 === domains.length)
								return '[Object: null prototype] {}';
							let result = '[Object: null prototype] {\n';
							return (
								Object.keys(val).forEach((domain, i) => {
									(result += (function formatDomain(
										domainName,
										domainValue,
									) {
										const indent = '  ';
										let result = `${indent}'${domainName}': [Object: null prototype] {\n`;
										return (
											Object.keys(domainValue).forEach(
												(path, i, paths) => {
													(result +=
														(function formatPath(
															pathName,
															pathValue,
														) {
															const indent =
																'    ';
															let result = `${indent}'${pathName}': [Object: null prototype] {\n`;
															return (
																Object.keys(
																	pathValue,
																).forEach(
																	(
																		cookieName,
																		i,
																		cookieNames,
																	) => {
																		const cookie =
																			pathValue[
																				cookieName
																			];
																		(result += `      ${cookieName}: ${cookie.inspect()}`),
																			i <
																				cookieNames.length -
																					1 &&
																				(result +=
																					','),
																			(result +=
																				'\n');
																	},
																),
																(result += `${indent}}`),
																result
															);
														})(
															path,
															domainValue[path],
														)),
														i < paths.length - 1 &&
															(result += ','),
														(result += '\n');
												},
											),
											(result += `${indent}}`),
											result
										);
									})(domain, val[domain])),
										i < domains.length - 1 &&
											(result += ','),
										(result += '\n');
								}),
								(result += '}'),
								result
							);
						}
						[
							'findCookie',
							'findCookies',
							'putCookie',
							'updateCookie',
							'removeCookie',
							'removeCookies',
							'removeAllCookies',
							'getAllCookies',
						].forEach((name) => {
							MemoryCookieStore.prototype[name] = fromCallback(
								MemoryCookieStore.prototype[name],
							);
						}),
							(exports.MemoryCookieStore = MemoryCookieStore),
							(exports.inspectFallback = inspectFallback);
					},
				}),
				require_validators = __commonJS({
					'node_modules/tough-cookie/lib/validators.js'(exports) {
						var toString = Object.prototype.toString;
						function isFunction(data) {
							return 'function' == typeof data;
						}
						function isNonEmptyString(data) {
							return isString(data) && '' !== data;
						}
						function isString(data) {
							return (
								'string' == typeof data ||
								data instanceof String
							);
						}
						function isObject(data) {
							return '[object Object]' === toString.call(data);
						}
						function isInstanceStrict(data, prototype) {
							try {
								return data instanceof prototype;
							} catch (error) {
								return !1;
							}
						}
						var ParameterError = class extends Error {
							constructor(...params) {
								super(...params);
							}
						};
						(exports.ParameterError = ParameterError),
							(exports.isFunction = isFunction),
							(exports.isNonEmptyString = isNonEmptyString),
							(exports.isDate = function isDate(data) {
								return (
									isInstanceStrict(data, Date) &&
									(function isInteger(data) {
										return (
											'number' == typeof data &&
											data % 1 == 0
										);
									})(data.getTime())
								);
							}),
							(exports.isEmptyString = function isEmptyString(
								data,
							) {
								return (
									'' === data ||
									(data instanceof String &&
										'' === data.toString())
								);
							}),
							(exports.isString = isString),
							(exports.isObject = isObject),
							(exports.isUrlStringOrObject =
								function isUrlStringOrObject(data) {
									return (
										isNonEmptyString(data) ||
										(isObject(data) &&
											'hostname' in data &&
											'pathname' in data &&
											'protocol' in data) ||
										isInstanceStrict(data, URL)
									);
								}),
							(exports.validate = function validate(
								bool,
								cb,
								options,
							) {
								if (
									(isFunction(cb) ||
										((options = cb), (cb = null)),
									isObject(options) ||
										(options = { Error: 'Failed Check' }),
									!bool)
								) {
									if (!cb) throw new ParameterError(options);
									cb(new ParameterError(options));
								}
							});
					},
				}),
				require_version = __commonJS({
					'node_modules/tough-cookie/lib/version.js'(
						exports,
						module,
					) {
						module.exports = '4.1.4';
					},
				}),
				require_cookie = __commonJS({
					'node_modules/tough-cookie/lib/cookie.js'(exports) {
						var punycode = require_punycode(),
							urlParse = require_url_parse(),
							pubsuffix = require_pubsuffix_psl(),
							Store = require_store().Store,
							MemoryCookieStore =
								require_memstore().MemoryCookieStore,
							pathMatch = require_pathMatch().pathMatch,
							validators = require_validators(),
							VERSION = require_version(),
							{ fromCallback } = require_universalify(),
							{ getCustomInspectSymbol } = require_utilHelper(),
							COOKIE_OCTETS =
								/^[\x21\x23-\x2B\x2D-\x3A\x3C-\x5B\x5D-\x7E]+$/,
							CONTROL_CHARS = /[\x00-\x1F]/,
							TERMINATORS = ['\n', '\r', '\0'],
							PATH_VALUE = /[\x20-\x3A\x3C-\x7E]+/,
							DATE_DELIM =
								/[\x09\x20-\x2F\x3B-\x40\x5B-\x60\x7B-\x7E]/,
							MONTH_TO_NUM = {
								jan: 0,
								feb: 1,
								mar: 2,
								apr: 3,
								may: 4,
								jun: 5,
								jul: 6,
								aug: 7,
								sep: 8,
								oct: 9,
								nov: 10,
								dec: 11,
							},
							SAME_SITE_CONTEXT_VAL_ERR =
								'Invalid sameSiteContext option for getCookies(); expected one of "strict", "lax", or "none"';
						function checkSameSiteContext(value) {
							validators.validate(
								validators.isNonEmptyString(value),
								value,
							);
							const context = String(value).toLowerCase();
							return 'none' === context ||
								'lax' === context ||
								'strict' === context
								? context
								: null;
						}
						var PrefixSecurityEnum = Object.freeze({
								SILENT: 'silent',
								STRICT: 'strict',
								DISABLED: 'unsafe-disabled',
							}),
							IP_REGEX_LOWERCASE =
								/(?:^(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}$)|(?:^(?:(?:[a-f\d]{1,4}:){7}(?:[a-f\d]{1,4}|:)|(?:[a-f\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|:[a-f\d]{1,4}|:)|(?:[a-f\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,2}|:)|(?:[a-f\d]{1,4}:){4}(?:(?::[a-f\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,3}|:)|(?:[a-f\d]{1,4}:){3}(?:(?::[a-f\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,4}|:)|(?:[a-f\d]{1,4}:){2}(?:(?::[a-f\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,5}|:)|(?:[a-f\d]{1,4}:){1}(?:(?::[a-f\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,7}|:)))$)/,
							IP_V6_REGEX =
								'\n\\[?(?:\n(?:[a-fA-F\\d]{1,4}:){7}(?:[a-fA-F\\d]{1,4}|:)|\n(?:[a-fA-F\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-fA-F\\d]{1,4}|:)|\n(?:[a-fA-F\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,2}|:)|\n(?:[a-fA-F\\d]{1,4}:){4}(?:(?::[a-fA-F\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,3}|:)|\n(?:[a-fA-F\\d]{1,4}:){3}(?:(?::[a-fA-F\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,4}|:)|\n(?:[a-fA-F\\d]{1,4}:){2}(?:(?::[a-fA-F\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,5}|:)|\n(?:[a-fA-F\\d]{1,4}:){1}(?:(?::[a-fA-F\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,6}|:)|\n(?::(?:(?::[a-fA-F\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,7}|:))\n)(?:%[0-9a-zA-Z]{1,})?\\]?\n'
									.replace(/\s*\/\/.*$/gm, '')
									.replace(/\n/g, '')
									.trim(),
							IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);
						function parseDigits(
							token,
							minDigits,
							maxDigits,
							trailingOK,
						) {
							let count = 0;
							for (; count < token.length; ) {
								const c = token.charCodeAt(count);
								if (c <= 47 || c >= 58) break;
								count++;
							}
							return count < minDigits || count > maxDigits
								? null
								: trailingOK || count == token.length
								? parseInt(token.substr(0, count), 10)
								: null;
						}
						function parseTime(token) {
							const parts = token.split(':'),
								result = [0, 0, 0];
							if (3 !== parts.length) return null;
							for (let i = 0; i < 3; i++) {
								const trailingOK = 2 == i,
									num = parseDigits(
										parts[i],
										1,
										2,
										trailingOK,
									);
								if (null === num) return null;
								result[i] = num;
							}
							return result;
						}
						function parseMonth(token) {
							token = String(token).substr(0, 3).toLowerCase();
							const num = MONTH_TO_NUM[token];
							return num >= 0 ? num : null;
						}
						function parseDate(str) {
							if (!str) return;
							const tokens = str.split(DATE_DELIM);
							if (!tokens) return;
							let hour = null,
								minute = null,
								second = null,
								dayOfMonth = null,
								month = null,
								year = null;
							for (let i = 0; i < tokens.length; i++) {
								const token = tokens[i].trim();
								if (!token.length) continue;
								let result;
								null === second &&
								((result = parseTime(token)), result)
									? ((hour = result[0]),
									  (minute = result[1]),
									  (second = result[2]))
									: null !== dayOfMonth ||
									  ((result = parseDigits(token, 1, 2, !0)),
									  null === result)
									? null !== month ||
									  ((result = parseMonth(token)),
									  null === result)
										? null === year &&
										  ((result = parseDigits(
												token,
												2,
												4,
												!0,
										  )),
										  null !== result &&
												((year = result),
												year >= 70 && year <= 99
													? (year += 1900)
													: year >= 0 &&
													  year <= 69 &&
													  (year += 2e3)))
										: (month = result)
									: (dayOfMonth = result);
							}
							return null === dayOfMonth ||
								null === month ||
								null === year ||
								null === second ||
								dayOfMonth < 1 ||
								dayOfMonth > 31 ||
								year < 1601 ||
								hour > 23 ||
								minute > 59 ||
								second > 59
								? void 0
								: new Date(
										Date.UTC(
											year,
											month,
											dayOfMonth,
											hour,
											minute,
											second,
										),
								  );
						}
						function formatDate(date) {
							return (
								validators.validate(
									validators.isDate(date),
									date,
								),
								date.toUTCString()
							);
						}
						function canonicalDomain(str) {
							return null == str
								? null
								: ((str = str.trim().replace(/^\./, '')),
								  IP_V6_REGEX_OBJECT.test(str) &&
										(str = str
											.replace('[', '')
											.replace(']', '')),
								  punycode &&
										/[^\u0001-\u007f]/.test(str) &&
										(str = punycode.toASCII(str)),
								  str.toLowerCase());
						}
						function domainMatch(str, domStr, canonicalize) {
							if (null == str || null == domStr) return null;
							if (
								(!1 !== canonicalize &&
									((str = canonicalDomain(str)),
									(domStr = canonicalDomain(domStr))),
								str == domStr)
							)
								return !0;
							const idx = str.lastIndexOf(domStr);
							return (
								!(idx <= 0) &&
								str.length === domStr.length + idx &&
								'.' === str.substr(idx - 1, 1) &&
								!IP_REGEX_LOWERCASE.test(str)
							);
						}
						function defaultPath(path) {
							if (!path || '/' !== path.substr(0, 1)) return '/';
							if ('/' === path) return path;
							const rightSlash = path.lastIndexOf('/');
							return 0 === rightSlash
								? '/'
								: path.slice(0, rightSlash);
						}
						function parseCookiePair(cookiePair, looseMode) {
							(cookiePair = (function trimTerminator(str) {
								if (validators.isEmptyString(str)) return str;
								for (let t = 0; t < TERMINATORS.length; t++) {
									const terminatorIdx = str.indexOf(
										TERMINATORS[t],
									);
									-1 !== terminatorIdx &&
										(str = str.substr(0, terminatorIdx));
								}
								return str;
							})(cookiePair)),
								validators.validate(
									validators.isString(cookiePair),
									cookiePair,
								);
							let cookieName,
								cookieValue,
								firstEq = cookiePair.indexOf('=');
							if (looseMode)
								0 === firstEq &&
									(firstEq = (cookiePair =
										cookiePair.substr(1)).indexOf('='));
							else if (firstEq <= 0) return;
							if (
								(firstEq <= 0
									? ((cookieName = ''),
									  (cookieValue = cookiePair.trim()))
									: ((cookieName = cookiePair
											.substr(0, firstEq)
											.trim()),
									  (cookieValue = cookiePair
											.substr(firstEq + 1)
											.trim())),
								CONTROL_CHARS.test(cookieName) ||
									CONTROL_CHARS.test(cookieValue))
							)
								return;
							const c = new Cookie();
							return (
								(c.key = cookieName), (c.value = cookieValue), c
							);
						}
						function parse(str, options) {
							if (
								((options && 'object' == typeof options) ||
									(options = {}),
								validators.isEmptyString(str) ||
									!validators.isString(str))
							)
								return null;
							const firstSemi = (str = str.trim()).indexOf(';'),
								c = parseCookiePair(
									-1 === firstSemi
										? str
										: str.substr(0, firstSemi),
									!!options.loose,
								);
							if (!c) return;
							if (-1 === firstSemi) return c;
							const unparsed = str.slice(firstSemi + 1).trim();
							if (0 === unparsed.length) return c;
							const cookie_avs = unparsed.split(';');
							for (; cookie_avs.length; ) {
								const av = cookie_avs.shift().trim();
								if (0 === av.length) continue;
								const av_sep = av.indexOf('=');
								let av_key, av_value;
								switch (
									(-1 === av_sep
										? ((av_key = av), (av_value = null))
										: ((av_key = av.substr(0, av_sep)),
										  (av_value = av.substr(av_sep + 1))),
									(av_key = av_key.trim().toLowerCase()),
									av_value && (av_value = av_value.trim()),
									av_key)
								) {
									case 'expires':
										if (av_value) {
											const exp = parseDate(av_value);
											exp && (c.expires = exp);
										}
										break;
									case 'max-age':
										if (
											av_value &&
											/^-?[0-9]+$/.test(av_value)
										) {
											const delta = parseInt(
												av_value,
												10,
											);
											c.setMaxAge(delta);
										}
										break;
									case 'domain':
										if (av_value) {
											const domain = av_value
												.trim()
												.replace(/^\./, '');
											domain &&
												(c.domain =
													domain.toLowerCase());
										}
										break;
									case 'path':
										c.path =
											av_value && '/' === av_value[0]
												? av_value
												: null;
										break;
									case 'secure':
										c.secure = !0;
										break;
									case 'httponly':
										c.httpOnly = !0;
										break;
									case 'samesite':
										switch (
											av_value
												? av_value.toLowerCase()
												: ''
										) {
											case 'strict':
												c.sameSite = 'strict';
												break;
											case 'lax':
												c.sameSite = 'lax';
												break;
											case 'none':
												c.sameSite = 'none';
												break;
											default:
												c.sameSite = void 0;
										}
										break;
									default:
										(c.extensions = c.extensions || []),
											c.extensions.push(av);
								}
							}
							return c;
						}
						function jsonParse(str) {
							let obj;
							try {
								obj = JSON.parse(str);
							} catch (e) {
								return e;
							}
							return obj;
						}
						function fromJSON(str) {
							if (!str || validators.isEmptyString(str))
								return null;
							let obj;
							if ('string' == typeof str) {
								if (
									((obj = jsonParse(str)),
									obj instanceof Error)
								)
									return null;
							} else obj = str;
							const c = new Cookie();
							for (
								let i = 0;
								i < Cookie.serializableProperties.length;
								i++
							) {
								const prop = Cookie.serializableProperties[i];
								void 0 !== obj[prop] &&
									obj[prop] !== cookieDefaults[prop] &&
									('expires' === prop ||
									'creation' === prop ||
									'lastAccessed' === prop
										? null === obj[prop]
											? (c[prop] = null)
											: (c[prop] =
													'Infinity' == obj[prop]
														? 'Infinity'
														: new Date(obj[prop]))
										: (c[prop] = obj[prop]));
							}
							return c;
						}
						function cookieCompare(a, b) {
							validators.validate(validators.isObject(a), a),
								validators.validate(validators.isObject(b), b);
							let cmp = 0;
							const aPathLen = a.path ? a.path.length : 0;
							if (
								((cmp =
									(b.path ? b.path.length : 0) - aPathLen),
								0 !== cmp)
							)
								return cmp;
							return (
								(cmp =
									(a.creation
										? a.creation.getTime()
										: 2147483647e3) -
									(b.creation
										? b.creation.getTime()
										: 2147483647e3)),
								0 !== cmp ||
									(cmp = a.creationIndex - b.creationIndex),
								cmp
							);
						}
						function getCookieContext(url) {
							if (url instanceof Object) return url;
							try {
								url = decodeURI(url);
							} catch (err) {}
							return urlParse(url);
						}
						var cookieDefaults = {
								key: '',
								value: '',
								expires: 'Infinity',
								maxAge: null,
								domain: null,
								path: null,
								secure: !1,
								httpOnly: !1,
								extensions: null,
								hostOnly: null,
								pathIsDefault: null,
								creation: null,
								lastAccessed: null,
								sameSite: void 0,
							},
							Cookie = class _Cookie {
								constructor(options = {}) {
									const customInspectSymbol =
										getCustomInspectSymbol();
									customInspectSymbol &&
										(this[customInspectSymbol] =
											this.inspect),
										Object.assign(
											this,
											cookieDefaults,
											options,
										),
										(this.creation =
											this.creation || new Date()),
										Object.defineProperty(
											this,
											'creationIndex',
											{
												configurable: !1,
												enumerable: !1,
												writable: !0,
												value: ++_Cookie.cookiesCreated,
											},
										);
								}
								inspect() {
									const now = Date.now(),
										hostOnly =
											null != this.hostOnly
												? this.hostOnly
												: '?',
										createAge = this.creation
											? now -
											  this.creation.getTime() +
											  'ms'
											: '?',
										accessAge = this.lastAccessed
											? now -
											  this.lastAccessed.getTime() +
											  'ms'
											: '?';
									return `Cookie="${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}"`;
								}
								toJSON() {
									const obj = {};
									for (const prop of _Cookie.serializableProperties)
										this[prop] !== cookieDefaults[prop] &&
											('expires' === prop ||
											'creation' === prop ||
											'lastAccessed' === prop
												? null === this[prop]
													? (obj[prop] = null)
													: (obj[prop] =
															'Infinity' ==
															this[prop]
																? 'Infinity'
																: this[
																		prop
																  ].toISOString())
												: 'maxAge' === prop
												? null !== this[prop] &&
												  (obj[prop] =
														this[prop] == 1 / 0 ||
														this[prop] == -1 / 0
															? this[
																	prop
															  ].toString()
															: this[prop])
												: this[prop] !==
														cookieDefaults[prop] &&
												  (obj[prop] = this[prop]));
									return obj;
								}
								clone() {
									return fromJSON(this.toJSON());
								}
								validate() {
									if (!COOKIE_OCTETS.test(this.value))
										return !1;
									if (
										!(
											this.expires == 1 / 0 ||
											this.expires instanceof Date ||
											parseDate(this.expires)
										)
									)
										return !1;
									if (null != this.maxAge && this.maxAge <= 0)
										return !1;
									if (
										null != this.path &&
										!PATH_VALUE.test(this.path)
									)
										return !1;
									const cdomain = this.cdomain();
									if (cdomain) {
										if (cdomain.match(/\.$/)) return !1;
										if (
											null ==
											pubsuffix.getPublicSuffix(cdomain)
										)
											return !1;
									}
									return !0;
								}
								setExpires(exp) {
									exp instanceof Date
										? (this.expires = exp)
										: (this.expires =
												parseDate(exp) || 'Infinity');
								}
								setMaxAge(age) {
									this.maxAge =
										age === 1 / 0 || age === -1 / 0
											? age.toString()
											: age;
								}
								cookieString() {
									let val = this.value;
									return (
										null == val && (val = ''),
										'' === this.key
											? val
											: `${this.key}=${val}`
									);
								}
								toString() {
									let str = this.cookieString();
									if (
										(this.expires != 1 / 0 &&
											(this.expires instanceof Date
												? (str += `; Expires=${formatDate(
														this.expires,
												  )}`)
												: (str += `; Expires=${this.expires}`)),
										null != this.maxAge &&
											this.maxAge != 1 / 0 &&
											(str += `; Max-Age=${this.maxAge}`),
										this.domain &&
											!this.hostOnly &&
											(str += `; Domain=${this.domain}`),
										this.path &&
											(str += `; Path=${this.path}`),
										this.secure && (str += '; Secure'),
										this.httpOnly && (str += '; HttpOnly'),
										this.sameSite &&
											'none' !== this.sameSite)
									) {
										const ssCanon =
											_Cookie.sameSiteCanonical[
												this.sameSite.toLowerCase()
											];
										str += `; SameSite=${
											ssCanon || this.sameSite
										}`;
									}
									return (
										this.extensions &&
											this.extensions.forEach((ext) => {
												str += `; ${ext}`;
											}),
										str
									);
								}
								TTL(now) {
									if (null != this.maxAge)
										return this.maxAge <= 0
											? 0
											: 1e3 * this.maxAge;
									let expires = this.expires;
									return expires != 1 / 0
										? (expires instanceof Date ||
												(expires =
													parseDate(expires) ||
													1 / 0),
										  expires == 1 / 0
												? 1 / 0
												: expires.getTime() -
												  (now || Date.now()))
										: 1 / 0;
								}
								expiryTime(now) {
									if (null != this.maxAge) {
										const relativeTo =
												now ||
												this.creation ||
												new Date(),
											age =
												this.maxAge <= 0
													? -1 / 0
													: 1e3 * this.maxAge;
										return relativeTo.getTime() + age;
									}
									return this.expires == 1 / 0
										? 1 / 0
										: this.expires.getTime();
								}
								expiryDate(now) {
									const millisec = this.expiryTime(now);
									return millisec == 1 / 0
										? new Date(2147483647e3)
										: millisec == -1 / 0
										? new Date(0)
										: new Date(millisec);
								}
								isPersistent() {
									return (
										null != this.maxAge ||
										this.expires != 1 / 0
									);
								}
								canonicalizedDomain() {
									return null == this.domain
										? null
										: canonicalDomain(this.domain);
								}
								cdomain() {
									return this.canonicalizedDomain();
								}
							};
						function getNormalizedPrefixSecurity(prefixSecurity) {
							if (null != prefixSecurity) {
								const normalizedPrefixSecurity =
									prefixSecurity.toLowerCase();
								switch (normalizedPrefixSecurity) {
									case PrefixSecurityEnum.STRICT:
									case PrefixSecurityEnum.SILENT:
									case PrefixSecurityEnum.DISABLED:
										return normalizedPrefixSecurity;
								}
							}
							return PrefixSecurityEnum.SILENT;
						}
						(Cookie.cookiesCreated = 0),
							(Cookie.parse = parse),
							(Cookie.fromJSON = fromJSON),
							(Cookie.serializableProperties =
								Object.keys(cookieDefaults)),
							(Cookie.sameSiteLevel = {
								strict: 3,
								lax: 2,
								none: 1,
							}),
							(Cookie.sameSiteCanonical = {
								strict: 'Strict',
								lax: 'Lax',
							});
						var CookieJar = class _CookieJar {
							constructor(
								store,
								options = { rejectPublicSuffixes: !0 },
							) {
								'boolean' == typeof options &&
									(options = {
										rejectPublicSuffixes: options,
									}),
									validators.validate(
										validators.isObject(options),
										options,
									),
									(this.rejectPublicSuffixes =
										options.rejectPublicSuffixes),
									(this.enableLooseMode =
										!!options.looseMode),
									(this.allowSpecialUseDomain =
										'boolean' !=
											typeof options.allowSpecialUseDomain ||
										options.allowSpecialUseDomain),
									(this.store =
										store || new MemoryCookieStore()),
									(this.prefixSecurity =
										getNormalizedPrefixSecurity(
											options.prefixSecurity,
										)),
									(this._cloneSync = syncWrap('clone')),
									(this._importCookiesSync =
										syncWrap('_importCookies')),
									(this.getCookiesSync =
										syncWrap('getCookies')),
									(this.getCookieStringSync =
										syncWrap('getCookieString')),
									(this.getSetCookieStringsSync = syncWrap(
										'getSetCookieStrings',
									)),
									(this.removeAllCookiesSync =
										syncWrap('removeAllCookies')),
									(this.setCookieSync =
										syncWrap('setCookie')),
									(this.serializeSync =
										syncWrap('serialize'));
							}
							setCookie(cookie, url, options, cb) {
								let err;
								if (
									(validators.validate(
										validators.isUrlStringOrObject(url),
										cb,
										options,
									),
									validators.isFunction(url))
								)
									return (cb = url)(
										new Error('No URL was specified'),
									);
								const context = getCookieContext(url);
								if (
									(validators.isFunction(options) &&
										((cb = options), (options = {})),
									validators.validate(
										validators.isFunction(cb),
										cb,
									),
									!validators.isNonEmptyString(cookie) &&
										!validators.isObject(cookie) &&
										cookie instanceof String &&
										0 == cookie.length)
								)
									return cb(null);
								const host = canonicalDomain(context.hostname),
									loose =
										options.loose || this.enableLooseMode;
								let sameSiteContext = null;
								if (
									options.sameSiteContext &&
									((sameSiteContext = checkSameSiteContext(
										options.sameSiteContext,
									)),
									!sameSiteContext)
								)
									return cb(
										new Error(SAME_SITE_CONTEXT_VAL_ERR),
									);
								if (
									'string' == typeof cookie ||
									cookie instanceof String
								) {
									if (
										!(cookie = Cookie.parse(cookie, {
											loose,
										}))
									)
										return (
											(err = new Error(
												'Cookie failed to parse',
											)),
											cb(options.ignoreError ? null : err)
										);
								} else if (!(cookie instanceof Cookie))
									return (
										(err = new Error(
											'First argument to setCookie must be a Cookie object or string',
										)),
										cb(options.ignoreError ? null : err)
									);
								const now = options.now || new Date();
								if (
									this.rejectPublicSuffixes &&
									cookie.domain
								) {
									if (
										null ==
											pubsuffix.getPublicSuffix(
												cookie.cdomain(),
												{
													allowSpecialUseDomain:
														this
															.allowSpecialUseDomain,
													ignoreError:
														options.ignoreError,
												},
											) &&
										!IP_V6_REGEX_OBJECT.test(cookie.domain)
									)
										return (
											(err = new Error(
												'Cookie has domain set to a public suffix',
											)),
											cb(options.ignoreError ? null : err)
										);
								}
								if (cookie.domain) {
									if (
										!domainMatch(host, cookie.cdomain(), !1)
									)
										return (
											(err = new Error(
												`Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`,
											)),
											cb(options.ignoreError ? null : err)
										);
									null == cookie.hostOnly &&
										(cookie.hostOnly = !1);
								} else
									(cookie.hostOnly = !0),
										(cookie.domain = host);
								if (
									((cookie.path && '/' === cookie.path[0]) ||
										((cookie.path = defaultPath(
											context.pathname,
										)),
										(cookie.pathIsDefault = !0)),
									!1 === options.http && cookie.httpOnly)
								)
									return (
										(err = new Error(
											"Cookie is HttpOnly and this isn't an HTTP API",
										)),
										cb(options.ignoreError ? null : err)
									);
								if (
									'none' !== cookie.sameSite &&
									void 0 !== cookie.sameSite &&
									sameSiteContext &&
									'none' === sameSiteContext
								)
									return (
										(err = new Error(
											'Cookie is SameSite but this is a cross-origin request',
										)),
										cb(options.ignoreError ? null : err)
									);
								const ignoreErrorForPrefixSecurity =
									this.prefixSecurity ===
									PrefixSecurityEnum.SILENT;
								if (
									!(
										this.prefixSecurity ===
										PrefixSecurityEnum.DISABLED
									)
								) {
									let errorMsg,
										errorFound = !1;
									if (
										(!(function isSecurePrefixConditionMet(
											cookie,
										) {
											return (
												validators.validate(
													validators.isObject(cookie),
													cookie,
												),
												!cookie.key.startsWith(
													'__Secure-',
												) || cookie.secure
											);
										})(cookie)
											? ((errorFound = !0),
											  (errorMsg =
													'Cookie has __Secure prefix but Secure attribute is not set'))
											: (function isHostPrefixConditionMet(
													cookie,
											  ) {
													return (
														validators.validate(
															validators.isObject(
																cookie,
															),
														),
														!cookie.key.startsWith(
															'__Host-',
														) ||
															(cookie.secure &&
																cookie.hostOnly &&
																null !=
																	cookie.path &&
																'/' ===
																	cookie.path)
													);
											  })(cookie) ||
											  ((errorFound = !0),
											  (errorMsg =
													"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'")),
										errorFound)
									)
										return cb(
											options.ignoreError ||
												ignoreErrorForPrefixSecurity
												? null
												: new Error(errorMsg),
										);
								}
								const store = this.store;
								store.updateCookie ||
									(store.updateCookie = function (
										oldCookie,
										newCookie,
										cb2,
									) {
										this.putCookie(newCookie, cb2);
									}),
									store.findCookie(
										cookie.domain,
										cookie.path,
										cookie.key,
										function withCookie(err2, oldCookie) {
											if (err2) return cb(err2);
											const next = function (err3) {
												if (err3) return cb(err3);
												cb(null, cookie);
											};
											if (oldCookie) {
												if (
													!1 === options.http &&
													oldCookie.httpOnly
												)
													return (
														(err2 = new Error(
															"old Cookie is HttpOnly and this isn't an HTTP API",
														)),
														cb(
															options.ignoreError
																? null
																: err2,
														)
													);
												(cookie.creation =
													oldCookie.creation),
													(cookie.creationIndex =
														oldCookie.creationIndex),
													(cookie.lastAccessed = now),
													store.updateCookie(
														oldCookie,
														cookie,
														next,
													);
											} else
												(cookie.creation =
													cookie.lastAccessed =
														now),
													store.putCookie(
														cookie,
														next,
													);
										},
									);
							}
							getCookies(url, options, cb) {
								validators.validate(
									validators.isUrlStringOrObject(url),
									cb,
									url,
								);
								const context = getCookieContext(url);
								validators.isFunction(options) &&
									((cb = options), (options = {})),
									validators.validate(
										validators.isObject(options),
										cb,
										options,
									),
									validators.validate(
										validators.isFunction(cb),
										cb,
									);
								const host = canonicalDomain(context.hostname),
									path = context.pathname || '/';
								let secure = options.secure;
								null != secure ||
									!context.protocol ||
									('https:' != context.protocol &&
										'wss:' != context.protocol) ||
									(secure = !0);
								let sameSiteLevel = 0;
								if (options.sameSiteContext) {
									const sameSiteContext =
										checkSameSiteContext(
											options.sameSiteContext,
										);
									if (
										((sameSiteLevel =
											Cookie.sameSiteLevel[
												sameSiteContext
											]),
										!sameSiteLevel)
									)
										return cb(
											new Error(
												SAME_SITE_CONTEXT_VAL_ERR,
											),
										);
								}
								let http = options.http;
								null == http && (http = !0);
								const now = options.now || Date.now(),
									expireCheck = !1 !== options.expire,
									allPaths = !!options.allPaths,
									store = this.store;
								function matchingCookie(c) {
									if (c.hostOnly) {
										if (c.domain != host) return !1;
									} else if (!domainMatch(host, c.domain, !1))
										return !1;
									if (!allPaths && !pathMatch(path, c.path))
										return !1;
									if (c.secure && !secure) return !1;
									if (c.httpOnly && !http) return !1;
									if (sameSiteLevel) {
										if (
											Cookie.sameSiteLevel[
												c.sameSite || 'none'
											] > sameSiteLevel
										)
											return !1;
									}
									return (
										!(
											expireCheck && c.expiryTime() <= now
										) ||
										(store.removeCookie(
											c.domain,
											c.path,
											c.key,
											() => {},
										),
										!1)
									);
								}
								store.findCookies(
									host,
									allPaths ? null : path,
									this.allowSpecialUseDomain,
									(err, cookies) => {
										if (err) return cb(err);
										(cookies =
											cookies.filter(matchingCookie)),
											!1 !== options.sort &&
												(cookies =
													cookies.sort(
														cookieCompare,
													));
										const now2 = new Date();
										for (const cookie of cookies)
											cookie.lastAccessed = now2;
										cb(null, cookies);
									},
								);
							}
							getCookieString(...args) {
								const cb = args.pop();
								validators.validate(
									validators.isFunction(cb),
									cb,
								);
								args.push(function (err, cookies) {
									err
										? cb(err)
										: cb(
												null,
												cookies
													.sort(cookieCompare)
													.map((c) =>
														c.cookieString(),
													)
													.join('; '),
										  );
								}),
									this.getCookies.apply(this, args);
							}
							getSetCookieStrings(...args) {
								const cb = args.pop();
								validators.validate(
									validators.isFunction(cb),
									cb,
								);
								args.push(function (err, cookies) {
									err
										? cb(err)
										: cb(
												null,
												cookies.map((c) =>
													c.toString(),
												),
										  );
								}),
									this.getCookies.apply(this, args);
							}
							serialize(cb) {
								validators.validate(
									validators.isFunction(cb),
									cb,
								);
								let type = this.store.constructor.name;
								validators.isObject(type) && (type = null);
								const serialized = {
									version: `tough-cookie@${VERSION}`,
									storeType: type,
									rejectPublicSuffixes:
										!!this.rejectPublicSuffixes,
									enableLooseMode: !!this.enableLooseMode,
									allowSpecialUseDomain:
										!!this.allowSpecialUseDomain,
									prefixSecurity: getNormalizedPrefixSecurity(
										this.prefixSecurity,
									),
									cookies: [],
								};
								if (
									!this.store.getAllCookies ||
									'function' !=
										typeof this.store.getAllCookies
								)
									return cb(
										new Error(
											'store does not support getAllCookies and cannot be serialized',
										),
									);
								this.store.getAllCookies((err, cookies) =>
									err
										? cb(err)
										: ((serialized.cookies = cookies.map(
												(cookie) => (
													delete (cookie =
														cookie instanceof Cookie
															? cookie.toJSON()
															: cookie)
														.creationIndex,
													cookie
												),
										  )),
										  cb(null, serialized)),
								);
							}
							toJSON() {
								return this.serializeSync();
							}
							_importCookies(serialized, cb) {
								let cookies = serialized.cookies;
								if (!cookies || !Array.isArray(cookies))
									return cb(
										new Error(
											'serialized jar has no cookies array',
										),
									);
								cookies = cookies.slice();
								const putNext = (err) => {
									if (err) return cb(err);
									if (!cookies.length) return cb(err, this);
									let cookie;
									try {
										cookie = fromJSON(cookies.shift());
									} catch (e) {
										return cb(e);
									}
									if (null === cookie) return putNext(null);
									this.store.putCookie(cookie, putNext);
								};
								putNext();
							}
							clone(newStore, cb) {
								1 === arguments.length &&
									((cb = newStore), (newStore = null)),
									this.serialize((err, serialized) => {
										if (err) return cb(err);
										_CookieJar.deserialize(
											serialized,
											newStore,
											cb,
										);
									});
							}
							cloneSync(newStore) {
								if (0 === arguments.length)
									return this._cloneSync();
								if (!newStore.synchronous)
									throw new Error(
										'CookieJar clone destination store is not synchronous; use async API instead.',
									);
								return this._cloneSync(newStore);
							}
							removeAllCookies(cb) {
								validators.validate(
									validators.isFunction(cb),
									cb,
								);
								const store = this.store;
								if (
									'function' ==
										typeof store.removeAllCookies &&
									store.removeAllCookies !==
										Store.prototype.removeAllCookies
								)
									return store.removeAllCookies(cb);
								store.getAllCookies((err, cookies) => {
									if (err) return cb(err);
									if (0 === cookies.length) return cb(null);
									let completedCount = 0;
									const removeErrors = [];
									function removeCookieCb(removeErr) {
										if (
											(removeErr &&
												removeErrors.push(removeErr),
											completedCount++,
											completedCount === cookies.length)
										)
											return cb(
												removeErrors.length
													? removeErrors[0]
													: null,
											);
									}
									cookies.forEach((cookie) => {
										store.removeCookie(
											cookie.domain,
											cookie.path,
											cookie.key,
											removeCookieCb,
										);
									});
								});
							}
							static deserialize(strOrObj, store, cb) {
								let serialized;
								if (
									(3 !== arguments.length &&
										((cb = store), (store = null)),
									validators.validate(
										validators.isFunction(cb),
										cb,
									),
									'string' == typeof strOrObj)
								) {
									if (
										((serialized = jsonParse(strOrObj)),
										serialized instanceof Error)
									)
										return cb(serialized);
								} else serialized = strOrObj;
								const jar = new _CookieJar(store, {
									rejectPublicSuffixes:
										serialized.rejectPublicSuffixes,
									looseMode: serialized.enableLooseMode,
									allowSpecialUseDomain:
										serialized.allowSpecialUseDomain,
									prefixSecurity: serialized.prefixSecurity,
								});
								jar._importCookies(serialized, (err) => {
									if (err) return cb(err);
									cb(null, jar);
								});
							}
							static deserializeSync(strOrObj, store) {
								const serialized =
										'string' == typeof strOrObj
											? JSON.parse(strOrObj)
											: strOrObj,
									jar = new _CookieJar(store, {
										rejectPublicSuffixes:
											serialized.rejectPublicSuffixes,
										looseMode: serialized.enableLooseMode,
									});
								if (!jar.store.synchronous)
									throw new Error(
										'CookieJar store is not synchronous; use async API instead.',
									);
								return jar._importCookiesSync(serialized), jar;
							}
						};
						function syncWrap(method) {
							return function (...args) {
								if (!this.store.synchronous)
									throw new Error(
										'CookieJar store is not synchronous; use async API instead.',
									);
								let syncErr, syncResult;
								if (
									(this[method](...args, (err, result) => {
										(syncErr = err), (syncResult = result);
									}),
									syncErr)
								)
									throw syncErr;
								return syncResult;
							};
						}
						(CookieJar.fromJSON = CookieJar.deserializeSync),
							[
								'_importCookies',
								'clone',
								'getCookies',
								'getCookieString',
								'getSetCookieStrings',
								'removeAllCookies',
								'serialize',
								'setCookie',
							].forEach((name) => {
								CookieJar.prototype[name] = fromCallback(
									CookieJar.prototype[name],
								);
							}),
							(CookieJar.deserialize = fromCallback(
								CookieJar.deserialize,
							)),
							(exports.version = VERSION),
							(exports.CookieJar = CookieJar),
							(exports.Cookie = Cookie),
							(exports.Store = Store),
							(exports.MemoryCookieStore = MemoryCookieStore),
							(exports.parseDate = parseDate),
							(exports.formatDate = formatDate),
							(exports.parse = parse),
							(exports.fromJSON = fromJSON),
							(exports.domainMatch = domainMatch),
							(exports.defaultPath = defaultPath),
							(exports.pathMatch = pathMatch),
							(exports.getPublicSuffix =
								pubsuffix.getPublicSuffix),
							(exports.cookieCompare = cookieCompare),
							(exports.permuteDomain =
								require_permuteDomain().permuteDomain),
							(exports.permutePath = function permutePath(path) {
								if (
									(validators.validate(
										validators.isString(path),
									),
									'/' === path)
								)
									return ['/'];
								const permutations = [path];
								for (; path.length > 1; ) {
									const lindex = path.lastIndexOf('/');
									if (0 === lindex) break;
									(path = path.substr(0, lindex)),
										permutations.push(path);
								}
								return permutations.push('/'), permutations;
							}),
							(exports.canonicalDomain = canonicalDomain),
							(exports.PrefixSecurityEnum = PrefixSecurityEnum),
							(exports.ParameterError =
								validators.ParameterError);
					},
				}),
				source_default = ((mod = require_cookie()),
				(isNodeMode = 1),
				(target = null != mod ? __create(__getProtoOf(mod)) : {}),
				((to, from, except, desc) => {
					if (
						(from && 'object' == typeof from) ||
						'function' == typeof from
					)
						for (let key of __getOwnPropNames(from))
							__hasOwnProp.call(to, key) ||
								key === except ||
								__defProp(to, key, {
									get: () => from[key],
									enumerable:
										!(desc = __getOwnPropDesc(from, key)) ||
										desc.enumerable,
								});
					return to;
				})(
					!isNodeMode && mod && mod.__esModule
						? target
						: __defProp(target, 'default', {
								value: mod,
								enumerable: !0,
						  }),
					mod,
				)).default;
			const {
				Cookie,
				CookieJar,
				Store,
				MemoryCookieStore,
				domainMatch,
				pathMatch,
			} = source_default;
			const cookieStore = new CookieJar(
				(0, is_node_process_lib.l)()
					? new MemoryCookieStore()
					: new (class WebStorageCookieStore extends Store {
							storage;
							storageKey;
							constructor() {
								super(),
									(0, lib.kG)(
										'undefined' != typeof localStorage,
										'Failed to create a WebStorageCookieStore: `localStorage` is not available in this environment. This is likely an issue with MSW. Please report it on GitHub: https://github.com/mswjs/msw/issues',
									),
									(this.synchronous = !0),
									(this.storage = localStorage),
									(this.storageKey = '__msw-cookie-store__');
							}
							findCookie(domain, path, key, callback) {
								try {
									const store2 = this.getStore();
									callback(
										null,
										this.filterCookiesFromList(store2, {
											domain,
											path,
											key,
										})[0] || null,
									);
								} catch (error) {
									error instanceof Error &&
										callback(error, null);
								}
							}
							findCookies(
								domain,
								path,
								allowSpecialUseDomain,
								callback,
							) {
								if (domain)
									try {
										const store2 = this.getStore();
										callback(
											null,
											this.filterCookiesFromList(store2, {
												domain,
												path,
											}),
										);
									} catch (error) {
										error instanceof Error &&
											callback(error, []);
									}
								else callback(null, []);
							}
							putCookie(cookie, callback) {
								try {
									if (0 === cookie.maxAge) return;
									const store2 = this.getStore();
									store2.push(cookie),
										this.updateStore(store2);
								} catch (error) {
									error instanceof Error && callback(error);
								}
							}
							updateCookie(oldCookie, newCookie, callback) {
								0 !== newCookie.maxAge
									? this.putCookie(newCookie, callback)
									: this.removeCookie(
											newCookie.domain || '',
											newCookie.path || '',
											newCookie.key,
											callback,
									  );
							}
							removeCookie(domain, path, key, callback) {
								try {
									const store2 = this.getStore(),
										nextStore = this.deleteCookiesFromList(
											store2,
											{ domain, path, key },
										);
									this.updateStore(nextStore), callback(null);
								} catch (error) {
									error instanceof Error && callback(error);
								}
							}
							removeCookies(domain, path, callback) {
								try {
									const store2 = this.getStore(),
										nextStore = this.deleteCookiesFromList(
											store2,
											{ domain, path },
										);
									this.updateStore(nextStore), callback(null);
								} catch (error) {
									error instanceof Error && callback(error);
								}
							}
							getAllCookies(callback) {
								try {
									callback(null, this.getStore());
								} catch (error) {
									error instanceof Error &&
										callback(error, []);
								}
							}
							getStore() {
								try {
									const json = this.storage.getItem(
										this.storageKey,
									);
									if (null == json) return [];
									const rawCookies = JSON.parse(json),
										cookies = [];
									for (const rawCookie of rawCookies) {
										const cookie =
											Cookie.fromJSON(rawCookie);
										null != cookie && cookies.push(cookie);
									}
									return cookies;
								} catch {
									return [];
								}
							}
							updateStore(nextStore) {
								this.storage.setItem(
									this.storageKey,
									JSON.stringify(
										nextStore.map((cookie) =>
											cookie.toJSON(),
										),
									),
								);
							}
							filterCookiesFromList(cookies, matches) {
								const result = [];
								for (const cookie of cookies)
									(matches.domain &&
										!domainMatch(
											matches.domain,
											cookie.domain || '',
										)) ||
										(matches.path &&
											!pathMatch(
												matches.path,
												cookie.path || '',
											)) ||
										(matches.key &&
											cookie.key !== matches.key) ||
										result.push(cookie);
								return result;
							}
							deleteCookiesFromList(cookies, matches) {
								const matchingCookies =
									this.filterCookiesFromList(
										cookies,
										matches,
									);
								return cookies.filter(
									(cookie) =>
										!matchingCookies.includes(cookie),
								);
							}
					  })(),
			);
		},
		'./node_modules/msw/lib/core/utils/internal/devUtils.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				A: () => InternalError,
				e: () => devUtils,
			});
			var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
				'./node_modules/outvariant/lib/index.mjs',
			);
			const LIBRARY_PREFIX = '[MSW]';
			function formatMessage(message, ...positionals) {
				const interpolatedMessage = (0,
				outvariant__WEBPACK_IMPORTED_MODULE_0__.WU)(
					message,
					...positionals,
				);
				return `${LIBRARY_PREFIX} ${interpolatedMessage}`;
			}
			const devUtils = {
				formatMessage,
				warn: function warn(message, ...positionals) {
					console.warn(formatMessage(message, ...positionals));
				},
				error: function error(message, ...positionals) {
					console.error(formatMessage(message, ...positionals));
				},
			};
			class InternalError extends Error {
				constructor(message) {
					super(message), (this.name = 'InternalError');
				}
			}
		},
		'./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			function toPublicUrl(url) {
				if ('undefined' == typeof location) return url.toString();
				const urlInstance = url instanceof URL ? url : new URL(url);
				return urlInstance.origin === location.origin
					? urlInstance.pathname
					: urlInstance.origin + urlInstance.pathname;
			}
			__webpack_require__.d(__webpack_exports__, {
				F: () => toPublicUrl,
			});
		},
		'./node_modules/object-is/implementation.js': (module) => {
			'use strict';
			var numberIsNaN = function (value) {
				return value != value;
			};
			module.exports = function is(a, b) {
				return 0 === a && 0 === b
					? 1 / a == 1 / b
					: a === b || !(!numberIsNaN(a) || !numberIsNaN(b));
			};
		},
		'./node_modules/object-is/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var define = __webpack_require__(
					'./node_modules/define-properties/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/object-is/node_modules/call-bind/index.js',
				),
				implementation = __webpack_require__(
					'./node_modules/object-is/implementation.js',
				),
				getPolyfill = __webpack_require__(
					'./node_modules/object-is/polyfill.js',
				),
				shim = __webpack_require__('./node_modules/object-is/shim.js'),
				polyfill = callBind(getPolyfill(), Object);
			define(polyfill, { getPolyfill, implementation, shim }),
				(module.exports = polyfill);
		},
		'./node_modules/object-is/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/object-is/polyfill.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var implementation = __webpack_require__(
				'./node_modules/object-is/implementation.js',
			);
			module.exports = function getPolyfill() {
				return 'function' == typeof Object.is
					? Object.is
					: implementation;
			};
		},
		'./node_modules/object-is/shim.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var getPolyfill = __webpack_require__(
					'./node_modules/object-is/polyfill.js',
				),
				define = __webpack_require__(
					'./node_modules/define-properties/index.js',
				);
			module.exports = function shimObjectIs() {
				var polyfill = getPolyfill();
				return (
					define(
						Object,
						{ is: polyfill },
						{
							is: function testObjectIs() {
								return Object.is !== polyfill;
							},
						},
					),
					polyfill
				);
			};
		},
		'./node_modules/object-keys/implementation.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var keysShim;
			if (!Object.keys) {
				var has = Object.prototype.hasOwnProperty,
					toStr = Object.prototype.toString,
					isArgs = __webpack_require__(
						'./node_modules/object-keys/isArguments.js',
					),
					isEnumerable = Object.prototype.propertyIsEnumerable,
					hasDontEnumBug = !isEnumerable.call(
						{ toString: null },
						'toString',
					),
					hasProtoEnumBug = isEnumerable.call(function () {},
					'prototype'),
					dontEnums = [
						'toString',
						'toLocaleString',
						'valueOf',
						'hasOwnProperty',
						'isPrototypeOf',
						'propertyIsEnumerable',
						'constructor',
					],
					equalsConstructorPrototype = function (o) {
						var ctor = o.constructor;
						return ctor && ctor.prototype === o;
					},
					excludedKeys = {
						$applicationCache: !0,
						$console: !0,
						$external: !0,
						$frame: !0,
						$frameElement: !0,
						$frames: !0,
						$innerHeight: !0,
						$innerWidth: !0,
						$onmozfullscreenchange: !0,
						$onmozfullscreenerror: !0,
						$outerHeight: !0,
						$outerWidth: !0,
						$pageXOffset: !0,
						$pageYOffset: !0,
						$parent: !0,
						$scrollLeft: !0,
						$scrollTop: !0,
						$scrollX: !0,
						$scrollY: !0,
						$self: !0,
						$webkitIndexedDB: !0,
						$webkitStorageInfo: !0,
						$window: !0,
					},
					hasAutomationEqualityBug = (function () {
						if ('undefined' == typeof window) return !1;
						for (var k in window)
							try {
								if (
									!excludedKeys['$' + k] &&
									has.call(window, k) &&
									null !== window[k] &&
									'object' == typeof window[k]
								)
									try {
										equalsConstructorPrototype(window[k]);
									} catch (e) {
										return !0;
									}
							} catch (e) {
								return !0;
							}
						return !1;
					})();
				keysShim = function keys(object) {
					var isObject = null !== object && 'object' == typeof object,
						isFunction = '[object Function]' === toStr.call(object),
						isArguments = isArgs(object),
						isString =
							isObject &&
							'[object String]' === toStr.call(object),
						theKeys = [];
					if (!isObject && !isFunction && !isArguments)
						throw new TypeError(
							'Object.keys called on a non-object',
						);
					var skipProto = hasProtoEnumBug && isFunction;
					if (isString && object.length > 0 && !has.call(object, 0))
						for (var i = 0; i < object.length; ++i)
							theKeys.push(String(i));
					if (isArguments && object.length > 0)
						for (var j = 0; j < object.length; ++j)
							theKeys.push(String(j));
					else
						for (var name in object)
							(skipProto && 'prototype' === name) ||
								!has.call(object, name) ||
								theKeys.push(String(name));
					if (hasDontEnumBug)
						for (
							var skipConstructor = (function (o) {
									if (
										'undefined' == typeof window ||
										!hasAutomationEqualityBug
									)
										return equalsConstructorPrototype(o);
									try {
										return equalsConstructorPrototype(o);
									} catch (e) {
										return !1;
									}
								})(object),
								k = 0;
							k < dontEnums.length;
							++k
						)
							(skipConstructor &&
								'constructor' === dontEnums[k]) ||
								!has.call(object, dontEnums[k]) ||
								theKeys.push(dontEnums[k]);
					return theKeys;
				};
			}
			module.exports = keysShim;
		},
		'./node_modules/object-keys/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var slice = Array.prototype.slice,
				isArgs = __webpack_require__(
					'./node_modules/object-keys/isArguments.js',
				),
				origKeys = Object.keys,
				keysShim = origKeys
					? function keys(o) {
							return origKeys(o);
					  }
					: __webpack_require__(
							'./node_modules/object-keys/implementation.js',
					  ),
				originalKeys = Object.keys;
			(keysShim.shim = function shimObjectKeys() {
				if (Object.keys) {
					var keysWorksWithArguments = (function () {
						var args = Object.keys(arguments);
						return args && args.length === arguments.length;
					})(1, 2);
					keysWorksWithArguments ||
						(Object.keys = function keys(object) {
							return isArgs(object)
								? originalKeys(slice.call(object))
								: originalKeys(object);
						});
				} else Object.keys = keysShim;
				return Object.keys || keysShim;
			}),
				(module.exports = keysShim);
		},
		'./node_modules/object-keys/isArguments.js': (module) => {
			'use strict';
			var toStr = Object.prototype.toString;
			module.exports = function isArguments(value) {
				var str = toStr.call(value),
					isArgs = '[object Arguments]' === str;
				return (
					isArgs ||
						(isArgs =
							'[object Array]' !== str &&
							null !== value &&
							'object' == typeof value &&
							'number' == typeof value.length &&
							value.length >= 0 &&
							'[object Function]' === toStr.call(value.callee)),
					isArgs
				);
			};
		},
		'./node_modules/object.assign/implementation.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var objectKeys = __webpack_require__(
					'./node_modules/object-keys/index.js',
				),
				hasSymbols = __webpack_require__(
					'./node_modules/has-symbols/shams.js',
				)(),
				callBound = __webpack_require__(
					'./node_modules/object.assign/node_modules/call-bind/callBound.js',
				),
				toObject = Object,
				$push = callBound('Array.prototype.push'),
				$propIsEnumerable = callBound(
					'Object.prototype.propertyIsEnumerable',
				),
				originalGetSymbols = hasSymbols
					? Object.getOwnPropertySymbols
					: null;
			module.exports = function assign(target, source1) {
				if (null == target)
					throw new TypeError('target must be an object');
				var to = toObject(target);
				if (1 === arguments.length) return to;
				for (var s = 1; s < arguments.length; ++s) {
					var from = toObject(arguments[s]),
						keys = objectKeys(from),
						getSymbols =
							hasSymbols &&
							(Object.getOwnPropertySymbols ||
								originalGetSymbols);
					if (getSymbols)
						for (
							var syms = getSymbols(from), j = 0;
							j < syms.length;
							++j
						) {
							var key = syms[j];
							$propIsEnumerable(from, key) && $push(keys, key);
						}
					for (var i = 0; i < keys.length; ++i) {
						var nextKey = keys[i];
						if ($propIsEnumerable(from, nextKey)) {
							var propValue = from[nextKey];
							to[nextKey] = propValue;
						}
					}
				}
				return to;
			};
		},
		'./node_modules/object.assign/node_modules/call-bind/callBound.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/object.assign/node_modules/call-bind/index.js',
				),
				$indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
			module.exports = function callBoundIntrinsic(name, allowMissing) {
				var intrinsic = GetIntrinsic(name, !!allowMissing);
				return 'function' == typeof intrinsic &&
					$indexOf(name, '.prototype.') > -1
					? callBind(intrinsic)
					: intrinsic;
			};
		},
		'./node_modules/object.assign/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/object.assign/polyfill.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var implementation = __webpack_require__(
				'./node_modules/object.assign/implementation.js',
			);
			module.exports = function getPolyfill() {
				return Object.assign
					? (function () {
							if (!Object.assign) return !1;
							for (
								var str = 'abcdefghijklmnopqrst',
									letters = str.split(''),
									map = {},
									i = 0;
								i < letters.length;
								++i
							)
								map[letters[i]] = letters[i];
							var obj = Object.assign({}, map),
								actual = '';
							for (var k in obj) actual += k;
							return str !== actual;
					  })() ||
					  (function () {
							if (!Object.assign || !Object.preventExtensions)
								return !1;
							var thrower = Object.preventExtensions({ 1: 2 });
							try {
								Object.assign(thrower, 'xy');
							} catch (e) {
								return 'y' === thrower[1];
							}
							return !1;
					  })()
						? implementation
						: Object.assign
					: implementation;
			};
		},
		'./node_modules/outvariant/lib/index.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				WU: () => format,
				kG: () => invariant,
			});
			var POSITIONALS_EXP = /(%?)(%([sdijo]))/g;
			function format(message, ...positionals) {
				if (0 === positionals.length) return message;
				let positionalIndex = 0,
					formattedMessage = message.replace(
						POSITIONALS_EXP,
						(match, isEscaped, _, flag) => {
							const value = (function serializePositional(
								positional,
								flag,
							) {
								switch (flag) {
									case 's':
										return positional;
									case 'd':
									case 'i':
										return Number(positional);
									case 'j':
										return JSON.stringify(positional);
									case 'o': {
										if ('string' == typeof positional)
											return positional;
										const json = JSON.stringify(positional);
										return '{}' === json ||
											'[]' === json ||
											/^\[object .+?\]$/.test(json)
											? positional
											: json;
									}
								}
							})(positionals[positionalIndex], flag);
							return isEscaped
								? match
								: (positionalIndex++, value);
						},
					);
				return (
					positionalIndex < positionals.length &&
						(formattedMessage += ` ${positionals
							.slice(positionalIndex)
							.join(' ')}`),
					(formattedMessage = formattedMessage.replace(
						/%{2,2}/g,
						'%',
					)),
					formattedMessage
				);
			}
			var InvariantError = class extends Error {
					constructor(message, ...positionals) {
						super(message),
							(this.message = message),
							(this.name = 'Invariant Violation'),
							(this.message = format(message, ...positionals)),
							(function cleanErrorStack(error) {
								if (!error.stack) return;
								const nextStack = error.stack.split('\n');
								nextStack.splice(1, 2),
									(error.stack = nextStack.join('\n'));
							})(this);
					}
				},
				invariant = (predicate, message, ...positionals) => {
					if (!predicate)
						throw new InvariantError(message, ...positionals);
				};
			invariant.as = (
				ErrorConstructor,
				predicate,
				message,
				...positionals
			) => {
				if (!predicate) {
					const formatMessage =
						0 === positionals.length
							? message
							: format(message, positionals);
					let error;
					try {
						error = Reflect.construct(ErrorConstructor, [
							formatMessage,
						]);
					} catch (err) {
						error = ErrorConstructor(formatMessage);
					}
					throw error;
				}
			};
		},
		'./node_modules/process/browser.js': (module) => {
			var cachedSetTimeout,
				cachedClearTimeout,
				process = (module.exports = {});
			function defaultSetTimout() {
				throw new Error('setTimeout has not been defined');
			}
			function defaultClearTimeout() {
				throw new Error('clearTimeout has not been defined');
			}
			function runTimeout(fun) {
				if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
				if (
					(cachedSetTimeout === defaultSetTimout ||
						!cachedSetTimeout) &&
					setTimeout
				)
					return (cachedSetTimeout = setTimeout), setTimeout(fun, 0);
				try {
					return cachedSetTimeout(fun, 0);
				} catch (e) {
					try {
						return cachedSetTimeout.call(null, fun, 0);
					} catch (e) {
						return cachedSetTimeout.call(this, fun, 0);
					}
				}
			}
			!(function () {
				try {
					cachedSetTimeout =
						'function' == typeof setTimeout
							? setTimeout
							: defaultSetTimout;
				} catch (e) {
					cachedSetTimeout = defaultSetTimout;
				}
				try {
					cachedClearTimeout =
						'function' == typeof clearTimeout
							? clearTimeout
							: defaultClearTimeout;
				} catch (e) {
					cachedClearTimeout = defaultClearTimeout;
				}
			})();
			var currentQueue,
				queue = [],
				draining = !1,
				queueIndex = -1;
			function cleanUpNextTick() {
				draining &&
					currentQueue &&
					((draining = !1),
					currentQueue.length
						? (queue = currentQueue.concat(queue))
						: (queueIndex = -1),
					queue.length && drainQueue());
			}
			function drainQueue() {
				if (!draining) {
					var timeout = runTimeout(cleanUpNextTick);
					draining = !0;
					for (var len = queue.length; len; ) {
						for (
							currentQueue = queue, queue = [];
							++queueIndex < len;

						)
							currentQueue && currentQueue[queueIndex].run();
						(queueIndex = -1), (len = queue.length);
					}
					(currentQueue = null),
						(draining = !1),
						(function runClearTimeout(marker) {
							if (cachedClearTimeout === clearTimeout)
								return clearTimeout(marker);
							if (
								(cachedClearTimeout === defaultClearTimeout ||
									!cachedClearTimeout) &&
								clearTimeout
							)
								return (
									(cachedClearTimeout = clearTimeout),
									clearTimeout(marker)
								);
							try {
								return cachedClearTimeout(marker);
							} catch (e) {
								try {
									return cachedClearTimeout.call(
										null,
										marker,
									);
								} catch (e) {
									return cachedClearTimeout.call(
										this,
										marker,
									);
								}
							}
						})(timeout);
				}
			}
			function Item(fun, array) {
				(this.fun = fun), (this.array = array);
			}
			function noop() {}
			(process.nextTick = function (fun) {
				var args = new Array(arguments.length - 1);
				if (arguments.length > 1)
					for (var i = 1; i < arguments.length; i++)
						args[i - 1] = arguments[i];
				queue.push(new Item(fun, args)),
					1 !== queue.length || draining || runTimeout(drainQueue);
			}),
				(Item.prototype.run = function () {
					this.fun.apply(null, this.array);
				}),
				(process.title = 'browser'),
				(process.browser = !0),
				(process.env = {}),
				(process.argv = []),
				(process.version = ''),
				(process.versions = {}),
				(process.on = noop),
				(process.addListener = noop),
				(process.once = noop),
				(process.off = noop),
				(process.removeListener = noop),
				(process.removeAllListeners = noop),
				(process.emit = noop),
				(process.prependListener = noop),
				(process.prependOnceListener = noop),
				(process.listeners = function (name) {
					return [];
				}),
				(process.binding = function (name) {
					throw new Error('process.binding is not supported');
				}),
				(process.cwd = function () {
					return '/';
				}),
				(process.chdir = function (dir) {
					throw new Error('process.chdir is not supported');
				}),
				(process.umask = function () {
					return 0;
				});
		},
		'./node_modules/prop-types/factoryWithThrowingShims.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var ReactPropTypesSecret = __webpack_require__(
				'./node_modules/prop-types/lib/ReactPropTypesSecret.js',
			);
			function emptyFunction() {}
			function emptyFunctionWithReset() {}
			(emptyFunctionWithReset.resetWarningCache = emptyFunction),
				(module.exports = function () {
					function shim(
						props,
						propName,
						componentName,
						location,
						propFullName,
						secret,
					) {
						if (secret !== ReactPropTypesSecret) {
							var err = new Error(
								'Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types',
							);
							throw ((err.name = 'Invariant Violation'), err);
						}
					}
					function getShim() {
						return shim;
					}
					shim.isRequired = shim;
					var ReactPropTypes = {
						array: shim,
						bigint: shim,
						bool: shim,
						func: shim,
						number: shim,
						object: shim,
						string: shim,
						symbol: shim,
						any: shim,
						arrayOf: getShim,
						element: shim,
						elementType: shim,
						instanceOf: getShim,
						node: shim,
						objectOf: getShim,
						oneOf: getShim,
						oneOfType: getShim,
						shape: getShim,
						exact: getShim,
						checkPropTypes: emptyFunctionWithReset,
						resetWarningCache: emptyFunction,
					};
					return (
						(ReactPropTypes.PropTypes = ReactPropTypes),
						ReactPropTypes
					);
				});
		},
		'./node_modules/prop-types/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			module.exports = __webpack_require__(
				'./node_modules/prop-types/factoryWithThrowingShims.js',
			)();
		},
		'./node_modules/prop-types/lib/ReactPropTypesSecret.js': (module) => {
			'use strict';
			module.exports = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
		},
		'./node_modules/qs/lib/formats.js': (module) => {
			'use strict';
			var replace = String.prototype.replace,
				percentTwenties = /%20/g,
				Format_RFC1738 = 'RFC1738',
				Format_RFC3986 = 'RFC3986';
			module.exports = {
				default: Format_RFC3986,
				formatters: {
					RFC1738: function (value) {
						return replace.call(value, percentTwenties, '+');
					},
					RFC3986: function (value) {
						return String(value);
					},
				},
				RFC1738: Format_RFC1738,
				RFC3986: Format_RFC3986,
			};
		},
		'./node_modules/qs/lib/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var stringify = __webpack_require__(
					'./node_modules/qs/lib/stringify.js',
				),
				parse = __webpack_require__('./node_modules/qs/lib/parse.js'),
				formats = __webpack_require__(
					'./node_modules/qs/lib/formats.js',
				);
			module.exports = { formats, parse, stringify };
		},
		'./node_modules/qs/lib/parse.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var utils = __webpack_require__('./node_modules/qs/lib/utils.js'),
				has = Object.prototype.hasOwnProperty,
				isArray = Array.isArray,
				defaults = {
					allowDots: !1,
					allowPrototypes: !1,
					allowSparse: !1,
					arrayLimit: 20,
					charset: 'utf-8',
					charsetSentinel: !1,
					comma: !1,
					decoder: utils.decode,
					delimiter: '&',
					depth: 5,
					ignoreQueryPrefix: !1,
					interpretNumericEntities: !1,
					parameterLimit: 1e3,
					parseArrays: !0,
					plainObjects: !1,
					strictNullHandling: !1,
				},
				interpretNumericEntities = function (str) {
					return str.replace(/&#(\d+);/g, function ($0, numberStr) {
						return String.fromCharCode(parseInt(numberStr, 10));
					});
				},
				parseArrayValue = function (val, options) {
					return val &&
						'string' == typeof val &&
						options.comma &&
						val.indexOf(',') > -1
						? val.split(',')
						: val;
				},
				parseKeys = function parseQueryStringKeys(
					givenKey,
					val,
					options,
					valuesParsed,
				) {
					if (givenKey) {
						var key = options.allowDots
								? givenKey.replace(/\.([^.[]+)/g, '[$1]')
								: givenKey,
							child = /(\[[^[\]]*])/g,
							segment =
								options.depth > 0 && /(\[[^[\]]*])/.exec(key),
							parent = segment
								? key.slice(0, segment.index)
								: key,
							keys = [];
						if (parent) {
							if (
								!options.plainObjects &&
								has.call(Object.prototype, parent) &&
								!options.allowPrototypes
							)
								return;
							keys.push(parent);
						}
						for (
							var i = 0;
							options.depth > 0 &&
							null !== (segment = child.exec(key)) &&
							i < options.depth;

						) {
							if (
								((i += 1),
								!options.plainObjects &&
									has.call(
										Object.prototype,
										segment[1].slice(1, -1),
									) &&
									!options.allowPrototypes)
							)
								return;
							keys.push(segment[1]);
						}
						return (
							segment &&
								keys.push('[' + key.slice(segment.index) + ']'),
							(function (chain, val, options, valuesParsed) {
								for (
									var leaf = valuesParsed
											? val
											: parseArrayValue(val, options),
										i = chain.length - 1;
									i >= 0;
									--i
								) {
									var obj,
										root = chain[i];
									if ('[]' === root && options.parseArrays)
										obj = [].concat(leaf);
									else {
										obj = options.plainObjects
											? Object.create(null)
											: {};
										var cleanRoot =
												'[' === root.charAt(0) &&
												']' ===
													root.charAt(root.length - 1)
													? root.slice(1, -1)
													: root,
											index = parseInt(cleanRoot, 10);
										options.parseArrays || '' !== cleanRoot
											? !isNaN(index) &&
											  root !== cleanRoot &&
											  String(index) === cleanRoot &&
											  index >= 0 &&
											  options.parseArrays &&
											  index <= options.arrayLimit
												? ((obj = [])[index] = leaf)
												: '__proto__' !== cleanRoot &&
												  (obj[cleanRoot] = leaf)
											: (obj = { 0: leaf });
									}
									leaf = obj;
								}
								return leaf;
							})(keys, val, options, valuesParsed)
						);
					}
				};
			module.exports = function (str, opts) {
				var options = (function normalizeParseOptions(opts) {
					if (!opts) return defaults;
					if (
						null !== opts.decoder &&
						void 0 !== opts.decoder &&
						'function' != typeof opts.decoder
					)
						throw new TypeError('Decoder has to be a function.');
					if (
						void 0 !== opts.charset &&
						'utf-8' !== opts.charset &&
						'iso-8859-1' !== opts.charset
					)
						throw new TypeError(
							'The charset option must be either utf-8, iso-8859-1, or undefined',
						);
					var charset =
						void 0 === opts.charset
							? defaults.charset
							: opts.charset;
					return {
						allowDots:
							void 0 === opts.allowDots
								? defaults.allowDots
								: !!opts.allowDots,
						allowPrototypes:
							'boolean' == typeof opts.allowPrototypes
								? opts.allowPrototypes
								: defaults.allowPrototypes,
						allowSparse:
							'boolean' == typeof opts.allowSparse
								? opts.allowSparse
								: defaults.allowSparse,
						arrayLimit:
							'number' == typeof opts.arrayLimit
								? opts.arrayLimit
								: defaults.arrayLimit,
						charset,
						charsetSentinel:
							'boolean' == typeof opts.charsetSentinel
								? opts.charsetSentinel
								: defaults.charsetSentinel,
						comma:
							'boolean' == typeof opts.comma
								? opts.comma
								: defaults.comma,
						decoder:
							'function' == typeof opts.decoder
								? opts.decoder
								: defaults.decoder,
						delimiter:
							'string' == typeof opts.delimiter ||
							utils.isRegExp(opts.delimiter)
								? opts.delimiter
								: defaults.delimiter,
						depth:
							'number' == typeof opts.depth || !1 === opts.depth
								? +opts.depth
								: defaults.depth,
						ignoreQueryPrefix: !0 === opts.ignoreQueryPrefix,
						interpretNumericEntities:
							'boolean' == typeof opts.interpretNumericEntities
								? opts.interpretNumericEntities
								: defaults.interpretNumericEntities,
						parameterLimit:
							'number' == typeof opts.parameterLimit
								? opts.parameterLimit
								: defaults.parameterLimit,
						parseArrays: !1 !== opts.parseArrays,
						plainObjects:
							'boolean' == typeof opts.plainObjects
								? opts.plainObjects
								: defaults.plainObjects,
						strictNullHandling:
							'boolean' == typeof opts.strictNullHandling
								? opts.strictNullHandling
								: defaults.strictNullHandling,
					};
				})(opts);
				if ('' === str || null == str)
					return options.plainObjects ? Object.create(null) : {};
				for (
					var tempObj =
							'string' == typeof str
								? (function parseQueryStringValues(
										str,
										options,
								  ) {
										var i,
											obj = { __proto__: null },
											cleanStr = options.ignoreQueryPrefix
												? str.replace(/^\?/, '')
												: str,
											limit =
												options.parameterLimit === 1 / 0
													? void 0
													: options.parameterLimit,
											parts = cleanStr.split(
												options.delimiter,
												limit,
											),
											skipIndex = -1,
											charset = options.charset;
										if (options.charsetSentinel)
											for (i = 0; i < parts.length; ++i)
												0 ===
													parts[i].indexOf('utf8=') &&
													('utf8=%E2%9C%93' ===
													parts[i]
														? (charset = 'utf-8')
														: 'utf8=%26%2310003%3B' ===
																parts[i] &&
														  (charset =
																'iso-8859-1'),
													(skipIndex = i),
													(i = parts.length));
										for (i = 0; i < parts.length; ++i)
											if (i !== skipIndex) {
												var key,
													val,
													part = parts[i],
													bracketEqualsPos =
														part.indexOf(']='),
													pos =
														-1 === bracketEqualsPos
															? part.indexOf('=')
															: bracketEqualsPos +
															  1;
												-1 === pos
													? ((key = options.decoder(
															part,
															defaults.decoder,
															charset,
															'key',
													  )),
													  (val =
															options.strictNullHandling
																? null
																: ''))
													: ((key = options.decoder(
															part.slice(0, pos),
															defaults.decoder,
															charset,
															'key',
													  )),
													  (val = utils.maybeMap(
															parseArrayValue(
																part.slice(
																	pos + 1,
																),
																options,
															),
															function (
																encodedVal,
															) {
																return options.decoder(
																	encodedVal,
																	defaults.decoder,
																	charset,
																	'value',
																);
															},
													  ))),
													val &&
														options.interpretNumericEntities &&
														'iso-8859-1' ===
															charset &&
														(val =
															interpretNumericEntities(
																val,
															)),
													part.indexOf('[]=') > -1 &&
														(val = isArray(val)
															? [val]
															: val),
													has.call(obj, key)
														? (obj[key] =
																utils.combine(
																	obj[key],
																	val,
																))
														: (obj[key] = val);
											}
										return obj;
								  })(str, options)
								: str,
						obj = options.plainObjects ? Object.create(null) : {},
						keys = Object.keys(tempObj),
						i = 0;
					i < keys.length;
					++i
				) {
					var key = keys[i],
						newObj = parseKeys(
							key,
							tempObj[key],
							options,
							'string' == typeof str,
						);
					obj = utils.merge(obj, newObj, options);
				}
				return !0 === options.allowSparse ? obj : utils.compact(obj);
			};
		},
		'./node_modules/qs/lib/stringify.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var getSideChannel = __webpack_require__(
					'./node_modules/side-channel/index.js',
				),
				utils = __webpack_require__('./node_modules/qs/lib/utils.js'),
				formats = __webpack_require__(
					'./node_modules/qs/lib/formats.js',
				),
				has = Object.prototype.hasOwnProperty,
				arrayPrefixGenerators = {
					brackets: function brackets(prefix) {
						return prefix + '[]';
					},
					comma: 'comma',
					indices: function indices(prefix, key) {
						return prefix + '[' + key + ']';
					},
					repeat: function repeat(prefix) {
						return prefix;
					},
				},
				isArray = Array.isArray,
				push = Array.prototype.push,
				pushToArray = function (arr, valueOrArray) {
					push.apply(
						arr,
						isArray(valueOrArray) ? valueOrArray : [valueOrArray],
					);
				},
				toISO = Date.prototype.toISOString,
				defaultFormat = formats.default,
				defaults = {
					addQueryPrefix: !1,
					allowDots: !1,
					charset: 'utf-8',
					charsetSentinel: !1,
					delimiter: '&',
					encode: !0,
					encoder: utils.encode,
					encodeValuesOnly: !1,
					format: defaultFormat,
					formatter: formats.formatters[defaultFormat],
					indices: !1,
					serializeDate: function serializeDate(date) {
						return toISO.call(date);
					},
					skipNulls: !1,
					strictNullHandling: !1,
				},
				sentinel = {},
				stringify = function stringify(
					object,
					prefix,
					generateArrayPrefix,
					commaRoundTrip,
					strictNullHandling,
					skipNulls,
					encoder,
					filter,
					sort,
					allowDots,
					serializeDate,
					format,
					formatter,
					encodeValuesOnly,
					charset,
					sideChannel,
				) {
					for (
						var obj = object,
							tmpSc = sideChannel,
							step = 0,
							findFlag = !1;
						void 0 !== (tmpSc = tmpSc.get(sentinel)) && !findFlag;

					) {
						var pos = tmpSc.get(object);
						if (((step += 1), void 0 !== pos)) {
							if (pos === step)
								throw new RangeError('Cyclic object value');
							findFlag = !0;
						}
						void 0 === tmpSc.get(sentinel) && (step = 0);
					}
					if (
						('function' == typeof filter
							? (obj = filter(prefix, obj))
							: obj instanceof Date
							? (obj = serializeDate(obj))
							: 'comma' === generateArrayPrefix &&
							  isArray(obj) &&
							  (obj = utils.maybeMap(obj, function (value) {
									return value instanceof Date
										? serializeDate(value)
										: value;
							  })),
						null === obj)
					) {
						if (strictNullHandling)
							return encoder && !encodeValuesOnly
								? encoder(
										prefix,
										defaults.encoder,
										charset,
										'key',
										format,
								  )
								: prefix;
						obj = '';
					}
					if (
						(function isNonNullishPrimitive(v) {
							return (
								'string' == typeof v ||
								'number' == typeof v ||
								'boolean' == typeof v ||
								'symbol' == typeof v ||
								'bigint' == typeof v
							);
						})(obj) ||
						utils.isBuffer(obj)
					)
						return encoder
							? [
									formatter(
										encodeValuesOnly
											? prefix
											: encoder(
													prefix,
													defaults.encoder,
													charset,
													'key',
													format,
											  ),
									) +
										'=' +
										formatter(
											encoder(
												obj,
												defaults.encoder,
												charset,
												'value',
												format,
											),
										),
							  ]
							: [
									formatter(prefix) +
										'=' +
										formatter(String(obj)),
							  ];
					var objKeys,
						values = [];
					if (void 0 === obj) return values;
					if ('comma' === generateArrayPrefix && isArray(obj))
						encodeValuesOnly &&
							encoder &&
							(obj = utils.maybeMap(obj, encoder)),
							(objKeys = [
								{
									value:
										obj.length > 0
											? obj.join(',') || null
											: void 0,
								},
							]);
					else if (isArray(filter)) objKeys = filter;
					else {
						var keys = Object.keys(obj);
						objKeys = sort ? keys.sort(sort) : keys;
					}
					for (
						var adjustedPrefix =
								commaRoundTrip &&
								isArray(obj) &&
								1 === obj.length
									? prefix + '[]'
									: prefix,
							j = 0;
						j < objKeys.length;
						++j
					) {
						var key = objKeys[j],
							value =
								'object' == typeof key && void 0 !== key.value
									? key.value
									: obj[key];
						if (!skipNulls || null !== value) {
							var keyPrefix = isArray(obj)
								? 'function' == typeof generateArrayPrefix
									? generateArrayPrefix(adjustedPrefix, key)
									: adjustedPrefix
								: adjustedPrefix +
								  (allowDots ? '.' + key : '[' + key + ']');
							sideChannel.set(object, step);
							var valueSideChannel = getSideChannel();
							valueSideChannel.set(sentinel, sideChannel),
								pushToArray(
									values,
									stringify(
										value,
										keyPrefix,
										generateArrayPrefix,
										commaRoundTrip,
										strictNullHandling,
										skipNulls,
										'comma' === generateArrayPrefix &&
											encodeValuesOnly &&
											isArray(obj)
											? null
											: encoder,
										filter,
										sort,
										allowDots,
										serializeDate,
										format,
										formatter,
										encodeValuesOnly,
										charset,
										valueSideChannel,
									),
								);
						}
					}
					return values;
				};
			module.exports = function (object, opts) {
				var objKeys,
					obj = object,
					options = (function normalizeStringifyOptions(opts) {
						if (!opts) return defaults;
						if (
							null !== opts.encoder &&
							void 0 !== opts.encoder &&
							'function' != typeof opts.encoder
						)
							throw new TypeError(
								'Encoder has to be a function.',
							);
						var charset = opts.charset || defaults.charset;
						if (
							void 0 !== opts.charset &&
							'utf-8' !== opts.charset &&
							'iso-8859-1' !== opts.charset
						)
							throw new TypeError(
								'The charset option must be either utf-8, iso-8859-1, or undefined',
							);
						var format = formats.default;
						if (void 0 !== opts.format) {
							if (!has.call(formats.formatters, opts.format))
								throw new TypeError(
									'Unknown format option provided.',
								);
							format = opts.format;
						}
						var formatter = formats.formatters[format],
							filter = defaults.filter;
						return (
							('function' == typeof opts.filter ||
								isArray(opts.filter)) &&
								(filter = opts.filter),
							{
								addQueryPrefix:
									'boolean' == typeof opts.addQueryPrefix
										? opts.addQueryPrefix
										: defaults.addQueryPrefix,
								allowDots:
									void 0 === opts.allowDots
										? defaults.allowDots
										: !!opts.allowDots,
								charset,
								charsetSentinel:
									'boolean' == typeof opts.charsetSentinel
										? opts.charsetSentinel
										: defaults.charsetSentinel,
								delimiter:
									void 0 === opts.delimiter
										? defaults.delimiter
										: opts.delimiter,
								encode:
									'boolean' == typeof opts.encode
										? opts.encode
										: defaults.encode,
								encoder:
									'function' == typeof opts.encoder
										? opts.encoder
										: defaults.encoder,
								encodeValuesOnly:
									'boolean' == typeof opts.encodeValuesOnly
										? opts.encodeValuesOnly
										: defaults.encodeValuesOnly,
								filter,
								format,
								formatter,
								serializeDate:
									'function' == typeof opts.serializeDate
										? opts.serializeDate
										: defaults.serializeDate,
								skipNulls:
									'boolean' == typeof opts.skipNulls
										? opts.skipNulls
										: defaults.skipNulls,
								sort:
									'function' == typeof opts.sort
										? opts.sort
										: null,
								strictNullHandling:
									'boolean' == typeof opts.strictNullHandling
										? opts.strictNullHandling
										: defaults.strictNullHandling,
							}
						);
					})(opts);
				'function' == typeof options.filter
					? (obj = (0, options.filter)('', obj))
					: isArray(options.filter) && (objKeys = options.filter);
				var arrayFormat,
					keys = [];
				if ('object' != typeof obj || null === obj) return '';
				arrayFormat =
					opts && opts.arrayFormat in arrayPrefixGenerators
						? opts.arrayFormat
						: opts && 'indices' in opts
						? opts.indices
							? 'indices'
							: 'repeat'
						: 'indices';
				var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
				if (
					opts &&
					'commaRoundTrip' in opts &&
					'boolean' != typeof opts.commaRoundTrip
				)
					throw new TypeError(
						'`commaRoundTrip` must be a boolean, or absent',
					);
				var commaRoundTrip =
					'comma' === generateArrayPrefix &&
					opts &&
					opts.commaRoundTrip;
				objKeys || (objKeys = Object.keys(obj)),
					options.sort && objKeys.sort(options.sort);
				for (
					var sideChannel = getSideChannel(), i = 0;
					i < objKeys.length;
					++i
				) {
					var key = objKeys[i];
					(options.skipNulls && null === obj[key]) ||
						pushToArray(
							keys,
							stringify(
								obj[key],
								key,
								generateArrayPrefix,
								commaRoundTrip,
								options.strictNullHandling,
								options.skipNulls,
								options.encode ? options.encoder : null,
								options.filter,
								options.sort,
								options.allowDots,
								options.serializeDate,
								options.format,
								options.formatter,
								options.encodeValuesOnly,
								options.charset,
								sideChannel,
							),
						);
				}
				var joined = keys.join(options.delimiter),
					prefix = !0 === options.addQueryPrefix ? '?' : '';
				return (
					options.charsetSentinel &&
						('iso-8859-1' === options.charset
							? (prefix += 'utf8=%26%2310003%3B&')
							: (prefix += 'utf8=%E2%9C%93&')),
					joined.length > 0 ? prefix + joined : ''
				);
			};
		},
		'./node_modules/qs/lib/utils.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var formats = __webpack_require__(
					'./node_modules/qs/lib/formats.js',
				),
				has = Object.prototype.hasOwnProperty,
				isArray = Array.isArray,
				hexTable = (function () {
					for (var array = [], i = 0; i < 256; ++i)
						array.push(
							'%' +
								(
									(i < 16 ? '0' : '') + i.toString(16)
								).toUpperCase(),
						);
					return array;
				})(),
				arrayToObject = function arrayToObject(source, options) {
					for (
						var obj =
								options && options.plainObjects
									? Object.create(null)
									: {},
							i = 0;
						i < source.length;
						++i
					)
						void 0 !== source[i] && (obj[i] = source[i]);
					return obj;
				};
			module.exports = {
				arrayToObject,
				assign: function assignSingleSource(target, source) {
					return Object.keys(source).reduce(function (acc, key) {
						return (acc[key] = source[key]), acc;
					}, target);
				},
				combine: function combine(a, b) {
					return [].concat(a, b);
				},
				compact: function compact(value) {
					for (
						var queue = [{ obj: { o: value }, prop: 'o' }],
							refs = [],
							i = 0;
						i < queue.length;
						++i
					)
						for (
							var item = queue[i],
								obj = item.obj[item.prop],
								keys = Object.keys(obj),
								j = 0;
							j < keys.length;
							++j
						) {
							var key = keys[j],
								val = obj[key];
							'object' == typeof val &&
								null !== val &&
								-1 === refs.indexOf(val) &&
								(queue.push({ obj, prop: key }),
								refs.push(val));
						}
					return (
						(function compactQueue(queue) {
							for (; queue.length > 1; ) {
								var item = queue.pop(),
									obj = item.obj[item.prop];
								if (isArray(obj)) {
									for (
										var compacted = [], j = 0;
										j < obj.length;
										++j
									)
										void 0 !== obj[j] &&
											compacted.push(obj[j]);
									item.obj[item.prop] = compacted;
								}
							}
						})(queue),
						value
					);
				},
				decode: function (str, decoder, charset) {
					var strWithoutPlus = str.replace(/\+/g, ' ');
					if ('iso-8859-1' === charset)
						return strWithoutPlus.replace(
							/%[0-9a-f]{2}/gi,
							unescape,
						);
					try {
						return decodeURIComponent(strWithoutPlus);
					} catch (e) {
						return strWithoutPlus;
					}
				},
				encode: function encode(
					str,
					defaultEncoder,
					charset,
					kind,
					format,
				) {
					if (0 === str.length) return str;
					var string = str;
					if (
						('symbol' == typeof str
							? (string = Symbol.prototype.toString.call(str))
							: 'string' != typeof str && (string = String(str)),
						'iso-8859-1' === charset)
					)
						return escape(string).replace(
							/%u[0-9a-f]{4}/gi,
							function ($0) {
								return (
									'%26%23' + parseInt($0.slice(2), 16) + '%3B'
								);
							},
						);
					for (var out = '', i = 0; i < string.length; ++i) {
						var c = string.charCodeAt(i);
						45 === c ||
						46 === c ||
						95 === c ||
						126 === c ||
						(c >= 48 && c <= 57) ||
						(c >= 65 && c <= 90) ||
						(c >= 97 && c <= 122) ||
						(format === formats.RFC1738 && (40 === c || 41 === c))
							? (out += string.charAt(i))
							: c < 128
							? (out += hexTable[c])
							: c < 2048
							? (out +=
									hexTable[192 | (c >> 6)] +
									hexTable[128 | (63 & c)])
							: c < 55296 || c >= 57344
							? (out +=
									hexTable[224 | (c >> 12)] +
									hexTable[128 | ((c >> 6) & 63)] +
									hexTable[128 | (63 & c)])
							: ((i += 1),
							  (c =
									65536 +
									(((1023 & c) << 10) |
										(1023 & string.charCodeAt(i)))),
							  (out +=
									hexTable[240 | (c >> 18)] +
									hexTable[128 | ((c >> 12) & 63)] +
									hexTable[128 | ((c >> 6) & 63)] +
									hexTable[128 | (63 & c)]));
					}
					return out;
				},
				isBuffer: function isBuffer(obj) {
					return (
						!(!obj || 'object' != typeof obj) &&
						!!(
							obj.constructor &&
							obj.constructor.isBuffer &&
							obj.constructor.isBuffer(obj)
						)
					);
				},
				isRegExp: function isRegExp(obj) {
					return (
						'[object RegExp]' ===
						Object.prototype.toString.call(obj)
					);
				},
				maybeMap: function maybeMap(val, fn) {
					if (isArray(val)) {
						for (var mapped = [], i = 0; i < val.length; i += 1)
							mapped.push(fn(val[i]));
						return mapped;
					}
					return fn(val);
				},
				merge: function merge(target, source, options) {
					if (!source) return target;
					if ('object' != typeof source) {
						if (isArray(target)) target.push(source);
						else {
							if (!target || 'object' != typeof target)
								return [target, source];
							((options &&
								(options.plainObjects ||
									options.allowPrototypes)) ||
								!has.call(Object.prototype, source)) &&
								(target[source] = !0);
						}
						return target;
					}
					if (!target || 'object' != typeof target)
						return [target].concat(source);
					var mergeTarget = target;
					return (
						isArray(target) &&
							!isArray(source) &&
							(mergeTarget = arrayToObject(target, options)),
						isArray(target) && isArray(source)
							? (source.forEach(function (item, i) {
									if (has.call(target, i)) {
										var targetItem = target[i];
										targetItem &&
										'object' == typeof targetItem &&
										item &&
										'object' == typeof item
											? (target[i] = merge(
													targetItem,
													item,
													options,
											  ))
											: target.push(item);
									} else target[i] = item;
							  }),
							  target)
							: Object.keys(source).reduce(function (acc, key) {
									var value = source[key];
									return (
										has.call(acc, key)
											? (acc[key] = merge(
													acc[key],
													value,
													options,
											  ))
											: (acc[key] = value),
										acc
									);
							  }, mergeTarget)
					);
				},
			};
		},
		'./node_modules/react-dom/cjs/react-dom.production.min.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var aa = __webpack_require__('./node_modules/react/index.js'),
				ca = __webpack_require__(
					'./node_modules/react-dom/node_modules/scheduler/index.js',
				);
			function p(a) {
				for (
					var b =
							'https://reactjs.org/docs/error-decoder.html?invariant=' +
							a,
						c = 1;
					c < arguments.length;
					c++
				)
					b += '&args[]=' + encodeURIComponent(arguments[c]);
				return (
					'Minified React error #' +
					a +
					'; visit ' +
					b +
					' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
				);
			}
			var da = new Set(),
				ea = {};
			function fa(a, b) {
				ha(a, b), ha(a + 'Capture', b);
			}
			function ha(a, b) {
				for (ea[a] = b, a = 0; a < b.length; a++) da.add(b[a]);
			}
			var ia = !(
					'undefined' == typeof window ||
					void 0 === window.document ||
					void 0 === window.document.createElement
				),
				ja = Object.prototype.hasOwnProperty,
				ka =
					/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
				la = {},
				ma = {};
			function v(a, b, c, d, e, f, g) {
				(this.acceptsBooleans = 2 === b || 3 === b || 4 === b),
					(this.attributeName = d),
					(this.attributeNamespace = e),
					(this.mustUseProperty = c),
					(this.propertyName = a),
					(this.type = b),
					(this.sanitizeURL = f),
					(this.removeEmptyString = g);
			}
			var z = {};
			'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
				.split(' ')
				.forEach(function (a) {
					z[a] = new v(a, 0, !1, a, null, !1, !1);
				}),
				[
					['acceptCharset', 'accept-charset'],
					['className', 'class'],
					['htmlFor', 'for'],
					['httpEquiv', 'http-equiv'],
				].forEach(function (a) {
					var b = a[0];
					z[b] = new v(b, 1, !1, a[1], null, !1, !1);
				}),
				['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
					function (a) {
						z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);
					},
				),
				[
					'autoReverse',
					'externalResourcesRequired',
					'focusable',
					'preserveAlpha',
				].forEach(function (a) {
					z[a] = new v(a, 2, !1, a, null, !1, !1);
				}),
				'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
					.split(' ')
					.forEach(function (a) {
						z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);
					}),
				['checked', 'multiple', 'muted', 'selected'].forEach(function (
					a,
				) {
					z[a] = new v(a, 3, !0, a, null, !1, !1);
				}),
				['capture', 'download'].forEach(function (a) {
					z[a] = new v(a, 4, !1, a, null, !1, !1);
				}),
				['cols', 'rows', 'size', 'span'].forEach(function (a) {
					z[a] = new v(a, 6, !1, a, null, !1, !1);
				}),
				['rowSpan', 'start'].forEach(function (a) {
					z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);
				});
			var ra = /[\-:]([a-z])/g;
			function sa(a) {
				return a[1].toUpperCase();
			}
			function ta(a, b, c, d) {
				var e = z.hasOwnProperty(b) ? z[b] : null;
				(null !== e
					? 0 !== e.type
					: d ||
					  !(2 < b.length) ||
					  ('o' !== b[0] && 'O' !== b[0]) ||
					  ('n' !== b[1] && 'N' !== b[1])) &&
					((function qa(a, b, c, d) {
						if (
							null == b ||
							(function pa(a, b, c, d) {
								if (null !== c && 0 === c.type) return !1;
								switch (typeof b) {
									case 'function':
									case 'symbol':
										return !0;
									case 'boolean':
										return (
											!d &&
											(null !== c
												? !c.acceptsBooleans
												: 'data-' !==
														(a = a
															.toLowerCase()
															.slice(0, 5)) &&
												  'aria-' !== a)
										);
									default:
										return !1;
								}
							})(a, b, c, d)
						)
							return !0;
						if (d) return !1;
						if (null !== c)
							switch (c.type) {
								case 3:
									return !b;
								case 4:
									return !1 === b;
								case 5:
									return isNaN(b);
								case 6:
									return isNaN(b) || 1 > b;
							}
						return !1;
					})(b, c, e, d) && (c = null),
					d || null === e
						? (function oa(a) {
								return (
									!!ja.call(ma, a) ||
									(!ja.call(la, a) &&
										(ka.test(a)
											? (ma[a] = !0)
											: ((la[a] = !0), !1)))
								);
						  })(b) &&
						  (null === c
								? a.removeAttribute(b)
								: a.setAttribute(b, '' + c))
						: e.mustUseProperty
						? (a[e.propertyName] =
								null === c ? 3 !== e.type && '' : c)
						: ((b = e.attributeName),
						  (d = e.attributeNamespace),
						  null === c
								? a.removeAttribute(b)
								: ((c =
										3 === (e = e.type) ||
										(4 === e && !0 === c)
											? ''
											: '' + c),
								  d
										? a.setAttributeNS(d, b, c)
										: a.setAttribute(b, c))));
			}
			'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
				.split(' ')
				.forEach(function (a) {
					var b = a.replace(ra, sa);
					z[b] = new v(b, 1, !1, a, null, !1, !1);
				}),
				'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
					.split(' ')
					.forEach(function (a) {
						var b = a.replace(ra, sa);
						z[b] = new v(
							b,
							1,
							!1,
							a,
							'http://www.w3.org/1999/xlink',
							!1,
							!1,
						);
					}),
				['xml:base', 'xml:lang', 'xml:space'].forEach(function (a) {
					var b = a.replace(ra, sa);
					z[b] = new v(
						b,
						1,
						!1,
						a,
						'http://www.w3.org/XML/1998/namespace',
						!1,
						!1,
					);
				}),
				['tabIndex', 'crossOrigin'].forEach(function (a) {
					z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);
				}),
				(z.xlinkHref = new v(
					'xlinkHref',
					1,
					!1,
					'xlink:href',
					'http://www.w3.org/1999/xlink',
					!0,
					!1,
				)),
				['src', 'href', 'action', 'formAction'].forEach(function (a) {
					z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);
				});
			var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
				va = Symbol.for('react.element'),
				wa = Symbol.for('react.portal'),
				ya = Symbol.for('react.fragment'),
				za = Symbol.for('react.strict_mode'),
				Aa = Symbol.for('react.profiler'),
				Ba = Symbol.for('react.provider'),
				Ca = Symbol.for('react.context'),
				Da = Symbol.for('react.forward_ref'),
				Ea = Symbol.for('react.suspense'),
				Fa = Symbol.for('react.suspense_list'),
				Ga = Symbol.for('react.memo'),
				Ha = Symbol.for('react.lazy');
			Symbol.for('react.scope'), Symbol.for('react.debug_trace_mode');
			var Ia = Symbol.for('react.offscreen');
			Symbol.for('react.legacy_hidden'),
				Symbol.for('react.cache'),
				Symbol.for('react.tracing_marker');
			var Ja = Symbol.iterator;
			function Ka(a) {
				return null === a || 'object' != typeof a
					? null
					: 'function' ==
					  typeof (a = (Ja && a[Ja]) || a['@@iterator'])
					? a
					: null;
			}
			var La,
				A = Object.assign;
			function Ma(a) {
				if (void 0 === La)
					try {
						throw Error();
					} catch (c) {
						var b = c.stack.trim().match(/\n( *(at )?)/);
						La = (b && b[1]) || '';
					}
				return '\n' + La + a;
			}
			var Na = !1;
			function Oa(a, b) {
				if (!a || Na) return '';
				Na = !0;
				var c = Error.prepareStackTrace;
				Error.prepareStackTrace = void 0;
				try {
					if (b)
						if (
							((b = function () {
								throw Error();
							}),
							Object.defineProperty(b.prototype, 'props', {
								set: function () {
									throw Error();
								},
							}),
							'object' == typeof Reflect && Reflect.construct)
						) {
							try {
								Reflect.construct(b, []);
							} catch (l) {
								var d = l;
							}
							Reflect.construct(a, [], b);
						} else {
							try {
								b.call();
							} catch (l) {
								d = l;
							}
							a.call(b.prototype);
						}
					else {
						try {
							throw Error();
						} catch (l) {
							d = l;
						}
						a();
					}
				} catch (l) {
					if (l && d && 'string' == typeof l.stack) {
						for (
							var e = l.stack.split('\n'),
								f = d.stack.split('\n'),
								g = e.length - 1,
								h = f.length - 1;
							1 <= g && 0 <= h && e[g] !== f[h];

						)
							h--;
						for (; 1 <= g && 0 <= h; g--, h--)
							if (e[g] !== f[h]) {
								if (1 !== g || 1 !== h)
									do {
										if ((g--, 0 > --h || e[g] !== f[h])) {
											var k =
												'\n' +
												e[g].replace(
													' at new ',
													' at ',
												);
											return (
												a.displayName &&
													k.includes('<anonymous>') &&
													(k = k.replace(
														'<anonymous>',
														a.displayName,
													)),
												k
											);
										}
									} while (1 <= g && 0 <= h);
								break;
							}
					}
				} finally {
					(Na = !1), (Error.prepareStackTrace = c);
				}
				return (a = a ? a.displayName || a.name : '') ? Ma(a) : '';
			}
			function Pa(a) {
				switch (a.tag) {
					case 5:
						return Ma(a.type);
					case 16:
						return Ma('Lazy');
					case 13:
						return Ma('Suspense');
					case 19:
						return Ma('SuspenseList');
					case 0:
					case 2:
					case 15:
						return (a = Oa(a.type, !1));
					case 11:
						return (a = Oa(a.type.render, !1));
					case 1:
						return (a = Oa(a.type, !0));
					default:
						return '';
				}
			}
			function Qa(a) {
				if (null == a) return null;
				if ('function' == typeof a)
					return a.displayName || a.name || null;
				if ('string' == typeof a) return a;
				switch (a) {
					case ya:
						return 'Fragment';
					case wa:
						return 'Portal';
					case Aa:
						return 'Profiler';
					case za:
						return 'StrictMode';
					case Ea:
						return 'Suspense';
					case Fa:
						return 'SuspenseList';
				}
				if ('object' == typeof a)
					switch (a.$$typeof) {
						case Ca:
							return (a.displayName || 'Context') + '.Consumer';
						case Ba:
							return (
								(a._context.displayName || 'Context') +
								'.Provider'
							);
						case Da:
							var b = a.render;
							return (
								(a = a.displayName) ||
									(a =
										'' !==
										(a = b.displayName || b.name || '')
											? 'ForwardRef(' + a + ')'
											: 'ForwardRef'),
								a
							);
						case Ga:
							return null !== (b = a.displayName || null)
								? b
								: Qa(a.type) || 'Memo';
						case Ha:
							(b = a._payload), (a = a._init);
							try {
								return Qa(a(b));
							} catch (c) {}
					}
				return null;
			}
			function Ra(a) {
				var b = a.type;
				switch (a.tag) {
					case 24:
						return 'Cache';
					case 9:
						return (b.displayName || 'Context') + '.Consumer';
					case 10:
						return (
							(b._context.displayName || 'Context') + '.Provider'
						);
					case 18:
						return 'DehydratedFragment';
					case 11:
						return (
							(a = (a = b.render).displayName || a.name || ''),
							b.displayName ||
								('' !== a
									? 'ForwardRef(' + a + ')'
									: 'ForwardRef')
						);
					case 7:
						return 'Fragment';
					case 5:
						return b;
					case 4:
						return 'Portal';
					case 3:
						return 'Root';
					case 6:
						return 'Text';
					case 16:
						return Qa(b);
					case 8:
						return b === za ? 'StrictMode' : 'Mode';
					case 22:
						return 'Offscreen';
					case 12:
						return 'Profiler';
					case 21:
						return 'Scope';
					case 13:
						return 'Suspense';
					case 19:
						return 'SuspenseList';
					case 25:
						return 'TracingMarker';
					case 1:
					case 0:
					case 17:
					case 2:
					case 14:
					case 15:
						if ('function' == typeof b)
							return b.displayName || b.name || null;
						if ('string' == typeof b) return b;
				}
				return null;
			}
			function Sa(a) {
				switch (typeof a) {
					case 'boolean':
					case 'number':
					case 'string':
					case 'undefined':
					case 'object':
						return a;
					default:
						return '';
				}
			}
			function Ta(a) {
				var b = a.type;
				return (
					(a = a.nodeName) &&
					'input' === a.toLowerCase() &&
					('checkbox' === b || 'radio' === b)
				);
			}
			function Va(a) {
				a._valueTracker ||
					(a._valueTracker = (function Ua(a) {
						var b = Ta(a) ? 'checked' : 'value',
							c = Object.getOwnPropertyDescriptor(
								a.constructor.prototype,
								b,
							),
							d = '' + a[b];
						if (
							!a.hasOwnProperty(b) &&
							void 0 !== c &&
							'function' == typeof c.get &&
							'function' == typeof c.set
						) {
							var e = c.get,
								f = c.set;
							return (
								Object.defineProperty(a, b, {
									configurable: !0,
									get: function () {
										return e.call(this);
									},
									set: function (a) {
										(d = '' + a), f.call(this, a);
									},
								}),
								Object.defineProperty(a, b, {
									enumerable: c.enumerable,
								}),
								{
									getValue: function () {
										return d;
									},
									setValue: function (a) {
										d = '' + a;
									},
									stopTracking: function () {
										(a._valueTracker = null), delete a[b];
									},
								}
							);
						}
					})(a));
			}
			function Wa(a) {
				if (!a) return !1;
				var b = a._valueTracker;
				if (!b) return !0;
				var c = b.getValue(),
					d = '';
				return (
					a && (d = Ta(a) ? (a.checked ? 'true' : 'false') : a.value),
					(a = d) !== c && (b.setValue(a), !0)
				);
			}
			function Xa(a) {
				if (
					void 0 ===
					(a =
						a ||
						('undefined' != typeof document ? document : void 0))
				)
					return null;
				try {
					return a.activeElement || a.body;
				} catch (b) {
					return a.body;
				}
			}
			function Ya(a, b) {
				var c = b.checked;
				return A({}, b, {
					defaultChecked: void 0,
					defaultValue: void 0,
					value: void 0,
					checked: null != c ? c : a._wrapperState.initialChecked,
				});
			}
			function Za(a, b) {
				var c = null == b.defaultValue ? '' : b.defaultValue,
					d = null != b.checked ? b.checked : b.defaultChecked;
				(c = Sa(null != b.value ? b.value : c)),
					(a._wrapperState = {
						initialChecked: d,
						initialValue: c,
						controlled:
							'checkbox' === b.type || 'radio' === b.type
								? null != b.checked
								: null != b.value,
					});
			}
			function ab(a, b) {
				null != (b = b.checked) && ta(a, 'checked', b, !1);
			}
			function bb(a, b) {
				ab(a, b);
				var c = Sa(b.value),
					d = b.type;
				if (null != c)
					'number' === d
						? ((0 === c && '' === a.value) || a.value != c) &&
						  (a.value = '' + c)
						: a.value !== '' + c && (a.value = '' + c);
				else if ('submit' === d || 'reset' === d)
					return void a.removeAttribute('value');
				b.hasOwnProperty('value')
					? cb(a, b.type, c)
					: b.hasOwnProperty('defaultValue') &&
					  cb(a, b.type, Sa(b.defaultValue)),
					null == b.checked &&
						null != b.defaultChecked &&
						(a.defaultChecked = !!b.defaultChecked);
			}
			function db(a, b, c) {
				if (
					b.hasOwnProperty('value') ||
					b.hasOwnProperty('defaultValue')
				) {
					var d = b.type;
					if (
						!(
							('submit' !== d && 'reset' !== d) ||
							(void 0 !== b.value && null !== b.value)
						)
					)
						return;
					(b = '' + a._wrapperState.initialValue),
						c || b === a.value || (a.value = b),
						(a.defaultValue = b);
				}
				'' !== (c = a.name) && (a.name = ''),
					(a.defaultChecked = !!a._wrapperState.initialChecked),
					'' !== c && (a.name = c);
			}
			function cb(a, b, c) {
				('number' === b && Xa(a.ownerDocument) === a) ||
					(null == c
						? (a.defaultValue = '' + a._wrapperState.initialValue)
						: a.defaultValue !== '' + c &&
						  (a.defaultValue = '' + c));
			}
			var eb = Array.isArray;
			function fb(a, b, c, d) {
				if (((a = a.options), b)) {
					b = {};
					for (var e = 0; e < c.length; e++) b['$' + c[e]] = !0;
					for (c = 0; c < a.length; c++)
						(e = b.hasOwnProperty('$' + a[c].value)),
							a[c].selected !== e && (a[c].selected = e),
							e && d && (a[c].defaultSelected = !0);
				} else {
					for (c = '' + Sa(c), b = null, e = 0; e < a.length; e++) {
						if (a[e].value === c)
							return (
								(a[e].selected = !0),
								void (d && (a[e].defaultSelected = !0))
							);
						null !== b || a[e].disabled || (b = a[e]);
					}
					null !== b && (b.selected = !0);
				}
			}
			function gb(a, b) {
				if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
				return A({}, b, {
					value: void 0,
					defaultValue: void 0,
					children: '' + a._wrapperState.initialValue,
				});
			}
			function hb(a, b) {
				var c = b.value;
				if (null == c) {
					if (((c = b.children), (b = b.defaultValue), null != c)) {
						if (null != b) throw Error(p(92));
						if (eb(c)) {
							if (1 < c.length) throw Error(p(93));
							c = c[0];
						}
						b = c;
					}
					null == b && (b = ''), (c = b);
				}
				a._wrapperState = { initialValue: Sa(c) };
			}
			function ib(a, b) {
				var c = Sa(b.value),
					d = Sa(b.defaultValue);
				null != c &&
					((c = '' + c) !== a.value && (a.value = c),
					null == b.defaultValue &&
						a.defaultValue !== c &&
						(a.defaultValue = c)),
					null != d && (a.defaultValue = '' + d);
			}
			function jb(a) {
				var b = a.textContent;
				b === a._wrapperState.initialValue &&
					'' !== b &&
					null !== b &&
					(a.value = b);
			}
			function kb(a) {
				switch (a) {
					case 'svg':
						return 'http://www.w3.org/2000/svg';
					case 'math':
						return 'http://www.w3.org/1998/Math/MathML';
					default:
						return 'http://www.w3.org/1999/xhtml';
				}
			}
			function lb(a, b) {
				return null == a || 'http://www.w3.org/1999/xhtml' === a
					? kb(b)
					: 'http://www.w3.org/2000/svg' === a &&
					  'foreignObject' === b
					? 'http://www.w3.org/1999/xhtml'
					: a;
			}
			var mb,
				a,
				nb =
					((a = function (a, b) {
						if (
							'http://www.w3.org/2000/svg' !== a.namespaceURI ||
							'innerHTML' in a
						)
							a.innerHTML = b;
						else {
							for (
								(mb =
									mb ||
									document.createElement('div')).innerHTML =
									'<svg>' + b.valueOf().toString() + '</svg>',
									b = mb.firstChild;
								a.firstChild;

							)
								a.removeChild(a.firstChild);
							for (; b.firstChild; ) a.appendChild(b.firstChild);
						}
					}),
					'undefined' != typeof MSApp && MSApp.execUnsafeLocalFunction
						? function (b, c, d, e) {
								MSApp.execUnsafeLocalFunction(function () {
									return a(b, c);
								});
						  }
						: a);
			function ob(a, b) {
				if (b) {
					var c = a.firstChild;
					if (c && c === a.lastChild && 3 === c.nodeType)
						return void (c.nodeValue = b);
				}
				a.textContent = b;
			}
			var pb = {
					animationIterationCount: !0,
					aspectRatio: !0,
					borderImageOutset: !0,
					borderImageSlice: !0,
					borderImageWidth: !0,
					boxFlex: !0,
					boxFlexGroup: !0,
					boxOrdinalGroup: !0,
					columnCount: !0,
					columns: !0,
					flex: !0,
					flexGrow: !0,
					flexPositive: !0,
					flexShrink: !0,
					flexNegative: !0,
					flexOrder: !0,
					gridArea: !0,
					gridRow: !0,
					gridRowEnd: !0,
					gridRowSpan: !0,
					gridRowStart: !0,
					gridColumn: !0,
					gridColumnEnd: !0,
					gridColumnSpan: !0,
					gridColumnStart: !0,
					fontWeight: !0,
					lineClamp: !0,
					lineHeight: !0,
					opacity: !0,
					order: !0,
					orphans: !0,
					tabSize: !0,
					widows: !0,
					zIndex: !0,
					zoom: !0,
					fillOpacity: !0,
					floodOpacity: !0,
					stopOpacity: !0,
					strokeDasharray: !0,
					strokeDashoffset: !0,
					strokeMiterlimit: !0,
					strokeOpacity: !0,
					strokeWidth: !0,
				},
				qb = ['Webkit', 'ms', 'Moz', 'O'];
			function rb(a, b, c) {
				return null == b || 'boolean' == typeof b || '' === b
					? ''
					: c ||
					  'number' != typeof b ||
					  0 === b ||
					  (pb.hasOwnProperty(a) && pb[a])
					? ('' + b).trim()
					: b + 'px';
			}
			function sb(a, b) {
				for (var c in ((a = a.style), b))
					if (b.hasOwnProperty(c)) {
						var d = 0 === c.indexOf('--'),
							e = rb(c, b[c], d);
						'float' === c && (c = 'cssFloat'),
							d ? a.setProperty(c, e) : (a[c] = e);
					}
			}
			Object.keys(pb).forEach(function (a) {
				qb.forEach(function (b) {
					(b = b + a.charAt(0).toUpperCase() + a.substring(1)),
						(pb[b] = pb[a]);
				});
			});
			var tb = A(
				{ menuitem: !0 },
				{
					area: !0,
					base: !0,
					br: !0,
					col: !0,
					embed: !0,
					hr: !0,
					img: !0,
					input: !0,
					keygen: !0,
					link: !0,
					meta: !0,
					param: !0,
					source: !0,
					track: !0,
					wbr: !0,
				},
			);
			function ub(a, b) {
				if (b) {
					if (
						tb[a] &&
						(null != b.children ||
							null != b.dangerouslySetInnerHTML)
					)
						throw Error(p(137, a));
					if (null != b.dangerouslySetInnerHTML) {
						if (null != b.children) throw Error(p(60));
						if (
							'object' != typeof b.dangerouslySetInnerHTML ||
							!('__html' in b.dangerouslySetInnerHTML)
						)
							throw Error(p(61));
					}
					if (null != b.style && 'object' != typeof b.style)
						throw Error(p(62));
				}
			}
			function vb(a, b) {
				if (-1 === a.indexOf('-')) return 'string' == typeof b.is;
				switch (a) {
					case 'annotation-xml':
					case 'color-profile':
					case 'font-face':
					case 'font-face-src':
					case 'font-face-uri':
					case 'font-face-format':
					case 'font-face-name':
					case 'missing-glyph':
						return !1;
					default:
						return !0;
				}
			}
			var wb = null;
			function xb(a) {
				return (
					(a = a.target || a.srcElement || window)
						.correspondingUseElement &&
						(a = a.correspondingUseElement),
					3 === a.nodeType ? a.parentNode : a
				);
			}
			var yb = null,
				zb = null,
				Ab = null;
			function Bb(a) {
				if ((a = Cb(a))) {
					if ('function' != typeof yb) throw Error(p(280));
					var b = a.stateNode;
					b && ((b = Db(b)), yb(a.stateNode, a.type, b));
				}
			}
			function Eb(a) {
				zb ? (Ab ? Ab.push(a) : (Ab = [a])) : (zb = a);
			}
			function Fb() {
				if (zb) {
					var a = zb,
						b = Ab;
					if (((Ab = zb = null), Bb(a), b))
						for (a = 0; a < b.length; a++) Bb(b[a]);
				}
			}
			function Gb(a, b) {
				return a(b);
			}
			function Hb() {}
			var Ib = !1;
			function Jb(a, b, c) {
				if (Ib) return a(b, c);
				Ib = !0;
				try {
					return Gb(a, b, c);
				} finally {
					(Ib = !1), (null !== zb || null !== Ab) && (Hb(), Fb());
				}
			}
			function Kb(a, b) {
				var c = a.stateNode;
				if (null === c) return null;
				var d = Db(c);
				if (null === d) return null;
				c = d[b];
				a: switch (b) {
					case 'onClick':
					case 'onClickCapture':
					case 'onDoubleClick':
					case 'onDoubleClickCapture':
					case 'onMouseDown':
					case 'onMouseDownCapture':
					case 'onMouseMove':
					case 'onMouseMoveCapture':
					case 'onMouseUp':
					case 'onMouseUpCapture':
					case 'onMouseEnter':
						(d = !d.disabled) ||
							(d = !(
								'button' === (a = a.type) ||
								'input' === a ||
								'select' === a ||
								'textarea' === a
							)),
							(a = !d);
						break a;
					default:
						a = !1;
				}
				if (a) return null;
				if (c && 'function' != typeof c)
					throw Error(p(231, b, typeof c));
				return c;
			}
			var Lb = !1;
			if (ia)
				try {
					var Mb = {};
					Object.defineProperty(Mb, 'passive', {
						get: function () {
							Lb = !0;
						},
					}),
						window.addEventListener('test', Mb, Mb),
						window.removeEventListener('test', Mb, Mb);
				} catch (a) {
					Lb = !1;
				}
			function Nb(a, b, c, d, e, f, g, h, k) {
				var l = Array.prototype.slice.call(arguments, 3);
				try {
					b.apply(c, l);
				} catch (m) {
					this.onError(m);
				}
			}
			var Ob = !1,
				Pb = null,
				Qb = !1,
				Rb = null,
				Sb = {
					onError: function (a) {
						(Ob = !0), (Pb = a);
					},
				};
			function Tb(a, b, c, d, e, f, g, h, k) {
				(Ob = !1), (Pb = null), Nb.apply(Sb, arguments);
			}
			function Vb(a) {
				var b = a,
					c = a;
				if (a.alternate) for (; b.return; ) b = b.return;
				else {
					a = b;
					do {
						0 != (4098 & (b = a).flags) && (c = b.return),
							(a = b.return);
					} while (a);
				}
				return 3 === b.tag ? c : null;
			}
			function Wb(a) {
				if (13 === a.tag) {
					var b = a.memoizedState;
					if (
						(null === b &&
							null !== (a = a.alternate) &&
							(b = a.memoizedState),
						null !== b)
					)
						return b.dehydrated;
				}
				return null;
			}
			function Xb(a) {
				if (Vb(a) !== a) throw Error(p(188));
			}
			function Zb(a) {
				return null !==
					(a = (function Yb(a) {
						var b = a.alternate;
						if (!b) {
							if (null === (b = Vb(a))) throw Error(p(188));
							return b !== a ? null : a;
						}
						for (var c = a, d = b; ; ) {
							var e = c.return;
							if (null === e) break;
							var f = e.alternate;
							if (null === f) {
								if (null !== (d = e.return)) {
									c = d;
									continue;
								}
								break;
							}
							if (e.child === f.child) {
								for (f = e.child; f; ) {
									if (f === c) return Xb(e), a;
									if (f === d) return Xb(e), b;
									f = f.sibling;
								}
								throw Error(p(188));
							}
							if (c.return !== d.return) (c = e), (d = f);
							else {
								for (var g = !1, h = e.child; h; ) {
									if (h === c) {
										(g = !0), (c = e), (d = f);
										break;
									}
									if (h === d) {
										(g = !0), (d = e), (c = f);
										break;
									}
									h = h.sibling;
								}
								if (!g) {
									for (h = f.child; h; ) {
										if (h === c) {
											(g = !0), (c = f), (d = e);
											break;
										}
										if (h === d) {
											(g = !0), (d = f), (c = e);
											break;
										}
										h = h.sibling;
									}
									if (!g) throw Error(p(189));
								}
							}
							if (c.alternate !== d) throw Error(p(190));
						}
						if (3 !== c.tag) throw Error(p(188));
						return c.stateNode.current === c ? a : b;
					})(a))
					? $b(a)
					: null;
			}
			function $b(a) {
				if (5 === a.tag || 6 === a.tag) return a;
				for (a = a.child; null !== a; ) {
					var b = $b(a);
					if (null !== b) return b;
					a = a.sibling;
				}
				return null;
			}
			var ac = ca.unstable_scheduleCallback,
				bc = ca.unstable_cancelCallback,
				cc = ca.unstable_shouldYield,
				dc = ca.unstable_requestPaint,
				B = ca.unstable_now,
				ec = ca.unstable_getCurrentPriorityLevel,
				fc = ca.unstable_ImmediatePriority,
				gc = ca.unstable_UserBlockingPriority,
				hc = ca.unstable_NormalPriority,
				ic = ca.unstable_LowPriority,
				jc = ca.unstable_IdlePriority,
				kc = null,
				lc = null;
			var oc = Math.clz32
					? Math.clz32
					: function nc(a) {
							return (
								(a >>>= 0),
								0 === a ? 32 : (31 - ((pc(a) / qc) | 0)) | 0
							);
					  },
				pc = Math.log,
				qc = Math.LN2;
			var rc = 64,
				sc = 4194304;
			function tc(a) {
				switch (a & -a) {
					case 1:
						return 1;
					case 2:
						return 2;
					case 4:
						return 4;
					case 8:
						return 8;
					case 16:
						return 16;
					case 32:
						return 32;
					case 64:
					case 128:
					case 256:
					case 512:
					case 1024:
					case 2048:
					case 4096:
					case 8192:
					case 16384:
					case 32768:
					case 65536:
					case 131072:
					case 262144:
					case 524288:
					case 1048576:
					case 2097152:
						return 4194240 & a;
					case 4194304:
					case 8388608:
					case 16777216:
					case 33554432:
					case 67108864:
						return 130023424 & a;
					case 134217728:
						return 134217728;
					case 268435456:
						return 268435456;
					case 536870912:
						return 536870912;
					case 1073741824:
						return 1073741824;
					default:
						return a;
				}
			}
			function uc(a, b) {
				var c = a.pendingLanes;
				if (0 === c) return 0;
				var d = 0,
					e = a.suspendedLanes,
					f = a.pingedLanes,
					g = 268435455 & c;
				if (0 !== g) {
					var h = g & ~e;
					0 !== h ? (d = tc(h)) : 0 !== (f &= g) && (d = tc(f));
				} else
					0 !== (g = c & ~e) ? (d = tc(g)) : 0 !== f && (d = tc(f));
				if (0 === d) return 0;
				if (
					0 !== b &&
					b !== d &&
					0 == (b & e) &&
					((e = d & -d) >= (f = b & -b) ||
						(16 === e && 0 != (4194240 & f)))
				)
					return b;
				if (
					(0 != (4 & d) && (d |= 16 & c),
					0 !== (b = a.entangledLanes))
				)
					for (a = a.entanglements, b &= d; 0 < b; )
						(e = 1 << (c = 31 - oc(b))), (d |= a[c]), (b &= ~e);
				return d;
			}
			function vc(a, b) {
				switch (a) {
					case 1:
					case 2:
					case 4:
						return b + 250;
					case 8:
					case 16:
					case 32:
					case 64:
					case 128:
					case 256:
					case 512:
					case 1024:
					case 2048:
					case 4096:
					case 8192:
					case 16384:
					case 32768:
					case 65536:
					case 131072:
					case 262144:
					case 524288:
					case 1048576:
					case 2097152:
						return b + 5e3;
					default:
						return -1;
				}
			}
			function xc(a) {
				return 0 !== (a = -1073741825 & a.pendingLanes)
					? a
					: 1073741824 & a
					? 1073741824
					: 0;
			}
			function yc() {
				var a = rc;
				return 0 == (4194240 & (rc <<= 1)) && (rc = 64), a;
			}
			function zc(a) {
				for (var b = [], c = 0; 31 > c; c++) b.push(a);
				return b;
			}
			function Ac(a, b, c) {
				(a.pendingLanes |= b),
					536870912 !== b &&
						((a.suspendedLanes = 0), (a.pingedLanes = 0)),
					((a = a.eventTimes)[(b = 31 - oc(b))] = c);
			}
			function Cc(a, b) {
				var c = (a.entangledLanes |= b);
				for (a = a.entanglements; c; ) {
					var d = 31 - oc(c),
						e = 1 << d;
					(e & b) | (a[d] & b) && (a[d] |= b), (c &= ~e);
				}
			}
			var C = 0;
			function Dc(a) {
				return 1 < (a &= -a)
					? 4 < a
						? 0 != (268435455 & a)
							? 16
							: 536870912
						: 4
					: 1;
			}
			var Ec,
				Fc,
				Gc,
				Hc,
				Ic,
				Jc = !1,
				Kc = [],
				Lc = null,
				Mc = null,
				Nc = null,
				Oc = new Map(),
				Pc = new Map(),
				Qc = [],
				Rc =
					'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
						' ',
					);
			function Sc(a, b) {
				switch (a) {
					case 'focusin':
					case 'focusout':
						Lc = null;
						break;
					case 'dragenter':
					case 'dragleave':
						Mc = null;
						break;
					case 'mouseover':
					case 'mouseout':
						Nc = null;
						break;
					case 'pointerover':
					case 'pointerout':
						Oc.delete(b.pointerId);
						break;
					case 'gotpointercapture':
					case 'lostpointercapture':
						Pc.delete(b.pointerId);
				}
			}
			function Tc(a, b, c, d, e, f) {
				return null === a || a.nativeEvent !== f
					? ((a = {
							blockedOn: b,
							domEventName: c,
							eventSystemFlags: d,
							nativeEvent: f,
							targetContainers: [e],
					  }),
					  null !== b && null !== (b = Cb(b)) && Fc(b),
					  a)
					: ((a.eventSystemFlags |= d),
					  (b = a.targetContainers),
					  null !== e && -1 === b.indexOf(e) && b.push(e),
					  a);
			}
			function Vc(a) {
				var b = Wc(a.target);
				if (null !== b) {
					var c = Vb(b);
					if (null !== c)
						if (13 === (b = c.tag)) {
							if (null !== (b = Wb(c)))
								return (
									(a.blockedOn = b),
									void Ic(a.priority, function () {
										Gc(c);
									})
								);
						} else if (
							3 === b &&
							c.stateNode.current.memoizedState.isDehydrated
						)
							return void (a.blockedOn =
								3 === c.tag ? c.stateNode.containerInfo : null);
				}
				a.blockedOn = null;
			}
			function Xc(a) {
				if (null !== a.blockedOn) return !1;
				for (var b = a.targetContainers; 0 < b.length; ) {
					var c = Yc(
						a.domEventName,
						a.eventSystemFlags,
						b[0],
						a.nativeEvent,
					);
					if (null !== c)
						return (
							null !== (b = Cb(c)) && Fc(b), (a.blockedOn = c), !1
						);
					var d = new (c = a.nativeEvent).constructor(c.type, c);
					(wb = d), c.target.dispatchEvent(d), (wb = null), b.shift();
				}
				return !0;
			}
			function Zc(a, b, c) {
				Xc(a) && c.delete(b);
			}
			function $c() {
				(Jc = !1),
					null !== Lc && Xc(Lc) && (Lc = null),
					null !== Mc && Xc(Mc) && (Mc = null),
					null !== Nc && Xc(Nc) && (Nc = null),
					Oc.forEach(Zc),
					Pc.forEach(Zc);
			}
			function ad(a, b) {
				a.blockedOn === b &&
					((a.blockedOn = null),
					Jc ||
						((Jc = !0),
						ca.unstable_scheduleCallback(
							ca.unstable_NormalPriority,
							$c,
						)));
			}
			function bd(a) {
				function b(b) {
					return ad(b, a);
				}
				if (0 < Kc.length) {
					ad(Kc[0], a);
					for (var c = 1; c < Kc.length; c++) {
						var d = Kc[c];
						d.blockedOn === a && (d.blockedOn = null);
					}
				}
				for (
					null !== Lc && ad(Lc, a),
						null !== Mc && ad(Mc, a),
						null !== Nc && ad(Nc, a),
						Oc.forEach(b),
						Pc.forEach(b),
						c = 0;
					c < Qc.length;
					c++
				)
					(d = Qc[c]).blockedOn === a && (d.blockedOn = null);
				for (; 0 < Qc.length && null === (c = Qc[0]).blockedOn; )
					Vc(c), null === c.blockedOn && Qc.shift();
			}
			var cd = ua.ReactCurrentBatchConfig,
				dd = !0;
			function ed(a, b, c, d) {
				var e = C,
					f = cd.transition;
				cd.transition = null;
				try {
					(C = 1), fd(a, b, c, d);
				} finally {
					(C = e), (cd.transition = f);
				}
			}
			function gd(a, b, c, d) {
				var e = C,
					f = cd.transition;
				cd.transition = null;
				try {
					(C = 4), fd(a, b, c, d);
				} finally {
					(C = e), (cd.transition = f);
				}
			}
			function fd(a, b, c, d) {
				if (dd) {
					var e = Yc(a, b, c, d);
					if (null === e) hd(a, b, d, id, c), Sc(a, d);
					else if (
						(function Uc(a, b, c, d, e) {
							switch (b) {
								case 'focusin':
									return (Lc = Tc(Lc, a, b, c, d, e)), !0;
								case 'dragenter':
									return (Mc = Tc(Mc, a, b, c, d, e)), !0;
								case 'mouseover':
									return (Nc = Tc(Nc, a, b, c, d, e)), !0;
								case 'pointerover':
									var f = e.pointerId;
									return (
										Oc.set(
											f,
											Tc(
												Oc.get(f) || null,
												a,
												b,
												c,
												d,
												e,
											),
										),
										!0
									);
								case 'gotpointercapture':
									return (
										(f = e.pointerId),
										Pc.set(
											f,
											Tc(
												Pc.get(f) || null,
												a,
												b,
												c,
												d,
												e,
											),
										),
										!0
									);
							}
							return !1;
						})(e, a, b, c, d)
					)
						d.stopPropagation();
					else if ((Sc(a, d), 4 & b && -1 < Rc.indexOf(a))) {
						for (; null !== e; ) {
							var f = Cb(e);
							if (
								(null !== f && Ec(f),
								null === (f = Yc(a, b, c, d)) &&
									hd(a, b, d, id, c),
								f === e)
							)
								break;
							e = f;
						}
						null !== e && d.stopPropagation();
					} else hd(a, b, d, null, c);
				}
			}
			var id = null;
			function Yc(a, b, c, d) {
				if (((id = null), null !== (a = Wc((a = xb(d))))))
					if (null === (b = Vb(a))) a = null;
					else if (13 === (c = b.tag)) {
						if (null !== (a = Wb(b))) return a;
						a = null;
					} else if (3 === c) {
						if (b.stateNode.current.memoizedState.isDehydrated)
							return 3 === b.tag
								? b.stateNode.containerInfo
								: null;
						a = null;
					} else b !== a && (a = null);
				return (id = a), null;
			}
			function jd(a) {
				switch (a) {
					case 'cancel':
					case 'click':
					case 'close':
					case 'contextmenu':
					case 'copy':
					case 'cut':
					case 'auxclick':
					case 'dblclick':
					case 'dragend':
					case 'dragstart':
					case 'drop':
					case 'focusin':
					case 'focusout':
					case 'input':
					case 'invalid':
					case 'keydown':
					case 'keypress':
					case 'keyup':
					case 'mousedown':
					case 'mouseup':
					case 'paste':
					case 'pause':
					case 'play':
					case 'pointercancel':
					case 'pointerdown':
					case 'pointerup':
					case 'ratechange':
					case 'reset':
					case 'resize':
					case 'seeked':
					case 'submit':
					case 'touchcancel':
					case 'touchend':
					case 'touchstart':
					case 'volumechange':
					case 'change':
					case 'selectionchange':
					case 'textInput':
					case 'compositionstart':
					case 'compositionend':
					case 'compositionupdate':
					case 'beforeblur':
					case 'afterblur':
					case 'beforeinput':
					case 'blur':
					case 'fullscreenchange':
					case 'focus':
					case 'hashchange':
					case 'popstate':
					case 'select':
					case 'selectstart':
						return 1;
					case 'drag':
					case 'dragenter':
					case 'dragexit':
					case 'dragleave':
					case 'dragover':
					case 'mousemove':
					case 'mouseout':
					case 'mouseover':
					case 'pointermove':
					case 'pointerout':
					case 'pointerover':
					case 'scroll':
					case 'toggle':
					case 'touchmove':
					case 'wheel':
					case 'mouseenter':
					case 'mouseleave':
					case 'pointerenter':
					case 'pointerleave':
						return 4;
					case 'message':
						switch (ec()) {
							case fc:
								return 1;
							case gc:
								return 4;
							case hc:
							case ic:
								return 16;
							case jc:
								return 536870912;
							default:
								return 16;
						}
					default:
						return 16;
				}
			}
			var kd = null,
				ld = null,
				md = null;
			function nd() {
				if (md) return md;
				var a,
					d,
					b = ld,
					c = b.length,
					e = 'value' in kd ? kd.value : kd.textContent,
					f = e.length;
				for (a = 0; a < c && b[a] === e[a]; a++);
				var g = c - a;
				for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
				return (md = e.slice(a, 1 < d ? 1 - d : void 0));
			}
			function od(a) {
				var b = a.keyCode;
				return (
					'charCode' in a
						? 0 === (a = a.charCode) && 13 === b && (a = 13)
						: (a = b),
					10 === a && (a = 13),
					32 <= a || 13 === a ? a : 0
				);
			}
			function pd() {
				return !0;
			}
			function qd() {
				return !1;
			}
			function rd(a) {
				function b(b, d, e, f, g) {
					for (var c in ((this._reactName = b),
					(this._targetInst = e),
					(this.type = d),
					(this.nativeEvent = f),
					(this.target = g),
					(this.currentTarget = null),
					a))
						a.hasOwnProperty(c) &&
							((b = a[c]), (this[c] = b ? b(f) : f[c]));
					return (
						(this.isDefaultPrevented = (
							null != f.defaultPrevented
								? f.defaultPrevented
								: !1 === f.returnValue
						)
							? pd
							: qd),
						(this.isPropagationStopped = qd),
						this
					);
				}
				return (
					A(b.prototype, {
						preventDefault: function () {
							this.defaultPrevented = !0;
							var a = this.nativeEvent;
							a &&
								(a.preventDefault
									? a.preventDefault()
									: 'unknown' != typeof a.returnValue &&
									  (a.returnValue = !1),
								(this.isDefaultPrevented = pd));
						},
						stopPropagation: function () {
							var a = this.nativeEvent;
							a &&
								(a.stopPropagation
									? a.stopPropagation()
									: 'unknown' != typeof a.cancelBubble &&
									  (a.cancelBubble = !0),
								(this.isPropagationStopped = pd));
						},
						persist: function () {},
						isPersistent: pd,
					}),
					b
				);
			}
			var wd,
				xd,
				yd,
				sd = {
					eventPhase: 0,
					bubbles: 0,
					cancelable: 0,
					timeStamp: function (a) {
						return a.timeStamp || Date.now();
					},
					defaultPrevented: 0,
					isTrusted: 0,
				},
				td = rd(sd),
				ud = A({}, sd, { view: 0, detail: 0 }),
				vd = rd(ud),
				Ad = A({}, ud, {
					screenX: 0,
					screenY: 0,
					clientX: 0,
					clientY: 0,
					pageX: 0,
					pageY: 0,
					ctrlKey: 0,
					shiftKey: 0,
					altKey: 0,
					metaKey: 0,
					getModifierState: zd,
					button: 0,
					buttons: 0,
					relatedTarget: function (a) {
						return void 0 === a.relatedTarget
							? a.fromElement === a.srcElement
								? a.toElement
								: a.fromElement
							: a.relatedTarget;
					},
					movementX: function (a) {
						return 'movementX' in a
							? a.movementX
							: (a !== yd &&
									(yd && 'mousemove' === a.type
										? ((wd = a.screenX - yd.screenX),
										  (xd = a.screenY - yd.screenY))
										: (xd = wd = 0),
									(yd = a)),
							  wd);
					},
					movementY: function (a) {
						return 'movementY' in a ? a.movementY : xd;
					},
				}),
				Bd = rd(Ad),
				Dd = rd(A({}, Ad, { dataTransfer: 0 })),
				Fd = rd(A({}, ud, { relatedTarget: 0 })),
				Hd = rd(
					A({}, sd, {
						animationName: 0,
						elapsedTime: 0,
						pseudoElement: 0,
					}),
				),
				Id = A({}, sd, {
					clipboardData: function (a) {
						return 'clipboardData' in a
							? a.clipboardData
							: window.clipboardData;
					},
				}),
				Jd = rd(Id),
				Ld = rd(A({}, sd, { data: 0 })),
				Md = {
					Esc: 'Escape',
					Spacebar: ' ',
					Left: 'ArrowLeft',
					Up: 'ArrowUp',
					Right: 'ArrowRight',
					Down: 'ArrowDown',
					Del: 'Delete',
					Win: 'OS',
					Menu: 'ContextMenu',
					Apps: 'ContextMenu',
					Scroll: 'ScrollLock',
					MozPrintableKey: 'Unidentified',
				},
				Nd = {
					8: 'Backspace',
					9: 'Tab',
					12: 'Clear',
					13: 'Enter',
					16: 'Shift',
					17: 'Control',
					18: 'Alt',
					19: 'Pause',
					20: 'CapsLock',
					27: 'Escape',
					32: ' ',
					33: 'PageUp',
					34: 'PageDown',
					35: 'End',
					36: 'Home',
					37: 'ArrowLeft',
					38: 'ArrowUp',
					39: 'ArrowRight',
					40: 'ArrowDown',
					45: 'Insert',
					46: 'Delete',
					112: 'F1',
					113: 'F2',
					114: 'F3',
					115: 'F4',
					116: 'F5',
					117: 'F6',
					118: 'F7',
					119: 'F8',
					120: 'F9',
					121: 'F10',
					122: 'F11',
					123: 'F12',
					144: 'NumLock',
					145: 'ScrollLock',
					224: 'Meta',
				},
				Od = {
					Alt: 'altKey',
					Control: 'ctrlKey',
					Meta: 'metaKey',
					Shift: 'shiftKey',
				};
			function Pd(a) {
				var b = this.nativeEvent;
				return b.getModifierState
					? b.getModifierState(a)
					: !!(a = Od[a]) && !!b[a];
			}
			function zd() {
				return Pd;
			}
			var Qd = A({}, ud, {
					key: function (a) {
						if (a.key) {
							var b = Md[a.key] || a.key;
							if ('Unidentified' !== b) return b;
						}
						return 'keypress' === a.type
							? 13 === (a = od(a))
								? 'Enter'
								: String.fromCharCode(a)
							: 'keydown' === a.type || 'keyup' === a.type
							? Nd[a.keyCode] || 'Unidentified'
							: '';
					},
					code: 0,
					location: 0,
					ctrlKey: 0,
					shiftKey: 0,
					altKey: 0,
					metaKey: 0,
					repeat: 0,
					locale: 0,
					getModifierState: zd,
					charCode: function (a) {
						return 'keypress' === a.type ? od(a) : 0;
					},
					keyCode: function (a) {
						return 'keydown' === a.type || 'keyup' === a.type
							? a.keyCode
							: 0;
					},
					which: function (a) {
						return 'keypress' === a.type
							? od(a)
							: 'keydown' === a.type || 'keyup' === a.type
							? a.keyCode
							: 0;
					},
				}),
				Rd = rd(Qd),
				Td = rd(
					A({}, Ad, {
						pointerId: 0,
						width: 0,
						height: 0,
						pressure: 0,
						tangentialPressure: 0,
						tiltX: 0,
						tiltY: 0,
						twist: 0,
						pointerType: 0,
						isPrimary: 0,
					}),
				),
				Vd = rd(
					A({}, ud, {
						touches: 0,
						targetTouches: 0,
						changedTouches: 0,
						altKey: 0,
						metaKey: 0,
						ctrlKey: 0,
						shiftKey: 0,
						getModifierState: zd,
					}),
				),
				Xd = rd(
					A({}, sd, {
						propertyName: 0,
						elapsedTime: 0,
						pseudoElement: 0,
					}),
				),
				Yd = A({}, Ad, {
					deltaX: function (a) {
						return 'deltaX' in a
							? a.deltaX
							: 'wheelDeltaX' in a
							? -a.wheelDeltaX
							: 0;
					},
					deltaY: function (a) {
						return 'deltaY' in a
							? a.deltaY
							: 'wheelDeltaY' in a
							? -a.wheelDeltaY
							: 'wheelDelta' in a
							? -a.wheelDelta
							: 0;
					},
					deltaZ: 0,
					deltaMode: 0,
				}),
				Zd = rd(Yd),
				$d = [9, 13, 27, 32],
				ae = ia && 'CompositionEvent' in window,
				be = null;
			ia && 'documentMode' in document && (be = document.documentMode);
			var ce = ia && 'TextEvent' in window && !be,
				de = ia && (!ae || (be && 8 < be && 11 >= be)),
				ee = String.fromCharCode(32),
				fe = !1;
			function ge(a, b) {
				switch (a) {
					case 'keyup':
						return -1 !== $d.indexOf(b.keyCode);
					case 'keydown':
						return 229 !== b.keyCode;
					case 'keypress':
					case 'mousedown':
					case 'focusout':
						return !0;
					default:
						return !1;
				}
			}
			function he(a) {
				return 'object' == typeof (a = a.detail) && 'data' in a
					? a.data
					: null;
			}
			var ie = !1;
			var le = {
				color: !0,
				date: !0,
				datetime: !0,
				'datetime-local': !0,
				email: !0,
				month: !0,
				number: !0,
				password: !0,
				range: !0,
				search: !0,
				tel: !0,
				text: !0,
				time: !0,
				url: !0,
				week: !0,
			};
			function me(a) {
				var b = a && a.nodeName && a.nodeName.toLowerCase();
				return 'input' === b ? !!le[a.type] : 'textarea' === b;
			}
			function ne(a, b, c, d) {
				Eb(d),
					0 < (b = oe(b, 'onChange')).length &&
						((c = new td('onChange', 'change', null, c, d)),
						a.push({ event: c, listeners: b }));
			}
			var pe = null,
				qe = null;
			function re(a) {
				se(a, 0);
			}
			function te(a) {
				if (Wa(ue(a))) return a;
			}
			function ve(a, b) {
				if ('change' === a) return b;
			}
			var we = !1;
			if (ia) {
				var xe;
				if (ia) {
					var ye = 'oninput' in document;
					if (!ye) {
						var ze = document.createElement('div');
						ze.setAttribute('oninput', 'return;'),
							(ye = 'function' == typeof ze.oninput);
					}
					xe = ye;
				} else xe = !1;
				we =
					xe && (!document.documentMode || 9 < document.documentMode);
			}
			function Ae() {
				pe &&
					(pe.detachEvent('onpropertychange', Be), (qe = pe = null));
			}
			function Be(a) {
				if ('value' === a.propertyName && te(qe)) {
					var b = [];
					ne(b, qe, a, xb(a)), Jb(re, b);
				}
			}
			function Ce(a, b, c) {
				'focusin' === a
					? (Ae(),
					  (qe = c),
					  (pe = b).attachEvent('onpropertychange', Be))
					: 'focusout' === a && Ae();
			}
			function De(a) {
				if ('selectionchange' === a || 'keyup' === a || 'keydown' === a)
					return te(qe);
			}
			function Ee(a, b) {
				if ('click' === a) return te(b);
			}
			function Fe(a, b) {
				if ('input' === a || 'change' === a) return te(b);
			}
			var He =
				'function' == typeof Object.is
					? Object.is
					: function Ge(a, b) {
							return (
								(a === b && (0 !== a || 1 / a == 1 / b)) ||
								(a != a && b != b)
							);
					  };
			function Ie(a, b) {
				if (He(a, b)) return !0;
				if (
					'object' != typeof a ||
					null === a ||
					'object' != typeof b ||
					null === b
				)
					return !1;
				var c = Object.keys(a),
					d = Object.keys(b);
				if (c.length !== d.length) return !1;
				for (d = 0; d < c.length; d++) {
					var e = c[d];
					if (!ja.call(b, e) || !He(a[e], b[e])) return !1;
				}
				return !0;
			}
			function Je(a) {
				for (; a && a.firstChild; ) a = a.firstChild;
				return a;
			}
			function Ke(a, b) {
				var d,
					c = Je(a);
				for (a = 0; c; ) {
					if (3 === c.nodeType) {
						if (((d = a + c.textContent.length), a <= b && d >= b))
							return { node: c, offset: b - a };
						a = d;
					}
					a: {
						for (; c; ) {
							if (c.nextSibling) {
								c = c.nextSibling;
								break a;
							}
							c = c.parentNode;
						}
						c = void 0;
					}
					c = Je(c);
				}
			}
			function Le(a, b) {
				return (
					!(!a || !b) &&
					(a === b ||
						((!a || 3 !== a.nodeType) &&
							(b && 3 === b.nodeType
								? Le(a, b.parentNode)
								: 'contains' in a
								? a.contains(b)
								: !!a.compareDocumentPosition &&
								  !!(16 & a.compareDocumentPosition(b)))))
				);
			}
			function Me() {
				for (
					var a = window, b = Xa();
					b instanceof a.HTMLIFrameElement;

				) {
					try {
						var c =
							'string' == typeof b.contentWindow.location.href;
					} catch (d) {
						c = !1;
					}
					if (!c) break;
					b = Xa((a = b.contentWindow).document);
				}
				return b;
			}
			function Ne(a) {
				var b = a && a.nodeName && a.nodeName.toLowerCase();
				return (
					b &&
					(('input' === b &&
						('text' === a.type ||
							'search' === a.type ||
							'tel' === a.type ||
							'url' === a.type ||
							'password' === a.type)) ||
						'textarea' === b ||
						'true' === a.contentEditable)
				);
			}
			function Oe(a) {
				var b = Me(),
					c = a.focusedElem,
					d = a.selectionRange;
				if (
					b !== c &&
					c &&
					c.ownerDocument &&
					Le(c.ownerDocument.documentElement, c)
				) {
					if (null !== d && Ne(c))
						if (
							((b = d.start),
							void 0 === (a = d.end) && (a = b),
							'selectionStart' in c)
						)
							(c.selectionStart = b),
								(c.selectionEnd = Math.min(a, c.value.length));
						else if (
							(a =
								((b = c.ownerDocument || document) &&
									b.defaultView) ||
								window).getSelection
						) {
							a = a.getSelection();
							var e = c.textContent.length,
								f = Math.min(d.start, e);
							(d = void 0 === d.end ? f : Math.min(d.end, e)),
								!a.extend &&
									f > d &&
									((e = d), (d = f), (f = e)),
								(e = Ke(c, f));
							var g = Ke(c, d);
							e &&
								g &&
								(1 !== a.rangeCount ||
									a.anchorNode !== e.node ||
									a.anchorOffset !== e.offset ||
									a.focusNode !== g.node ||
									a.focusOffset !== g.offset) &&
								((b = b.createRange()).setStart(
									e.node,
									e.offset,
								),
								a.removeAllRanges(),
								f > d
									? (a.addRange(b),
									  a.extend(g.node, g.offset))
									: (b.setEnd(g.node, g.offset),
									  a.addRange(b)));
						}
					for (b = [], a = c; (a = a.parentNode); )
						1 === a.nodeType &&
							b.push({
								element: a,
								left: a.scrollLeft,
								top: a.scrollTop,
							});
					for (
						'function' == typeof c.focus && c.focus(), c = 0;
						c < b.length;
						c++
					)
						((a = b[c]).element.scrollLeft = a.left),
							(a.element.scrollTop = a.top);
				}
			}
			var Pe =
					ia &&
					'documentMode' in document &&
					11 >= document.documentMode,
				Qe = null,
				Re = null,
				Se = null,
				Te = !1;
			function Ue(a, b, c) {
				var d =
					c.window === c
						? c.document
						: 9 === c.nodeType
						? c
						: c.ownerDocument;
				Te ||
					null == Qe ||
					Qe !== Xa(d) ||
					('selectionStart' in (d = Qe) && Ne(d)
						? (d = { start: d.selectionStart, end: d.selectionEnd })
						: (d = {
								anchorNode: (d = (
									(d.ownerDocument &&
										d.ownerDocument.defaultView) ||
									window
								).getSelection()).anchorNode,
								anchorOffset: d.anchorOffset,
								focusNode: d.focusNode,
								focusOffset: d.focusOffset,
						  }),
					(Se && Ie(Se, d)) ||
						((Se = d),
						0 < (d = oe(Re, 'onSelect')).length &&
							((b = new td('onSelect', 'select', null, b, c)),
							a.push({ event: b, listeners: d }),
							(b.target = Qe))));
			}
			function Ve(a, b) {
				var c = {};
				return (
					(c[a.toLowerCase()] = b.toLowerCase()),
					(c['Webkit' + a] = 'webkit' + b),
					(c['Moz' + a] = 'moz' + b),
					c
				);
			}
			var We = {
					animationend: Ve('Animation', 'AnimationEnd'),
					animationiteration: Ve('Animation', 'AnimationIteration'),
					animationstart: Ve('Animation', 'AnimationStart'),
					transitionend: Ve('Transition', 'TransitionEnd'),
				},
				Xe = {},
				Ye = {};
			function Ze(a) {
				if (Xe[a]) return Xe[a];
				if (!We[a]) return a;
				var c,
					b = We[a];
				for (c in b)
					if (b.hasOwnProperty(c) && c in Ye) return (Xe[a] = b[c]);
				return a;
			}
			ia &&
				((Ye = document.createElement('div').style),
				'AnimationEvent' in window ||
					(delete We.animationend.animation,
					delete We.animationiteration.animation,
					delete We.animationstart.animation),
				'TransitionEvent' in window ||
					delete We.transitionend.transition);
			var $e = Ze('animationend'),
				af = Ze('animationiteration'),
				bf = Ze('animationstart'),
				cf = Ze('transitionend'),
				df = new Map(),
				ef =
					'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
						' ',
					);
			function ff(a, b) {
				df.set(a, b), fa(b, [a]);
			}
			for (var gf = 0; gf < ef.length; gf++) {
				var hf = ef[gf];
				ff(
					hf.toLowerCase(),
					'on' + (hf[0].toUpperCase() + hf.slice(1)),
				);
			}
			ff($e, 'onAnimationEnd'),
				ff(af, 'onAnimationIteration'),
				ff(bf, 'onAnimationStart'),
				ff('dblclick', 'onDoubleClick'),
				ff('focusin', 'onFocus'),
				ff('focusout', 'onBlur'),
				ff(cf, 'onTransitionEnd'),
				ha('onMouseEnter', ['mouseout', 'mouseover']),
				ha('onMouseLeave', ['mouseout', 'mouseover']),
				ha('onPointerEnter', ['pointerout', 'pointerover']),
				ha('onPointerLeave', ['pointerout', 'pointerover']),
				fa(
					'onChange',
					'change click focusin focusout input keydown keyup selectionchange'.split(
						' ',
					),
				),
				fa(
					'onSelect',
					'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
						' ',
					),
				),
				fa('onBeforeInput', [
					'compositionend',
					'keypress',
					'textInput',
					'paste',
				]),
				fa(
					'onCompositionEnd',
					'compositionend focusout keydown keypress keyup mousedown'.split(
						' ',
					),
				),
				fa(
					'onCompositionStart',
					'compositionstart focusout keydown keypress keyup mousedown'.split(
						' ',
					),
				),
				fa(
					'onCompositionUpdate',
					'compositionupdate focusout keydown keypress keyup mousedown'.split(
						' ',
					),
				);
			var lf =
					'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
						' ',
					),
				mf = new Set(
					'cancel close invalid load scroll toggle'
						.split(' ')
						.concat(lf),
				);
			function nf(a, b, c) {
				var d = a.type || 'unknown-event';
				(a.currentTarget = c),
					(function Ub(a, b, c, d, e, f, g, h, k) {
						if ((Tb.apply(this, arguments), Ob)) {
							if (!Ob) throw Error(p(198));
							var l = Pb;
							(Ob = !1), (Pb = null), Qb || ((Qb = !0), (Rb = l));
						}
					})(d, b, void 0, a),
					(a.currentTarget = null);
			}
			function se(a, b) {
				b = 0 != (4 & b);
				for (var c = 0; c < a.length; c++) {
					var d = a[c],
						e = d.event;
					d = d.listeners;
					a: {
						var f = void 0;
						if (b)
							for (var g = d.length - 1; 0 <= g; g--) {
								var h = d[g],
									k = h.instance,
									l = h.currentTarget;
								if (
									((h = h.listener),
									k !== f && e.isPropagationStopped())
								)
									break a;
								nf(e, h, l), (f = k);
							}
						else
							for (g = 0; g < d.length; g++) {
								if (
									((k = (h = d[g]).instance),
									(l = h.currentTarget),
									(h = h.listener),
									k !== f && e.isPropagationStopped())
								)
									break a;
								nf(e, h, l), (f = k);
							}
					}
				}
				if (Qb) throw ((a = Rb), (Qb = !1), (Rb = null), a);
			}
			function D(a, b) {
				var c = b[of];
				void 0 === c && (c = b[of] = new Set());
				var d = a + '__bubble';
				c.has(d) || (pf(b, a, 2, !1), c.add(d));
			}
			function qf(a, b, c) {
				var d = 0;
				b && (d |= 4), pf(c, a, d, b);
			}
			var rf = '_reactListening' + Math.random().toString(36).slice(2);
			function sf(a) {
				if (!a[rf]) {
					(a[rf] = !0),
						da.forEach(function (b) {
							'selectionchange' !== b &&
								(mf.has(b) || qf(b, !1, a), qf(b, !0, a));
						});
					var b = 9 === a.nodeType ? a : a.ownerDocument;
					null === b ||
						b[rf] ||
						((b[rf] = !0), qf('selectionchange', !1, b));
				}
			}
			function pf(a, b, c, d) {
				switch (jd(b)) {
					case 1:
						var e = ed;
						break;
					case 4:
						e = gd;
						break;
					default:
						e = fd;
				}
				(c = e.bind(null, b, c, a)),
					(e = void 0),
					!Lb ||
						('touchstart' !== b &&
							'touchmove' !== b &&
							'wheel' !== b) ||
						(e = !0),
					d
						? void 0 !== e
							? a.addEventListener(b, c, {
									capture: !0,
									passive: e,
							  })
							: a.addEventListener(b, c, !0)
						: void 0 !== e
						? a.addEventListener(b, c, { passive: e })
						: a.addEventListener(b, c, !1);
			}
			function hd(a, b, c, d, e) {
				var f = d;
				if (0 == (1 & b) && 0 == (2 & b) && null !== d)
					a: for (;;) {
						if (null === d) return;
						var g = d.tag;
						if (3 === g || 4 === g) {
							var h = d.stateNode.containerInfo;
							if (
								h === e ||
								(8 === h.nodeType && h.parentNode === e)
							)
								break;
							if (4 === g)
								for (g = d.return; null !== g; ) {
									var k = g.tag;
									if (
										(3 === k || 4 === k) &&
										((k = g.stateNode.containerInfo) ===
											e ||
											(8 === k.nodeType &&
												k.parentNode === e))
									)
										return;
									g = g.return;
								}
							for (; null !== h; ) {
								if (null === (g = Wc(h))) return;
								if (5 === (k = g.tag) || 6 === k) {
									d = f = g;
									continue a;
								}
								h = h.parentNode;
							}
						}
						d = d.return;
					}
				Jb(function () {
					var d = f,
						e = xb(c),
						g = [];
					a: {
						var h = df.get(a);
						if (void 0 !== h) {
							var k = td,
								n = a;
							switch (a) {
								case 'keypress':
									if (0 === od(c)) break a;
								case 'keydown':
								case 'keyup':
									k = Rd;
									break;
								case 'focusin':
									(n = 'focus'), (k = Fd);
									break;
								case 'focusout':
									(n = 'blur'), (k = Fd);
									break;
								case 'beforeblur':
								case 'afterblur':
									k = Fd;
									break;
								case 'click':
									if (2 === c.button) break a;
								case 'auxclick':
								case 'dblclick':
								case 'mousedown':
								case 'mousemove':
								case 'mouseup':
								case 'mouseout':
								case 'mouseover':
								case 'contextmenu':
									k = Bd;
									break;
								case 'drag':
								case 'dragend':
								case 'dragenter':
								case 'dragexit':
								case 'dragleave':
								case 'dragover':
								case 'dragstart':
								case 'drop':
									k = Dd;
									break;
								case 'touchcancel':
								case 'touchend':
								case 'touchmove':
								case 'touchstart':
									k = Vd;
									break;
								case $e:
								case af:
								case bf:
									k = Hd;
									break;
								case cf:
									k = Xd;
									break;
								case 'scroll':
									k = vd;
									break;
								case 'wheel':
									k = Zd;
									break;
								case 'copy':
								case 'cut':
								case 'paste':
									k = Jd;
									break;
								case 'gotpointercapture':
								case 'lostpointercapture':
								case 'pointercancel':
								case 'pointerdown':
								case 'pointermove':
								case 'pointerout':
								case 'pointerover':
								case 'pointerup':
									k = Td;
							}
							var t = 0 != (4 & b),
								J = !t && 'scroll' === a,
								x = t ? (null !== h ? h + 'Capture' : null) : h;
							t = [];
							for (var u, w = d; null !== w; ) {
								var F = (u = w).stateNode;
								if (
									(5 === u.tag &&
										null !== F &&
										((u = F),
										null !== x &&
											null != (F = Kb(w, x)) &&
											t.push(tf(w, F, u))),
									J)
								)
									break;
								w = w.return;
							}
							0 < t.length &&
								((h = new k(h, n, null, c, e)),
								g.push({ event: h, listeners: t }));
						}
					}
					if (0 == (7 & b)) {
						if (
							((k = 'mouseout' === a || 'pointerout' === a),
							(!(h = 'mouseover' === a || 'pointerover' === a) ||
								c === wb ||
								!(n = c.relatedTarget || c.fromElement) ||
								(!Wc(n) && !n[uf])) &&
								(k || h) &&
								((h =
									e.window === e
										? e
										: (h = e.ownerDocument)
										? h.defaultView || h.parentWindow
										: window),
								k
									? ((k = d),
									  null !==
											(n = (n =
												c.relatedTarget || c.toElement)
												? Wc(n)
												: null) &&
											(n !== (J = Vb(n)) ||
												(5 !== n.tag && 6 !== n.tag)) &&
											(n = null))
									: ((k = null), (n = d)),
								k !== n))
						) {
							if (
								((t = Bd),
								(F = 'onMouseLeave'),
								(x = 'onMouseEnter'),
								(w = 'mouse'),
								('pointerout' !== a && 'pointerover' !== a) ||
									((t = Td),
									(F = 'onPointerLeave'),
									(x = 'onPointerEnter'),
									(w = 'pointer')),
								(J = null == k ? h : ue(k)),
								(u = null == n ? h : ue(n)),
								((h = new t(F, w + 'leave', k, c, e)).target =
									J),
								(h.relatedTarget = u),
								(F = null),
								Wc(e) === d &&
									(((t = new t(
										x,
										w + 'enter',
										n,
										c,
										e,
									)).target = u),
									(t.relatedTarget = J),
									(F = t)),
								(J = F),
								k && n)
							)
								b: {
									for (x = n, w = 0, u = t = k; u; u = vf(u))
										w++;
									for (u = 0, F = x; F; F = vf(F)) u++;
									for (; 0 < w - u; ) (t = vf(t)), w--;
									for (; 0 < u - w; ) (x = vf(x)), u--;
									for (; w--; ) {
										if (
											t === x ||
											(null !== x && t === x.alternate)
										)
											break b;
										(t = vf(t)), (x = vf(x));
									}
									t = null;
								}
							else t = null;
							null !== k && wf(g, h, k, t, !1),
								null !== n && null !== J && wf(g, J, n, t, !0);
						}
						if (
							'select' ===
								(k =
									(h = d ? ue(d) : window).nodeName &&
									h.nodeName.toLowerCase()) ||
							('input' === k && 'file' === h.type)
						)
							var na = ve;
						else if (me(h))
							if (we) na = Fe;
							else {
								na = De;
								var xa = Ce;
							}
						else
							(k = h.nodeName) &&
								'input' === k.toLowerCase() &&
								('checkbox' === h.type || 'radio' === h.type) &&
								(na = Ee);
						switch (
							(na && (na = na(a, d))
								? ne(g, na, c, e)
								: (xa && xa(a, h, d),
								  'focusout' === a &&
										(xa = h._wrapperState) &&
										xa.controlled &&
										'number' === h.type &&
										cb(h, 'number', h.value)),
							(xa = d ? ue(d) : window),
							a)
						) {
							case 'focusin':
								(me(xa) || 'true' === xa.contentEditable) &&
									((Qe = xa), (Re = d), (Se = null));
								break;
							case 'focusout':
								Se = Re = Qe = null;
								break;
							case 'mousedown':
								Te = !0;
								break;
							case 'contextmenu':
							case 'mouseup':
							case 'dragend':
								(Te = !1), Ue(g, c, e);
								break;
							case 'selectionchange':
								if (Pe) break;
							case 'keydown':
							case 'keyup':
								Ue(g, c, e);
						}
						var $a;
						if (ae)
							b: {
								switch (a) {
									case 'compositionstart':
										var ba = 'onCompositionStart';
										break b;
									case 'compositionend':
										ba = 'onCompositionEnd';
										break b;
									case 'compositionupdate':
										ba = 'onCompositionUpdate';
										break b;
								}
								ba = void 0;
							}
						else
							ie
								? ge(a, c) && (ba = 'onCompositionEnd')
								: 'keydown' === a &&
								  229 === c.keyCode &&
								  (ba = 'onCompositionStart');
						ba &&
							(de &&
								'ko' !== c.locale &&
								(ie || 'onCompositionStart' !== ba
									? 'onCompositionEnd' === ba &&
									  ie &&
									  ($a = nd())
									: ((ld =
											'value' in (kd = e)
												? kd.value
												: kd.textContent),
									  (ie = !0))),
							0 < (xa = oe(d, ba)).length &&
								((ba = new Ld(ba, a, null, c, e)),
								g.push({ event: ba, listeners: xa }),
								$a
									? (ba.data = $a)
									: null !== ($a = he(c)) && (ba.data = $a))),
							($a = ce
								? (function je(a, b) {
										switch (a) {
											case 'compositionend':
												return he(b);
											case 'keypress':
												return 32 !== b.which
													? null
													: ((fe = !0), ee);
											case 'textInput':
												return (a = b.data) === ee && fe
													? null
													: a;
											default:
												return null;
										}
								  })(a, c)
								: (function ke(a, b) {
										if (ie)
											return 'compositionend' === a ||
												(!ae && ge(a, b))
												? ((a = nd()),
												  (md = ld = kd = null),
												  (ie = !1),
												  a)
												: null;
										switch (a) {
											case 'paste':
											default:
												return null;
											case 'keypress':
												if (
													!(
														b.ctrlKey ||
														b.altKey ||
														b.metaKey
													) ||
													(b.ctrlKey && b.altKey)
												) {
													if (
														b.char &&
														1 < b.char.length
													)
														return b.char;
													if (b.which)
														return String.fromCharCode(
															b.which,
														);
												}
												return null;
											case 'compositionend':
												return de && 'ko' !== b.locale
													? null
													: b.data;
										}
								  })(a, c)) &&
								0 < (d = oe(d, 'onBeforeInput')).length &&
								((e = new Ld(
									'onBeforeInput',
									'beforeinput',
									null,
									c,
									e,
								)),
								g.push({ event: e, listeners: d }),
								(e.data = $a));
					}
					se(g, b);
				});
			}
			function tf(a, b, c) {
				return { instance: a, listener: b, currentTarget: c };
			}
			function oe(a, b) {
				for (var c = b + 'Capture', d = []; null !== a; ) {
					var e = a,
						f = e.stateNode;
					5 === e.tag &&
						null !== f &&
						((e = f),
						null != (f = Kb(a, c)) && d.unshift(tf(a, f, e)),
						null != (f = Kb(a, b)) && d.push(tf(a, f, e))),
						(a = a.return);
				}
				return d;
			}
			function vf(a) {
				if (null === a) return null;
				do {
					a = a.return;
				} while (a && 5 !== a.tag);
				return a || null;
			}
			function wf(a, b, c, d, e) {
				for (var f = b._reactName, g = []; null !== c && c !== d; ) {
					var h = c,
						k = h.alternate,
						l = h.stateNode;
					if (null !== k && k === d) break;
					5 === h.tag &&
						null !== l &&
						((h = l),
						e
							? null != (k = Kb(c, f)) && g.unshift(tf(c, k, h))
							: e ||
							  (null != (k = Kb(c, f)) && g.push(tf(c, k, h)))),
						(c = c.return);
				}
				0 !== g.length && a.push({ event: b, listeners: g });
			}
			var xf = /\r\n?/g,
				yf = /\u0000|\uFFFD/g;
			function zf(a) {
				return ('string' == typeof a ? a : '' + a)
					.replace(xf, '\n')
					.replace(yf, '');
			}
			function Af(a, b, c) {
				if (((b = zf(b)), zf(a) !== b && c)) throw Error(p(425));
			}
			function Bf() {}
			var Cf = null,
				Df = null;
			function Ef(a, b) {
				return (
					'textarea' === a ||
					'noscript' === a ||
					'string' == typeof b.children ||
					'number' == typeof b.children ||
					('object' == typeof b.dangerouslySetInnerHTML &&
						null !== b.dangerouslySetInnerHTML &&
						null != b.dangerouslySetInnerHTML.__html)
				);
			}
			var Ff = 'function' == typeof setTimeout ? setTimeout : void 0,
				Gf = 'function' == typeof clearTimeout ? clearTimeout : void 0,
				Hf = 'function' == typeof Promise ? Promise : void 0,
				Jf =
					'function' == typeof queueMicrotask
						? queueMicrotask
						: void 0 !== Hf
						? function (a) {
								return Hf.resolve(null).then(a).catch(If);
						  }
						: Ff;
			function If(a) {
				setTimeout(function () {
					throw a;
				});
			}
			function Kf(a, b) {
				var c = b,
					d = 0;
				do {
					var e = c.nextSibling;
					if ((a.removeChild(c), e && 8 === e.nodeType))
						if ('/$' === (c = e.data)) {
							if (0 === d) return a.removeChild(e), void bd(b);
							d--;
						} else ('$' !== c && '$?' !== c && '$!' !== c) || d++;
					c = e;
				} while (c);
				bd(b);
			}
			function Lf(a) {
				for (; null != a; a = a.nextSibling) {
					var b = a.nodeType;
					if (1 === b || 3 === b) break;
					if (8 === b) {
						if ('$' === (b = a.data) || '$!' === b || '$?' === b)
							break;
						if ('/$' === b) return null;
					}
				}
				return a;
			}
			function Mf(a) {
				a = a.previousSibling;
				for (var b = 0; a; ) {
					if (8 === a.nodeType) {
						var c = a.data;
						if ('$' === c || '$!' === c || '$?' === c) {
							if (0 === b) return a;
							b--;
						} else '/$' === c && b++;
					}
					a = a.previousSibling;
				}
				return null;
			}
			var Nf = Math.random().toString(36).slice(2),
				Of = '__reactFiber$' + Nf,
				Pf = '__reactProps$' + Nf,
				uf = '__reactContainer$' + Nf,
				of = '__reactEvents$' + Nf,
				Qf = '__reactListeners$' + Nf,
				Rf = '__reactHandles$' + Nf;
			function Wc(a) {
				var b = a[Of];
				if (b) return b;
				for (var c = a.parentNode; c; ) {
					if ((b = c[uf] || c[Of])) {
						if (
							((c = b.alternate),
							null !== b.child ||
								(null !== c && null !== c.child))
						)
							for (a = Mf(a); null !== a; ) {
								if ((c = a[Of])) return c;
								a = Mf(a);
							}
						return b;
					}
					c = (a = c).parentNode;
				}
				return null;
			}
			function Cb(a) {
				return !(a = a[Of] || a[uf]) ||
					(5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag)
					? null
					: a;
			}
			function ue(a) {
				if (5 === a.tag || 6 === a.tag) return a.stateNode;
				throw Error(p(33));
			}
			function Db(a) {
				return a[Pf] || null;
			}
			var Sf = [],
				Tf = -1;
			function Uf(a) {
				return { current: a };
			}
			function E(a) {
				0 > Tf || ((a.current = Sf[Tf]), (Sf[Tf] = null), Tf--);
			}
			function G(a, b) {
				Tf++, (Sf[Tf] = a.current), (a.current = b);
			}
			var Vf = {},
				H = Uf(Vf),
				Wf = Uf(!1),
				Xf = Vf;
			function Yf(a, b) {
				var c = a.type.contextTypes;
				if (!c) return Vf;
				var d = a.stateNode;
				if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
					return d.__reactInternalMemoizedMaskedChildContext;
				var f,
					e = {};
				for (f in c) e[f] = b[f];
				return (
					d &&
						(((a =
							a.stateNode).__reactInternalMemoizedUnmaskedChildContext =
							b),
						(a.__reactInternalMemoizedMaskedChildContext = e)),
					e
				);
			}
			function Zf(a) {
				return null != (a = a.childContextTypes);
			}
			function $f() {
				E(Wf), E(H);
			}
			function ag(a, b, c) {
				if (H.current !== Vf) throw Error(p(168));
				G(H, b), G(Wf, c);
			}
			function bg(a, b, c) {
				var d = a.stateNode;
				if (
					((b = b.childContextTypes),
					'function' != typeof d.getChildContext)
				)
					return c;
				for (var e in (d = d.getChildContext()))
					if (!(e in b)) throw Error(p(108, Ra(a) || 'Unknown', e));
				return A({}, c, d);
			}
			function cg(a) {
				return (
					(a =
						((a = a.stateNode) &&
							a.__reactInternalMemoizedMergedChildContext) ||
						Vf),
					(Xf = H.current),
					G(H, a),
					G(Wf, Wf.current),
					!0
				);
			}
			function dg(a, b, c) {
				var d = a.stateNode;
				if (!d) throw Error(p(169));
				c
					? ((a = bg(a, b, Xf)),
					  (d.__reactInternalMemoizedMergedChildContext = a),
					  E(Wf),
					  E(H),
					  G(H, a))
					: E(Wf),
					G(Wf, c);
			}
			var eg = null,
				fg = !1,
				gg = !1;
			function hg(a) {
				null === eg ? (eg = [a]) : eg.push(a);
			}
			function jg() {
				if (!gg && null !== eg) {
					gg = !0;
					var a = 0,
						b = C;
					try {
						var c = eg;
						for (C = 1; a < c.length; a++) {
							var d = c[a];
							do {
								d = d(!0);
							} while (null !== d);
						}
						(eg = null), (fg = !1);
					} catch (e) {
						throw (
							(null !== eg && (eg = eg.slice(a + 1)),
							ac(fc, jg),
							e)
						);
					} finally {
						(C = b), (gg = !1);
					}
				}
				return null;
			}
			var kg = [],
				lg = 0,
				mg = null,
				ng = 0,
				og = [],
				pg = 0,
				qg = null,
				rg = 1,
				sg = '';
			function tg(a, b) {
				(kg[lg++] = ng), (kg[lg++] = mg), (mg = a), (ng = b);
			}
			function ug(a, b, c) {
				(og[pg++] = rg), (og[pg++] = sg), (og[pg++] = qg), (qg = a);
				var d = rg;
				a = sg;
				var e = 32 - oc(d) - 1;
				(d &= ~(1 << e)), (c += 1);
				var f = 32 - oc(b) + e;
				if (30 < f) {
					var g = e - (e % 5);
					(f = (d & ((1 << g) - 1)).toString(32)),
						(d >>= g),
						(e -= g),
						(rg = (1 << (32 - oc(b) + e)) | (c << e) | d),
						(sg = f + a);
				} else (rg = (1 << f) | (c << e) | d), (sg = a);
			}
			function vg(a) {
				null !== a.return && (tg(a, 1), ug(a, 1, 0));
			}
			function wg(a) {
				for (; a === mg; )
					(mg = kg[--lg]),
						(kg[lg] = null),
						(ng = kg[--lg]),
						(kg[lg] = null);
				for (; a === qg; )
					(qg = og[--pg]),
						(og[pg] = null),
						(sg = og[--pg]),
						(og[pg] = null),
						(rg = og[--pg]),
						(og[pg] = null);
			}
			var xg = null,
				yg = null,
				I = !1,
				zg = null;
			function Ag(a, b) {
				var c = Bg(5, null, null, 0);
				(c.elementType = 'DELETED'),
					(c.stateNode = b),
					(c.return = a),
					null === (b = a.deletions)
						? ((a.deletions = [c]), (a.flags |= 16))
						: b.push(c);
			}
			function Cg(a, b) {
				switch (a.tag) {
					case 5:
						var c = a.type;
						return (
							null !==
								(b =
									1 !== b.nodeType ||
									c.toLowerCase() !== b.nodeName.toLowerCase()
										? null
										: b) &&
							((a.stateNode = b),
							(xg = a),
							(yg = Lf(b.firstChild)),
							!0)
						);
					case 6:
						return (
							null !==
								(b =
									'' === a.pendingProps || 3 !== b.nodeType
										? null
										: b) &&
							((a.stateNode = b), (xg = a), (yg = null), !0)
						);
					case 13:
						return (
							null !== (b = 8 !== b.nodeType ? null : b) &&
							((c =
								null !== qg ? { id: rg, overflow: sg } : null),
							(a.memoizedState = {
								dehydrated: b,
								treeContext: c,
								retryLane: 1073741824,
							}),
							((c = Bg(18, null, null, 0)).stateNode = b),
							(c.return = a),
							(a.child = c),
							(xg = a),
							(yg = null),
							!0)
						);
					default:
						return !1;
				}
			}
			function Dg(a) {
				return 0 != (1 & a.mode) && 0 == (128 & a.flags);
			}
			function Eg(a) {
				if (I) {
					var b = yg;
					if (b) {
						var c = b;
						if (!Cg(a, b)) {
							if (Dg(a)) throw Error(p(418));
							b = Lf(c.nextSibling);
							var d = xg;
							b && Cg(a, b)
								? Ag(d, c)
								: ((a.flags = (-4097 & a.flags) | 2),
								  (I = !1),
								  (xg = a));
						}
					} else {
						if (Dg(a)) throw Error(p(418));
						(a.flags = (-4097 & a.flags) | 2), (I = !1), (xg = a);
					}
				}
			}
			function Fg(a) {
				for (
					a = a.return;
					null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;

				)
					a = a.return;
				xg = a;
			}
			function Gg(a) {
				if (a !== xg) return !1;
				if (!I) return Fg(a), (I = !0), !1;
				var b;
				if (
					((b = 3 !== a.tag) &&
						!(b = 5 !== a.tag) &&
						(b =
							'head' !== (b = a.type) &&
							'body' !== b &&
							!Ef(a.type, a.memoizedProps)),
					b && (b = yg))
				) {
					if (Dg(a)) throw (Hg(), Error(p(418)));
					for (; b; ) Ag(a, b), (b = Lf(b.nextSibling));
				}
				if ((Fg(a), 13 === a.tag)) {
					if (
						!(a =
							null !== (a = a.memoizedState)
								? a.dehydrated
								: null)
					)
						throw Error(p(317));
					a: {
						for (a = a.nextSibling, b = 0; a; ) {
							if (8 === a.nodeType) {
								var c = a.data;
								if ('/$' === c) {
									if (0 === b) {
										yg = Lf(a.nextSibling);
										break a;
									}
									b--;
								} else
									('$' !== c && '$!' !== c && '$?' !== c) ||
										b++;
							}
							a = a.nextSibling;
						}
						yg = null;
					}
				} else yg = xg ? Lf(a.stateNode.nextSibling) : null;
				return !0;
			}
			function Hg() {
				for (var a = yg; a; ) a = Lf(a.nextSibling);
			}
			function Ig() {
				(yg = xg = null), (I = !1);
			}
			function Jg(a) {
				null === zg ? (zg = [a]) : zg.push(a);
			}
			var Kg = ua.ReactCurrentBatchConfig;
			function Lg(a, b, c) {
				if (
					null !== (a = c.ref) &&
					'function' != typeof a &&
					'object' != typeof a
				) {
					if (c._owner) {
						if ((c = c._owner)) {
							if (1 !== c.tag) throw Error(p(309));
							var d = c.stateNode;
						}
						if (!d) throw Error(p(147, a));
						var e = d,
							f = '' + a;
						return null !== b &&
							null !== b.ref &&
							'function' == typeof b.ref &&
							b.ref._stringRef === f
							? b.ref
							: ((b = function (a) {
									var b = e.refs;
									null === a ? delete b[f] : (b[f] = a);
							  }),
							  (b._stringRef = f),
							  b);
					}
					if ('string' != typeof a) throw Error(p(284));
					if (!c._owner) throw Error(p(290, a));
				}
				return a;
			}
			function Mg(a, b) {
				throw (
					((a = Object.prototype.toString.call(b)),
					Error(
						p(
							31,
							'[object Object]' === a
								? 'object with keys {' +
										Object.keys(b).join(', ') +
										'}'
								: a,
						),
					))
				);
			}
			function Ng(a) {
				return (0, a._init)(a._payload);
			}
			function Og(a) {
				function b(b, c) {
					if (a) {
						var d = b.deletions;
						null === d
							? ((b.deletions = [c]), (b.flags |= 16))
							: d.push(c);
					}
				}
				function c(c, d) {
					if (!a) return null;
					for (; null !== d; ) b(c, d), (d = d.sibling);
					return null;
				}
				function d(a, b) {
					for (a = new Map(); null !== b; )
						null !== b.key ? a.set(b.key, b) : a.set(b.index, b),
							(b = b.sibling);
					return a;
				}
				function e(a, b) {
					return ((a = Pg(a, b)).index = 0), (a.sibling = null), a;
				}
				function f(b, c, d) {
					return (
						(b.index = d),
						a
							? null !== (d = b.alternate)
								? (d = d.index) < c
									? ((b.flags |= 2), c)
									: d
								: ((b.flags |= 2), c)
							: ((b.flags |= 1048576), c)
					);
				}
				function g(b) {
					return a && null === b.alternate && (b.flags |= 2), b;
				}
				function h(a, b, c, d) {
					return null === b || 6 !== b.tag
						? (((b = Qg(c, a.mode, d)).return = a), b)
						: (((b = e(b, c)).return = a), b);
				}
				function k(a, b, c, d) {
					var f = c.type;
					return f === ya
						? m(a, b, c.props.children, d, c.key)
						: null !== b &&
						  (b.elementType === f ||
								('object' == typeof f &&
									null !== f &&
									f.$$typeof === Ha &&
									Ng(f) === b.type))
						? (((d = e(b, c.props)).ref = Lg(a, b, c)),
						  (d.return = a),
						  d)
						: (((d = Rg(
								c.type,
								c.key,
								c.props,
								null,
								a.mode,
								d,
						  )).ref = Lg(a, b, c)),
						  (d.return = a),
						  d);
				}
				function l(a, b, c, d) {
					return null === b ||
						4 !== b.tag ||
						b.stateNode.containerInfo !== c.containerInfo ||
						b.stateNode.implementation !== c.implementation
						? (((b = Sg(c, a.mode, d)).return = a), b)
						: (((b = e(b, c.children || [])).return = a), b);
				}
				function m(a, b, c, d, f) {
					return null === b || 7 !== b.tag
						? (((b = Tg(c, a.mode, d, f)).return = a), b)
						: (((b = e(b, c)).return = a), b);
				}
				function q(a, b, c) {
					if (
						('string' == typeof b && '' !== b) ||
						'number' == typeof b
					)
						return ((b = Qg('' + b, a.mode, c)).return = a), b;
					if ('object' == typeof b && null !== b) {
						switch (b.$$typeof) {
							case va:
								return (
									((c = Rg(
										b.type,
										b.key,
										b.props,
										null,
										a.mode,
										c,
									)).ref = Lg(a, null, b)),
									(c.return = a),
									c
								);
							case wa:
								return ((b = Sg(b, a.mode, c)).return = a), b;
							case Ha:
								return q(a, (0, b._init)(b._payload), c);
						}
						if (eb(b) || Ka(b))
							return ((b = Tg(b, a.mode, c, null)).return = a), b;
						Mg(a, b);
					}
					return null;
				}
				function r(a, b, c, d) {
					var e = null !== b ? b.key : null;
					if (
						('string' == typeof c && '' !== c) ||
						'number' == typeof c
					)
						return null !== e ? null : h(a, b, '' + c, d);
					if ('object' == typeof c && null !== c) {
						switch (c.$$typeof) {
							case va:
								return c.key === e ? k(a, b, c, d) : null;
							case wa:
								return c.key === e ? l(a, b, c, d) : null;
							case Ha:
								return r(a, b, (e = c._init)(c._payload), d);
						}
						if (eb(c) || Ka(c))
							return null !== e ? null : m(a, b, c, d, null);
						Mg(a, c);
					}
					return null;
				}
				function y(a, b, c, d, e) {
					if (
						('string' == typeof d && '' !== d) ||
						'number' == typeof d
					)
						return h(b, (a = a.get(c) || null), '' + d, e);
					if ('object' == typeof d && null !== d) {
						switch (d.$$typeof) {
							case va:
								return k(
									b,
									(a =
										a.get(null === d.key ? c : d.key) ||
										null),
									d,
									e,
								);
							case wa:
								return l(
									b,
									(a =
										a.get(null === d.key ? c : d.key) ||
										null),
									d,
									e,
								);
							case Ha:
								return y(a, b, c, (0, d._init)(d._payload), e);
						}
						if (eb(d) || Ka(d))
							return m(b, (a = a.get(c) || null), d, e, null);
						Mg(b, d);
					}
					return null;
				}
				function n(e, g, h, k) {
					for (
						var l = null, m = null, u = g, w = (g = 0), x = null;
						null !== u && w < h.length;
						w++
					) {
						u.index > w ? ((x = u), (u = null)) : (x = u.sibling);
						var n = r(e, u, h[w], k);
						if (null === n) {
							null === u && (u = x);
							break;
						}
						a && u && null === n.alternate && b(e, u),
							(g = f(n, g, w)),
							null === m ? (l = n) : (m.sibling = n),
							(m = n),
							(u = x);
					}
					if (w === h.length) return c(e, u), I && tg(e, w), l;
					if (null === u) {
						for (; w < h.length; w++)
							null !== (u = q(e, h[w], k)) &&
								((g = f(u, g, w)),
								null === m ? (l = u) : (m.sibling = u),
								(m = u));
						return I && tg(e, w), l;
					}
					for (u = d(e, u); w < h.length; w++)
						null !== (x = y(u, e, w, h[w], k)) &&
							(a &&
								null !== x.alternate &&
								u.delete(null === x.key ? w : x.key),
							(g = f(x, g, w)),
							null === m ? (l = x) : (m.sibling = x),
							(m = x));
					return (
						a &&
							u.forEach(function (a) {
								return b(e, a);
							}),
						I && tg(e, w),
						l
					);
				}
				function t(e, g, h, k) {
					var l = Ka(h);
					if ('function' != typeof l) throw Error(p(150));
					if (null == (h = l.call(h))) throw Error(p(151));
					for (
						var u = (l = null),
							m = g,
							w = (g = 0),
							x = null,
							n = h.next();
						null !== m && !n.done;
						w++, n = h.next()
					) {
						m.index > w ? ((x = m), (m = null)) : (x = m.sibling);
						var t = r(e, m, n.value, k);
						if (null === t) {
							null === m && (m = x);
							break;
						}
						a && m && null === t.alternate && b(e, m),
							(g = f(t, g, w)),
							null === u ? (l = t) : (u.sibling = t),
							(u = t),
							(m = x);
					}
					if (n.done) return c(e, m), I && tg(e, w), l;
					if (null === m) {
						for (; !n.done; w++, n = h.next())
							null !== (n = q(e, n.value, k)) &&
								((g = f(n, g, w)),
								null === u ? (l = n) : (u.sibling = n),
								(u = n));
						return I && tg(e, w), l;
					}
					for (m = d(e, m); !n.done; w++, n = h.next())
						null !== (n = y(m, e, w, n.value, k)) &&
							(a &&
								null !== n.alternate &&
								m.delete(null === n.key ? w : n.key),
							(g = f(n, g, w)),
							null === u ? (l = n) : (u.sibling = n),
							(u = n));
					return (
						a &&
							m.forEach(function (a) {
								return b(e, a);
							}),
						I && tg(e, w),
						l
					);
				}
				return function J(a, d, f, h) {
					if (
						('object' == typeof f &&
							null !== f &&
							f.type === ya &&
							null === f.key &&
							(f = f.props.children),
						'object' == typeof f && null !== f)
					) {
						switch (f.$$typeof) {
							case va:
								a: {
									for (var k = f.key, l = d; null !== l; ) {
										if (l.key === k) {
											if ((k = f.type) === ya) {
												if (7 === l.tag) {
													c(a, l.sibling),
														((d = e(
															l,
															f.props.children,
														)).return = a),
														(a = d);
													break a;
												}
											} else if (
												l.elementType === k ||
												('object' == typeof k &&
													null !== k &&
													k.$$typeof === Ha &&
													Ng(k) === l.type)
											) {
												c(a, l.sibling),
													((d = e(l, f.props)).ref =
														Lg(a, l, f)),
													(d.return = a),
													(a = d);
												break a;
											}
											c(a, l);
											break;
										}
										b(a, l), (l = l.sibling);
									}
									f.type === ya
										? (((d = Tg(
												f.props.children,
												a.mode,
												h,
												f.key,
										  )).return = a),
										  (a = d))
										: (((h = Rg(
												f.type,
												f.key,
												f.props,
												null,
												a.mode,
												h,
										  )).ref = Lg(a, d, f)),
										  (h.return = a),
										  (a = h));
								}
								return g(a);
							case wa:
								a: {
									for (l = f.key; null !== d; ) {
										if (d.key === l) {
											if (
												4 === d.tag &&
												d.stateNode.containerInfo ===
													f.containerInfo &&
												d.stateNode.implementation ===
													f.implementation
											) {
												c(a, d.sibling),
													((d = e(
														d,
														f.children || [],
													)).return = a),
													(a = d);
												break a;
											}
											c(a, d);
											break;
										}
										b(a, d), (d = d.sibling);
									}
									((d = Sg(f, a.mode, h)).return = a),
										(a = d);
								}
								return g(a);
							case Ha:
								return J(a, d, (l = f._init)(f._payload), h);
						}
						if (eb(f)) return n(a, d, f, h);
						if (Ka(f)) return t(a, d, f, h);
						Mg(a, f);
					}
					return ('string' == typeof f && '' !== f) ||
						'number' == typeof f
						? ((f = '' + f),
						  null !== d && 6 === d.tag
								? (c(a, d.sibling),
								  ((d = e(d, f)).return = a),
								  (a = d))
								: (c(a, d),
								  ((d = Qg(f, a.mode, h)).return = a),
								  (a = d)),
						  g(a))
						: c(a, d);
				};
			}
			var Ug = Og(!0),
				Vg = Og(!1),
				Wg = Uf(null),
				Xg = null,
				Yg = null,
				Zg = null;
			function $g() {
				Zg = Yg = Xg = null;
			}
			function ah(a) {
				var b = Wg.current;
				E(Wg), (a._currentValue = b);
			}
			function bh(a, b, c) {
				for (; null !== a; ) {
					var d = a.alternate;
					if (
						((a.childLanes & b) !== b
							? ((a.childLanes |= b),
							  null !== d && (d.childLanes |= b))
							: null !== d &&
							  (d.childLanes & b) !== b &&
							  (d.childLanes |= b),
						a === c)
					)
						break;
					a = a.return;
				}
			}
			function ch(a, b) {
				(Xg = a),
					(Zg = Yg = null),
					null !== (a = a.dependencies) &&
						null !== a.firstContext &&
						(0 != (a.lanes & b) && (dh = !0),
						(a.firstContext = null));
			}
			function eh(a) {
				var b = a._currentValue;
				if (Zg !== a)
					if (
						((a = { context: a, memoizedValue: b, next: null }),
						null === Yg)
					) {
						if (null === Xg) throw Error(p(308));
						(Yg = a),
							(Xg.dependencies = { lanes: 0, firstContext: a });
					} else Yg = Yg.next = a;
				return b;
			}
			var fh = null;
			function gh(a) {
				null === fh ? (fh = [a]) : fh.push(a);
			}
			function hh(a, b, c, d) {
				var e = b.interleaved;
				return (
					null === e
						? ((c.next = c), gh(b))
						: ((c.next = e.next), (e.next = c)),
					(b.interleaved = c),
					ih(a, d)
				);
			}
			function ih(a, b) {
				a.lanes |= b;
				var c = a.alternate;
				for (
					null !== c && (c.lanes |= b), c = a, a = a.return;
					null !== a;

				)
					(a.childLanes |= b),
						null !== (c = a.alternate) && (c.childLanes |= b),
						(c = a),
						(a = a.return);
				return 3 === c.tag ? c.stateNode : null;
			}
			var jh = !1;
			function kh(a) {
				a.updateQueue = {
					baseState: a.memoizedState,
					firstBaseUpdate: null,
					lastBaseUpdate: null,
					shared: { pending: null, interleaved: null, lanes: 0 },
					effects: null,
				};
			}
			function lh(a, b) {
				(a = a.updateQueue),
					b.updateQueue === a &&
						(b.updateQueue = {
							baseState: a.baseState,
							firstBaseUpdate: a.firstBaseUpdate,
							lastBaseUpdate: a.lastBaseUpdate,
							shared: a.shared,
							effects: a.effects,
						});
			}
			function mh(a, b) {
				return {
					eventTime: a,
					lane: b,
					tag: 0,
					payload: null,
					callback: null,
					next: null,
				};
			}
			function nh(a, b, c) {
				var d = a.updateQueue;
				if (null === d) return null;
				if (((d = d.shared), 0 != (2 & K))) {
					var e = d.pending;
					return (
						null === e
							? (b.next = b)
							: ((b.next = e.next), (e.next = b)),
						(d.pending = b),
						ih(a, c)
					);
				}
				return (
					null === (e = d.interleaved)
						? ((b.next = b), gh(d))
						: ((b.next = e.next), (e.next = b)),
					(d.interleaved = b),
					ih(a, c)
				);
			}
			function oh(a, b, c) {
				if (
					null !== (b = b.updateQueue) &&
					((b = b.shared), 0 != (4194240 & c))
				) {
					var d = b.lanes;
					(c |= d &= a.pendingLanes), (b.lanes = c), Cc(a, c);
				}
			}
			function ph(a, b) {
				var c = a.updateQueue,
					d = a.alternate;
				if (null !== d && c === (d = d.updateQueue)) {
					var e = null,
						f = null;
					if (null !== (c = c.firstBaseUpdate)) {
						do {
							var g = {
								eventTime: c.eventTime,
								lane: c.lane,
								tag: c.tag,
								payload: c.payload,
								callback: c.callback,
								next: null,
							};
							null === f ? (e = f = g) : (f = f.next = g),
								(c = c.next);
						} while (null !== c);
						null === f ? (e = f = b) : (f = f.next = b);
					} else e = f = b;
					return (
						(c = {
							baseState: d.baseState,
							firstBaseUpdate: e,
							lastBaseUpdate: f,
							shared: d.shared,
							effects: d.effects,
						}),
						void (a.updateQueue = c)
					);
				}
				null === (a = c.lastBaseUpdate)
					? (c.firstBaseUpdate = b)
					: (a.next = b),
					(c.lastBaseUpdate = b);
			}
			function qh(a, b, c, d) {
				var e = a.updateQueue;
				jh = !1;
				var f = e.firstBaseUpdate,
					g = e.lastBaseUpdate,
					h = e.shared.pending;
				if (null !== h) {
					e.shared.pending = null;
					var k = h,
						l = k.next;
					(k.next = null),
						null === g ? (f = l) : (g.next = l),
						(g = k);
					var m = a.alternate;
					null !== m &&
						(h = (m = m.updateQueue).lastBaseUpdate) !== g &&
						(null === h ? (m.firstBaseUpdate = l) : (h.next = l),
						(m.lastBaseUpdate = k));
				}
				if (null !== f) {
					var q = e.baseState;
					for (g = 0, m = l = k = null, h = f; ; ) {
						var r = h.lane,
							y = h.eventTime;
						if ((d & r) === r) {
							null !== m &&
								(m = m.next =
									{
										eventTime: y,
										lane: 0,
										tag: h.tag,
										payload: h.payload,
										callback: h.callback,
										next: null,
									});
							a: {
								var n = a,
									t = h;
								switch (((r = b), (y = c), t.tag)) {
									case 1:
										if (
											'function' == typeof (n = t.payload)
										) {
											q = n.call(y, q, r);
											break a;
										}
										q = n;
										break a;
									case 3:
										n.flags = (-65537 & n.flags) | 128;
									case 0:
										if (
											null ==
											(r =
												'function' ==
												typeof (n = t.payload)
													? n.call(y, q, r)
													: n)
										)
											break a;
										q = A({}, q, r);
										break a;
									case 2:
										jh = !0;
								}
							}
							null !== h.callback &&
								0 !== h.lane &&
								((a.flags |= 64),
								null === (r = e.effects)
									? (e.effects = [h])
									: r.push(h));
						} else
							(y = {
								eventTime: y,
								lane: r,
								tag: h.tag,
								payload: h.payload,
								callback: h.callback,
								next: null,
							}),
								null === m
									? ((l = m = y), (k = q))
									: (m = m.next = y),
								(g |= r);
						if (null === (h = h.next)) {
							if (null === (h = e.shared.pending)) break;
							(h = (r = h).next),
								(r.next = null),
								(e.lastBaseUpdate = r),
								(e.shared.pending = null);
						}
					}
					if (
						(null === m && (k = q),
						(e.baseState = k),
						(e.firstBaseUpdate = l),
						(e.lastBaseUpdate = m),
						null !== (b = e.shared.interleaved))
					) {
						e = b;
						do {
							(g |= e.lane), (e = e.next);
						} while (e !== b);
					} else null === f && (e.shared.lanes = 0);
					(rh |= g), (a.lanes = g), (a.memoizedState = q);
				}
			}
			function sh(a, b, c) {
				if (((a = b.effects), (b.effects = null), null !== a))
					for (b = 0; b < a.length; b++) {
						var d = a[b],
							e = d.callback;
						if (null !== e) {
							if (
								((d.callback = null),
								(d = c),
								'function' != typeof e)
							)
								throw Error(p(191, e));
							e.call(d);
						}
					}
			}
			var th = {},
				uh = Uf(th),
				vh = Uf(th),
				wh = Uf(th);
			function xh(a) {
				if (a === th) throw Error(p(174));
				return a;
			}
			function yh(a, b) {
				switch ((G(wh, b), G(vh, a), G(uh, th), (a = b.nodeType))) {
					case 9:
					case 11:
						b = (b = b.documentElement)
							? b.namespaceURI
							: lb(null, '');
						break;
					default:
						b = lb(
							(b =
								(a = 8 === a ? b.parentNode : b).namespaceURI ||
								null),
							(a = a.tagName),
						);
				}
				E(uh), G(uh, b);
			}
			function zh() {
				E(uh), E(vh), E(wh);
			}
			function Ah(a) {
				xh(wh.current);
				var b = xh(uh.current),
					c = lb(b, a.type);
				b !== c && (G(vh, a), G(uh, c));
			}
			function Bh(a) {
				vh.current === a && (E(uh), E(vh));
			}
			var L = Uf(0);
			function Ch(a) {
				for (var b = a; null !== b; ) {
					if (13 === b.tag) {
						var c = b.memoizedState;
						if (
							null !== c &&
							(null === (c = c.dehydrated) ||
								'$?' === c.data ||
								'$!' === c.data)
						)
							return b;
					} else if (
						19 === b.tag &&
						void 0 !== b.memoizedProps.revealOrder
					) {
						if (0 != (128 & b.flags)) return b;
					} else if (null !== b.child) {
						(b.child.return = b), (b = b.child);
						continue;
					}
					if (b === a) break;
					for (; null === b.sibling; ) {
						if (null === b.return || b.return === a) return null;
						b = b.return;
					}
					(b.sibling.return = b.return), (b = b.sibling);
				}
				return null;
			}
			var Dh = [];
			function Eh() {
				for (var a = 0; a < Dh.length; a++)
					Dh[a]._workInProgressVersionPrimary = null;
				Dh.length = 0;
			}
			var Fh = ua.ReactCurrentDispatcher,
				Gh = ua.ReactCurrentBatchConfig,
				Hh = 0,
				M = null,
				N = null,
				O = null,
				Ih = !1,
				Jh = !1,
				Kh = 0,
				Lh = 0;
			function P() {
				throw Error(p(321));
			}
			function Mh(a, b) {
				if (null === b) return !1;
				for (var c = 0; c < b.length && c < a.length; c++)
					if (!He(a[c], b[c])) return !1;
				return !0;
			}
			function Nh(a, b, c, d, e, f) {
				if (
					((Hh = f),
					(M = b),
					(b.memoizedState = null),
					(b.updateQueue = null),
					(b.lanes = 0),
					(Fh.current =
						null === a || null === a.memoizedState ? Oh : Ph),
					(a = c(d, e)),
					Jh)
				) {
					f = 0;
					do {
						if (((Jh = !1), (Kh = 0), 25 <= f)) throw Error(p(301));
						(f += 1),
							(O = N = null),
							(b.updateQueue = null),
							(Fh.current = Qh),
							(a = c(d, e));
					} while (Jh);
				}
				if (
					((Fh.current = Rh),
					(b = null !== N && null !== N.next),
					(Hh = 0),
					(O = N = M = null),
					(Ih = !1),
					b)
				)
					throw Error(p(300));
				return a;
			}
			function Sh() {
				var a = 0 !== Kh;
				return (Kh = 0), a;
			}
			function Th() {
				var a = {
					memoizedState: null,
					baseState: null,
					baseQueue: null,
					queue: null,
					next: null,
				};
				return (
					null === O ? (M.memoizedState = O = a) : (O = O.next = a), O
				);
			}
			function Uh() {
				if (null === N) {
					var a = M.alternate;
					a = null !== a ? a.memoizedState : null;
				} else a = N.next;
				var b = null === O ? M.memoizedState : O.next;
				if (null !== b) (O = b), (N = a);
				else {
					if (null === a) throw Error(p(310));
					(a = {
						memoizedState: (N = a).memoizedState,
						baseState: N.baseState,
						baseQueue: N.baseQueue,
						queue: N.queue,
						next: null,
					}),
						null === O
							? (M.memoizedState = O = a)
							: (O = O.next = a);
				}
				return O;
			}
			function Vh(a, b) {
				return 'function' == typeof b ? b(a) : b;
			}
			function Wh(a) {
				var b = Uh(),
					c = b.queue;
				if (null === c) throw Error(p(311));
				c.lastRenderedReducer = a;
				var d = N,
					e = d.baseQueue,
					f = c.pending;
				if (null !== f) {
					if (null !== e) {
						var g = e.next;
						(e.next = f.next), (f.next = g);
					}
					(d.baseQueue = e = f), (c.pending = null);
				}
				if (null !== e) {
					(f = e.next), (d = d.baseState);
					var h = (g = null),
						k = null,
						l = f;
					do {
						var m = l.lane;
						if ((Hh & m) === m)
							null !== k &&
								(k = k.next =
									{
										lane: 0,
										action: l.action,
										hasEagerState: l.hasEagerState,
										eagerState: l.eagerState,
										next: null,
									}),
								(d = l.hasEagerState
									? l.eagerState
									: a(d, l.action));
						else {
							var q = {
								lane: m,
								action: l.action,
								hasEagerState: l.hasEagerState,
								eagerState: l.eagerState,
								next: null,
							};
							null === k
								? ((h = k = q), (g = d))
								: (k = k.next = q),
								(M.lanes |= m),
								(rh |= m);
						}
						l = l.next;
					} while (null !== l && l !== f);
					null === k ? (g = d) : (k.next = h),
						He(d, b.memoizedState) || (dh = !0),
						(b.memoizedState = d),
						(b.baseState = g),
						(b.baseQueue = k),
						(c.lastRenderedState = d);
				}
				if (null !== (a = c.interleaved)) {
					e = a;
					do {
						(f = e.lane), (M.lanes |= f), (rh |= f), (e = e.next);
					} while (e !== a);
				} else null === e && (c.lanes = 0);
				return [b.memoizedState, c.dispatch];
			}
			function Xh(a) {
				var b = Uh(),
					c = b.queue;
				if (null === c) throw Error(p(311));
				c.lastRenderedReducer = a;
				var d = c.dispatch,
					e = c.pending,
					f = b.memoizedState;
				if (null !== e) {
					c.pending = null;
					var g = (e = e.next);
					do {
						(f = a(f, g.action)), (g = g.next);
					} while (g !== e);
					He(f, b.memoizedState) || (dh = !0),
						(b.memoizedState = f),
						null === b.baseQueue && (b.baseState = f),
						(c.lastRenderedState = f);
				}
				return [f, d];
			}
			function Yh() {}
			function Zh(a, b) {
				var c = M,
					d = Uh(),
					e = b(),
					f = !He(d.memoizedState, e);
				if (
					(f && ((d.memoizedState = e), (dh = !0)),
					(d = d.queue),
					$h(ai.bind(null, c, d, a), [a]),
					d.getSnapshot !== b ||
						f ||
						(null !== O && 1 & O.memoizedState.tag))
				) {
					if (
						((c.flags |= 2048),
						bi(9, ci.bind(null, c, d, e, b), void 0, null),
						null === Q)
					)
						throw Error(p(349));
					0 != (30 & Hh) || di(c, b, e);
				}
				return e;
			}
			function di(a, b, c) {
				(a.flags |= 16384),
					(a = { getSnapshot: b, value: c }),
					null === (b = M.updateQueue)
						? ((b = { lastEffect: null, stores: null }),
						  (M.updateQueue = b),
						  (b.stores = [a]))
						: null === (c = b.stores)
						? (b.stores = [a])
						: c.push(a);
			}
			function ci(a, b, c, d) {
				(b.value = c), (b.getSnapshot = d), ei(b) && fi(a);
			}
			function ai(a, b, c) {
				return c(function () {
					ei(b) && fi(a);
				});
			}
			function ei(a) {
				var b = a.getSnapshot;
				a = a.value;
				try {
					var c = b();
					return !He(a, c);
				} catch (d) {
					return !0;
				}
			}
			function fi(a) {
				var b = ih(a, 1);
				null !== b && gi(b, a, 1, -1);
			}
			function hi(a) {
				var b = Th();
				return (
					'function' == typeof a && (a = a()),
					(b.memoizedState = b.baseState = a),
					(a = {
						pending: null,
						interleaved: null,
						lanes: 0,
						dispatch: null,
						lastRenderedReducer: Vh,
						lastRenderedState: a,
					}),
					(b.queue = a),
					(a = a.dispatch = ii.bind(null, M, a)),
					[b.memoizedState, a]
				);
			}
			function bi(a, b, c, d) {
				return (
					(a = {
						tag: a,
						create: b,
						destroy: c,
						deps: d,
						next: null,
					}),
					null === (b = M.updateQueue)
						? ((b = { lastEffect: null, stores: null }),
						  (M.updateQueue = b),
						  (b.lastEffect = a.next = a))
						: null === (c = b.lastEffect)
						? (b.lastEffect = a.next = a)
						: ((d = c.next),
						  (c.next = a),
						  (a.next = d),
						  (b.lastEffect = a)),
					a
				);
			}
			function ji() {
				return Uh().memoizedState;
			}
			function ki(a, b, c, d) {
				var e = Th();
				(M.flags |= a),
					(e.memoizedState = bi(
						1 | b,
						c,
						void 0,
						void 0 === d ? null : d,
					));
			}
			function li(a, b, c, d) {
				var e = Uh();
				d = void 0 === d ? null : d;
				var f = void 0;
				if (null !== N) {
					var g = N.memoizedState;
					if (((f = g.destroy), null !== d && Mh(d, g.deps)))
						return void (e.memoizedState = bi(b, c, f, d));
				}
				(M.flags |= a), (e.memoizedState = bi(1 | b, c, f, d));
			}
			function mi(a, b) {
				return ki(8390656, 8, a, b);
			}
			function $h(a, b) {
				return li(2048, 8, a, b);
			}
			function ni(a, b) {
				return li(4, 2, a, b);
			}
			function oi(a, b) {
				return li(4, 4, a, b);
			}
			function pi(a, b) {
				return 'function' == typeof b
					? ((a = a()),
					  b(a),
					  function () {
							b(null);
					  })
					: null != b
					? ((a = a()),
					  (b.current = a),
					  function () {
							b.current = null;
					  })
					: void 0;
			}
			function qi(a, b, c) {
				return (
					(c = null != c ? c.concat([a]) : null),
					li(4, 4, pi.bind(null, b, a), c)
				);
			}
			function ri() {}
			function si(a, b) {
				var c = Uh();
				b = void 0 === b ? null : b;
				var d = c.memoizedState;
				return null !== d && null !== b && Mh(b, d[1])
					? d[0]
					: ((c.memoizedState = [a, b]), a);
			}
			function ti(a, b) {
				var c = Uh();
				b = void 0 === b ? null : b;
				var d = c.memoizedState;
				return null !== d && null !== b && Mh(b, d[1])
					? d[0]
					: ((a = a()), (c.memoizedState = [a, b]), a);
			}
			function ui(a, b, c) {
				return 0 == (21 & Hh)
					? (a.baseState && ((a.baseState = !1), (dh = !0)),
					  (a.memoizedState = c))
					: (He(c, b) ||
							((c = yc()),
							(M.lanes |= c),
							(rh |= c),
							(a.baseState = !0)),
					  b);
			}
			function vi(a, b) {
				var c = C;
				(C = 0 !== c && 4 > c ? c : 4), a(!0);
				var d = Gh.transition;
				Gh.transition = {};
				try {
					a(!1), b();
				} finally {
					(C = c), (Gh.transition = d);
				}
			}
			function wi() {
				return Uh().memoizedState;
			}
			function xi(a, b, c) {
				var d = yi(a);
				if (
					((c = {
						lane: d,
						action: c,
						hasEagerState: !1,
						eagerState: null,
						next: null,
					}),
					zi(a))
				)
					Ai(b, c);
				else if (null !== (c = hh(a, b, c, d))) {
					gi(c, a, d, R()), Bi(c, b, d);
				}
			}
			function ii(a, b, c) {
				var d = yi(a),
					e = {
						lane: d,
						action: c,
						hasEagerState: !1,
						eagerState: null,
						next: null,
					};
				if (zi(a)) Ai(b, e);
				else {
					var f = a.alternate;
					if (
						0 === a.lanes &&
						(null === f || 0 === f.lanes) &&
						null !== (f = b.lastRenderedReducer)
					)
						try {
							var g = b.lastRenderedState,
								h = f(g, c);
							if (
								((e.hasEagerState = !0),
								(e.eagerState = h),
								He(h, g))
							) {
								var k = b.interleaved;
								return (
									null === k
										? ((e.next = e), gh(b))
										: ((e.next = k.next), (k.next = e)),
									void (b.interleaved = e)
								);
							}
						} catch (l) {}
					null !== (c = hh(a, b, e, d)) &&
						(gi(c, a, d, (e = R())), Bi(c, b, d));
				}
			}
			function zi(a) {
				var b = a.alternate;
				return a === M || (null !== b && b === M);
			}
			function Ai(a, b) {
				Jh = Ih = !0;
				var c = a.pending;
				null === c ? (b.next = b) : ((b.next = c.next), (c.next = b)),
					(a.pending = b);
			}
			function Bi(a, b, c) {
				if (0 != (4194240 & c)) {
					var d = b.lanes;
					(c |= d &= a.pendingLanes), (b.lanes = c), Cc(a, c);
				}
			}
			var Rh = {
					readContext: eh,
					useCallback: P,
					useContext: P,
					useEffect: P,
					useImperativeHandle: P,
					useInsertionEffect: P,
					useLayoutEffect: P,
					useMemo: P,
					useReducer: P,
					useRef: P,
					useState: P,
					useDebugValue: P,
					useDeferredValue: P,
					useTransition: P,
					useMutableSource: P,
					useSyncExternalStore: P,
					useId: P,
					unstable_isNewReconciler: !1,
				},
				Oh = {
					readContext: eh,
					useCallback: function (a, b) {
						return (
							(Th().memoizedState = [a, void 0 === b ? null : b]),
							a
						);
					},
					useContext: eh,
					useEffect: mi,
					useImperativeHandle: function (a, b, c) {
						return (
							(c = null != c ? c.concat([a]) : null),
							ki(4194308, 4, pi.bind(null, b, a), c)
						);
					},
					useLayoutEffect: function (a, b) {
						return ki(4194308, 4, a, b);
					},
					useInsertionEffect: function (a, b) {
						return ki(4, 2, a, b);
					},
					useMemo: function (a, b) {
						var c = Th();
						return (
							(b = void 0 === b ? null : b),
							(a = a()),
							(c.memoizedState = [a, b]),
							a
						);
					},
					useReducer: function (a, b, c) {
						var d = Th();
						return (
							(b = void 0 !== c ? c(b) : b),
							(d.memoizedState = d.baseState = b),
							(a = {
								pending: null,
								interleaved: null,
								lanes: 0,
								dispatch: null,
								lastRenderedReducer: a,
								lastRenderedState: b,
							}),
							(d.queue = a),
							(a = a.dispatch = xi.bind(null, M, a)),
							[d.memoizedState, a]
						);
					},
					useRef: function (a) {
						return (a = { current: a }), (Th().memoizedState = a);
					},
					useState: hi,
					useDebugValue: ri,
					useDeferredValue: function (a) {
						return (Th().memoizedState = a);
					},
					useTransition: function () {
						var a = hi(!1),
							b = a[0];
						return (
							(a = vi.bind(null, a[1])),
							(Th().memoizedState = a),
							[b, a]
						);
					},
					useMutableSource: function () {},
					useSyncExternalStore: function (a, b, c) {
						var d = M,
							e = Th();
						if (I) {
							if (void 0 === c) throw Error(p(407));
							c = c();
						} else {
							if (((c = b()), null === Q)) throw Error(p(349));
							0 != (30 & Hh) || di(d, b, c);
						}
						e.memoizedState = c;
						var f = { value: c, getSnapshot: b };
						return (
							(e.queue = f),
							mi(ai.bind(null, d, f, a), [a]),
							(d.flags |= 2048),
							bi(9, ci.bind(null, d, f, c, b), void 0, null),
							c
						);
					},
					useId: function () {
						var a = Th(),
							b = Q.identifierPrefix;
						if (I) {
							var c = sg;
							(b =
								':' +
								b +
								'R' +
								(c =
									(rg & ~(1 << (32 - oc(rg) - 1))).toString(
										32,
									) + c)),
								0 < (c = Kh++) && (b += 'H' + c.toString(32)),
								(b += ':');
						} else
							b = ':' + b + 'r' + (c = Lh++).toString(32) + ':';
						return (a.memoizedState = b);
					},
					unstable_isNewReconciler: !1,
				},
				Ph = {
					readContext: eh,
					useCallback: si,
					useContext: eh,
					useEffect: $h,
					useImperativeHandle: qi,
					useInsertionEffect: ni,
					useLayoutEffect: oi,
					useMemo: ti,
					useReducer: Wh,
					useRef: ji,
					useState: function () {
						return Wh(Vh);
					},
					useDebugValue: ri,
					useDeferredValue: function (a) {
						return ui(Uh(), N.memoizedState, a);
					},
					useTransition: function () {
						return [Wh(Vh)[0], Uh().memoizedState];
					},
					useMutableSource: Yh,
					useSyncExternalStore: Zh,
					useId: wi,
					unstable_isNewReconciler: !1,
				},
				Qh = {
					readContext: eh,
					useCallback: si,
					useContext: eh,
					useEffect: $h,
					useImperativeHandle: qi,
					useInsertionEffect: ni,
					useLayoutEffect: oi,
					useMemo: ti,
					useReducer: Xh,
					useRef: ji,
					useState: function () {
						return Xh(Vh);
					},
					useDebugValue: ri,
					useDeferredValue: function (a) {
						var b = Uh();
						return null === N
							? (b.memoizedState = a)
							: ui(b, N.memoizedState, a);
					},
					useTransition: function () {
						return [Xh(Vh)[0], Uh().memoizedState];
					},
					useMutableSource: Yh,
					useSyncExternalStore: Zh,
					useId: wi,
					unstable_isNewReconciler: !1,
				};
			function Ci(a, b) {
				if (a && a.defaultProps) {
					for (var c in ((b = A({}, b)), (a = a.defaultProps)))
						void 0 === b[c] && (b[c] = a[c]);
					return b;
				}
				return b;
			}
			function Di(a, b, c, d) {
				(c =
					null == (c = c(d, (b = a.memoizedState)))
						? b
						: A({}, b, c)),
					(a.memoizedState = c),
					0 === a.lanes && (a.updateQueue.baseState = c);
			}
			var Ei = {
				isMounted: function (a) {
					return !!(a = a._reactInternals) && Vb(a) === a;
				},
				enqueueSetState: function (a, b, c) {
					a = a._reactInternals;
					var d = R(),
						e = yi(a),
						f = mh(d, e);
					(f.payload = b),
						null != c && (f.callback = c),
						null !== (b = nh(a, f, e)) &&
							(gi(b, a, e, d), oh(b, a, e));
				},
				enqueueReplaceState: function (a, b, c) {
					a = a._reactInternals;
					var d = R(),
						e = yi(a),
						f = mh(d, e);
					(f.tag = 1),
						(f.payload = b),
						null != c && (f.callback = c),
						null !== (b = nh(a, f, e)) &&
							(gi(b, a, e, d), oh(b, a, e));
				},
				enqueueForceUpdate: function (a, b) {
					a = a._reactInternals;
					var c = R(),
						d = yi(a),
						e = mh(c, d);
					(e.tag = 2),
						null != b && (e.callback = b),
						null !== (b = nh(a, e, d)) &&
							(gi(b, a, d, c), oh(b, a, d));
				},
			};
			function Fi(a, b, c, d, e, f, g) {
				return 'function' ==
					typeof (a = a.stateNode).shouldComponentUpdate
					? a.shouldComponentUpdate(d, f, g)
					: !b.prototype ||
							!b.prototype.isPureReactComponent ||
							!Ie(c, d) ||
							!Ie(e, f);
			}
			function Gi(a, b, c) {
				var d = !1,
					e = Vf,
					f = b.contextType;
				return (
					'object' == typeof f && null !== f
						? (f = eh(f))
						: ((e = Zf(b) ? Xf : H.current),
						  (f = (d = null != (d = b.contextTypes))
								? Yf(a, e)
								: Vf)),
					(b = new b(c, f)),
					(a.memoizedState =
						null !== b.state && void 0 !== b.state
							? b.state
							: null),
					(b.updater = Ei),
					(a.stateNode = b),
					(b._reactInternals = a),
					d &&
						(((a =
							a.stateNode).__reactInternalMemoizedUnmaskedChildContext =
							e),
						(a.__reactInternalMemoizedMaskedChildContext = f)),
					b
				);
			}
			function Hi(a, b, c, d) {
				(a = b.state),
					'function' == typeof b.componentWillReceiveProps &&
						b.componentWillReceiveProps(c, d),
					'function' == typeof b.UNSAFE_componentWillReceiveProps &&
						b.UNSAFE_componentWillReceiveProps(c, d),
					b.state !== a && Ei.enqueueReplaceState(b, b.state, null);
			}
			function Ii(a, b, c, d) {
				var e = a.stateNode;
				(e.props = c),
					(e.state = a.memoizedState),
					(e.refs = {}),
					kh(a);
				var f = b.contextType;
				'object' == typeof f && null !== f
					? (e.context = eh(f))
					: ((f = Zf(b) ? Xf : H.current), (e.context = Yf(a, f))),
					(e.state = a.memoizedState),
					'function' == typeof (f = b.getDerivedStateFromProps) &&
						(Di(a, b, f, c), (e.state = a.memoizedState)),
					'function' == typeof b.getDerivedStateFromProps ||
						'function' == typeof e.getSnapshotBeforeUpdate ||
						('function' != typeof e.UNSAFE_componentWillMount &&
							'function' != typeof e.componentWillMount) ||
						((b = e.state),
						'function' == typeof e.componentWillMount &&
							e.componentWillMount(),
						'function' == typeof e.UNSAFE_componentWillMount &&
							e.UNSAFE_componentWillMount(),
						b !== e.state &&
							Ei.enqueueReplaceState(e, e.state, null),
						qh(a, c, e, d),
						(e.state = a.memoizedState)),
					'function' == typeof e.componentDidMount &&
						(a.flags |= 4194308);
			}
			function Ji(a, b) {
				try {
					var c = '',
						d = b;
					do {
						(c += Pa(d)), (d = d.return);
					} while (d);
					var e = c;
				} catch (f) {
					e =
						'\nError generating stack: ' +
						f.message +
						'\n' +
						f.stack;
				}
				return { value: a, source: b, stack: e, digest: null };
			}
			function Ki(a, b, c) {
				return {
					value: a,
					source: null,
					stack: null != c ? c : null,
					digest: null != b ? b : null,
				};
			}
			function Li(a, b) {
				try {
					console.error(b.value);
				} catch (c) {
					setTimeout(function () {
						throw c;
					});
				}
			}
			var Mi = 'function' == typeof WeakMap ? WeakMap : Map;
			function Ni(a, b, c) {
				((c = mh(-1, c)).tag = 3), (c.payload = { element: null });
				var d = b.value;
				return (
					(c.callback = function () {
						Oi || ((Oi = !0), (Pi = d)), Li(0, b);
					}),
					c
				);
			}
			function Qi(a, b, c) {
				(c = mh(-1, c)).tag = 3;
				var d = a.type.getDerivedStateFromError;
				if ('function' == typeof d) {
					var e = b.value;
					(c.payload = function () {
						return d(e);
					}),
						(c.callback = function () {
							Li(0, b);
						});
				}
				var f = a.stateNode;
				return (
					null !== f &&
						'function' == typeof f.componentDidCatch &&
						(c.callback = function () {
							Li(0, b),
								'function' != typeof d &&
									(null === Ri
										? (Ri = new Set([this]))
										: Ri.add(this));
							var c = b.stack;
							this.componentDidCatch(b.value, {
								componentStack: null !== c ? c : '',
							});
						}),
					c
				);
			}
			function Si(a, b, c) {
				var d = a.pingCache;
				if (null === d) {
					d = a.pingCache = new Mi();
					var e = new Set();
					d.set(b, e);
				} else
					void 0 === (e = d.get(b)) && ((e = new Set()), d.set(b, e));
				e.has(c) ||
					(e.add(c), (a = Ti.bind(null, a, b, c)), b.then(a, a));
			}
			function Ui(a) {
				do {
					var b;
					if (
						((b = 13 === a.tag) &&
							(b =
								null === (b = a.memoizedState) ||
								null !== b.dehydrated),
						b)
					)
						return a;
					a = a.return;
				} while (null !== a);
				return null;
			}
			function Vi(a, b, c, d, e) {
				return 0 == (1 & a.mode)
					? (a === b
							? (a.flags |= 65536)
							: ((a.flags |= 128),
							  (c.flags |= 131072),
							  (c.flags &= -52805),
							  1 === c.tag &&
									(null === c.alternate
										? (c.tag = 17)
										: (((b = mh(-1, 1)).tag = 2),
										  nh(c, b, 1))),
							  (c.lanes |= 1)),
					  a)
					: ((a.flags |= 65536), (a.lanes = e), a);
			}
			var Wi = ua.ReactCurrentOwner,
				dh = !1;
			function Xi(a, b, c, d) {
				b.child = null === a ? Vg(b, null, c, d) : Ug(b, a.child, c, d);
			}
			function Yi(a, b, c, d, e) {
				c = c.render;
				var f = b.ref;
				return (
					ch(b, e),
					(d = Nh(a, b, c, d, f, e)),
					(c = Sh()),
					null === a || dh
						? (I && c && vg(b),
						  (b.flags |= 1),
						  Xi(a, b, d, e),
						  b.child)
						: ((b.updateQueue = a.updateQueue),
						  (b.flags &= -2053),
						  (a.lanes &= ~e),
						  Zi(a, b, e))
				);
			}
			function $i(a, b, c, d, e) {
				if (null === a) {
					var f = c.type;
					return 'function' != typeof f ||
						aj(f) ||
						void 0 !== f.defaultProps ||
						null !== c.compare ||
						void 0 !== c.defaultProps
						? (((a = Rg(c.type, null, d, b, b.mode, e)).ref =
								b.ref),
						  (a.return = b),
						  (b.child = a))
						: ((b.tag = 15), (b.type = f), bj(a, b, f, d, e));
				}
				if (((f = a.child), 0 == (a.lanes & e))) {
					var g = f.memoizedProps;
					if (
						(c = null !== (c = c.compare) ? c : Ie)(g, d) &&
						a.ref === b.ref
					)
						return Zi(a, b, e);
				}
				return (
					(b.flags |= 1),
					((a = Pg(f, d)).ref = b.ref),
					(a.return = b),
					(b.child = a)
				);
			}
			function bj(a, b, c, d, e) {
				if (null !== a) {
					var f = a.memoizedProps;
					if (Ie(f, d) && a.ref === b.ref) {
						if (
							((dh = !1),
							(b.pendingProps = d = f),
							0 == (a.lanes & e))
						)
							return (b.lanes = a.lanes), Zi(a, b, e);
						0 != (131072 & a.flags) && (dh = !0);
					}
				}
				return cj(a, b, c, d, e);
			}
			function dj(a, b, c) {
				var d = b.pendingProps,
					e = d.children,
					f = null !== a ? a.memoizedState : null;
				if ('hidden' === d.mode)
					if (0 == (1 & b.mode))
						(b.memoizedState = {
							baseLanes: 0,
							cachePool: null,
							transitions: null,
						}),
							G(ej, fj),
							(fj |= c);
					else {
						if (0 == (1073741824 & c))
							return (
								(a = null !== f ? f.baseLanes | c : c),
								(b.lanes = b.childLanes = 1073741824),
								(b.memoizedState = {
									baseLanes: a,
									cachePool: null,
									transitions: null,
								}),
								(b.updateQueue = null),
								G(ej, fj),
								(fj |= a),
								null
							);
						(b.memoizedState = {
							baseLanes: 0,
							cachePool: null,
							transitions: null,
						}),
							(d = null !== f ? f.baseLanes : c),
							G(ej, fj),
							(fj |= d);
					}
				else
					null !== f
						? ((d = f.baseLanes | c), (b.memoizedState = null))
						: (d = c),
						G(ej, fj),
						(fj |= d);
				return Xi(a, b, e, c), b.child;
			}
			function gj(a, b) {
				var c = b.ref;
				((null === a && null !== c) || (null !== a && a.ref !== c)) &&
					((b.flags |= 512), (b.flags |= 2097152));
			}
			function cj(a, b, c, d, e) {
				var f = Zf(c) ? Xf : H.current;
				return (
					(f = Yf(b, f)),
					ch(b, e),
					(c = Nh(a, b, c, d, f, e)),
					(d = Sh()),
					null === a || dh
						? (I && d && vg(b),
						  (b.flags |= 1),
						  Xi(a, b, c, e),
						  b.child)
						: ((b.updateQueue = a.updateQueue),
						  (b.flags &= -2053),
						  (a.lanes &= ~e),
						  Zi(a, b, e))
				);
			}
			function hj(a, b, c, d, e) {
				if (Zf(c)) {
					var f = !0;
					cg(b);
				} else f = !1;
				if ((ch(b, e), null === b.stateNode))
					ij(a, b), Gi(b, c, d), Ii(b, c, d, e), (d = !0);
				else if (null === a) {
					var g = b.stateNode,
						h = b.memoizedProps;
					g.props = h;
					var k = g.context,
						l = c.contextType;
					'object' == typeof l && null !== l
						? (l = eh(l))
						: (l = Yf(b, (l = Zf(c) ? Xf : H.current)));
					var m = c.getDerivedStateFromProps,
						q =
							'function' == typeof m ||
							'function' == typeof g.getSnapshotBeforeUpdate;
					q ||
						('function' !=
							typeof g.UNSAFE_componentWillReceiveProps &&
							'function' != typeof g.componentWillReceiveProps) ||
						((h !== d || k !== l) && Hi(b, g, d, l)),
						(jh = !1);
					var r = b.memoizedState;
					(g.state = r),
						qh(b, d, g, e),
						(k = b.memoizedState),
						h !== d || r !== k || Wf.current || jh
							? ('function' == typeof m &&
									(Di(b, c, m, d), (k = b.memoizedState)),
							  (h = jh || Fi(b, c, h, d, r, k, l))
									? (q ||
											('function' !=
												typeof g.UNSAFE_componentWillMount &&
												'function' !=
													typeof g.componentWillMount) ||
											('function' ==
												typeof g.componentWillMount &&
												g.componentWillMount(),
											'function' ==
												typeof g.UNSAFE_componentWillMount &&
												g.UNSAFE_componentWillMount()),
									  'function' ==
											typeof g.componentDidMount &&
											(b.flags |= 4194308))
									: ('function' ==
											typeof g.componentDidMount &&
											(b.flags |= 4194308),
									  (b.memoizedProps = d),
									  (b.memoizedState = k)),
							  (g.props = d),
							  (g.state = k),
							  (g.context = l),
							  (d = h))
							: ('function' == typeof g.componentDidMount &&
									(b.flags |= 4194308),
							  (d = !1));
				} else {
					(g = b.stateNode),
						lh(a, b),
						(h = b.memoizedProps),
						(l = b.type === b.elementType ? h : Ci(b.type, h)),
						(g.props = l),
						(q = b.pendingProps),
						(r = g.context),
						'object' == typeof (k = c.contextType) && null !== k
							? (k = eh(k))
							: (k = Yf(b, (k = Zf(c) ? Xf : H.current)));
					var y = c.getDerivedStateFromProps;
					(m =
						'function' == typeof y ||
						'function' == typeof g.getSnapshotBeforeUpdate) ||
						('function' !=
							typeof g.UNSAFE_componentWillReceiveProps &&
							'function' != typeof g.componentWillReceiveProps) ||
						((h !== q || r !== k) && Hi(b, g, d, k)),
						(jh = !1),
						(r = b.memoizedState),
						(g.state = r),
						qh(b, d, g, e);
					var n = b.memoizedState;
					h !== q || r !== n || Wf.current || jh
						? ('function' == typeof y &&
								(Di(b, c, y, d), (n = b.memoizedState)),
						  (l = jh || Fi(b, c, l, d, r, n, k) || !1)
								? (m ||
										('function' !=
											typeof g.UNSAFE_componentWillUpdate &&
											'function' !=
												typeof g.componentWillUpdate) ||
										('function' ==
											typeof g.componentWillUpdate &&
											g.componentWillUpdate(d, n, k),
										'function' ==
											typeof g.UNSAFE_componentWillUpdate &&
											g.UNSAFE_componentWillUpdate(
												d,
												n,
												k,
											)),
								  'function' == typeof g.componentDidUpdate &&
										(b.flags |= 4),
								  'function' ==
										typeof g.getSnapshotBeforeUpdate &&
										(b.flags |= 1024))
								: ('function' != typeof g.componentDidUpdate ||
										(h === a.memoizedProps &&
											r === a.memoizedState) ||
										(b.flags |= 4),
								  'function' !=
										typeof g.getSnapshotBeforeUpdate ||
										(h === a.memoizedProps &&
											r === a.memoizedState) ||
										(b.flags |= 1024),
								  (b.memoizedProps = d),
								  (b.memoizedState = n)),
						  (g.props = d),
						  (g.state = n),
						  (g.context = k),
						  (d = l))
						: ('function' != typeof g.componentDidUpdate ||
								(h === a.memoizedProps &&
									r === a.memoizedState) ||
								(b.flags |= 4),
						  'function' != typeof g.getSnapshotBeforeUpdate ||
								(h === a.memoizedProps &&
									r === a.memoizedState) ||
								(b.flags |= 1024),
						  (d = !1));
				}
				return jj(a, b, c, d, f, e);
			}
			function jj(a, b, c, d, e, f) {
				gj(a, b);
				var g = 0 != (128 & b.flags);
				if (!d && !g) return e && dg(b, c, !1), Zi(a, b, f);
				(d = b.stateNode), (Wi.current = b);
				var h =
					g && 'function' != typeof c.getDerivedStateFromError
						? null
						: d.render();
				return (
					(b.flags |= 1),
					null !== a && g
						? ((b.child = Ug(b, a.child, null, f)),
						  (b.child = Ug(b, null, h, f)))
						: Xi(a, b, h, f),
					(b.memoizedState = d.state),
					e && dg(b, c, !0),
					b.child
				);
			}
			function kj(a) {
				var b = a.stateNode;
				b.pendingContext
					? ag(0, b.pendingContext, b.pendingContext !== b.context)
					: b.context && ag(0, b.context, !1),
					yh(a, b.containerInfo);
			}
			function lj(a, b, c, d, e) {
				return Ig(), Jg(e), (b.flags |= 256), Xi(a, b, c, d), b.child;
			}
			var zj,
				Aj,
				Bj,
				Cj,
				mj = { dehydrated: null, treeContext: null, retryLane: 0 };
			function nj(a) {
				return { baseLanes: a, cachePool: null, transitions: null };
			}
			function oj(a, b, c) {
				var h,
					d = b.pendingProps,
					e = L.current,
					f = !1,
					g = 0 != (128 & b.flags);
				if (
					((h = g) ||
						(h =
							(null === a || null !== a.memoizedState) &&
							0 != (2 & e)),
					h
						? ((f = !0), (b.flags &= -129))
						: (null !== a && null === a.memoizedState) || (e |= 1),
					G(L, 1 & e),
					null === a)
				)
					return (
						Eg(b),
						null !== (a = b.memoizedState) &&
						null !== (a = a.dehydrated)
							? (0 == (1 & b.mode)
									? (b.lanes = 1)
									: '$!' === a.data
									? (b.lanes = 8)
									: (b.lanes = 1073741824),
							  null)
							: ((g = d.children),
							  (a = d.fallback),
							  f
									? ((d = b.mode),
									  (f = b.child),
									  (g = { mode: 'hidden', children: g }),
									  0 == (1 & d) && null !== f
											? ((f.childLanes = 0),
											  (f.pendingProps = g))
											: (f = pj(g, d, 0, null)),
									  (a = Tg(a, d, c, null)),
									  (f.return = b),
									  (a.return = b),
									  (f.sibling = a),
									  (b.child = f),
									  (b.child.memoizedState = nj(c)),
									  (b.memoizedState = mj),
									  a)
									: qj(b, g))
					);
				if (
					null !== (e = a.memoizedState) &&
					null !== (h = e.dehydrated)
				)
					return (function rj(a, b, c, d, e, f, g) {
						if (c)
							return 256 & b.flags
								? ((b.flags &= -257),
								  sj(a, b, g, (d = Ki(Error(p(422))))))
								: null !== b.memoizedState
								? ((b.child = a.child), (b.flags |= 128), null)
								: ((f = d.fallback),
								  (e = b.mode),
								  (d = pj(
										{
											mode: 'visible',
											children: d.children,
										},
										e,
										0,
										null,
								  )),
								  ((f = Tg(f, e, g, null)).flags |= 2),
								  (d.return = b),
								  (f.return = b),
								  (d.sibling = f),
								  (b.child = d),
								  0 != (1 & b.mode) && Ug(b, a.child, null, g),
								  (b.child.memoizedState = nj(g)),
								  (b.memoizedState = mj),
								  f);
						if (0 == (1 & b.mode)) return sj(a, b, g, null);
						if ('$!' === e.data) {
							if ((d = e.nextSibling && e.nextSibling.dataset))
								var h = d.dgst;
							return (
								(d = h),
								sj(
									a,
									b,
									g,
									(d = Ki((f = Error(p(419))), d, void 0)),
								)
							);
						}
						if (((h = 0 != (g & a.childLanes)), dh || h)) {
							if (null !== (d = Q)) {
								switch (g & -g) {
									case 4:
										e = 2;
										break;
									case 16:
										e = 8;
										break;
									case 64:
									case 128:
									case 256:
									case 512:
									case 1024:
									case 2048:
									case 4096:
									case 8192:
									case 16384:
									case 32768:
									case 65536:
									case 131072:
									case 262144:
									case 524288:
									case 1048576:
									case 2097152:
									case 4194304:
									case 8388608:
									case 16777216:
									case 33554432:
									case 67108864:
										e = 32;
										break;
									case 536870912:
										e = 268435456;
										break;
									default:
										e = 0;
								}
								0 !==
									(e =
										0 != (e & (d.suspendedLanes | g))
											? 0
											: e) &&
									e !== f.retryLane &&
									((f.retryLane = e),
									ih(a, e),
									gi(d, a, e, -1));
							}
							return tj(), sj(a, b, g, (d = Ki(Error(p(421)))));
						}
						return '$?' === e.data
							? ((b.flags |= 128),
							  (b.child = a.child),
							  (b = uj.bind(null, a)),
							  (e._reactRetry = b),
							  null)
							: ((a = f.treeContext),
							  (yg = Lf(e.nextSibling)),
							  (xg = b),
							  (I = !0),
							  (zg = null),
							  null !== a &&
									((og[pg++] = rg),
									(og[pg++] = sg),
									(og[pg++] = qg),
									(rg = a.id),
									(sg = a.overflow),
									(qg = b)),
							  (b = qj(b, d.children)),
							  (b.flags |= 4096),
							  b);
					})(a, b, g, d, h, e, c);
				if (f) {
					(f = d.fallback), (g = b.mode), (h = (e = a.child).sibling);
					var k = { mode: 'hidden', children: d.children };
					return (
						0 == (1 & g) && b.child !== e
							? (((d = b.child).childLanes = 0),
							  (d.pendingProps = k),
							  (b.deletions = null))
							: ((d = Pg(e, k)).subtreeFlags =
									14680064 & e.subtreeFlags),
						null !== h
							? (f = Pg(h, f))
							: ((f = Tg(f, g, c, null)).flags |= 2),
						(f.return = b),
						(d.return = b),
						(d.sibling = f),
						(b.child = d),
						(d = f),
						(f = b.child),
						(g =
							null === (g = a.child.memoizedState)
								? nj(c)
								: {
										baseLanes: g.baseLanes | c,
										cachePool: null,
										transitions: g.transitions,
								  }),
						(f.memoizedState = g),
						(f.childLanes = a.childLanes & ~c),
						(b.memoizedState = mj),
						d
					);
				}
				return (
					(a = (f = a.child).sibling),
					(d = Pg(f, { mode: 'visible', children: d.children })),
					0 == (1 & b.mode) && (d.lanes = c),
					(d.return = b),
					(d.sibling = null),
					null !== a &&
						(null === (c = b.deletions)
							? ((b.deletions = [a]), (b.flags |= 16))
							: c.push(a)),
					(b.child = d),
					(b.memoizedState = null),
					d
				);
			}
			function qj(a, b) {
				return (
					((b = pj(
						{ mode: 'visible', children: b },
						a.mode,
						0,
						null,
					)).return = a),
					(a.child = b)
				);
			}
			function sj(a, b, c, d) {
				return (
					null !== d && Jg(d),
					Ug(b, a.child, null, c),
					((a = qj(b, b.pendingProps.children)).flags |= 2),
					(b.memoizedState = null),
					a
				);
			}
			function vj(a, b, c) {
				a.lanes |= b;
				var d = a.alternate;
				null !== d && (d.lanes |= b), bh(a.return, b, c);
			}
			function wj(a, b, c, d, e) {
				var f = a.memoizedState;
				null === f
					? (a.memoizedState = {
							isBackwards: b,
							rendering: null,
							renderingStartTime: 0,
							last: d,
							tail: c,
							tailMode: e,
					  })
					: ((f.isBackwards = b),
					  (f.rendering = null),
					  (f.renderingStartTime = 0),
					  (f.last = d),
					  (f.tail = c),
					  (f.tailMode = e));
			}
			function xj(a, b, c) {
				var d = b.pendingProps,
					e = d.revealOrder,
					f = d.tail;
				if ((Xi(a, b, d.children, c), 0 != (2 & (d = L.current))))
					(d = (1 & d) | 2), (b.flags |= 128);
				else {
					if (null !== a && 0 != (128 & a.flags))
						a: for (a = b.child; null !== a; ) {
							if (13 === a.tag)
								null !== a.memoizedState && vj(a, c, b);
							else if (19 === a.tag) vj(a, c, b);
							else if (null !== a.child) {
								(a.child.return = a), (a = a.child);
								continue;
							}
							if (a === b) break a;
							for (; null === a.sibling; ) {
								if (null === a.return || a.return === b)
									break a;
								a = a.return;
							}
							(a.sibling.return = a.return), (a = a.sibling);
						}
					d &= 1;
				}
				if ((G(L, d), 0 == (1 & b.mode))) b.memoizedState = null;
				else
					switch (e) {
						case 'forwards':
							for (c = b.child, e = null; null !== c; )
								null !== (a = c.alternate) &&
									null === Ch(a) &&
									(e = c),
									(c = c.sibling);
							null === (c = e)
								? ((e = b.child), (b.child = null))
								: ((e = c.sibling), (c.sibling = null)),
								wj(b, !1, e, c, f);
							break;
						case 'backwards':
							for (
								c = null, e = b.child, b.child = null;
								null !== e;

							) {
								if (
									null !== (a = e.alternate) &&
									null === Ch(a)
								) {
									b.child = e;
									break;
								}
								(a = e.sibling),
									(e.sibling = c),
									(c = e),
									(e = a);
							}
							wj(b, !0, c, null, f);
							break;
						case 'together':
							wj(b, !1, null, null, void 0);
							break;
						default:
							b.memoizedState = null;
					}
				return b.child;
			}
			function ij(a, b) {
				0 == (1 & b.mode) &&
					null !== a &&
					((a.alternate = null),
					(b.alternate = null),
					(b.flags |= 2));
			}
			function Zi(a, b, c) {
				if (
					(null !== a && (b.dependencies = a.dependencies),
					(rh |= b.lanes),
					0 == (c & b.childLanes))
				)
					return null;
				if (null !== a && b.child !== a.child) throw Error(p(153));
				if (null !== b.child) {
					for (
						c = Pg((a = b.child), a.pendingProps),
							b.child = c,
							c.return = b;
						null !== a.sibling;

					)
						(a = a.sibling),
							((c = c.sibling = Pg(a, a.pendingProps)).return =
								b);
					c.sibling = null;
				}
				return b.child;
			}
			function Dj(a, b) {
				if (!I)
					switch (a.tailMode) {
						case 'hidden':
							b = a.tail;
							for (var c = null; null !== b; )
								null !== b.alternate && (c = b),
									(b = b.sibling);
							null === c ? (a.tail = null) : (c.sibling = null);
							break;
						case 'collapsed':
							c = a.tail;
							for (var d = null; null !== c; )
								null !== c.alternate && (d = c),
									(c = c.sibling);
							null === d
								? b || null === a.tail
									? (a.tail = null)
									: (a.tail.sibling = null)
								: (d.sibling = null);
					}
			}
			function S(a) {
				var b = null !== a.alternate && a.alternate.child === a.child,
					c = 0,
					d = 0;
				if (b)
					for (var e = a.child; null !== e; )
						(c |= e.lanes | e.childLanes),
							(d |= 14680064 & e.subtreeFlags),
							(d |= 14680064 & e.flags),
							(e.return = a),
							(e = e.sibling);
				else
					for (e = a.child; null !== e; )
						(c |= e.lanes | e.childLanes),
							(d |= e.subtreeFlags),
							(d |= e.flags),
							(e.return = a),
							(e = e.sibling);
				return (a.subtreeFlags |= d), (a.childLanes = c), b;
			}
			function Ej(a, b, c) {
				var d = b.pendingProps;
				switch ((wg(b), b.tag)) {
					case 2:
					case 16:
					case 15:
					case 0:
					case 11:
					case 7:
					case 8:
					case 12:
					case 9:
					case 14:
						return S(b), null;
					case 1:
					case 17:
						return Zf(b.type) && $f(), S(b), null;
					case 3:
						return (
							(d = b.stateNode),
							zh(),
							E(Wf),
							E(H),
							Eh(),
							d.pendingContext &&
								((d.context = d.pendingContext),
								(d.pendingContext = null)),
							(null !== a && null !== a.child) ||
								(Gg(b)
									? (b.flags |= 4)
									: null === a ||
									  (a.memoizedState.isDehydrated &&
											0 == (256 & b.flags)) ||
									  ((b.flags |= 1024),
									  null !== zg && (Fj(zg), (zg = null)))),
							Aj(a, b),
							S(b),
							null
						);
					case 5:
						Bh(b);
						var e = xh(wh.current);
						if (((c = b.type), null !== a && null != b.stateNode))
							Bj(a, b, c, d, e),
								a.ref !== b.ref &&
									((b.flags |= 512), (b.flags |= 2097152));
						else {
							if (!d) {
								if (null === b.stateNode) throw Error(p(166));
								return S(b), null;
							}
							if (((a = xh(uh.current)), Gg(b))) {
								(d = b.stateNode), (c = b.type);
								var f = b.memoizedProps;
								switch (
									((d[Of] = b),
									(d[Pf] = f),
									(a = 0 != (1 & b.mode)),
									c)
								) {
									case 'dialog':
										D('cancel', d), D('close', d);
										break;
									case 'iframe':
									case 'object':
									case 'embed':
										D('load', d);
										break;
									case 'video':
									case 'audio':
										for (e = 0; e < lf.length; e++)
											D(lf[e], d);
										break;
									case 'source':
										D('error', d);
										break;
									case 'img':
									case 'image':
									case 'link':
										D('error', d), D('load', d);
										break;
									case 'details':
										D('toggle', d);
										break;
									case 'input':
										Za(d, f), D('invalid', d);
										break;
									case 'select':
										(d._wrapperState = {
											wasMultiple: !!f.multiple,
										}),
											D('invalid', d);
										break;
									case 'textarea':
										hb(d, f), D('invalid', d);
								}
								for (var g in (ub(c, f), (e = null), f))
									if (f.hasOwnProperty(g)) {
										var h = f[g];
										'children' === g
											? 'string' == typeof h
												? d.textContent !== h &&
												  (!0 !==
														f.suppressHydrationWarning &&
														Af(d.textContent, h, a),
												  (e = ['children', h]))
												: 'number' == typeof h &&
												  d.textContent !== '' + h &&
												  (!0 !==
														f.suppressHydrationWarning &&
														Af(d.textContent, h, a),
												  (e = ['children', '' + h]))
											: ea.hasOwnProperty(g) &&
											  null != h &&
											  'onScroll' === g &&
											  D('scroll', d);
									}
								switch (c) {
									case 'input':
										Va(d), db(d, f, !0);
										break;
									case 'textarea':
										Va(d), jb(d);
										break;
									case 'select':
									case 'option':
										break;
									default:
										'function' == typeof f.onClick &&
											(d.onclick = Bf);
								}
								(d = e),
									(b.updateQueue = d),
									null !== d && (b.flags |= 4);
							} else {
								(g = 9 === e.nodeType ? e : e.ownerDocument),
									'http://www.w3.org/1999/xhtml' === a &&
										(a = kb(c)),
									'http://www.w3.org/1999/xhtml' === a
										? 'script' === c
											? (((a =
													g.createElement(
														'div',
													)).innerHTML =
													'<script></script>'),
											  (a = a.removeChild(a.firstChild)))
											: 'string' == typeof d.is
											? (a = g.createElement(c, {
													is: d.is,
											  }))
											: ((a = g.createElement(c)),
											  'select' === c &&
													((g = a),
													d.multiple
														? (g.multiple = !0)
														: d.size &&
														  (g.size = d.size)))
										: (a = g.createElementNS(a, c)),
									(a[Of] = b),
									(a[Pf] = d),
									zj(a, b, !1, !1),
									(b.stateNode = a);
								a: {
									switch (((g = vb(c, d)), c)) {
										case 'dialog':
											D('cancel', a),
												D('close', a),
												(e = d);
											break;
										case 'iframe':
										case 'object':
										case 'embed':
											D('load', a), (e = d);
											break;
										case 'video':
										case 'audio':
											for (e = 0; e < lf.length; e++)
												D(lf[e], a);
											e = d;
											break;
										case 'source':
											D('error', a), (e = d);
											break;
										case 'img':
										case 'image':
										case 'link':
											D('error', a),
												D('load', a),
												(e = d);
											break;
										case 'details':
											D('toggle', a), (e = d);
											break;
										case 'input':
											Za(a, d),
												(e = Ya(a, d)),
												D('invalid', a);
											break;
										case 'option':
										default:
											e = d;
											break;
										case 'select':
											(a._wrapperState = {
												wasMultiple: !!d.multiple,
											}),
												(e = A({}, d, {
													value: void 0,
												})),
												D('invalid', a);
											break;
										case 'textarea':
											hb(a, d),
												(e = gb(a, d)),
												D('invalid', a);
									}
									for (f in (ub(c, e), (h = e)))
										if (h.hasOwnProperty(f)) {
											var k = h[f];
											'style' === f
												? sb(a, k)
												: 'dangerouslySetInnerHTML' ===
												  f
												? null !=
														(k = k
															? k.__html
															: void 0) &&
												  nb(a, k)
												: 'children' === f
												? 'string' == typeof k
													? ('textarea' !== c ||
															'' !== k) &&
													  ob(a, k)
													: 'number' == typeof k &&
													  ob(a, '' + k)
												: 'suppressContentEditableWarning' !==
														f &&
												  'suppressHydrationWarning' !==
														f &&
												  'autoFocus' !== f &&
												  (ea.hasOwnProperty(f)
														? null != k &&
														  'onScroll' === f &&
														  D('scroll', a)
														: null != k &&
														  ta(a, f, k, g));
										}
									switch (c) {
										case 'input':
											Va(a), db(a, d, !1);
											break;
										case 'textarea':
											Va(a), jb(a);
											break;
										case 'option':
											null != d.value &&
												a.setAttribute(
													'value',
													'' + Sa(d.value),
												);
											break;
										case 'select':
											(a.multiple = !!d.multiple),
												null != (f = d.value)
													? fb(a, !!d.multiple, f, !1)
													: null != d.defaultValue &&
													  fb(
															a,
															!!d.multiple,
															d.defaultValue,
															!0,
													  );
											break;
										default:
											'function' == typeof e.onClick &&
												(a.onclick = Bf);
									}
									switch (c) {
										case 'button':
										case 'input':
										case 'select':
										case 'textarea':
											d = !!d.autoFocus;
											break a;
										case 'img':
											d = !0;
											break a;
										default:
											d = !1;
									}
								}
								d && (b.flags |= 4);
							}
							null !== b.ref &&
								((b.flags |= 512), (b.flags |= 2097152));
						}
						return S(b), null;
					case 6:
						if (a && null != b.stateNode)
							Cj(a, b, a.memoizedProps, d);
						else {
							if ('string' != typeof d && null === b.stateNode)
								throw Error(p(166));
							if (((c = xh(wh.current)), xh(uh.current), Gg(b))) {
								if (
									((d = b.stateNode),
									(c = b.memoizedProps),
									(d[Of] = b),
									(f = d.nodeValue !== c) &&
										null !== (a = xg))
								)
									switch (a.tag) {
										case 3:
											Af(
												d.nodeValue,
												c,
												0 != (1 & a.mode),
											);
											break;
										case 5:
											!0 !==
												a.memoizedProps
													.suppressHydrationWarning &&
												Af(
													d.nodeValue,
													c,
													0 != (1 & a.mode),
												);
									}
								f && (b.flags |= 4);
							} else
								((d = (
									9 === c.nodeType ? c : c.ownerDocument
								).createTextNode(d))[Of] = b),
									(b.stateNode = d);
						}
						return S(b), null;
					case 13:
						if (
							(E(L),
							(d = b.memoizedState),
							null === a ||
								(null !== a.memoizedState &&
									null !== a.memoizedState.dehydrated))
						) {
							if (
								I &&
								null !== yg &&
								0 != (1 & b.mode) &&
								0 == (128 & b.flags)
							)
								Hg(), Ig(), (b.flags |= 98560), (f = !1);
							else if (
								((f = Gg(b)),
								null !== d && null !== d.dehydrated)
							) {
								if (null === a) {
									if (!f) throw Error(p(318));
									if (
										!(f =
											null !== (f = b.memoizedState)
												? f.dehydrated
												: null)
									)
										throw Error(p(317));
									f[Of] = b;
								} else
									Ig(),
										0 == (128 & b.flags) &&
											(b.memoizedState = null),
										(b.flags |= 4);
								S(b), (f = !1);
							} else
								null !== zg && (Fj(zg), (zg = null)), (f = !0);
							if (!f) return 65536 & b.flags ? b : null;
						}
						return 0 != (128 & b.flags)
							? ((b.lanes = c), b)
							: ((d = null !== d) !==
									(null !== a && null !== a.memoizedState) &&
									d &&
									((b.child.flags |= 8192),
									0 != (1 & b.mode) &&
										(null === a || 0 != (1 & L.current)
											? 0 === T && (T = 3)
											: tj())),
							  null !== b.updateQueue && (b.flags |= 4),
							  S(b),
							  null);
					case 4:
						return (
							zh(),
							Aj(a, b),
							null === a && sf(b.stateNode.containerInfo),
							S(b),
							null
						);
					case 10:
						return ah(b.type._context), S(b), null;
					case 19:
						if ((E(L), null === (f = b.memoizedState)))
							return S(b), null;
						if (
							((d = 0 != (128 & b.flags)),
							null === (g = f.rendering))
						)
							if (d) Dj(f, !1);
							else {
								if (
									0 !== T ||
									(null !== a && 0 != (128 & a.flags))
								)
									for (a = b.child; null !== a; ) {
										if (null !== (g = Ch(a))) {
											for (
												b.flags |= 128,
													Dj(f, !1),
													null !==
														(d = g.updateQueue) &&
														((b.updateQueue = d),
														(b.flags |= 4)),
													b.subtreeFlags = 0,
													d = c,
													c = b.child;
												null !== c;

											)
												(a = d),
													((f = c).flags &= 14680066),
													null === (g = f.alternate)
														? ((f.childLanes = 0),
														  (f.lanes = a),
														  (f.child = null),
														  (f.subtreeFlags = 0),
														  (f.memoizedProps =
																null),
														  (f.memoizedState =
																null),
														  (f.updateQueue =
																null),
														  (f.dependencies =
																null),
														  (f.stateNode = null))
														: ((f.childLanes =
																g.childLanes),
														  (f.lanes = g.lanes),
														  (f.child = g.child),
														  (f.subtreeFlags = 0),
														  (f.deletions = null),
														  (f.memoizedProps =
																g.memoizedProps),
														  (f.memoizedState =
																g.memoizedState),
														  (f.updateQueue =
																g.updateQueue),
														  (f.type = g.type),
														  (a = g.dependencies),
														  (f.dependencies =
																null === a
																	? null
																	: {
																			lanes: a.lanes,
																			firstContext:
																				a.firstContext,
																	  })),
													(c = c.sibling);
											return (
												G(L, (1 & L.current) | 2),
												b.child
											);
										}
										a = a.sibling;
									}
								null !== f.tail &&
									B() > Gj &&
									((b.flags |= 128),
									(d = !0),
									Dj(f, !1),
									(b.lanes = 4194304));
							}
						else {
							if (!d)
								if (null !== (a = Ch(g))) {
									if (
										((b.flags |= 128),
										(d = !0),
										null !== (c = a.updateQueue) &&
											((b.updateQueue = c),
											(b.flags |= 4)),
										Dj(f, !0),
										null === f.tail &&
											'hidden' === f.tailMode &&
											!g.alternate &&
											!I)
									)
										return S(b), null;
								} else
									2 * B() - f.renderingStartTime > Gj &&
										1073741824 !== c &&
										((b.flags |= 128),
										(d = !0),
										Dj(f, !1),
										(b.lanes = 4194304));
							f.isBackwards
								? ((g.sibling = b.child), (b.child = g))
								: (null !== (c = f.last)
										? (c.sibling = g)
										: (b.child = g),
								  (f.last = g));
						}
						return null !== f.tail
							? ((b = f.tail),
							  (f.rendering = b),
							  (f.tail = b.sibling),
							  (f.renderingStartTime = B()),
							  (b.sibling = null),
							  (c = L.current),
							  G(L, d ? (1 & c) | 2 : 1 & c),
							  b)
							: (S(b), null);
					case 22:
					case 23:
						return (
							Hj(),
							(d = null !== b.memoizedState),
							null !== a &&
								(null !== a.memoizedState) !== d &&
								(b.flags |= 8192),
							d && 0 != (1 & b.mode)
								? 0 != (1073741824 & fj) &&
								  (S(b),
								  6 & b.subtreeFlags && (b.flags |= 8192))
								: S(b),
							null
						);
					case 24:
					case 25:
						return null;
				}
				throw Error(p(156, b.tag));
			}
			function Ij(a, b) {
				switch ((wg(b), b.tag)) {
					case 1:
						return (
							Zf(b.type) && $f(),
							65536 & (a = b.flags)
								? ((b.flags = (-65537 & a) | 128), b)
								: null
						);
					case 3:
						return (
							zh(),
							E(Wf),
							E(H),
							Eh(),
							0 != (65536 & (a = b.flags)) && 0 == (128 & a)
								? ((b.flags = (-65537 & a) | 128), b)
								: null
						);
					case 5:
						return Bh(b), null;
					case 13:
						if (
							(E(L),
							null !== (a = b.memoizedState) &&
								null !== a.dehydrated)
						) {
							if (null === b.alternate) throw Error(p(340));
							Ig();
						}
						return 65536 & (a = b.flags)
							? ((b.flags = (-65537 & a) | 128), b)
							: null;
					case 19:
						return E(L), null;
					case 4:
						return zh(), null;
					case 10:
						return ah(b.type._context), null;
					case 22:
					case 23:
						return Hj(), null;
					default:
						return null;
				}
			}
			(zj = function (a, b) {
				for (var c = b.child; null !== c; ) {
					if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
					else if (4 !== c.tag && null !== c.child) {
						(c.child.return = c), (c = c.child);
						continue;
					}
					if (c === b) break;
					for (; null === c.sibling; ) {
						if (null === c.return || c.return === b) return;
						c = c.return;
					}
					(c.sibling.return = c.return), (c = c.sibling);
				}
			}),
				(Aj = function () {}),
				(Bj = function (a, b, c, d) {
					var e = a.memoizedProps;
					if (e !== d) {
						(a = b.stateNode), xh(uh.current);
						var g,
							f = null;
						switch (c) {
							case 'input':
								(e = Ya(a, e)), (d = Ya(a, d)), (f = []);
								break;
							case 'select':
								(e = A({}, e, { value: void 0 })),
									(d = A({}, d, { value: void 0 })),
									(f = []);
								break;
							case 'textarea':
								(e = gb(a, e)), (d = gb(a, d)), (f = []);
								break;
							default:
								'function' != typeof e.onClick &&
									'function' == typeof d.onClick &&
									(a.onclick = Bf);
						}
						for (l in (ub(c, d), (c = null), e))
							if (
								!d.hasOwnProperty(l) &&
								e.hasOwnProperty(l) &&
								null != e[l]
							)
								if ('style' === l) {
									var h = e[l];
									for (g in h)
										h.hasOwnProperty(g) &&
											(c || (c = {}), (c[g] = ''));
								} else
									'dangerouslySetInnerHTML' !== l &&
										'children' !== l &&
										'suppressContentEditableWarning' !==
											l &&
										'suppressHydrationWarning' !== l &&
										'autoFocus' !== l &&
										(ea.hasOwnProperty(l)
											? f || (f = [])
											: (f = f || []).push(l, null));
						for (l in d) {
							var k = d[l];
							if (
								((h = null != e ? e[l] : void 0),
								d.hasOwnProperty(l) &&
									k !== h &&
									(null != k || null != h))
							)
								if ('style' === l)
									if (h) {
										for (g in h)
											!h.hasOwnProperty(g) ||
												(k && k.hasOwnProperty(g)) ||
												(c || (c = {}), (c[g] = ''));
										for (g in k)
											k.hasOwnProperty(g) &&
												h[g] !== k[g] &&
												(c || (c = {}), (c[g] = k[g]));
									} else
										c || (f || (f = []), f.push(l, c)),
											(c = k);
								else
									'dangerouslySetInnerHTML' === l
										? ((k = k ? k.__html : void 0),
										  (h = h ? h.__html : void 0),
										  null != k &&
												h !== k &&
												(f = f || []).push(l, k))
										: 'children' === l
										? ('string' != typeof k &&
												'number' != typeof k) ||
										  (f = f || []).push(l, '' + k)
										: 'suppressContentEditableWarning' !==
												l &&
										  'suppressHydrationWarning' !== l &&
										  (ea.hasOwnProperty(l)
												? (null != k &&
														'onScroll' === l &&
														D('scroll', a),
												  f || h === k || (f = []))
												: (f = f || []).push(l, k));
						}
						c && (f = f || []).push('style', c);
						var l = f;
						(b.updateQueue = l) && (b.flags |= 4);
					}
				}),
				(Cj = function (a, b, c, d) {
					c !== d && (b.flags |= 4);
				});
			var Jj = !1,
				U = !1,
				Kj = 'function' == typeof WeakSet ? WeakSet : Set,
				V = null;
			function Lj(a, b) {
				var c = a.ref;
				if (null !== c)
					if ('function' == typeof c)
						try {
							c(null);
						} catch (d) {
							W(a, b, d);
						}
					else c.current = null;
			}
			function Mj(a, b, c) {
				try {
					c();
				} catch (d) {
					W(a, b, d);
				}
			}
			var Nj = !1;
			function Pj(a, b, c) {
				var d = b.updateQueue;
				if (null !== (d = null !== d ? d.lastEffect : null)) {
					var e = (d = d.next);
					do {
						if ((e.tag & a) === a) {
							var f = e.destroy;
							(e.destroy = void 0), void 0 !== f && Mj(b, c, f);
						}
						e = e.next;
					} while (e !== d);
				}
			}
			function Qj(a, b) {
				if (
					null !==
					(b = null !== (b = b.updateQueue) ? b.lastEffect : null)
				) {
					var c = (b = b.next);
					do {
						if ((c.tag & a) === a) {
							var d = c.create;
							c.destroy = d();
						}
						c = c.next;
					} while (c !== b);
				}
			}
			function Rj(a) {
				var b = a.ref;
				if (null !== b) {
					var c = a.stateNode;
					a.tag,
						(a = c),
						'function' == typeof b ? b(a) : (b.current = a);
				}
			}
			function Sj(a) {
				var b = a.alternate;
				null !== b && ((a.alternate = null), Sj(b)),
					(a.child = null),
					(a.deletions = null),
					(a.sibling = null),
					5 === a.tag &&
						null !== (b = a.stateNode) &&
						(delete b[Of],
						delete b[Pf],
						delete b[of],
						delete b[Qf],
						delete b[Rf]),
					(a.stateNode = null),
					(a.return = null),
					(a.dependencies = null),
					(a.memoizedProps = null),
					(a.memoizedState = null),
					(a.pendingProps = null),
					(a.stateNode = null),
					(a.updateQueue = null);
			}
			function Tj(a) {
				return 5 === a.tag || 3 === a.tag || 4 === a.tag;
			}
			function Uj(a) {
				a: for (;;) {
					for (; null === a.sibling; ) {
						if (null === a.return || Tj(a.return)) return null;
						a = a.return;
					}
					for (
						a.sibling.return = a.return, a = a.sibling;
						5 !== a.tag && 6 !== a.tag && 18 !== a.tag;

					) {
						if (2 & a.flags) continue a;
						if (null === a.child || 4 === a.tag) continue a;
						(a.child.return = a), (a = a.child);
					}
					if (!(2 & a.flags)) return a.stateNode;
				}
			}
			function Vj(a, b, c) {
				var d = a.tag;
				if (5 === d || 6 === d)
					(a = a.stateNode),
						b
							? 8 === c.nodeType
								? c.parentNode.insertBefore(a, b)
								: c.insertBefore(a, b)
							: (8 === c.nodeType
									? (b = c.parentNode).insertBefore(a, c)
									: (b = c).appendChild(a),
							  null != (c = c._reactRootContainer) ||
									null !== b.onclick ||
									(b.onclick = Bf));
				else if (4 !== d && null !== (a = a.child))
					for (Vj(a, b, c), a = a.sibling; null !== a; )
						Vj(a, b, c), (a = a.sibling);
			}
			function Wj(a, b, c) {
				var d = a.tag;
				if (5 === d || 6 === d)
					(a = a.stateNode),
						b ? c.insertBefore(a, b) : c.appendChild(a);
				else if (4 !== d && null !== (a = a.child))
					for (Wj(a, b, c), a = a.sibling; null !== a; )
						Wj(a, b, c), (a = a.sibling);
			}
			var X = null,
				Xj = !1;
			function Yj(a, b, c) {
				for (c = c.child; null !== c; ) Zj(a, b, c), (c = c.sibling);
			}
			function Zj(a, b, c) {
				if (lc && 'function' == typeof lc.onCommitFiberUnmount)
					try {
						lc.onCommitFiberUnmount(kc, c);
					} catch (h) {}
				switch (c.tag) {
					case 5:
						U || Lj(c, b);
					case 6:
						var d = X,
							e = Xj;
						(X = null),
							Yj(a, b, c),
							(Xj = e),
							null !== (X = d) &&
								(Xj
									? ((a = X),
									  (c = c.stateNode),
									  8 === a.nodeType
											? a.parentNode.removeChild(c)
											: a.removeChild(c))
									: X.removeChild(c.stateNode));
						break;
					case 18:
						null !== X &&
							(Xj
								? ((a = X),
								  (c = c.stateNode),
								  8 === a.nodeType
										? Kf(a.parentNode, c)
										: 1 === a.nodeType && Kf(a, c),
								  bd(a))
								: Kf(X, c.stateNode));
						break;
					case 4:
						(d = X),
							(e = Xj),
							(X = c.stateNode.containerInfo),
							(Xj = !0),
							Yj(a, b, c),
							(X = d),
							(Xj = e);
						break;
					case 0:
					case 11:
					case 14:
					case 15:
						if (
							!U &&
							null !== (d = c.updateQueue) &&
							null !== (d = d.lastEffect)
						) {
							e = d = d.next;
							do {
								var f = e,
									g = f.destroy;
								(f = f.tag),
									void 0 !== g &&
										(0 != (2 & f) || 0 != (4 & f)) &&
										Mj(c, b, g),
									(e = e.next);
							} while (e !== d);
						}
						Yj(a, b, c);
						break;
					case 1:
						if (
							!U &&
							(Lj(c, b),
							'function' ==
								typeof (d = c.stateNode).componentWillUnmount)
						)
							try {
								(d.props = c.memoizedProps),
									(d.state = c.memoizedState),
									d.componentWillUnmount();
							} catch (h) {
								W(c, b, h);
							}
						Yj(a, b, c);
						break;
					case 21:
						Yj(a, b, c);
						break;
					case 22:
						1 & c.mode
							? ((U = (d = U) || null !== c.memoizedState),
							  Yj(a, b, c),
							  (U = d))
							: Yj(a, b, c);
						break;
					default:
						Yj(a, b, c);
				}
			}
			function ak(a) {
				var b = a.updateQueue;
				if (null !== b) {
					a.updateQueue = null;
					var c = a.stateNode;
					null === c && (c = a.stateNode = new Kj()),
						b.forEach(function (b) {
							var d = bk.bind(null, a, b);
							c.has(b) || (c.add(b), b.then(d, d));
						});
				}
			}
			function ck(a, b) {
				var c = b.deletions;
				if (null !== c)
					for (var d = 0; d < c.length; d++) {
						var e = c[d];
						try {
							var f = a,
								g = b,
								h = g;
							a: for (; null !== h; ) {
								switch (h.tag) {
									case 5:
										(X = h.stateNode), (Xj = !1);
										break a;
									case 3:
									case 4:
										(X = h.stateNode.containerInfo),
											(Xj = !0);
										break a;
								}
								h = h.return;
							}
							if (null === X) throw Error(p(160));
							Zj(f, g, e), (X = null), (Xj = !1);
							var k = e.alternate;
							null !== k && (k.return = null), (e.return = null);
						} catch (l) {
							W(e, b, l);
						}
					}
				if (12854 & b.subtreeFlags)
					for (b = b.child; null !== b; ) dk(b, a), (b = b.sibling);
			}
			function dk(a, b) {
				var c = a.alternate,
					d = a.flags;
				switch (a.tag) {
					case 0:
					case 11:
					case 14:
					case 15:
						if ((ck(b, a), ek(a), 4 & d)) {
							try {
								Pj(3, a, a.return), Qj(3, a);
							} catch (t) {
								W(a, a.return, t);
							}
							try {
								Pj(5, a, a.return);
							} catch (t) {
								W(a, a.return, t);
							}
						}
						break;
					case 1:
						ck(b, a),
							ek(a),
							512 & d && null !== c && Lj(c, c.return);
						break;
					case 5:
						if (
							(ck(b, a),
							ek(a),
							512 & d && null !== c && Lj(c, c.return),
							32 & a.flags)
						) {
							var e = a.stateNode;
							try {
								ob(e, '');
							} catch (t) {
								W(a, a.return, t);
							}
						}
						if (4 & d && null != (e = a.stateNode)) {
							var f = a.memoizedProps,
								g = null !== c ? c.memoizedProps : f,
								h = a.type,
								k = a.updateQueue;
							if (((a.updateQueue = null), null !== k))
								try {
									'input' === h &&
										'radio' === f.type &&
										null != f.name &&
										ab(e, f),
										vb(h, g);
									var l = vb(h, f);
									for (g = 0; g < k.length; g += 2) {
										var m = k[g],
											q = k[g + 1];
										'style' === m
											? sb(e, q)
											: 'dangerouslySetInnerHTML' === m
											? nb(e, q)
											: 'children' === m
											? ob(e, q)
											: ta(e, m, q, l);
									}
									switch (h) {
										case 'input':
											bb(e, f);
											break;
										case 'textarea':
											ib(e, f);
											break;
										case 'select':
											var r = e._wrapperState.wasMultiple;
											e._wrapperState.wasMultiple =
												!!f.multiple;
											var y = f.value;
											null != y
												? fb(e, !!f.multiple, y, !1)
												: r !== !!f.multiple &&
												  (null != f.defaultValue
														? fb(
																e,
																!!f.multiple,
																f.defaultValue,
																!0,
														  )
														: fb(
																e,
																!!f.multiple,
																f.multiple
																	? []
																	: '',
																!1,
														  ));
									}
									e[Pf] = f;
								} catch (t) {
									W(a, a.return, t);
								}
						}
						break;
					case 6:
						if ((ck(b, a), ek(a), 4 & d)) {
							if (null === a.stateNode) throw Error(p(162));
							(e = a.stateNode), (f = a.memoizedProps);
							try {
								e.nodeValue = f;
							} catch (t) {
								W(a, a.return, t);
							}
						}
						break;
					case 3:
						if (
							(ck(b, a),
							ek(a),
							4 & d && null !== c && c.memoizedState.isDehydrated)
						)
							try {
								bd(b.containerInfo);
							} catch (t) {
								W(a, a.return, t);
							}
						break;
					case 4:
					default:
						ck(b, a), ek(a);
						break;
					case 13:
						ck(b, a),
							ek(a),
							8192 & (e = a.child).flags &&
								((f = null !== e.memoizedState),
								(e.stateNode.isHidden = f),
								!f ||
									(null !== e.alternate &&
										null !== e.alternate.memoizedState) ||
									(fk = B())),
							4 & d && ak(a);
						break;
					case 22:
						if (
							((m = null !== c && null !== c.memoizedState),
							1 & a.mode
								? ((U = (l = U) || m), ck(b, a), (U = l))
								: ck(b, a),
							ek(a),
							8192 & d)
						) {
							if (
								((l = null !== a.memoizedState),
								(a.stateNode.isHidden = l) &&
									!m &&
									0 != (1 & a.mode))
							)
								for (V = a, m = a.child; null !== m; ) {
									for (q = V = m; null !== V; ) {
										switch (((y = (r = V).child), r.tag)) {
											case 0:
											case 11:
											case 14:
											case 15:
												Pj(4, r, r.return);
												break;
											case 1:
												Lj(r, r.return);
												var n = r.stateNode;
												if (
													'function' ==
													typeof n.componentWillUnmount
												) {
													(d = r), (c = r.return);
													try {
														(b = d),
															(n.props =
																b.memoizedProps),
															(n.state =
																b.memoizedState),
															n.componentWillUnmount();
													} catch (t) {
														W(d, c, t);
													}
												}
												break;
											case 5:
												Lj(r, r.return);
												break;
											case 22:
												if (null !== r.memoizedState) {
													gk(q);
													continue;
												}
										}
										null !== y
											? ((y.return = r), (V = y))
											: gk(q);
									}
									m = m.sibling;
								}
							a: for (m = null, q = a; ; ) {
								if (5 === q.tag) {
									if (null === m) {
										m = q;
										try {
											(e = q.stateNode),
												l
													? 'function' ==
													  typeof (f = e.style)
															.setProperty
														? f.setProperty(
																'display',
																'none',
																'important',
														  )
														: (f.display = 'none')
													: ((h = q.stateNode),
													  (g =
															null !=
																(k =
																	q
																		.memoizedProps
																		.style) &&
															k.hasOwnProperty(
																'display',
															)
																? k.display
																: null),
													  (h.style.display = rb(
															'display',
															g,
													  )));
										} catch (t) {
											W(a, a.return, t);
										}
									}
								} else if (6 === q.tag) {
									if (null === m)
										try {
											q.stateNode.nodeValue = l
												? ''
												: q.memoizedProps;
										} catch (t) {
											W(a, a.return, t);
										}
								} else if (
									((22 !== q.tag && 23 !== q.tag) ||
										null === q.memoizedState ||
										q === a) &&
									null !== q.child
								) {
									(q.child.return = q), (q = q.child);
									continue;
								}
								if (q === a) break a;
								for (; null === q.sibling; ) {
									if (null === q.return || q.return === a)
										break a;
									m === q && (m = null), (q = q.return);
								}
								m === q && (m = null),
									(q.sibling.return = q.return),
									(q = q.sibling);
							}
						}
						break;
					case 19:
						ck(b, a), ek(a), 4 & d && ak(a);
					case 21:
				}
			}
			function ek(a) {
				var b = a.flags;
				if (2 & b) {
					try {
						a: {
							for (var c = a.return; null !== c; ) {
								if (Tj(c)) {
									var d = c;
									break a;
								}
								c = c.return;
							}
							throw Error(p(160));
						}
						switch (d.tag) {
							case 5:
								var e = d.stateNode;
								32 & d.flags && (ob(e, ''), (d.flags &= -33)),
									Wj(a, Uj(a), e);
								break;
							case 3:
							case 4:
								var g = d.stateNode.containerInfo;
								Vj(a, Uj(a), g);
								break;
							default:
								throw Error(p(161));
						}
					} catch (k) {
						W(a, a.return, k);
					}
					a.flags &= -3;
				}
				4096 & b && (a.flags &= -4097);
			}
			function hk(a, b, c) {
				(V = a), ik(a, b, c);
			}
			function ik(a, b, c) {
				for (var d = 0 != (1 & a.mode); null !== V; ) {
					var e = V,
						f = e.child;
					if (22 === e.tag && d) {
						var g = null !== e.memoizedState || Jj;
						if (!g) {
							var h = e.alternate,
								k =
									(null !== h && null !== h.memoizedState) ||
									U;
							h = Jj;
							var l = U;
							if (((Jj = g), (U = k) && !l))
								for (V = e; null !== V; )
									(k = (g = V).child),
										22 === g.tag && null !== g.memoizedState
											? jk(e)
											: null !== k
											? ((k.return = g), (V = k))
											: jk(e);
							for (; null !== f; )
								(V = f), ik(f, b, c), (f = f.sibling);
							(V = e), (Jj = h), (U = l);
						}
						kk(a);
					} else
						0 != (8772 & e.subtreeFlags) && null !== f
							? ((f.return = e), (V = f))
							: kk(a);
				}
			}
			function kk(a) {
				for (; null !== V; ) {
					var b = V;
					if (0 != (8772 & b.flags)) {
						var c = b.alternate;
						try {
							if (0 != (8772 & b.flags))
								switch (b.tag) {
									case 0:
									case 11:
									case 15:
										U || Qj(5, b);
										break;
									case 1:
										var d = b.stateNode;
										if (4 & b.flags && !U)
											if (null === c)
												d.componentDidMount();
											else {
												var e =
													b.elementType === b.type
														? c.memoizedProps
														: Ci(
																b.type,
																c.memoizedProps,
														  );
												d.componentDidUpdate(
													e,
													c.memoizedState,
													d.__reactInternalSnapshotBeforeUpdate,
												);
											}
										var f = b.updateQueue;
										null !== f && sh(b, f, d);
										break;
									case 3:
										var g = b.updateQueue;
										if (null !== g) {
											if (((c = null), null !== b.child))
												switch (b.child.tag) {
													case 5:
													case 1:
														c = b.child.stateNode;
												}
											sh(b, g, c);
										}
										break;
									case 5:
										var h = b.stateNode;
										if (null === c && 4 & b.flags) {
											c = h;
											var k = b.memoizedProps;
											switch (b.type) {
												case 'button':
												case 'input':
												case 'select':
												case 'textarea':
													k.autoFocus && c.focus();
													break;
												case 'img':
													k.src && (c.src = k.src);
											}
										}
										break;
									case 6:
									case 4:
									case 12:
									case 19:
									case 17:
									case 21:
									case 22:
									case 23:
									case 25:
										break;
									case 13:
										if (null === b.memoizedState) {
											var l = b.alternate;
											if (null !== l) {
												var m = l.memoizedState;
												if (null !== m) {
													var q = m.dehydrated;
													null !== q && bd(q);
												}
											}
										}
										break;
									default:
										throw Error(p(163));
								}
							U || (512 & b.flags && Rj(b));
						} catch (r) {
							W(b, b.return, r);
						}
					}
					if (b === a) {
						V = null;
						break;
					}
					if (null !== (c = b.sibling)) {
						(c.return = b.return), (V = c);
						break;
					}
					V = b.return;
				}
			}
			function gk(a) {
				for (; null !== V; ) {
					var b = V;
					if (b === a) {
						V = null;
						break;
					}
					var c = b.sibling;
					if (null !== c) {
						(c.return = b.return), (V = c);
						break;
					}
					V = b.return;
				}
			}
			function jk(a) {
				for (; null !== V; ) {
					var b = V;
					try {
						switch (b.tag) {
							case 0:
							case 11:
							case 15:
								var c = b.return;
								try {
									Qj(4, b);
								} catch (k) {
									W(b, c, k);
								}
								break;
							case 1:
								var d = b.stateNode;
								if ('function' == typeof d.componentDidMount) {
									var e = b.return;
									try {
										d.componentDidMount();
									} catch (k) {
										W(b, e, k);
									}
								}
								var f = b.return;
								try {
									Rj(b);
								} catch (k) {
									W(b, f, k);
								}
								break;
							case 5:
								var g = b.return;
								try {
									Rj(b);
								} catch (k) {
									W(b, g, k);
								}
						}
					} catch (k) {
						W(b, b.return, k);
					}
					if (b === a) {
						V = null;
						break;
					}
					var h = b.sibling;
					if (null !== h) {
						(h.return = b.return), (V = h);
						break;
					}
					V = b.return;
				}
			}
			var Vk,
				lk = Math.ceil,
				mk = ua.ReactCurrentDispatcher,
				nk = ua.ReactCurrentOwner,
				ok = ua.ReactCurrentBatchConfig,
				K = 0,
				Q = null,
				Y = null,
				Z = 0,
				fj = 0,
				ej = Uf(0),
				T = 0,
				pk = null,
				rh = 0,
				qk = 0,
				rk = 0,
				sk = null,
				tk = null,
				fk = 0,
				Gj = 1 / 0,
				uk = null,
				Oi = !1,
				Pi = null,
				Ri = null,
				vk = !1,
				wk = null,
				xk = 0,
				yk = 0,
				zk = null,
				Ak = -1,
				Bk = 0;
			function R() {
				return 0 != (6 & K) ? B() : -1 !== Ak ? Ak : (Ak = B());
			}
			function yi(a) {
				return 0 == (1 & a.mode)
					? 1
					: 0 != (2 & K) && 0 !== Z
					? Z & -Z
					: null !== Kg.transition
					? (0 === Bk && (Bk = yc()), Bk)
					: 0 !== (a = C)
					? a
					: (a = void 0 === (a = window.event) ? 16 : jd(a.type));
			}
			function gi(a, b, c, d) {
				if (50 < yk) throw ((yk = 0), (zk = null), Error(p(185)));
				Ac(a, c, d),
					(0 != (2 & K) && a === Q) ||
						(a === Q &&
							(0 == (2 & K) && (qk |= c), 4 === T && Ck(a, Z)),
						Dk(a, d),
						1 === c &&
							0 === K &&
							0 == (1 & b.mode) &&
							((Gj = B() + 500), fg && jg()));
			}
			function Dk(a, b) {
				var c = a.callbackNode;
				!(function wc(a, b) {
					for (
						var c = a.suspendedLanes,
							d = a.pingedLanes,
							e = a.expirationTimes,
							f = a.pendingLanes;
						0 < f;

					) {
						var g = 31 - oc(f),
							h = 1 << g,
							k = e[g];
						-1 === k
							? (0 != (h & c) && 0 == (h & d)) ||
							  (e[g] = vc(h, b))
							: k <= b && (a.expiredLanes |= h),
							(f &= ~h);
					}
				})(a, b);
				var d = uc(a, a === Q ? Z : 0);
				if (0 === d)
					null !== c && bc(c),
						(a.callbackNode = null),
						(a.callbackPriority = 0);
				else if (((b = d & -d), a.callbackPriority !== b)) {
					if ((null != c && bc(c), 1 === b))
						0 === a.tag
							? (function ig(a) {
									(fg = !0), hg(a);
							  })(Ek.bind(null, a))
							: hg(Ek.bind(null, a)),
							Jf(function () {
								0 == (6 & K) && jg();
							}),
							(c = null);
					else {
						switch (Dc(d)) {
							case 1:
								c = fc;
								break;
							case 4:
								c = gc;
								break;
							case 16:
							default:
								c = hc;
								break;
							case 536870912:
								c = jc;
						}
						c = Fk(c, Gk.bind(null, a));
					}
					(a.callbackPriority = b), (a.callbackNode = c);
				}
			}
			function Gk(a, b) {
				if (((Ak = -1), (Bk = 0), 0 != (6 & K))) throw Error(p(327));
				var c = a.callbackNode;
				if (Hk() && a.callbackNode !== c) return null;
				var d = uc(a, a === Q ? Z : 0);
				if (0 === d) return null;
				if (0 != (30 & d) || 0 != (d & a.expiredLanes) || b)
					b = Ik(a, d);
				else {
					b = d;
					var e = K;
					K |= 2;
					var f = Jk();
					for (
						(Q === a && Z === b) ||
						((uk = null), (Gj = B() + 500), Kk(a, b));
						;

					)
						try {
							Lk();
							break;
						} catch (h) {
							Mk(a, h);
						}
					$g(),
						(mk.current = f),
						(K = e),
						null !== Y ? (b = 0) : ((Q = null), (Z = 0), (b = T));
				}
				if (0 !== b) {
					if (
						(2 === b &&
							0 !== (e = xc(a)) &&
							((d = e), (b = Nk(a, e))),
						1 === b)
					)
						throw ((c = pk), Kk(a, 0), Ck(a, d), Dk(a, B()), c);
					if (6 === b) Ck(a, d);
					else {
						if (
							((e = a.current.alternate),
							0 == (30 & d) &&
								!(function Ok(a) {
									for (var b = a; ; ) {
										if (16384 & b.flags) {
											var c = b.updateQueue;
											if (
												null !== c &&
												null !== (c = c.stores)
											)
												for (
													var d = 0;
													d < c.length;
													d++
												) {
													var e = c[d],
														f = e.getSnapshot;
													e = e.value;
													try {
														if (!He(f(), e))
															return !1;
													} catch (g) {
														return !1;
													}
												}
										}
										if (
											((c = b.child),
											16384 & b.subtreeFlags &&
												null !== c)
										)
											(c.return = b), (b = c);
										else {
											if (b === a) break;
											for (; null === b.sibling; ) {
												if (
													null === b.return ||
													b.return === a
												)
													return !0;
												b = b.return;
											}
											(b.sibling.return = b.return),
												(b = b.sibling);
										}
									}
									return !0;
								})(e) &&
								(2 === (b = Ik(a, d)) &&
									0 !== (f = xc(a)) &&
									((d = f), (b = Nk(a, f))),
								1 === b))
						)
							throw ((c = pk), Kk(a, 0), Ck(a, d), Dk(a, B()), c);
						switch (
							((a.finishedWork = e), (a.finishedLanes = d), b)
						) {
							case 0:
							case 1:
								throw Error(p(345));
							case 2:
							case 5:
								Pk(a, tk, uk);
								break;
							case 3:
								if (
									(Ck(a, d),
									(130023424 & d) === d &&
										10 < (b = fk + 500 - B()))
								) {
									if (0 !== uc(a, 0)) break;
									if (((e = a.suspendedLanes) & d) !== d) {
										R(),
											(a.pingedLanes |=
												a.suspendedLanes & e);
										break;
									}
									a.timeoutHandle = Ff(
										Pk.bind(null, a, tk, uk),
										b,
									);
									break;
								}
								Pk(a, tk, uk);
								break;
							case 4:
								if ((Ck(a, d), (4194240 & d) === d)) break;
								for (b = a.eventTimes, e = -1; 0 < d; ) {
									var g = 31 - oc(d);
									(f = 1 << g),
										(g = b[g]) > e && (e = g),
										(d &= ~f);
								}
								if (
									((d = e),
									10 <
										(d =
											(120 > (d = B() - d)
												? 120
												: 480 > d
												? 480
												: 1080 > d
												? 1080
												: 1920 > d
												? 1920
												: 3e3 > d
												? 3e3
												: 4320 > d
												? 4320
												: 1960 * lk(d / 1960)) - d))
								) {
									a.timeoutHandle = Ff(
										Pk.bind(null, a, tk, uk),
										d,
									);
									break;
								}
								Pk(a, tk, uk);
								break;
							default:
								throw Error(p(329));
						}
					}
				}
				return (
					Dk(a, B()), a.callbackNode === c ? Gk.bind(null, a) : null
				);
			}
			function Nk(a, b) {
				var c = sk;
				return (
					a.current.memoizedState.isDehydrated &&
						(Kk(a, b).flags |= 256),
					2 !== (a = Ik(a, b)) &&
						((b = tk), (tk = c), null !== b && Fj(b)),
					a
				);
			}
			function Fj(a) {
				null === tk ? (tk = a) : tk.push.apply(tk, a);
			}
			function Ck(a, b) {
				for (
					b &= ~rk,
						b &= ~qk,
						a.suspendedLanes |= b,
						a.pingedLanes &= ~b,
						a = a.expirationTimes;
					0 < b;

				) {
					var c = 31 - oc(b),
						d = 1 << c;
					(a[c] = -1), (b &= ~d);
				}
			}
			function Ek(a) {
				if (0 != (6 & K)) throw Error(p(327));
				Hk();
				var b = uc(a, 0);
				if (0 == (1 & b)) return Dk(a, B()), null;
				var c = Ik(a, b);
				if (0 !== a.tag && 2 === c) {
					var d = xc(a);
					0 !== d && ((b = d), (c = Nk(a, d)));
				}
				if (1 === c)
					throw ((c = pk), Kk(a, 0), Ck(a, b), Dk(a, B()), c);
				if (6 === c) throw Error(p(345));
				return (
					(a.finishedWork = a.current.alternate),
					(a.finishedLanes = b),
					Pk(a, tk, uk),
					Dk(a, B()),
					null
				);
			}
			function Qk(a, b) {
				var c = K;
				K |= 1;
				try {
					return a(b);
				} finally {
					0 === (K = c) && ((Gj = B() + 500), fg && jg());
				}
			}
			function Rk(a) {
				null !== wk && 0 === wk.tag && 0 == (6 & K) && Hk();
				var b = K;
				K |= 1;
				var c = ok.transition,
					d = C;
				try {
					if (((ok.transition = null), (C = 1), a)) return a();
				} finally {
					(C = d), (ok.transition = c), 0 == (6 & (K = b)) && jg();
				}
			}
			function Hj() {
				(fj = ej.current), E(ej);
			}
			function Kk(a, b) {
				(a.finishedWork = null), (a.finishedLanes = 0);
				var c = a.timeoutHandle;
				if ((-1 !== c && ((a.timeoutHandle = -1), Gf(c)), null !== Y))
					for (c = Y.return; null !== c; ) {
						var d = c;
						switch ((wg(d), d.tag)) {
							case 1:
								null != (d = d.type.childContextTypes) && $f();
								break;
							case 3:
								zh(), E(Wf), E(H), Eh();
								break;
							case 5:
								Bh(d);
								break;
							case 4:
								zh();
								break;
							case 13:
							case 19:
								E(L);
								break;
							case 10:
								ah(d.type._context);
								break;
							case 22:
							case 23:
								Hj();
						}
						c = c.return;
					}
				if (
					((Q = a),
					(Y = a = Pg(a.current, null)),
					(Z = fj = b),
					(T = 0),
					(pk = null),
					(rk = qk = rh = 0),
					(tk = sk = null),
					null !== fh)
				) {
					for (b = 0; b < fh.length; b++)
						if (null !== (d = (c = fh[b]).interleaved)) {
							c.interleaved = null;
							var e = d.next,
								f = c.pending;
							if (null !== f) {
								var g = f.next;
								(f.next = e), (d.next = g);
							}
							c.pending = d;
						}
					fh = null;
				}
				return a;
			}
			function Mk(a, b) {
				for (;;) {
					var c = Y;
					try {
						if (($g(), (Fh.current = Rh), Ih)) {
							for (var d = M.memoizedState; null !== d; ) {
								var e = d.queue;
								null !== e && (e.pending = null), (d = d.next);
							}
							Ih = !1;
						}
						if (
							((Hh = 0),
							(O = N = M = null),
							(Jh = !1),
							(Kh = 0),
							(nk.current = null),
							null === c || null === c.return)
						) {
							(T = 1), (pk = b), (Y = null);
							break;
						}
						a: {
							var f = a,
								g = c.return,
								h = c,
								k = b;
							if (
								((b = Z),
								(h.flags |= 32768),
								null !== k &&
									'object' == typeof k &&
									'function' == typeof k.then)
							) {
								var l = k,
									m = h,
									q = m.tag;
								if (
									0 == (1 & m.mode) &&
									(0 === q || 11 === q || 15 === q)
								) {
									var r = m.alternate;
									r
										? ((m.updateQueue = r.updateQueue),
										  (m.memoizedState = r.memoizedState),
										  (m.lanes = r.lanes))
										: ((m.updateQueue = null),
										  (m.memoizedState = null));
								}
								var y = Ui(g);
								if (null !== y) {
									(y.flags &= -257),
										Vi(y, g, h, 0, b),
										1 & y.mode && Si(f, l, b),
										(k = l);
									var n = (b = y).updateQueue;
									if (null === n) {
										var t = new Set();
										t.add(k), (b.updateQueue = t);
									} else n.add(k);
									break a;
								}
								if (0 == (1 & b)) {
									Si(f, l, b), tj();
									break a;
								}
								k = Error(p(426));
							} else if (I && 1 & h.mode) {
								var J = Ui(g);
								if (null !== J) {
									0 == (65536 & J.flags) && (J.flags |= 256),
										Vi(J, g, h, 0, b),
										Jg(Ji(k, h));
									break a;
								}
							}
							(f = k = Ji(k, h)),
								4 !== T && (T = 2),
								null === sk ? (sk = [f]) : sk.push(f),
								(f = g);
							do {
								switch (f.tag) {
									case 3:
										(f.flags |= 65536),
											(b &= -b),
											(f.lanes |= b),
											ph(f, Ni(0, k, b));
										break a;
									case 1:
										h = k;
										var w = f.type,
											u = f.stateNode;
										if (
											0 == (128 & f.flags) &&
											('function' ==
												typeof w.getDerivedStateFromError ||
												(null !== u &&
													'function' ==
														typeof u.componentDidCatch &&
													(null === Ri ||
														!Ri.has(u))))
										) {
											(f.flags |= 65536),
												(b &= -b),
												(f.lanes |= b),
												ph(f, Qi(f, h, b));
											break a;
										}
								}
								f = f.return;
							} while (null !== f);
						}
						Sk(c);
					} catch (na) {
						(b = na), Y === c && null !== c && (Y = c = c.return);
						continue;
					}
					break;
				}
			}
			function Jk() {
				var a = mk.current;
				return (mk.current = Rh), null === a ? Rh : a;
			}
			function tj() {
				(0 !== T && 3 !== T && 2 !== T) || (T = 4),
					null === Q ||
						(0 == (268435455 & rh) && 0 == (268435455 & qk)) ||
						Ck(Q, Z);
			}
			function Ik(a, b) {
				var c = K;
				K |= 2;
				var d = Jk();
				for ((Q === a && Z === b) || ((uk = null), Kk(a, b)); ; )
					try {
						Tk();
						break;
					} catch (e) {
						Mk(a, e);
					}
				if (($g(), (K = c), (mk.current = d), null !== Y))
					throw Error(p(261));
				return (Q = null), (Z = 0), T;
			}
			function Tk() {
				for (; null !== Y; ) Uk(Y);
			}
			function Lk() {
				for (; null !== Y && !cc(); ) Uk(Y);
			}
			function Uk(a) {
				var b = Vk(a.alternate, a, fj);
				(a.memoizedProps = a.pendingProps),
					null === b ? Sk(a) : (Y = b),
					(nk.current = null);
			}
			function Sk(a) {
				var b = a;
				do {
					var c = b.alternate;
					if (((a = b.return), 0 == (32768 & b.flags))) {
						if (null !== (c = Ej(c, b, fj))) return void (Y = c);
					} else {
						if (null !== (c = Ij(c, b)))
							return (c.flags &= 32767), void (Y = c);
						if (null === a) return (T = 6), void (Y = null);
						(a.flags |= 32768),
							(a.subtreeFlags = 0),
							(a.deletions = null);
					}
					if (null !== (b = b.sibling)) return void (Y = b);
					Y = b = a;
				} while (null !== b);
				0 === T && (T = 5);
			}
			function Pk(a, b, c) {
				var d = C,
					e = ok.transition;
				try {
					(ok.transition = null),
						(C = 1),
						(function Wk(a, b, c, d) {
							do {
								Hk();
							} while (null !== wk);
							if (0 != (6 & K)) throw Error(p(327));
							c = a.finishedWork;
							var e = a.finishedLanes;
							if (null === c) return null;
							if (
								((a.finishedWork = null),
								(a.finishedLanes = 0),
								c === a.current)
							)
								throw Error(p(177));
							(a.callbackNode = null), (a.callbackPriority = 0);
							var f = c.lanes | c.childLanes;
							if (
								((function Bc(a, b) {
									var c = a.pendingLanes & ~b;
									(a.pendingLanes = b),
										(a.suspendedLanes = 0),
										(a.pingedLanes = 0),
										(a.expiredLanes &= b),
										(a.mutableReadLanes &= b),
										(a.entangledLanes &= b),
										(b = a.entanglements);
									var d = a.eventTimes;
									for (a = a.expirationTimes; 0 < c; ) {
										var e = 31 - oc(c),
											f = 1 << e;
										(b[e] = 0),
											(d[e] = -1),
											(a[e] = -1),
											(c &= ~f);
									}
								})(a, f),
								a === Q && ((Y = Q = null), (Z = 0)),
								(0 == (2064 & c.subtreeFlags) &&
									0 == (2064 & c.flags)) ||
									vk ||
									((vk = !0),
									Fk(hc, function () {
										return Hk(), null;
									})),
								(f = 0 != (15990 & c.flags)),
								0 != (15990 & c.subtreeFlags) || f)
							) {
								(f = ok.transition), (ok.transition = null);
								var g = C;
								C = 1;
								var h = K;
								(K |= 4),
									(nk.current = null),
									(function Oj(a, b) {
										if (((Cf = dd), Ne((a = Me())))) {
											if ('selectionStart' in a)
												var c = {
													start: a.selectionStart,
													end: a.selectionEnd,
												};
											else
												a: {
													var d =
														(c =
															((c =
																a.ownerDocument) &&
																c.defaultView) ||
															window)
															.getSelection &&
														c.getSelection();
													if (
														d &&
														0 !== d.rangeCount
													) {
														c = d.anchorNode;
														var e = d.anchorOffset,
															f = d.focusNode;
														d = d.focusOffset;
														try {
															c.nodeType,
																f.nodeType;
														} catch (F) {
															c = null;
															break a;
														}
														var g = 0,
															h = -1,
															k = -1,
															l = 0,
															m = 0,
															q = a,
															r = null;
														b: for (;;) {
															for (
																var y;
																q !== c ||
																	(0 !== e &&
																		3 !==
																			q.nodeType) ||
																	(h = g + e),
																	q !== f ||
																		(0 !==
																			d &&
																			3 !==
																				q.nodeType) ||
																		(k =
																			g +
																			d),
																	3 ===
																		q.nodeType &&
																		(g +=
																			q
																				.nodeValue
																				.length),
																	null !==
																		(y =
																			q.firstChild);

															)
																(r = q),
																	(q = y);
															for (;;) {
																if (q === a)
																	break b;
																if (
																	(r === c &&
																		++l ===
																			e &&
																		(h = g),
																	r === f &&
																		++m ===
																			d &&
																		(k = g),
																	null !==
																		(y =
																			q.nextSibling))
																)
																	break;
																r = (q = r)
																	.parentNode;
															}
															q = y;
														}
														c =
															-1 === h || -1 === k
																? null
																: {
																		start: h,
																		end: k,
																  };
													} else c = null;
												}
											c = c || { start: 0, end: 0 };
										} else c = null;
										for (
											Df = {
												focusedElem: a,
												selectionRange: c,
											},
												dd = !1,
												V = b;
											null !== V;

										)
											if (
												((a = (b = V).child),
												0 != (1028 & b.subtreeFlags) &&
													null !== a)
											)
												(a.return = b), (V = a);
											else
												for (; null !== V; ) {
													b = V;
													try {
														var n = b.alternate;
														if (
															0 !=
															(1024 & b.flags)
														)
															switch (b.tag) {
																case 0:
																case 11:
																case 15:
																case 5:
																case 6:
																case 4:
																case 17:
																	break;
																case 1:
																	if (
																		null !==
																		n
																	) {
																		var t =
																				n.memoizedProps,
																			J =
																				n.memoizedState,
																			x =
																				b.stateNode,
																			w =
																				x.getSnapshotBeforeUpdate(
																					b.elementType ===
																						b.type
																						? t
																						: Ci(
																								b.type,
																								t,
																						  ),
																					J,
																				);
																		x.__reactInternalSnapshotBeforeUpdate =
																			w;
																	}
																	break;
																case 3:
																	var u =
																		b
																			.stateNode
																			.containerInfo;
																	1 ===
																	u.nodeType
																		? (u.textContent =
																				'')
																		: 9 ===
																				u.nodeType &&
																		  u.documentElement &&
																		  u.removeChild(
																				u.documentElement,
																		  );
																	break;
																default:
																	throw Error(
																		p(163),
																	);
															}
													} catch (F) {
														W(b, b.return, F);
													}
													if (
														null !== (a = b.sibling)
													) {
														(a.return = b.return),
															(V = a);
														break;
													}
													V = b.return;
												}
										return (n = Nj), (Nj = !1), n;
									})(a, c),
									dk(c, a),
									Oe(Df),
									(dd = !!Cf),
									(Df = Cf = null),
									(a.current = c),
									hk(c, a, e),
									dc(),
									(K = h),
									(C = g),
									(ok.transition = f);
							} else a.current = c;
							if (
								(vk && ((vk = !1), (wk = a), (xk = e)),
								(f = a.pendingLanes),
								0 === f && (Ri = null),
								(function mc(a) {
									if (
										lc &&
										'function' ==
											typeof lc.onCommitFiberRoot
									)
										try {
											lc.onCommitFiberRoot(
												kc,
												a,
												void 0,
												128 == (128 & a.current.flags),
											);
										} catch (b) {}
								})(c.stateNode),
								Dk(a, B()),
								null !== b)
							)
								for (
									d = a.onRecoverableError, c = 0;
									c < b.length;
									c++
								)
									(e = b[c]),
										d(e.value, {
											componentStack: e.stack,
											digest: e.digest,
										});
							if (Oi) throw ((Oi = !1), (a = Pi), (Pi = null), a);
							return (
								0 != (1 & xk) && 0 !== a.tag && Hk(),
								(f = a.pendingLanes),
								0 != (1 & f)
									? a === zk
										? yk++
										: ((yk = 0), (zk = a))
									: (yk = 0),
								jg(),
								null
							);
						})(a, b, c, d);
				} finally {
					(ok.transition = e), (C = d);
				}
				return null;
			}
			function Hk() {
				if (null !== wk) {
					var a = Dc(xk),
						b = ok.transition,
						c = C;
					try {
						if (
							((ok.transition = null),
							(C = 16 > a ? 16 : a),
							null === wk)
						)
							var d = !1;
						else {
							if (((a = wk), (wk = null), (xk = 0), 0 != (6 & K)))
								throw Error(p(331));
							var e = K;
							for (K |= 4, V = a.current; null !== V; ) {
								var f = V,
									g = f.child;
								if (0 != (16 & V.flags)) {
									var h = f.deletions;
									if (null !== h) {
										for (var k = 0; k < h.length; k++) {
											var l = h[k];
											for (V = l; null !== V; ) {
												var m = V;
												switch (m.tag) {
													case 0:
													case 11:
													case 15:
														Pj(8, m, f);
												}
												var q = m.child;
												if (null !== q)
													(q.return = m), (V = q);
												else
													for (; null !== V; ) {
														var r = (m = V).sibling,
															y = m.return;
														if ((Sj(m), m === l)) {
															V = null;
															break;
														}
														if (null !== r) {
															(r.return = y),
																(V = r);
															break;
														}
														V = y;
													}
											}
										}
										var n = f.alternate;
										if (null !== n) {
											var t = n.child;
											if (null !== t) {
												n.child = null;
												do {
													var J = t.sibling;
													(t.sibling = null), (t = J);
												} while (null !== t);
											}
										}
										V = f;
									}
								}
								if (0 != (2064 & f.subtreeFlags) && null !== g)
									(g.return = f), (V = g);
								else
									b: for (; null !== V; ) {
										if (0 != (2048 & (f = V).flags))
											switch (f.tag) {
												case 0:
												case 11:
												case 15:
													Pj(9, f, f.return);
											}
										var x = f.sibling;
										if (null !== x) {
											(x.return = f.return), (V = x);
											break b;
										}
										V = f.return;
									}
							}
							var w = a.current;
							for (V = w; null !== V; ) {
								var u = (g = V).child;
								if (0 != (2064 & g.subtreeFlags) && null !== u)
									(u.return = g), (V = u);
								else
									b: for (g = w; null !== V; ) {
										if (0 != (2048 & (h = V).flags))
											try {
												switch (h.tag) {
													case 0:
													case 11:
													case 15:
														Qj(9, h);
												}
											} catch (na) {
												W(h, h.return, na);
											}
										if (h === g) {
											V = null;
											break b;
										}
										var F = h.sibling;
										if (null !== F) {
											(F.return = h.return), (V = F);
											break b;
										}
										V = h.return;
									}
							}
							if (
								((K = e),
								jg(),
								lc &&
									'function' ==
										typeof lc.onPostCommitFiberRoot)
							)
								try {
									lc.onPostCommitFiberRoot(kc, a);
								} catch (na) {}
							d = !0;
						}
						return d;
					} finally {
						(C = c), (ok.transition = b);
					}
				}
				return !1;
			}
			function Xk(a, b, c) {
				(a = nh(a, (b = Ni(0, (b = Ji(c, b)), 1)), 1)),
					(b = R()),
					null !== a && (Ac(a, 1, b), Dk(a, b));
			}
			function W(a, b, c) {
				if (3 === a.tag) Xk(a, a, c);
				else
					for (; null !== b; ) {
						if (3 === b.tag) {
							Xk(b, a, c);
							break;
						}
						if (1 === b.tag) {
							var d = b.stateNode;
							if (
								'function' ==
									typeof b.type.getDerivedStateFromError ||
								('function' == typeof d.componentDidCatch &&
									(null === Ri || !Ri.has(d)))
							) {
								(b = nh(b, (a = Qi(b, (a = Ji(c, a)), 1)), 1)),
									(a = R()),
									null !== b && (Ac(b, 1, a), Dk(b, a));
								break;
							}
						}
						b = b.return;
					}
			}
			function Ti(a, b, c) {
				var d = a.pingCache;
				null !== d && d.delete(b),
					(b = R()),
					(a.pingedLanes |= a.suspendedLanes & c),
					Q === a &&
						(Z & c) === c &&
						(4 === T ||
						(3 === T && (130023424 & Z) === Z && 500 > B() - fk)
							? Kk(a, 0)
							: (rk |= c)),
					Dk(a, b);
			}
			function Yk(a, b) {
				0 === b &&
					(0 == (1 & a.mode)
						? (b = 1)
						: ((b = sc),
						  0 == (130023424 & (sc <<= 1)) && (sc = 4194304)));
				var c = R();
				null !== (a = ih(a, b)) && (Ac(a, b, c), Dk(a, c));
			}
			function uj(a) {
				var b = a.memoizedState,
					c = 0;
				null !== b && (c = b.retryLane), Yk(a, c);
			}
			function bk(a, b) {
				var c = 0;
				switch (a.tag) {
					case 13:
						var d = a.stateNode,
							e = a.memoizedState;
						null !== e && (c = e.retryLane);
						break;
					case 19:
						d = a.stateNode;
						break;
					default:
						throw Error(p(314));
				}
				null !== d && d.delete(b), Yk(a, c);
			}
			function Fk(a, b) {
				return ac(a, b);
			}
			function $k(a, b, c, d) {
				(this.tag = a),
					(this.key = c),
					(this.sibling =
						this.child =
						this.return =
						this.stateNode =
						this.type =
						this.elementType =
							null),
					(this.index = 0),
					(this.ref = null),
					(this.pendingProps = b),
					(this.dependencies =
						this.memoizedState =
						this.updateQueue =
						this.memoizedProps =
							null),
					(this.mode = d),
					(this.subtreeFlags = this.flags = 0),
					(this.deletions = null),
					(this.childLanes = this.lanes = 0),
					(this.alternate = null);
			}
			function Bg(a, b, c, d) {
				return new $k(a, b, c, d);
			}
			function aj(a) {
				return !(!(a = a.prototype) || !a.isReactComponent);
			}
			function Pg(a, b) {
				var c = a.alternate;
				return (
					null === c
						? (((c = Bg(a.tag, b, a.key, a.mode)).elementType =
								a.elementType),
						  (c.type = a.type),
						  (c.stateNode = a.stateNode),
						  (c.alternate = a),
						  (a.alternate = c))
						: ((c.pendingProps = b),
						  (c.type = a.type),
						  (c.flags = 0),
						  (c.subtreeFlags = 0),
						  (c.deletions = null)),
					(c.flags = 14680064 & a.flags),
					(c.childLanes = a.childLanes),
					(c.lanes = a.lanes),
					(c.child = a.child),
					(c.memoizedProps = a.memoizedProps),
					(c.memoizedState = a.memoizedState),
					(c.updateQueue = a.updateQueue),
					(b = a.dependencies),
					(c.dependencies =
						null === b
							? null
							: { lanes: b.lanes, firstContext: b.firstContext }),
					(c.sibling = a.sibling),
					(c.index = a.index),
					(c.ref = a.ref),
					c
				);
			}
			function Rg(a, b, c, d, e, f) {
				var g = 2;
				if (((d = a), 'function' == typeof a)) aj(a) && (g = 1);
				else if ('string' == typeof a) g = 5;
				else
					a: switch (a) {
						case ya:
							return Tg(c.children, e, f, b);
						case za:
							(g = 8), (e |= 8);
							break;
						case Aa:
							return (
								((a = Bg(12, c, b, 2 | e)).elementType = Aa),
								(a.lanes = f),
								a
							);
						case Ea:
							return (
								((a = Bg(13, c, b, e)).elementType = Ea),
								(a.lanes = f),
								a
							);
						case Fa:
							return (
								((a = Bg(19, c, b, e)).elementType = Fa),
								(a.lanes = f),
								a
							);
						case Ia:
							return pj(c, e, f, b);
						default:
							if ('object' == typeof a && null !== a)
								switch (a.$$typeof) {
									case Ba:
										g = 10;
										break a;
									case Ca:
										g = 9;
										break a;
									case Da:
										g = 11;
										break a;
									case Ga:
										g = 14;
										break a;
									case Ha:
										(g = 16), (d = null);
										break a;
								}
							throw Error(p(130, null == a ? a : typeof a, ''));
					}
				return (
					((b = Bg(g, c, b, e)).elementType = a),
					(b.type = d),
					(b.lanes = f),
					b
				);
			}
			function Tg(a, b, c, d) {
				return ((a = Bg(7, a, d, b)).lanes = c), a;
			}
			function pj(a, b, c, d) {
				return (
					((a = Bg(22, a, d, b)).elementType = Ia),
					(a.lanes = c),
					(a.stateNode = { isHidden: !1 }),
					a
				);
			}
			function Qg(a, b, c) {
				return ((a = Bg(6, a, null, b)).lanes = c), a;
			}
			function Sg(a, b, c) {
				return (
					((b = Bg(
						4,
						null !== a.children ? a.children : [],
						a.key,
						b,
					)).lanes = c),
					(b.stateNode = {
						containerInfo: a.containerInfo,
						pendingChildren: null,
						implementation: a.implementation,
					}),
					b
				);
			}
			function al(a, b, c, d, e) {
				(this.tag = b),
					(this.containerInfo = a),
					(this.finishedWork =
						this.pingCache =
						this.current =
						this.pendingChildren =
							null),
					(this.timeoutHandle = -1),
					(this.callbackNode =
						this.pendingContext =
						this.context =
							null),
					(this.callbackPriority = 0),
					(this.eventTimes = zc(0)),
					(this.expirationTimes = zc(-1)),
					(this.entangledLanes =
						this.finishedLanes =
						this.mutableReadLanes =
						this.expiredLanes =
						this.pingedLanes =
						this.suspendedLanes =
						this.pendingLanes =
							0),
					(this.entanglements = zc(0)),
					(this.identifierPrefix = d),
					(this.onRecoverableError = e),
					(this.mutableSourceEagerHydrationData = null);
			}
			function bl(a, b, c, d, e, f, g, h, k) {
				return (
					(a = new al(a, b, c, h, k)),
					1 === b ? ((b = 1), !0 === f && (b |= 8)) : (b = 0),
					(f = Bg(3, null, null, b)),
					(a.current = f),
					(f.stateNode = a),
					(f.memoizedState = {
						element: d,
						isDehydrated: c,
						cache: null,
						transitions: null,
						pendingSuspenseBoundaries: null,
					}),
					kh(f),
					a
				);
			}
			function dl(a) {
				if (!a) return Vf;
				a: {
					if (Vb((a = a._reactInternals)) !== a || 1 !== a.tag)
						throw Error(p(170));
					var b = a;
					do {
						switch (b.tag) {
							case 3:
								b = b.stateNode.context;
								break a;
							case 1:
								if (Zf(b.type)) {
									b =
										b.stateNode
											.__reactInternalMemoizedMergedChildContext;
									break a;
								}
						}
						b = b.return;
					} while (null !== b);
					throw Error(p(171));
				}
				if (1 === a.tag) {
					var c = a.type;
					if (Zf(c)) return bg(a, c, b);
				}
				return b;
			}
			function el(a, b, c, d, e, f, g, h, k) {
				return (
					((a = bl(c, d, !0, a, 0, f, 0, h, k)).context = dl(null)),
					(c = a.current),
					((f = mh((d = R()), (e = yi(c)))).callback =
						null != b ? b : null),
					nh(c, f, e),
					(a.current.lanes = e),
					Ac(a, e, d),
					Dk(a, d),
					a
				);
			}
			function fl(a, b, c, d) {
				var e = b.current,
					f = R(),
					g = yi(e);
				return (
					(c = dl(c)),
					null === b.context
						? (b.context = c)
						: (b.pendingContext = c),
					((b = mh(f, g)).payload = { element: a }),
					null !== (d = void 0 === d ? null : d) && (b.callback = d),
					null !== (a = nh(e, b, g)) && (gi(a, e, g, f), oh(a, e, g)),
					g
				);
			}
			function gl(a) {
				return (a = a.current).child
					? (a.child.tag, a.child.stateNode)
					: null;
			}
			function hl(a, b) {
				if (null !== (a = a.memoizedState) && null !== a.dehydrated) {
					var c = a.retryLane;
					a.retryLane = 0 !== c && c < b ? c : b;
				}
			}
			function il(a, b) {
				hl(a, b), (a = a.alternate) && hl(a, b);
			}
			Vk = function (a, b, c) {
				if (null !== a)
					if (a.memoizedProps !== b.pendingProps || Wf.current)
						dh = !0;
					else {
						if (0 == (a.lanes & c) && 0 == (128 & b.flags))
							return (
								(dh = !1),
								(function yj(a, b, c) {
									switch (b.tag) {
										case 3:
											kj(b), Ig();
											break;
										case 5:
											Ah(b);
											break;
										case 1:
											Zf(b.type) && cg(b);
											break;
										case 4:
											yh(b, b.stateNode.containerInfo);
											break;
										case 10:
											var d = b.type._context,
												e = b.memoizedProps.value;
											G(Wg, d._currentValue),
												(d._currentValue = e);
											break;
										case 13:
											if (null !== (d = b.memoizedState))
												return null !== d.dehydrated
													? (G(L, 1 & L.current),
													  (b.flags |= 128),
													  null)
													: 0 !=
													  (c & b.child.childLanes)
													? oj(a, b, c)
													: (G(L, 1 & L.current),
													  null !== (a = Zi(a, b, c))
															? a.sibling
															: null);
											G(L, 1 & L.current);
											break;
										case 19:
											if (
												((d = 0 != (c & b.childLanes)),
												0 != (128 & a.flags))
											) {
												if (d) return xj(a, b, c);
												b.flags |= 128;
											}
											if (
												(null !==
													(e = b.memoizedState) &&
													((e.rendering = null),
													(e.tail = null),
													(e.lastEffect = null)),
												G(L, L.current),
												d)
											)
												break;
											return null;
										case 22:
										case 23:
											return (b.lanes = 0), dj(a, b, c);
									}
									return Zi(a, b, c);
								})(a, b, c)
							);
						dh = 0 != (131072 & a.flags);
					}
				else
					(dh = !1),
						I && 0 != (1048576 & b.flags) && ug(b, ng, b.index);
				switch (((b.lanes = 0), b.tag)) {
					case 2:
						var d = b.type;
						ij(a, b), (a = b.pendingProps);
						var e = Yf(b, H.current);
						ch(b, c), (e = Nh(null, b, d, a, e, c));
						var f = Sh();
						return (
							(b.flags |= 1),
							'object' == typeof e &&
							null !== e &&
							'function' == typeof e.render &&
							void 0 === e.$$typeof
								? ((b.tag = 1),
								  (b.memoizedState = null),
								  (b.updateQueue = null),
								  Zf(d) ? ((f = !0), cg(b)) : (f = !1),
								  (b.memoizedState =
										null !== e.state && void 0 !== e.state
											? e.state
											: null),
								  kh(b),
								  (e.updater = Ei),
								  (b.stateNode = e),
								  (e._reactInternals = b),
								  Ii(b, d, a, c),
								  (b = jj(null, b, d, !0, f, c)))
								: ((b.tag = 0),
								  I && f && vg(b),
								  Xi(null, b, e, c),
								  (b = b.child)),
							b
						);
					case 16:
						d = b.elementType;
						a: {
							switch (
								(ij(a, b),
								(a = b.pendingProps),
								(d = (e = d._init)(d._payload)),
								(b.type = d),
								(e = b.tag =
									(function Zk(a) {
										if ('function' == typeof a)
											return aj(a) ? 1 : 0;
										if (null != a) {
											if ((a = a.$$typeof) === Da)
												return 11;
											if (a === Ga) return 14;
										}
										return 2;
									})(d)),
								(a = Ci(d, a)),
								e)
							) {
								case 0:
									b = cj(null, b, d, a, c);
									break a;
								case 1:
									b = hj(null, b, d, a, c);
									break a;
								case 11:
									b = Yi(null, b, d, a, c);
									break a;
								case 14:
									b = $i(null, b, d, Ci(d.type, a), c);
									break a;
							}
							throw Error(p(306, d, ''));
						}
						return b;
					case 0:
						return (
							(d = b.type),
							(e = b.pendingProps),
							cj(
								a,
								b,
								d,
								(e = b.elementType === d ? e : Ci(d, e)),
								c,
							)
						);
					case 1:
						return (
							(d = b.type),
							(e = b.pendingProps),
							hj(
								a,
								b,
								d,
								(e = b.elementType === d ? e : Ci(d, e)),
								c,
							)
						);
					case 3:
						a: {
							if ((kj(b), null === a)) throw Error(p(387));
							(d = b.pendingProps),
								(e = (f = b.memoizedState).element),
								lh(a, b),
								qh(b, d, null, c);
							var g = b.memoizedState;
							if (((d = g.element), f.isDehydrated)) {
								if (
									((f = {
										element: d,
										isDehydrated: !1,
										cache: g.cache,
										pendingSuspenseBoundaries:
											g.pendingSuspenseBoundaries,
										transitions: g.transitions,
									}),
									(b.updateQueue.baseState = f),
									(b.memoizedState = f),
									256 & b.flags)
								) {
									b = lj(
										a,
										b,
										d,
										c,
										(e = Ji(Error(p(423)), b)),
									);
									break a;
								}
								if (d !== e) {
									b = lj(
										a,
										b,
										d,
										c,
										(e = Ji(Error(p(424)), b)),
									);
									break a;
								}
								for (
									yg = Lf(
										b.stateNode.containerInfo.firstChild,
									),
										xg = b,
										I = !0,
										zg = null,
										c = Vg(b, null, d, c),
										b.child = c;
									c;

								)
									(c.flags = (-3 & c.flags) | 4096),
										(c = c.sibling);
							} else {
								if ((Ig(), d === e)) {
									b = Zi(a, b, c);
									break a;
								}
								Xi(a, b, d, c);
							}
							b = b.child;
						}
						return b;
					case 5:
						return (
							Ah(b),
							null === a && Eg(b),
							(d = b.type),
							(e = b.pendingProps),
							(f = null !== a ? a.memoizedProps : null),
							(g = e.children),
							Ef(d, e)
								? (g = null)
								: null !== f && Ef(d, f) && (b.flags |= 32),
							gj(a, b),
							Xi(a, b, g, c),
							b.child
						);
					case 6:
						return null === a && Eg(b), null;
					case 13:
						return oj(a, b, c);
					case 4:
						return (
							yh(b, b.stateNode.containerInfo),
							(d = b.pendingProps),
							null === a
								? (b.child = Ug(b, null, d, c))
								: Xi(a, b, d, c),
							b.child
						);
					case 11:
						return (
							(d = b.type),
							(e = b.pendingProps),
							Yi(
								a,
								b,
								d,
								(e = b.elementType === d ? e : Ci(d, e)),
								c,
							)
						);
					case 7:
						return Xi(a, b, b.pendingProps, c), b.child;
					case 8:
					case 12:
						return Xi(a, b, b.pendingProps.children, c), b.child;
					case 10:
						a: {
							if (
								((d = b.type._context),
								(e = b.pendingProps),
								(f = b.memoizedProps),
								(g = e.value),
								G(Wg, d._currentValue),
								(d._currentValue = g),
								null !== f)
							)
								if (He(f.value, g)) {
									if (
										f.children === e.children &&
										!Wf.current
									) {
										b = Zi(a, b, c);
										break a;
									}
								} else
									for (
										null !== (f = b.child) &&
										(f.return = b);
										null !== f;

									) {
										var h = f.dependencies;
										if (null !== h) {
											g = f.child;
											for (
												var k = h.firstContext;
												null !== k;

											) {
												if (k.context === d) {
													if (1 === f.tag) {
														(k = mh(
															-1,
															c & -c,
														)).tag = 2;
														var l = f.updateQueue;
														if (null !== l) {
															var m = (l =
																l.shared)
																.pending;
															null === m
																? (k.next = k)
																: ((k.next =
																		m.next),
																  (m.next = k)),
																(l.pending = k);
														}
													}
													(f.lanes |= c),
														null !==
															(k = f.alternate) &&
															(k.lanes |= c),
														bh(f.return, c, b),
														(h.lanes |= c);
													break;
												}
												k = k.next;
											}
										} else if (10 === f.tag)
											g =
												f.type === b.type
													? null
													: f.child;
										else if (18 === f.tag) {
											if (null === (g = f.return))
												throw Error(p(341));
											(g.lanes |= c),
												null !== (h = g.alternate) &&
													(h.lanes |= c),
												bh(g, c, b),
												(g = f.sibling);
										} else g = f.child;
										if (null !== g) g.return = f;
										else
											for (g = f; null !== g; ) {
												if (g === b) {
													g = null;
													break;
												}
												if (null !== (f = g.sibling)) {
													(f.return = g.return),
														(g = f);
													break;
												}
												g = g.return;
											}
										f = g;
									}
							Xi(a, b, e.children, c), (b = b.child);
						}
						return b;
					case 9:
						return (
							(e = b.type),
							(d = b.pendingProps.children),
							ch(b, c),
							(d = d((e = eh(e)))),
							(b.flags |= 1),
							Xi(a, b, d, c),
							b.child
						);
					case 14:
						return (
							(e = Ci((d = b.type), b.pendingProps)),
							$i(a, b, d, (e = Ci(d.type, e)), c)
						);
					case 15:
						return bj(a, b, b.type, b.pendingProps, c);
					case 17:
						return (
							(d = b.type),
							(e = b.pendingProps),
							(e = b.elementType === d ? e : Ci(d, e)),
							ij(a, b),
							(b.tag = 1),
							Zf(d) ? ((a = !0), cg(b)) : (a = !1),
							ch(b, c),
							Gi(b, d, e),
							Ii(b, d, e, c),
							jj(null, b, d, !0, a, c)
						);
					case 19:
						return xj(a, b, c);
					case 22:
						return dj(a, b, c);
				}
				throw Error(p(156, b.tag));
			};
			var kl =
				'function' == typeof reportError
					? reportError
					: function (a) {
							console.error(a);
					  };
			function ll(a) {
				this._internalRoot = a;
			}
			function ml(a) {
				this._internalRoot = a;
			}
			function nl(a) {
				return !(
					!a ||
					(1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType)
				);
			}
			function ol(a) {
				return !(
					!a ||
					(1 !== a.nodeType &&
						9 !== a.nodeType &&
						11 !== a.nodeType &&
						(8 !== a.nodeType ||
							' react-mount-point-unstable ' !== a.nodeValue))
				);
			}
			function pl() {}
			function rl(a, b, c, d, e) {
				var f = c._reactRootContainer;
				if (f) {
					var g = f;
					if ('function' == typeof e) {
						var h = e;
						e = function () {
							var a = gl(g);
							h.call(a);
						};
					}
					fl(b, g, a, e);
				} else
					g = (function ql(a, b, c, d, e) {
						if (e) {
							if ('function' == typeof d) {
								var f = d;
								d = function () {
									var a = gl(g);
									f.call(a);
								};
							}
							var g = el(b, d, a, 0, null, !1, 0, '', pl);
							return (
								(a._reactRootContainer = g),
								(a[uf] = g.current),
								sf(8 === a.nodeType ? a.parentNode : a),
								Rk(),
								g
							);
						}
						for (; (e = a.lastChild); ) a.removeChild(e);
						if ('function' == typeof d) {
							var h = d;
							d = function () {
								var a = gl(k);
								h.call(a);
							};
						}
						var k = bl(a, 0, !1, null, 0, !1, 0, '', pl);
						return (
							(a._reactRootContainer = k),
							(a[uf] = k.current),
							sf(8 === a.nodeType ? a.parentNode : a),
							Rk(function () {
								fl(b, k, c, d);
							}),
							k
						);
					})(c, b, a, e, d);
				return gl(g);
			}
			(ml.prototype.render = ll.prototype.render =
				function (a) {
					var b = this._internalRoot;
					if (null === b) throw Error(p(409));
					fl(a, b, null, null);
				}),
				(ml.prototype.unmount = ll.prototype.unmount =
					function () {
						var a = this._internalRoot;
						if (null !== a) {
							this._internalRoot = null;
							var b = a.containerInfo;
							Rk(function () {
								fl(null, a, null, null);
							}),
								(b[uf] = null);
						}
					}),
				(ml.prototype.unstable_scheduleHydration = function (a) {
					if (a) {
						var b = Hc();
						a = { blockedOn: null, target: a, priority: b };
						for (
							var c = 0;
							c < Qc.length && 0 !== b && b < Qc[c].priority;
							c++
						);
						Qc.splice(c, 0, a), 0 === c && Vc(a);
					}
				}),
				(Ec = function (a) {
					switch (a.tag) {
						case 3:
							var b = a.stateNode;
							if (b.current.memoizedState.isDehydrated) {
								var c = tc(b.pendingLanes);
								0 !== c &&
									(Cc(b, 1 | c),
									Dk(b, B()),
									0 == (6 & K) && ((Gj = B() + 500), jg()));
							}
							break;
						case 13:
							Rk(function () {
								var b = ih(a, 1);
								if (null !== b) {
									var c = R();
									gi(b, a, 1, c);
								}
							}),
								il(a, 1);
					}
				}),
				(Fc = function (a) {
					if (13 === a.tag) {
						var b = ih(a, 134217728);
						if (null !== b) gi(b, a, 134217728, R());
						il(a, 134217728);
					}
				}),
				(Gc = function (a) {
					if (13 === a.tag) {
						var b = yi(a),
							c = ih(a, b);
						if (null !== c) gi(c, a, b, R());
						il(a, b);
					}
				}),
				(Hc = function () {
					return C;
				}),
				(Ic = function (a, b) {
					var c = C;
					try {
						return (C = a), b();
					} finally {
						C = c;
					}
				}),
				(yb = function (a, b, c) {
					switch (b) {
						case 'input':
							if (
								(bb(a, c),
								(b = c.name),
								'radio' === c.type && null != b)
							) {
								for (c = a; c.parentNode; ) c = c.parentNode;
								for (
									c = c.querySelectorAll(
										'input[name=' +
											JSON.stringify('' + b) +
											'][type="radio"]',
									),
										b = 0;
									b < c.length;
									b++
								) {
									var d = c[b];
									if (d !== a && d.form === a.form) {
										var e = Db(d);
										if (!e) throw Error(p(90));
										Wa(d), bb(d, e);
									}
								}
							}
							break;
						case 'textarea':
							ib(a, c);
							break;
						case 'select':
							null != (b = c.value) && fb(a, !!c.multiple, b, !1);
					}
				}),
				(Gb = Qk),
				(Hb = Rk);
			var sl = {
					usingClientEntryPoint: !1,
					Events: [Cb, ue, Db, Eb, Fb, Qk],
				},
				tl = {
					findFiberByHostInstance: Wc,
					bundleType: 0,
					version: '18.3.1',
					rendererPackageName: 'react-dom',
				},
				ul = {
					bundleType: tl.bundleType,
					version: tl.version,
					rendererPackageName: tl.rendererPackageName,
					rendererConfig: tl.rendererConfig,
					overrideHookState: null,
					overrideHookStateDeletePath: null,
					overrideHookStateRenamePath: null,
					overrideProps: null,
					overridePropsDeletePath: null,
					overridePropsRenamePath: null,
					setErrorHandler: null,
					setSuspenseHandler: null,
					scheduleUpdate: null,
					currentDispatcherRef: ua.ReactCurrentDispatcher,
					findHostInstanceByFiber: function (a) {
						return null === (a = Zb(a)) ? null : a.stateNode;
					},
					findFiberByHostInstance:
						tl.findFiberByHostInstance ||
						function jl() {
							return null;
						},
					findHostInstancesForRefresh: null,
					scheduleRefresh: null,
					scheduleRoot: null,
					setRefreshHandler: null,
					getCurrentFiber: null,
					reconcilerVersion: '18.3.1-next-f1338f8080-20240426',
				};
			if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
				var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
				if (!vl.isDisabled && vl.supportsFiber)
					try {
						(kc = vl.inject(ul)), (lc = vl);
					} catch (a) {}
			}
			(exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl),
				(exports.createPortal = function (a, b) {
					var c =
						2 < arguments.length && void 0 !== arguments[2]
							? arguments[2]
							: null;
					if (!nl(b)) throw Error(p(200));
					return (function cl(a, b, c) {
						var d =
							3 < arguments.length && void 0 !== arguments[3]
								? arguments[3]
								: null;
						return {
							$$typeof: wa,
							key: null == d ? null : '' + d,
							children: a,
							containerInfo: b,
							implementation: c,
						};
					})(a, b, null, c);
				}),
				(exports.createRoot = function (a, b) {
					if (!nl(a)) throw Error(p(299));
					var c = !1,
						d = '',
						e = kl;
					return (
						null != b &&
							(!0 === b.unstable_strictMode && (c = !0),
							void 0 !== b.identifierPrefix &&
								(d = b.identifierPrefix),
							void 0 !== b.onRecoverableError &&
								(e = b.onRecoverableError)),
						(b = bl(a, 1, !1, null, 0, c, 0, d, e)),
						(a[uf] = b.current),
						sf(8 === a.nodeType ? a.parentNode : a),
						new ll(b)
					);
				}),
				(exports.findDOMNode = function (a) {
					if (null == a) return null;
					if (1 === a.nodeType) return a;
					var b = a._reactInternals;
					if (void 0 === b) {
						if ('function' == typeof a.render) throw Error(p(188));
						throw (
							((a = Object.keys(a).join(',')), Error(p(268, a)))
						);
					}
					return (a = null === (a = Zb(b)) ? null : a.stateNode);
				}),
				(exports.flushSync = function (a) {
					return Rk(a);
				}),
				(exports.hydrate = function (a, b, c) {
					if (!ol(b)) throw Error(p(200));
					return rl(null, a, b, !0, c);
				}),
				(exports.hydrateRoot = function (a, b, c) {
					if (!nl(a)) throw Error(p(405));
					var d = (null != c && c.hydratedSources) || null,
						e = !1,
						f = '',
						g = kl;
					if (
						(null != c &&
							(!0 === c.unstable_strictMode && (e = !0),
							void 0 !== c.identifierPrefix &&
								(f = c.identifierPrefix),
							void 0 !== c.onRecoverableError &&
								(g = c.onRecoverableError)),
						(b = el(
							b,
							null,
							a,
							1,
							null != c ? c : null,
							e,
							0,
							f,
							g,
						)),
						(a[uf] = b.current),
						sf(a),
						d)
					)
						for (a = 0; a < d.length; a++)
							(e = (e = (c = d[a])._getVersion)(c._source)),
								null == b.mutableSourceEagerHydrationData
									? (b.mutableSourceEagerHydrationData = [
											c,
											e,
									  ])
									: b.mutableSourceEagerHydrationData.push(
											c,
											e,
									  );
					return new ml(b);
				}),
				(exports.render = function (a, b, c) {
					if (!ol(b)) throw Error(p(200));
					return rl(null, a, b, !1, c);
				}),
				(exports.unmountComponentAtNode = function (a) {
					if (!ol(a)) throw Error(p(40));
					return (
						!!a._reactRootContainer &&
						(Rk(function () {
							rl(null, null, a, !1, function () {
								(a._reactRootContainer = null), (a[uf] = null);
							});
						}),
						!0)
					);
				}),
				(exports.unstable_batchedUpdates = Qk),
				(exports.unstable_renderSubtreeIntoContainer = function (
					a,
					b,
					c,
					d,
				) {
					if (!ol(c)) throw Error(p(200));
					if (null == a || void 0 === a._reactInternals)
						throw Error(p(38));
					return rl(a, b, c, !1, d);
				}),
				(exports.version = '18.3.1-next-f1338f8080-20240426');
		},
		'./node_modules/react-dom/client.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var m = __webpack_require__('./node_modules/react-dom/index.js');
			(exports.createRoot = m.createRoot),
				(exports.hydrateRoot = m.hydrateRoot);
		},
		'./node_modules/react-dom/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			!(function checkDCE() {
				if (
					'undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
					'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
				)
					try {
						__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
					} catch (err) {
						console.error(err);
					}
			})(),
				(module.exports = __webpack_require__(
					'./node_modules/react-dom/cjs/react-dom.production.min.js',
				));
		},
		'./node_modules/react-dom/node_modules/scheduler/cjs/scheduler.production.min.js':
			(__unused_webpack_module, exports) => {
				'use strict';
				function f(a, b) {
					var c = a.length;
					a.push(b);
					a: for (; 0 < c; ) {
						var d = (c - 1) >>> 1,
							e = a[d];
						if (!(0 < g(e, b))) break a;
						(a[d] = b), (a[c] = e), (c = d);
					}
				}
				function h(a) {
					return 0 === a.length ? null : a[0];
				}
				function k(a) {
					if (0 === a.length) return null;
					var b = a[0],
						c = a.pop();
					if (c !== b) {
						a[0] = c;
						a: for (var d = 0, e = a.length, w = e >>> 1; d < w; ) {
							var m = 2 * (d + 1) - 1,
								C = a[m],
								n = m + 1,
								x = a[n];
							if (0 > g(C, c))
								n < e && 0 > g(x, C)
									? ((a[d] = x), (a[n] = c), (d = n))
									: ((a[d] = C), (a[m] = c), (d = m));
							else {
								if (!(n < e && 0 > g(x, c))) break a;
								(a[d] = x), (a[n] = c), (d = n);
							}
						}
					}
					return b;
				}
				function g(a, b) {
					var c = a.sortIndex - b.sortIndex;
					return 0 !== c ? c : a.id - b.id;
				}
				if (
					'object' == typeof performance &&
					'function' == typeof performance.now
				) {
					var l = performance;
					exports.unstable_now = function () {
						return l.now();
					};
				} else {
					var p = Date,
						q = p.now();
					exports.unstable_now = function () {
						return p.now() - q;
					};
				}
				var r = [],
					t = [],
					u = 1,
					v = null,
					y = 3,
					z = !1,
					A = !1,
					B = !1,
					D = 'function' == typeof setTimeout ? setTimeout : null,
					E = 'function' == typeof clearTimeout ? clearTimeout : null,
					F =
						'undefined' != typeof setImmediate
							? setImmediate
							: null;
				function G(a) {
					for (var b = h(t); null !== b; ) {
						if (null === b.callback) k(t);
						else {
							if (!(b.startTime <= a)) break;
							k(t), (b.sortIndex = b.expirationTime), f(r, b);
						}
						b = h(t);
					}
				}
				function H(a) {
					if (((B = !1), G(a), !A))
						if (null !== h(r)) (A = !0), I(J);
						else {
							var b = h(t);
							null !== b && K(H, b.startTime - a);
						}
				}
				function J(a, b) {
					(A = !1), B && ((B = !1), E(L), (L = -1)), (z = !0);
					var c = y;
					try {
						for (
							G(b), v = h(r);
							null !== v &&
							(!(v.expirationTime > b) || (a && !M()));

						) {
							var d = v.callback;
							if ('function' == typeof d) {
								(v.callback = null), (y = v.priorityLevel);
								var e = d(v.expirationTime <= b);
								(b = exports.unstable_now()),
									'function' == typeof e
										? (v.callback = e)
										: v === h(r) && k(r),
									G(b);
							} else k(r);
							v = h(r);
						}
						if (null !== v) var w = !0;
						else {
							var m = h(t);
							null !== m && K(H, m.startTime - b), (w = !1);
						}
						return w;
					} finally {
						(v = null), (y = c), (z = !1);
					}
				}
				'undefined' != typeof navigator &&
					void 0 !== navigator.scheduling &&
					void 0 !== navigator.scheduling.isInputPending &&
					navigator.scheduling.isInputPending.bind(
						navigator.scheduling,
					);
				var S,
					N = !1,
					O = null,
					L = -1,
					P = 5,
					Q = -1;
				function M() {
					return !(exports.unstable_now() - Q < P);
				}
				function R() {
					if (null !== O) {
						var a = exports.unstable_now();
						Q = a;
						var b = !0;
						try {
							b = O(!0, a);
						} finally {
							b ? S() : ((N = !1), (O = null));
						}
					} else N = !1;
				}
				if ('function' == typeof F)
					S = function () {
						F(R);
					};
				else if ('undefined' != typeof MessageChannel) {
					var T = new MessageChannel(),
						U = T.port2;
					(T.port1.onmessage = R),
						(S = function () {
							U.postMessage(null);
						});
				} else
					S = function () {
						D(R, 0);
					};
				function I(a) {
					(O = a), N || ((N = !0), S());
				}
				function K(a, b) {
					L = D(function () {
						a(exports.unstable_now());
					}, b);
				}
				(exports.unstable_IdlePriority = 5),
					(exports.unstable_ImmediatePriority = 1),
					(exports.unstable_LowPriority = 4),
					(exports.unstable_NormalPriority = 3),
					(exports.unstable_Profiling = null),
					(exports.unstable_UserBlockingPriority = 2),
					(exports.unstable_cancelCallback = function (a) {
						a.callback = null;
					}),
					(exports.unstable_continueExecution = function () {
						A || z || ((A = !0), I(J));
					}),
					(exports.unstable_forceFrameRate = function (a) {
						0 > a || 125 < a
							? console.error(
									'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported',
							  )
							: (P = 0 < a ? Math.floor(1e3 / a) : 5);
					}),
					(exports.unstable_getCurrentPriorityLevel = function () {
						return y;
					}),
					(exports.unstable_getFirstCallbackNode = function () {
						return h(r);
					}),
					(exports.unstable_next = function (a) {
						switch (y) {
							case 1:
							case 2:
							case 3:
								var b = 3;
								break;
							default:
								b = y;
						}
						var c = y;
						y = b;
						try {
							return a();
						} finally {
							y = c;
						}
					}),
					(exports.unstable_pauseExecution = function () {}),
					(exports.unstable_requestPaint = function () {}),
					(exports.unstable_runWithPriority = function (a, b) {
						switch (a) {
							case 1:
							case 2:
							case 3:
							case 4:
							case 5:
								break;
							default:
								a = 3;
						}
						var c = y;
						y = a;
						try {
							return b();
						} finally {
							y = c;
						}
					}),
					(exports.unstable_scheduleCallback = function (a, b, c) {
						var d = exports.unstable_now();
						switch (
							('object' == typeof c && null !== c
								? (c =
										'number' == typeof (c = c.delay) &&
										0 < c
											? d + c
											: d)
								: (c = d),
							a)
						) {
							case 1:
								var e = -1;
								break;
							case 2:
								e = 250;
								break;
							case 5:
								e = 1073741823;
								break;
							case 4:
								e = 1e4;
								break;
							default:
								e = 5e3;
						}
						return (
							(a = {
								id: u++,
								callback: b,
								priorityLevel: a,
								startTime: c,
								expirationTime: (e = c + e),
								sortIndex: -1,
							}),
							c > d
								? ((a.sortIndex = c),
								  f(t, a),
								  null === h(r) &&
										a === h(t) &&
										(B ? (E(L), (L = -1)) : (B = !0),
										K(H, c - d)))
								: ((a.sortIndex = e),
								  f(r, a),
								  A || z || ((A = !0), I(J))),
							a
						);
					}),
					(exports.unstable_shouldYield = M),
					(exports.unstable_wrapCallback = function (a) {
						var b = y;
						return function () {
							var c = y;
							y = b;
							try {
								return a.apply(this, arguments);
							} finally {
								y = c;
							}
						};
					});
			},
		'./node_modules/react-dom/node_modules/scheduler/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			module.exports = __webpack_require__(
				'./node_modules/react-dom/node_modules/scheduler/cjs/scheduler.production.min.js',
			);
		},
		'./node_modules/react-element-to-jsx-string/dist/cjs/index.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var isPlainObject = __webpack_require__(
					'./node_modules/react-element-to-jsx-string/node_modules/is-plain-object/dist/is-plain-object.js',
				),
				React = __webpack_require__('./node_modules/react/index.js'),
				prettyPrintObject = __webpack_require__(
					'./node_modules/@base2/pretty-print-object/dist/index.js',
				),
				reactIs = __webpack_require__(
					'./node_modules/react-element-to-jsx-string/node_modules/react-is/index.js',
				);
			function _interopDefaultLegacy(e) {
				return e && 'object' == typeof e && 'default' in e
					? e
					: { default: e };
			}
			function _interopNamespace(e) {
				if (e && e.__esModule) return e;
				var n = Object.create(null);
				return (
					e &&
						Object.keys(e).forEach(function (k) {
							if ('default' !== k) {
								var d = Object.getOwnPropertyDescriptor(e, k);
								Object.defineProperty(
									n,
									k,
									d.get
										? d
										: {
												enumerable: !0,
												get: function () {
													return e[k];
												},
										  },
								);
							}
						}),
					(n.default = e),
					Object.freeze(n)
				);
			}
			var React__namespace = _interopNamespace(React),
				React__default = _interopDefaultLegacy(React),
				spacer = function (times, tabStop) {
					return 0 === times
						? ''
						: new Array(times * tabStop).fill(' ').join('');
				};
			function _typeof(obj) {
				return (
					(_typeof =
						'function' == typeof Symbol &&
						'symbol' == typeof Symbol.iterator
							? function (obj) {
									return typeof obj;
							  }
							: function (obj) {
									return obj &&
										'function' == typeof Symbol &&
										obj.constructor === Symbol &&
										obj !== Symbol.prototype
										? 'symbol'
										: typeof obj;
							  }),
					_typeof(obj)
				);
			}
			function _toConsumableArray(arr) {
				return (
					(function _arrayWithoutHoles(arr) {
						if (Array.isArray(arr)) return _arrayLikeToArray(arr);
					})(arr) ||
					(function _iterableToArray(iter) {
						if (
							('undefined' != typeof Symbol &&
								null != iter[Symbol.iterator]) ||
							null != iter['@@iterator']
						)
							return Array.from(iter);
					})(arr) ||
					(function _unsupportedIterableToArray(o, minLen) {
						if (!o) return;
						if ('string' == typeof o)
							return _arrayLikeToArray(o, minLen);
						var n = Object.prototype.toString.call(o).slice(8, -1);
						'Object' === n &&
							o.constructor &&
							(n = o.constructor.name);
						if ('Map' === n || 'Set' === n) return Array.from(o);
						if (
							'Arguments' === n ||
							/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
						)
							return _arrayLikeToArray(o, minLen);
					})(arr) ||
					(function _nonIterableSpread() {
						throw new TypeError(
							'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
						);
					})()
				);
			}
			function _arrayLikeToArray(arr, len) {
				(null == len || len > arr.length) && (len = arr.length);
				for (var i = 0, arr2 = new Array(len); i < len; i++)
					arr2[i] = arr[i];
				return arr2;
			}
			function safeSortObject(value, seen) {
				return null === value ||
					'object' !== _typeof(value) ||
					value instanceof Date ||
					value instanceof RegExp ||
					React__namespace.isValidElement(value)
					? value
					: (seen.add(value),
					  Array.isArray(value)
							? value.map(function (v) {
									return safeSortObject(v, seen);
							  })
							: Object.keys(value)
									.sort()
									.reduce(function (result, key) {
										return (
											'_owner' === key ||
												('current' === key ||
												seen.has(value[key])
													? (result[key] =
															'[Circular]')
													: (result[key] =
															safeSortObject(
																value[key],
																seen,
															))),
											result
										);
									}, {}));
			}
			function sortObject(value) {
				return safeSortObject(value, new WeakSet());
			}
			var createStringTreeNode = function createStringTreeNode(value) {
					return { type: 'string', value };
				},
				supportFragment = Boolean(React.Fragment),
				getFunctionTypeName = function getFunctionTypeName(
					functionType,
				) {
					return functionType.name && '_default' !== functionType.name
						? functionType.name
						: 'No Display Name';
				},
				getWrappedComponentDisplayName =
					function getWrappedComponentDisplayName(Component) {
						switch (!0) {
							case Boolean(Component.displayName):
								return Component.displayName;
							case Component.$$typeof === reactIs.Memo:
								return getWrappedComponentDisplayName(
									Component.type,
								);
							case Component.$$typeof === reactIs.ForwardRef:
								return getWrappedComponentDisplayName(
									Component.render,
								);
							default:
								return getFunctionTypeName(Component);
						}
					},
				getReactElementDisplayName =
					function getReactElementDisplayName(element) {
						switch (!0) {
							case 'string' == typeof element.type:
								return element.type;
							case 'function' == typeof element.type:
								return element.type.displayName
									? element.type.displayName
									: getFunctionTypeName(element.type);
							case reactIs.isForwardRef(element):
							case reactIs.isMemo(element):
								return getWrappedComponentDisplayName(
									element.type,
								);
							case reactIs.isContextConsumer(element):
								return ''.concat(
									element.type._context.displayName ||
										'Context',
									'.Consumer',
								);
							case reactIs.isContextProvider(element):
								return ''.concat(
									element.type._context.displayName ||
										'Context',
									'.Provider',
								);
							case reactIs.isLazy(element):
								return 'Lazy';
							case reactIs.isProfiler(element):
								return 'Profiler';
							case reactIs.isStrictMode(element):
								return 'StrictMode';
							case reactIs.isSuspense(element):
								return 'Suspense';
							default:
								return 'UnknownElementType';
						}
					},
				noChildren = function noChildren(propsValue, propName) {
					return 'children' !== propName;
				},
				onlyMeaningfulChildren = function onlyMeaningfulChildren(
					children,
				) {
					return (
						!0 !== children &&
						!1 !== children &&
						null !== children &&
						'' !== children
					);
				},
				filterProps = function filterProps(originalProps, cb) {
					var filteredProps = {};
					return (
						Object.keys(originalProps)
							.filter(function (key) {
								return cb(originalProps[key], key);
							})
							.forEach(function (key) {
								return (filteredProps[key] =
									originalProps[key]);
							}),
						filteredProps
					);
				},
				parseReactElement = function parseReactElement(
					element,
					options,
				) {
					var _options$displayName = options.displayName,
						displayNameFn =
							void 0 === _options$displayName
								? getReactElementDisplayName
								: _options$displayName;
					if ('string' == typeof element)
						return createStringTreeNode(element);
					if ('number' == typeof element)
						return (function createNumberTreeNode(value) {
							return { type: 'number', value };
						})(element);
					if (!React__default.default.isValidElement(element))
						throw new Error(
							'react-element-to-jsx-string: Expected a React.Element, got `'.concat(
								_typeof(element),
								'`',
							),
						);
					var displayName = displayNameFn(element),
						props = filterProps(element.props, noChildren);
					null !== element.ref && (props.ref = element.ref);
					var key = element.key;
					'string' == typeof key &&
						key.search(/^\./) &&
						(props.key = key);
					var defaultProps = filterProps(
							element.type.defaultProps || {},
							noChildren,
						),
						childrens = React__default.default.Children.toArray(
							element.props.children,
						)
							.filter(onlyMeaningfulChildren)
							.map(function (child) {
								return parseReactElement(child, options);
							});
					return supportFragment && element.type === React.Fragment
						? (function createReactFragmentTreeNode(
								key,
								childrens,
						  ) {
								return {
									type: 'ReactFragment',
									key,
									childrens,
								};
						  })(key, childrens)
						: (function createReactElementTreeNode(
								displayName,
								props,
								defaultProps,
								childrens,
						  ) {
								return {
									type: 'ReactElement',
									displayName,
									props,
									defaultProps,
									childrens,
								};
						  })(displayName, props, defaultProps, childrens);
				};
			function noRefCheck() {}
			var inlineFunction = function inlineFunction(fn) {
					return fn
						.toString()
						.split('\n')
						.map(function (line) {
							return line.trim();
						})
						.join('');
				},
				defaultFunctionValue = inlineFunction,
				formatFunction = function (fn, options) {
					var _options$functionValu = options.functionValue,
						functionValue =
							void 0 === _options$functionValu
								? defaultFunctionValue
								: _options$functionValu;
					return functionValue(
						options.showFunctions ||
							functionValue !== defaultFunctionValue
							? fn
							: noRefCheck,
					);
				},
				formatPropValue = function formatPropValue(
					propValue,
					inline,
					lvl,
					options,
				) {
					if ('number' == typeof propValue)
						return '{'.concat(String(propValue), '}');
					if ('string' == typeof propValue)
						return '"'.concat(
							(function escape(s) {
								return s.replace(/"/g, '&quot;');
							})(propValue),
							'"',
						);
					if ('symbol' === _typeof(propValue)) {
						var symbolDescription = propValue
							.valueOf()
							.toString()
							.replace(/Symbol\((.*)\)/, '$1');
						return symbolDescription
							? "{Symbol('".concat(symbolDescription, "')}")
							: '{Symbol()}';
					}
					return 'function' == typeof propValue
						? '{'.concat(formatFunction(propValue, options), '}')
						: React.isValidElement(propValue)
						? '{'.concat(
								formatTreeNode(
									parseReactElement(propValue, options),
									!0,
									lvl,
									options,
								),
								'}',
						  )
						: propValue instanceof Date
						? isNaN(propValue.valueOf())
							? '{new Date(NaN)}'
							: '{new Date("'.concat(
									propValue.toISOString(),
									'")}',
							  )
						: isPlainObject.isPlainObject(propValue) ||
						  Array.isArray(propValue)
						? '{'.concat(
								(function (value, inline, lvl, options) {
									var normalizedValue = sortObject(value),
										stringifiedValue =
											prettyPrintObject.prettyPrint(
												normalizedValue,
												{
													transform:
														function transform(
															currentObj,
															prop,
															originalResult,
														) {
															var currentValue =
																currentObj[
																	prop
																];
															return currentValue &&
																React.isValidElement(
																	currentValue,
																)
																? formatTreeNode(
																		parseReactElement(
																			currentValue,
																			options,
																		),
																		!0,
																		lvl,
																		options,
																  )
																: 'function' ==
																  typeof currentValue
																? formatFunction(
																		currentValue,
																		options,
																  )
																: originalResult;
														},
												},
											);
									return inline
										? stringifiedValue
												.replace(/\s+/g, ' ')
												.replace(/{ /g, '{')
												.replace(/ }/g, '}')
												.replace(/\[ /g, '[')
												.replace(/ ]/g, ']')
										: stringifiedValue
												.replace(
													/\t/g,
													spacer(1, options.tabStop),
												)
												.replace(
													/\n([^$])/g,
													'\n'.concat(
														spacer(
															lvl + 1,
															options.tabStop,
														),
														'$1',
													),
												);
								})(propValue, inline, lvl, options),
								'}',
						  )
						: '{'.concat(String(propValue), '}');
				},
				mergeSiblingPlainStringChildrenReducer = function (
					previousNodes,
					currentNode,
				) {
					var nodes = previousNodes.slice(
							0,
							previousNodes.length > 0
								? previousNodes.length - 1
								: 0,
						),
						previousNode = previousNodes[previousNodes.length - 1];
					return (
						!previousNode ||
						('string' !== currentNode.type &&
							'number' !== currentNode.type) ||
						('string' !== previousNode.type &&
							'number' !== previousNode.type)
							? (previousNode && nodes.push(previousNode),
							  nodes.push(currentNode))
							: nodes.push(
									createStringTreeNode(
										String(previousNode.value) +
											String(currentNode.value),
									),
							  ),
						nodes
					);
				};
			var formatOneChildren = function formatOneChildren(
					inline,
					lvl,
					options,
				) {
					return function (element) {
						return (function compensateMultilineStringElementIndentation(
							element,
							formattedElement,
							inline,
							lvl,
							options,
						) {
							var tabStop = options.tabStop;
							return 'string' === element.type
								? formattedElement
										.split('\n')
										.map(function (line, offset) {
											return 0 === offset
												? line
												: ''
														.concat(
															spacer(
																lvl,
																tabStop,
															),
														)
														.concat(line);
										})
										.join('\n')
								: formattedElement;
						})(
							element,
							formatTreeNode(element, inline, lvl, options),
							0,
							lvl,
							options,
						);
					};
				},
				isInlineAttributeTooLong = function isInlineAttributeTooLong(
					attributes,
					inlineAttributeString,
					lvl,
					tabStop,
					maxInlineAttributesLineLength,
				) {
					return maxInlineAttributesLineLength
						? spacer(lvl, tabStop).length +
								inlineAttributeString.length >
								maxInlineAttributesLineLength
						: attributes.length > 1;
				},
				formatReactElementNode = function (node, inline, lvl, options) {
					var type = node.type,
						_node$displayName = node.displayName,
						displayName =
							void 0 === _node$displayName
								? ''
								: _node$displayName,
						childrens = node.childrens,
						_node$props = node.props,
						props = void 0 === _node$props ? {} : _node$props,
						_node$defaultProps = node.defaultProps,
						defaultProps =
							void 0 === _node$defaultProps
								? {}
								: _node$defaultProps;
					if ('ReactElement' !== type)
						throw new Error(
							'The "formatReactElementNode" function could only format node of type "ReactElement". Given:  '.concat(
								type,
							),
						);
					var filterProps = options.filterProps,
						maxInlineAttributesLineLength =
							options.maxInlineAttributesLineLength,
						showDefaultProps = options.showDefaultProps,
						sortProps = options.sortProps,
						tabStop = options.tabStop,
						out = '<'.concat(displayName),
						outInlineAttr = out,
						outMultilineAttr = out,
						containsMultilineAttr = !1,
						visibleAttributeNames = [],
						propFilter = (function createPropFilter(props, filter) {
							return Array.isArray(filter)
								? function (key) {
										return -1 === filter.indexOf(key);
								  }
								: function (key) {
										return filter(props[key], key);
								  };
						})(props, filterProps);
					Object.keys(props)
						.filter(propFilter)
						.filter(
							(function onlyPropsWithOriginalValue(
								defaultProps,
								props,
							) {
								return function (propName) {
									var haveDefaultValue =
										Object.keys(defaultProps).includes(
											propName,
										);
									return (
										!haveDefaultValue ||
										(haveDefaultValue &&
											defaultProps[propName] !==
												props[propName])
									);
								};
							})(defaultProps, props),
						)
						.forEach(function (propName) {
							return visibleAttributeNames.push(propName);
						}),
						Object.keys(defaultProps)
							.filter(propFilter)
							.filter(function () {
								return showDefaultProps;
							})
							.filter(function (defaultPropName) {
								return !visibleAttributeNames.includes(
									defaultPropName,
								);
							})
							.forEach(function (defaultPropName) {
								return visibleAttributeNames.push(
									defaultPropName,
								);
							});
					var shouldSortUserProps,
						attributes = ((shouldSortUserProps = sortProps),
						function (props) {
							var haveKeyProp = props.includes('key'),
								haveRefProp = props.includes('ref'),
								userPropsOnly = props.filter(function (
									oneProp,
								) {
									return !(function isKeyOrRefProps(
										propName,
									) {
										return ['key', 'ref'].includes(
											propName,
										);
									})(oneProp);
								}),
								sortedProps = _toConsumableArray(
									shouldSortUserProps
										? userPropsOnly.sort()
										: userPropsOnly,
								);
							return (
								haveRefProp && sortedProps.unshift('ref'),
								haveKeyProp && sortedProps.unshift('key'),
								sortedProps
							);
						})(visibleAttributeNames);
					if (
						(attributes.forEach(function (attributeName) {
							var _formatProp = (function (
									name,
									hasValue,
									value,
									hasDefaultValue,
									defaultValue,
									inline,
									lvl,
									options,
								) {
									if (!hasValue && !hasDefaultValue)
										throw new Error(
											'The prop "'.concat(
												name,
												'" has no value and no default: could not be formatted',
											),
										);
									var usedValue = hasValue
											? value
											: defaultValue,
										useBooleanShorthandSyntax =
											options.useBooleanShorthandSyntax,
										tabStop = options.tabStop,
										formattedPropValue = formatPropValue(
											usedValue,
											inline,
											lvl,
											options,
										),
										attributeFormattedInline = ' ',
										attributeFormattedMultiline =
											'\n'.concat(
												spacer(lvl + 1, tabStop),
											),
										isMultilineAttribute =
											formattedPropValue.includes('\n');
									return (
										useBooleanShorthandSyntax &&
										'{false}' === formattedPropValue &&
										!hasDefaultValue
											? ((attributeFormattedInline = ''),
											  (attributeFormattedMultiline =
													''))
											: useBooleanShorthandSyntax &&
											  '{true}' === formattedPropValue
											? ((attributeFormattedInline +=
													''.concat(name)),
											  (attributeFormattedMultiline +=
													''.concat(name)))
											: ((attributeFormattedInline += ''
													.concat(name, '=')
													.concat(
														formattedPropValue,
													)),
											  (attributeFormattedMultiline += ''
													.concat(name, '=')
													.concat(
														formattedPropValue,
													))),
										{
											attributeFormattedInline,
											attributeFormattedMultiline,
											isMultilineAttribute,
										}
									);
								})(
									attributeName,
									Object.keys(props).includes(attributeName),
									props[attributeName],
									Object.keys(defaultProps).includes(
										attributeName,
									),
									defaultProps[attributeName],
									inline,
									lvl,
									options,
								),
								attributeFormattedInline =
									_formatProp.attributeFormattedInline,
								attributeFormattedMultiline =
									_formatProp.attributeFormattedMultiline;
							_formatProp.isMultilineAttribute &&
								(containsMultilineAttr = !0),
								(outInlineAttr += attributeFormattedInline),
								(outMultilineAttr +=
									attributeFormattedMultiline);
						}),
						(outMultilineAttr += '\n'.concat(spacer(lvl, tabStop))),
						(out = (function shouldRenderMultilineAttr(
							attributes,
							inlineAttributeString,
							containsMultilineAttr,
							inline,
							lvl,
							tabStop,
							maxInlineAttributesLineLength,
						) {
							return (
								(isInlineAttributeTooLong(
									attributes,
									inlineAttributeString,
									lvl,
									tabStop,
									maxInlineAttributesLineLength,
								) ||
									containsMultilineAttr) &&
								!inline
							);
						})(
							attributes,
							outInlineAttr,
							containsMultilineAttr,
							inline,
							lvl,
							tabStop,
							maxInlineAttributesLineLength,
						)
							? outMultilineAttr
							: outInlineAttr),
						childrens && childrens.length > 0)
					) {
						var newLvl = lvl + 1;
						(out += '>'),
							inline ||
								((out += '\n'),
								(out += spacer(newLvl, tabStop))),
							(out += childrens
								.reduce(
									mergeSiblingPlainStringChildrenReducer,
									[],
								)
								.map(formatOneChildren(inline, newLvl, options))
								.join(
									inline
										? ''
										: '\n'.concat(spacer(newLvl, tabStop)),
								)),
							inline ||
								((out += '\n'),
								(out += spacer(newLvl - 1, tabStop))),
							(out += '</'.concat(displayName, '>'));
					} else
						isInlineAttributeTooLong(
							attributes,
							outInlineAttr,
							lvl,
							tabStop,
							maxInlineAttributesLineLength,
						) || (out += ' '),
							(out += '/>');
					return out;
				},
				formatReactFragmentNode = function (
					node,
					inline,
					lvl,
					options,
				) {
					var displayName,
						type = node.type,
						key = node.key,
						childrens = node.childrens;
					if ('ReactFragment' !== type)
						throw new Error(
							'The "formatReactFragmentNode" function could only format node of type "ReactFragment". Given: '.concat(
								type,
							),
						);
					return (
						(displayName = options.useFragmentShortSyntax
							? (function hasNoChildren(_ref2) {
									return 0 === _ref2.childrens.length;
							  })(node) ||
							  (function isKeyedFragment(_ref) {
									var key = _ref.key;
									return Boolean(key);
							  })(node)
								? 'React.Fragment'
								: ''
							: 'React.Fragment'),
						formatReactElementNode(
							(function toReactElementTreeNode(
								displayName,
								key,
								childrens,
							) {
								var props = {};
								return (
									key && (props = { key }),
									{
										type: 'ReactElement',
										displayName,
										props,
										defaultProps: {},
										childrens,
									}
								);
							})(displayName, key, childrens),
							inline,
							lvl,
							options,
						)
					);
				},
				jsxStopChars = ['<', '>', '{', '}'],
				escape = function escape(s) {
					return (function shouldBeEscaped(s) {
						return jsxStopChars.some(function (jsxStopChar) {
							return s.includes(jsxStopChar);
						});
					})(s)
						? '{`'.concat(s, '`}')
						: s;
				},
				formatTreeNode = function (node, inline, lvl, options) {
					if ('number' === node.type) return String(node.value);
					if ('string' === node.type)
						return node.value
							? ''.concat(
									(function preserveTrailingSpace(s) {
										var result = s;
										return (
											result.endsWith(' ') &&
												(result = result.replace(
													/^(.*?)(\s+)$/,
													"$1{'$2'}",
												)),
											result.startsWith(' ') &&
												(result = result.replace(
													/^(\s+)(.*)$/,
													"{'$1'}$2",
												)),
											result
										);
									})(escape(String(node.value))),
							  )
							: '';
					if ('ReactElement' === node.type)
						return formatReactElementNode(
							node,
							inline,
							lvl,
							options,
						);
					if ('ReactFragment' === node.type)
						return formatReactFragmentNode(
							node,
							inline,
							lvl,
							options,
						);
					throw new TypeError(
						'Unknow format type "'.concat(node.type, '"'),
					);
				};
			exports.ZP = function reactElementToJsxString(element) {
				var _ref =
						arguments.length > 1 && void 0 !== arguments[1]
							? arguments[1]
							: {},
					_ref$filterProps = _ref.filterProps,
					filterProps =
						void 0 === _ref$filterProps ? [] : _ref$filterProps,
					_ref$showDefaultProps = _ref.showDefaultProps,
					showDefaultProps =
						void 0 === _ref$showDefaultProps ||
						_ref$showDefaultProps,
					_ref$showFunctions = _ref.showFunctions,
					showFunctions =
						void 0 !== _ref$showFunctions && _ref$showFunctions,
					functionValue = _ref.functionValue,
					_ref$tabStop = _ref.tabStop,
					tabStop = void 0 === _ref$tabStop ? 2 : _ref$tabStop,
					_ref$useBooleanShorth = _ref.useBooleanShorthandSyntax,
					useBooleanShorthandSyntax =
						void 0 === _ref$useBooleanShorth ||
						_ref$useBooleanShorth,
					_ref$useFragmentShort = _ref.useFragmentShortSyntax,
					useFragmentShortSyntax =
						void 0 === _ref$useFragmentShort ||
						_ref$useFragmentShort,
					_ref$sortProps = _ref.sortProps,
					sortProps = void 0 === _ref$sortProps || _ref$sortProps,
					maxInlineAttributesLineLength =
						_ref.maxInlineAttributesLineLength,
					displayName = _ref.displayName;
				if (!element)
					throw new Error(
						'react-element-to-jsx-string: Expected a ReactElement',
					);
				var options = {
					filterProps,
					showDefaultProps,
					showFunctions,
					functionValue,
					tabStop,
					useBooleanShorthandSyntax,
					useFragmentShortSyntax,
					sortProps,
					maxInlineAttributesLineLength,
					displayName,
				};
				return (function (node, options) {
					return formatTreeNode(node, !1, 0, options);
				})(parseReactElement(element, options), options);
			};
		},
		'./node_modules/react-element-to-jsx-string/node_modules/is-plain-object/dist/is-plain-object.js':
			(__unused_webpack_module, exports) => {
				'use strict';
				function isObject(o) {
					return (
						'[object Object]' === Object.prototype.toString.call(o)
					);
				}
				Object.defineProperty(exports, '__esModule', { value: !0 }),
					(exports.isPlainObject = function isPlainObject(o) {
						var ctor, prot;
						return (
							!1 !== isObject(o) &&
							(void 0 === (ctor = o.constructor) ||
								(!1 !== isObject((prot = ctor.prototype)) &&
									!1 !==
										prot.hasOwnProperty('isPrototypeOf')))
						);
					});
			},
		'./node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.production.min.js':
			(__unused_webpack_module, exports) => {
				'use strict';
				var u,
					b = Symbol.for('react.element'),
					c = Symbol.for('react.portal'),
					d = Symbol.for('react.fragment'),
					e = Symbol.for('react.strict_mode'),
					f = Symbol.for('react.profiler'),
					g = Symbol.for('react.provider'),
					h = Symbol.for('react.context'),
					k = Symbol.for('react.server_context'),
					l = Symbol.for('react.forward_ref'),
					m = Symbol.for('react.suspense'),
					n = Symbol.for('react.suspense_list'),
					p = Symbol.for('react.memo'),
					q = Symbol.for('react.lazy'),
					t = Symbol.for('react.offscreen');
				function v(a) {
					if ('object' == typeof a && null !== a) {
						var r = a.$$typeof;
						switch (r) {
							case b:
								switch ((a = a.type)) {
									case d:
									case f:
									case e:
									case m:
									case n:
										return a;
									default:
										switch ((a = a && a.$$typeof)) {
											case k:
											case h:
											case l:
											case q:
											case p:
											case g:
												return a;
											default:
												return r;
										}
								}
							case c:
								return r;
						}
					}
				}
				(u = Symbol.for('react.module.reference')),
					(exports.ContextConsumer = h),
					(exports.ContextProvider = g),
					(exports.Element = b),
					(exports.ForwardRef = l),
					(exports.Fragment = d),
					(exports.Lazy = q),
					(exports.Memo = p),
					(exports.Portal = c),
					(exports.Profiler = f),
					(exports.StrictMode = e),
					(exports.Suspense = m),
					(exports.SuspenseList = n),
					(exports.isAsyncMode = function () {
						return !1;
					}),
					(exports.isConcurrentMode = function () {
						return !1;
					}),
					(exports.isContextConsumer = function (a) {
						return v(a) === h;
					}),
					(exports.isContextProvider = function (a) {
						return v(a) === g;
					}),
					(exports.isElement = function (a) {
						return (
							'object' == typeof a &&
							null !== a &&
							a.$$typeof === b
						);
					}),
					(exports.isForwardRef = function (a) {
						return v(a) === l;
					}),
					(exports.isFragment = function (a) {
						return v(a) === d;
					}),
					(exports.isLazy = function (a) {
						return v(a) === q;
					}),
					(exports.isMemo = function (a) {
						return v(a) === p;
					}),
					(exports.isPortal = function (a) {
						return v(a) === c;
					}),
					(exports.isProfiler = function (a) {
						return v(a) === f;
					}),
					(exports.isStrictMode = function (a) {
						return v(a) === e;
					}),
					(exports.isSuspense = function (a) {
						return v(a) === m;
					}),
					(exports.isSuspenseList = function (a) {
						return v(a) === n;
					}),
					(exports.isValidElementType = function (a) {
						return (
							'string' == typeof a ||
							'function' == typeof a ||
							a === d ||
							a === f ||
							a === e ||
							a === m ||
							a === n ||
							a === t ||
							('object' == typeof a &&
								null !== a &&
								(a.$$typeof === q ||
									a.$$typeof === p ||
									a.$$typeof === g ||
									a.$$typeof === h ||
									a.$$typeof === l ||
									a.$$typeof === u ||
									void 0 !== a.getModuleId))
						);
					}),
					(exports.typeOf = v);
			},
		'./node_modules/react-element-to-jsx-string/node_modules/react-is/index.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				module.exports = __webpack_require__(
					'./node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.production.min.js',
				);
			},
		'./node_modules/react-router-dom/index.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, { rU: () => Link });
			var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
					'./node_modules/react/index.js',
				),
				react_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
					'./node_modules/react-router/index.js',
				),
				react_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
					'./node_modules/history/index.js',
				);
			function _extends() {
				return (
					(_extends =
						Object.assign ||
						function (target) {
							for (var i = 1; i < arguments.length; i++) {
								var source = arguments[i];
								for (var key in source)
									Object.prototype.hasOwnProperty.call(
										source,
										key,
									) && (target[key] = source[key]);
							}
							return target;
						}),
					_extends.apply(this, arguments)
				);
			}
			function _objectWithoutPropertiesLoose(source, excluded) {
				if (null == source) return {};
				var key,
					i,
					target = {},
					sourceKeys = Object.keys(source);
				for (i = 0; i < sourceKeys.length; i++)
					(key = sourceKeys[i]),
						excluded.indexOf(key) >= 0 ||
							(target[key] = source[key]);
				return target;
			}
			const _excluded = [
				'onClick',
				'reloadDocument',
				'replace',
				'state',
				'target',
				'to',
			];
			const Link = (0, react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(
				function LinkWithRef(_ref4, ref) {
					let {
							onClick,
							reloadDocument,
							replace = !1,
							state,
							target,
							to,
						} = _ref4,
						rest = _objectWithoutPropertiesLoose(_ref4, _excluded),
						href = (0,
						react_router__WEBPACK_IMPORTED_MODULE_1__.oQ)(to),
						internalOnClick = (function useLinkClickHandler(
							to,
							_temp,
						) {
							let {
									target,
									replace: replaceProp,
									state,
								} = void 0 === _temp ? {} : _temp,
								navigate = (0,
								react_router__WEBPACK_IMPORTED_MODULE_1__.s0)(),
								location = (0,
								react_router__WEBPACK_IMPORTED_MODULE_1__.TH)(),
								path = (0,
								react_router__WEBPACK_IMPORTED_MODULE_1__.WU)(
									to,
								);
							return (0,
							react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(
								(event) => {
									if (
										!(
											0 !== event.button ||
											(target && '_self' !== target) ||
											(function isModifiedEvent(event) {
												return !!(
													event.metaKey ||
													event.altKey ||
													event.ctrlKey ||
													event.shiftKey
												);
											})(event)
										)
									) {
										event.preventDefault();
										let replace =
											!!replaceProp ||
											(0,
											react_router__WEBPACK_IMPORTED_MODULE_2__.Ep)(
												location,
											) ===
												(0,
												react_router__WEBPACK_IMPORTED_MODULE_2__.Ep)(
													path,
												);
										navigate(to, { replace, state });
									}
								},
								[
									location,
									navigate,
									path,
									replaceProp,
									state,
									target,
									to,
								],
							);
						})(to, { replace, state, target });
					return (0,
					react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
						'a',
						_extends({}, rest, {
							href,
							onClick: function handleClick(event) {
								onClick && onClick(event),
									event.defaultPrevented ||
										reloadDocument ||
										internalOnClick(event);
							},
							ref,
							target,
						}),
					);
				},
			);
		},
		'./node_modules/react-router/index.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, {
				AW: () => Route,
				Fg: () => Navigate,
				TH: () => useLocation,
				UO: () => useParams,
				VA: () => MemoryRouter,
				WU: () => useResolvedPath,
				Z5: () => Routes,
				j3: () => Outlet,
				oQ: () => useHref,
				s0: () => useNavigate,
			});
			var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
					'./node_modules/react/index.js',
				),
				history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
					'./node_modules/history/index.js',
				);
			function invariant(cond, message) {
				if (!cond) throw new Error(message);
			}
			const NavigationContext = (0,
			react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
			const LocationContext = (0,
			react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
			const RouteContext = (0,
			react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
				outlet: null,
				matches: [],
			});
			function MemoryRouter(_ref) {
				let { basename, children, initialEntries, initialIndex } = _ref,
					historyRef = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
				null == historyRef.current &&
					(historyRef.current = (0,
					history__WEBPACK_IMPORTED_MODULE_1__.PP)({
						initialEntries,
						initialIndex,
					}));
				let history = historyRef.current,
					[state, setState] = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useState)({
						action: history.action,
						location: history.location,
					});
				return (
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(
						() => history.listen(setState),
						[history],
					),
					(0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
						Router,
						{
							basename,
							children,
							location: state.location,
							navigationType: state.action,
							navigator: history,
						},
					)
				);
			}
			function Navigate(_ref2) {
				let { to, replace, state } = _ref2;
				useInRouterContext() || invariant(!1);
				let navigate = useNavigate();
				return (
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
						navigate(to, { replace, state });
					}),
					null
				);
			}
			function Outlet(props) {
				return (function useOutlet(context) {
					let outlet = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						RouteContext,
					).outlet;
					if (outlet)
						return (0,
						react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
							OutletContext.Provider,
							{ value: context },
							outlet,
						);
					return outlet;
				})(props.context);
			}
			function Route(_props) {
				invariant(!1);
			}
			function Router(_ref3) {
				let {
					basename: basenameProp = '/',
					children = null,
					location: locationProp,
					navigationType = history__WEBPACK_IMPORTED_MODULE_1__.aU
						.Pop,
					navigator,
					static: staticProp = !1,
				} = _ref3;
				useInRouterContext() && invariant(!1);
				let basename = normalizePathname(basenameProp),
					navigationContext = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(
						() => ({ basename, navigator, static: staticProp }),
						[basename, navigator, staticProp],
					);
				'string' == typeof locationProp &&
					(locationProp = (0,
					history__WEBPACK_IMPORTED_MODULE_1__.cP)(locationProp));
				let {
						pathname = '/',
						search = '',
						hash = '',
						state = null,
						key = 'default',
					} = locationProp,
					location = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
						let trailingPathname = stripBasename(
							pathname,
							basename,
						);
						return null == trailingPathname
							? null
							: {
									pathname: trailingPathname,
									search,
									hash,
									state,
									key,
							  };
					}, [basename, pathname, search, hash, state, key]);
				return null == location
					? null
					: (0, react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
							NavigationContext.Provider,
							{ value: navigationContext },
							(0,
							react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
								LocationContext.Provider,
								{
									children,
									value: { location, navigationType },
								},
							),
					  );
			}
			function Routes(_ref4) {
				let { children, location } = _ref4;
				return (function useRoutes(routes, locationArg) {
					useInRouterContext() || invariant(!1);
					let { matches: parentMatches } = (0,
						react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
							RouteContext,
						),
						routeMatch = parentMatches[parentMatches.length - 1],
						parentParams = routeMatch ? routeMatch.params : {},
						parentPathnameBase =
							(routeMatch && routeMatch.pathname,
							routeMatch ? routeMatch.pathnameBase : '/');
					routeMatch && routeMatch.route;
					0;
					let location,
						locationFromContext = useLocation();
					if (locationArg) {
						var _parsedLocationArg$pa;
						let parsedLocationArg =
							'string' == typeof locationArg
								? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(
										locationArg,
								  )
								: locationArg;
						'/' === parentPathnameBase ||
							(null ==
							(_parsedLocationArg$pa = parsedLocationArg.pathname)
								? void 0
								: _parsedLocationArg$pa.startsWith(
										parentPathnameBase,
								  )) ||
							invariant(!1),
							(location = parsedLocationArg);
					} else location = locationFromContext;
					let pathname = location.pathname || '/',
						remainingPathname =
							'/' === parentPathnameBase
								? pathname
								: pathname.slice(parentPathnameBase.length) ||
								  '/',
						matches = (function matchRoutes(
							routes,
							locationArg,
							basename,
						) {
							void 0 === basename && (basename = '/');
							let location =
									'string' == typeof locationArg
										? (0,
										  history__WEBPACK_IMPORTED_MODULE_1__.cP)(
												locationArg,
										  )
										: locationArg,
								pathname = stripBasename(
									location.pathname || '/',
									basename,
								);
							if (null == pathname) return null;
							let branches = flattenRoutes(routes);
							!(function rankRouteBranches(branches) {
								branches.sort((a, b) =>
									a.score !== b.score
										? b.score - a.score
										: (function compareIndexes(a, b) {
												let siblings =
													a.length === b.length &&
													a
														.slice(0, -1)
														.every(
															(n, i) =>
																n === b[i],
														);
												return siblings
													? a[a.length - 1] -
															b[b.length - 1]
													: 0;
										  })(
												a.routesMeta.map(
													(meta) =>
														meta.childrenIndex,
												),
												b.routesMeta.map(
													(meta) =>
														meta.childrenIndex,
												),
										  ),
								);
							})(branches);
							let matches = null;
							for (
								let i = 0;
								null == matches && i < branches.length;
								++i
							)
								matches = matchRouteBranch(
									branches[i],
									pathname,
								);
							return matches;
						})(routes, { pathname: remainingPathname });
					0;
					return _renderMatches(
						matches &&
							matches.map((match) =>
								Object.assign({}, match, {
									params: Object.assign(
										{},
										parentParams,
										match.params,
									),
									pathname: joinPaths([
										parentPathnameBase,
										match.pathname,
									]),
									pathnameBase:
										'/' === match.pathnameBase
											? parentPathnameBase
											: joinPaths([
													parentPathnameBase,
													match.pathnameBase,
											  ]),
								}),
							),
						parentMatches,
					);
				})(createRoutesFromChildren(children), location);
			}
			function useHref(to) {
				useInRouterContext() || invariant(!1);
				let { basename, navigator } = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						NavigationContext,
					),
					{ hash, pathname, search } = useResolvedPath(to),
					joinedPathname = pathname;
				if ('/' !== basename) {
					let toPathname = (function getToPathname(to) {
							return '' === to || '' === to.pathname
								? '/'
								: 'string' == typeof to
								? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(
										to,
								  ).pathname
								: to.pathname;
						})(to),
						endsWithSlash =
							null != toPathname && toPathname.endsWith('/');
					joinedPathname =
						'/' === pathname
							? basename + (endsWithSlash ? '/' : '')
							: joinPaths([basename, pathname]);
				}
				return navigator.createHref({
					pathname: joinedPathname,
					search,
					hash,
				});
			}
			function useInRouterContext() {
				return (
					null !=
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						LocationContext,
					)
				);
			}
			function useLocation() {
				return (
					useInRouterContext() || invariant(!1),
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						LocationContext,
					).location
				);
			}
			function useNavigate() {
				useInRouterContext() || invariant(!1);
				let { basename, navigator } = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						NavigationContext,
					),
					{ matches } = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						RouteContext,
					),
					{ pathname: locationPathname } = useLocation(),
					routePathnamesJson = JSON.stringify(
						matches.map((match) => match.pathnameBase),
					),
					activeRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(
						!1,
					);
				return (
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
						activeRef.current = !0;
					}),
					(0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(
						function (to, options) {
							if (
								(void 0 === options && (options = {}),
								!activeRef.current)
							)
								return;
							if ('number' == typeof to)
								return void navigator.go(to);
							let path = resolveTo(
								to,
								JSON.parse(routePathnamesJson),
								locationPathname,
							);
							'/' !== basename &&
								(path.pathname = joinPaths([
									basename,
									path.pathname,
								])),
								(options.replace
									? navigator.replace
									: navigator.push)(path, options.state);
						},
						[
							basename,
							navigator,
							routePathnamesJson,
							locationPathname,
						],
					)
				);
			}
			const OutletContext = (0,
			react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
			function useParams() {
				let { matches } = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						RouteContext,
					),
					routeMatch = matches[matches.length - 1];
				return routeMatch ? routeMatch.params : {};
			}
			function useResolvedPath(to) {
				let { matches } = (0,
					react__WEBPACK_IMPORTED_MODULE_0__.useContext)(
						RouteContext,
					),
					{ pathname: locationPathname } = useLocation(),
					routePathnamesJson = JSON.stringify(
						matches.map((match) => match.pathnameBase),
					);
				return (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(
					() =>
						resolveTo(
							to,
							JSON.parse(routePathnamesJson),
							locationPathname,
						),
					[to, routePathnamesJson, locationPathname],
				);
			}
			function createRoutesFromChildren(children) {
				let routes = [];
				return (
					react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(
						children,
						(element) => {
							if (
								!(0,
								react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(
									element,
								)
							)
								return;
							if (
								element.type ===
								react__WEBPACK_IMPORTED_MODULE_0__.Fragment
							)
								return void routes.push.apply(
									routes,
									createRoutesFromChildren(
										element.props.children,
									),
								);
							element.type !== Route && invariant(!1);
							let route = {
								caseSensitive: element.props.caseSensitive,
								element: element.props.element,
								index: element.props.index,
								path: element.props.path,
							};
							element.props.children &&
								(route.children = createRoutesFromChildren(
									element.props.children,
								)),
								routes.push(route);
						},
					),
					routes
				);
			}
			function flattenRoutes(routes, branches, parentsMeta, parentPath) {
				return (
					void 0 === branches && (branches = []),
					void 0 === parentsMeta && (parentsMeta = []),
					void 0 === parentPath && (parentPath = ''),
					routes.forEach((route, index) => {
						let meta = {
							relativePath: route.path || '',
							caseSensitive: !0 === route.caseSensitive,
							childrenIndex: index,
							route,
						};
						meta.relativePath.startsWith('/') &&
							(meta.relativePath.startsWith(parentPath) ||
								invariant(!1),
							(meta.relativePath = meta.relativePath.slice(
								parentPath.length,
							)));
						let path = joinPaths([parentPath, meta.relativePath]),
							routesMeta = parentsMeta.concat(meta);
						route.children &&
							route.children.length > 0 &&
							(!0 === route.index && invariant(!1),
							flattenRoutes(
								route.children,
								branches,
								routesMeta,
								path,
							)),
							(null != route.path || route.index) &&
								branches.push({
									path,
									score: computeScore(path, route.index),
									routesMeta,
								});
					}),
					branches
				);
			}
			const paramRe = /^:\w+$/,
				dynamicSegmentValue = 3,
				indexRouteValue = 2,
				emptySegmentValue = 1,
				staticSegmentValue = 10,
				splatPenalty = -2,
				isSplat = (s) => '*' === s;
			function computeScore(path, index) {
				let segments = path.split('/'),
					initialScore = segments.length;
				return (
					segments.some(isSplat) && (initialScore += splatPenalty),
					index && (initialScore += indexRouteValue),
					segments
						.filter((s) => !isSplat(s))
						.reduce(
							(score, segment) =>
								score +
								(paramRe.test(segment)
									? dynamicSegmentValue
									: '' === segment
									? emptySegmentValue
									: staticSegmentValue),
							initialScore,
						)
				);
			}
			function matchRouteBranch(branch, pathname) {
				let { routesMeta } = branch,
					matchedParams = {},
					matchedPathname = '/',
					matches = [];
				for (let i = 0; i < routesMeta.length; ++i) {
					let meta = routesMeta[i],
						end = i === routesMeta.length - 1,
						remainingPathname =
							'/' === matchedPathname
								? pathname
								: pathname.slice(matchedPathname.length) || '/',
						match = matchPath(
							{
								path: meta.relativePath,
								caseSensitive: meta.caseSensitive,
								end,
							},
							remainingPathname,
						);
					if (!match) return null;
					Object.assign(matchedParams, match.params);
					let route = meta.route;
					matches.push({
						params: matchedParams,
						pathname: joinPaths([matchedPathname, match.pathname]),
						pathnameBase: normalizePathname(
							joinPaths([matchedPathname, match.pathnameBase]),
						),
						route,
					}),
						'/' !== match.pathnameBase &&
							(matchedPathname = joinPaths([
								matchedPathname,
								match.pathnameBase,
							]));
				}
				return matches;
			}
			function _renderMatches(matches, parentMatches) {
				return (
					void 0 === parentMatches && (parentMatches = []),
					null == matches
						? null
						: matches.reduceRight(
								(outlet, match, index) =>
									(0,
									react__WEBPACK_IMPORTED_MODULE_0__.createElement)(
										RouteContext.Provider,
										{
											children:
												void 0 !== match.route.element
													? match.route.element
													: outlet,
											value: {
												outlet,
												matches: parentMatches.concat(
													matches.slice(0, index + 1),
												),
											},
										},
									),
								null,
						  )
				);
			}
			function matchPath(pattern, pathname) {
				'string' == typeof pattern &&
					(pattern = { path: pattern, caseSensitive: !1, end: !0 });
				let [matcher, paramNames] = (function compilePath(
						path,
						caseSensitive,
						end,
					) {
						void 0 === caseSensitive && (caseSensitive = !1);
						void 0 === end && (end = !0);
						let paramNames = [],
							regexpSource =
								'^' +
								path
									.replace(/\/*\*?$/, '')
									.replace(/^\/*/, '/')
									.replace(/[\\.*+^$?{}|()[\]]/g, '\\$&')
									.replace(
										/:(\w+)/g,
										(_, paramName) => (
											paramNames.push(paramName),
											'([^\\/]+)'
										),
									);
						path.endsWith('*')
							? (paramNames.push('*'),
							  (regexpSource +=
									'*' === path || '/*' === path
										? '(.*)$'
										: '(?:\\/(.+)|\\/*)$'))
							: (regexpSource += end
									? '\\/*$'
									: '(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)');
						let matcher = new RegExp(
							regexpSource,
							caseSensitive ? void 0 : 'i',
						);
						return [matcher, paramNames];
					})(pattern.path, pattern.caseSensitive, pattern.end),
					match = pathname.match(matcher);
				if (!match) return null;
				let matchedPathname = match[0],
					pathnameBase = matchedPathname.replace(/(.)\/+$/, '$1'),
					captureGroups = match.slice(1);
				return {
					params: paramNames.reduce((memo, paramName, index) => {
						if ('*' === paramName) {
							let splatValue = captureGroups[index] || '';
							pathnameBase = matchedPathname
								.slice(
									0,
									matchedPathname.length - splatValue.length,
								)
								.replace(/(.)\/+$/, '$1');
						}
						return (
							(memo[paramName] =
								(function safelyDecodeURIComponent(
									value,
									paramName,
								) {
									try {
										return decodeURIComponent(value);
									} catch (error) {
										return value;
									}
								})(captureGroups[index] || '')),
							memo
						);
					}, {}),
					pathname: matchedPathname,
					pathnameBase,
					pattern,
				};
			}
			function resolveTo(toArg, routePathnames, locationPathname) {
				let from,
					to =
						'string' == typeof toArg
							? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(
									toArg,
							  )
							: toArg,
					toPathname =
						'' === toArg || '' === to.pathname ? '/' : to.pathname;
				if (null == toPathname) from = locationPathname;
				else {
					let routePathnameIndex = routePathnames.length - 1;
					if (toPathname.startsWith('..')) {
						let toSegments = toPathname.split('/');
						for (; '..' === toSegments[0]; )
							toSegments.shift(), (routePathnameIndex -= 1);
						to.pathname = toSegments.join('/');
					}
					from =
						routePathnameIndex >= 0
							? routePathnames[routePathnameIndex]
							: '/';
				}
				let path = (function resolvePath(to, fromPathname) {
					void 0 === fromPathname && (fromPathname = '/');
					let {
							pathname: toPathname,
							search = '',
							hash = '',
						} = 'string' == typeof to
							? (0, history__WEBPACK_IMPORTED_MODULE_1__.cP)(to)
							: to,
						pathname = toPathname
							? toPathname.startsWith('/')
								? toPathname
								: (function resolvePathname(
										relativePath,
										fromPathname,
								  ) {
										let segments = fromPathname
											.replace(/\/+$/, '')
											.split('/');
										return (
											relativePath
												.split('/')
												.forEach((segment) => {
													'..' === segment
														? segments.length > 1 &&
														  segments.pop()
														: '.' !== segment &&
														  segments.push(
																segment,
														  );
												}),
											segments.length > 1
												? segments.join('/')
												: '/'
										);
								  })(toPathname, fromPathname)
							: fromPathname;
					return {
						pathname,
						search: normalizeSearch(search),
						hash: normalizeHash(hash),
					};
				})(to, from);
				return (
					toPathname &&
						'/' !== toPathname &&
						toPathname.endsWith('/') &&
						!path.pathname.endsWith('/') &&
						(path.pathname += '/'),
					path
				);
			}
			function stripBasename(pathname, basename) {
				if ('/' === basename) return pathname;
				if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
					return null;
				let nextChar = pathname.charAt(basename.length);
				return nextChar && '/' !== nextChar
					? null
					: pathname.slice(basename.length) || '/';
			}
			const joinPaths = (paths) => paths.join('/').replace(/\/\/+/g, '/'),
				normalizePathname = (pathname) =>
					pathname.replace(/\/+$/, '').replace(/^\/*/, '/'),
				normalizeSearch = (search) =>
					search && '?' !== search
						? search.startsWith('?')
							? search
							: '?' + search
						: '',
				normalizeHash = (hash) =>
					hash && '#' !== hash
						? hash.startsWith('#')
							? hash
							: '#' + hash
						: '';
		},
		'./node_modules/react/cjs/react-jsx-runtime.production.min.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var f = __webpack_require__('./node_modules/react/index.js'),
				k = Symbol.for('react.element'),
				l = Symbol.for('react.fragment'),
				m = Object.prototype.hasOwnProperty,
				n =
					f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
						.ReactCurrentOwner,
				p = { key: !0, ref: !0, __self: !0, __source: !0 };
			function q(c, a, g) {
				var b,
					d = {},
					e = null,
					h = null;
				for (b in (void 0 !== g && (e = '' + g),
				void 0 !== a.key && (e = '' + a.key),
				void 0 !== a.ref && (h = a.ref),
				a))
					m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
				if (c && c.defaultProps)
					for (b in (a = c.defaultProps))
						void 0 === d[b] && (d[b] = a[b]);
				return {
					$$typeof: k,
					type: c,
					key: e,
					ref: h,
					props: d,
					_owner: n.current,
				};
			}
			(exports.Fragment = l), (exports.jsx = q), (exports.jsxs = q);
		},
		'./node_modules/react/cjs/react.production.min.js': (
			__unused_webpack_module,
			exports,
		) => {
			'use strict';
			var l = Symbol.for('react.element'),
				n = Symbol.for('react.portal'),
				p = Symbol.for('react.fragment'),
				q = Symbol.for('react.strict_mode'),
				r = Symbol.for('react.profiler'),
				t = Symbol.for('react.provider'),
				u = Symbol.for('react.context'),
				v = Symbol.for('react.forward_ref'),
				w = Symbol.for('react.suspense'),
				x = Symbol.for('react.memo'),
				y = Symbol.for('react.lazy'),
				z = Symbol.iterator;
			var B = {
					isMounted: function () {
						return !1;
					},
					enqueueForceUpdate: function () {},
					enqueueReplaceState: function () {},
					enqueueSetState: function () {},
				},
				C = Object.assign,
				D = {};
			function E(a, b, e) {
				(this.props = a),
					(this.context = b),
					(this.refs = D),
					(this.updater = e || B);
			}
			function F() {}
			function G(a, b, e) {
				(this.props = a),
					(this.context = b),
					(this.refs = D),
					(this.updater = e || B);
			}
			(E.prototype.isReactComponent = {}),
				(E.prototype.setState = function (a, b) {
					if (
						'object' != typeof a &&
						'function' != typeof a &&
						null != a
					)
						throw Error(
							'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
						);
					this.updater.enqueueSetState(this, a, b, 'setState');
				}),
				(E.prototype.forceUpdate = function (a) {
					this.updater.enqueueForceUpdate(this, a, 'forceUpdate');
				}),
				(F.prototype = E.prototype);
			var H = (G.prototype = new F());
			(H.constructor = G),
				C(H, E.prototype),
				(H.isPureReactComponent = !0);
			var I = Array.isArray,
				J = Object.prototype.hasOwnProperty,
				K = { current: null },
				L = { key: !0, ref: !0, __self: !0, __source: !0 };
			function M(a, b, e) {
				var d,
					c = {},
					k = null,
					h = null;
				if (null != b)
					for (d in (void 0 !== b.ref && (h = b.ref),
					void 0 !== b.key && (k = '' + b.key),
					b))
						J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
				var g = arguments.length - 2;
				if (1 === g) c.children = e;
				else if (1 < g) {
					for (var f = Array(g), m = 0; m < g; m++)
						f[m] = arguments[m + 2];
					c.children = f;
				}
				if (a && a.defaultProps)
					for (d in (g = a.defaultProps))
						void 0 === c[d] && (c[d] = g[d]);
				return {
					$$typeof: l,
					type: a,
					key: k,
					ref: h,
					props: c,
					_owner: K.current,
				};
			}
			function O(a) {
				return 'object' == typeof a && null !== a && a.$$typeof === l;
			}
			var P = /\/+/g;
			function Q(a, b) {
				return 'object' == typeof a && null !== a && null != a.key
					? (function escape(a) {
							var b = { '=': '=0', ':': '=2' };
							return (
								'$' +
								a.replace(/[=:]/g, function (a) {
									return b[a];
								})
							);
					  })('' + a.key)
					: b.toString(36);
			}
			function R(a, b, e, d, c) {
				var k = typeof a;
				('undefined' !== k && 'boolean' !== k) || (a = null);
				var h = !1;
				if (null === a) h = !0;
				else
					switch (k) {
						case 'string':
						case 'number':
							h = !0;
							break;
						case 'object':
							switch (a.$$typeof) {
								case l:
								case n:
									h = !0;
							}
					}
				if (h)
					return (
						(c = c((h = a))),
						(a = '' === d ? '.' + Q(h, 0) : d),
						I(c)
							? ((e = ''),
							  null != a && (e = a.replace(P, '$&/') + '/'),
							  R(c, b, e, '', function (a) {
									return a;
							  }))
							: null != c &&
							  (O(c) &&
									(c = (function N(a, b) {
										return {
											$$typeof: l,
											type: a.type,
											key: b,
											ref: a.ref,
											props: a.props,
											_owner: a._owner,
										};
									})(
										c,
										e +
											(!c.key || (h && h.key === c.key)
												? ''
												: ('' + c.key).replace(
														P,
														'$&/',
												  ) + '/') +
											a,
									)),
							  b.push(c)),
						1
					);
				if (((h = 0), (d = '' === d ? '.' : d + ':'), I(a)))
					for (var g = 0; g < a.length; g++) {
						var f = d + Q((k = a[g]), g);
						h += R(k, b, e, f, c);
					}
				else if (
					((f = (function A(a) {
						return null === a || 'object' != typeof a
							? null
							: 'function' ==
							  typeof (a = (z && a[z]) || a['@@iterator'])
							? a
							: null;
					})(a)),
					'function' == typeof f)
				)
					for (a = f.call(a), g = 0; !(k = a.next()).done; )
						h += R((k = k.value), b, e, (f = d + Q(k, g++)), c);
				else if ('object' === k)
					throw (
						((b = String(a)),
						Error(
							'Objects are not valid as a React child (found: ' +
								('[object Object]' === b
									? 'object with keys {' +
									  Object.keys(a).join(', ') +
									  '}'
									: b) +
								'). If you meant to render a collection of children, use an array instead.',
						))
					);
				return h;
			}
			function S(a, b, e) {
				if (null == a) return a;
				var d = [],
					c = 0;
				return (
					R(a, d, '', '', function (a) {
						return b.call(e, a, c++);
					}),
					d
				);
			}
			function T(a) {
				if (-1 === a._status) {
					var b = a._result;
					(b = b()).then(
						function (b) {
							(0 !== a._status && -1 !== a._status) ||
								((a._status = 1), (a._result = b));
						},
						function (b) {
							(0 !== a._status && -1 !== a._status) ||
								((a._status = 2), (a._result = b));
						},
					),
						-1 === a._status && ((a._status = 0), (a._result = b));
				}
				if (1 === a._status) return a._result.default;
				throw a._result;
			}
			var U = { current: null },
				V = { transition: null },
				W = {
					ReactCurrentDispatcher: U,
					ReactCurrentBatchConfig: V,
					ReactCurrentOwner: K,
				};
			function X() {
				throw Error(
					'act(...) is not supported in production builds of React.',
				);
			}
			(exports.Children = {
				map: S,
				forEach: function (a, b, e) {
					S(
						a,
						function () {
							b.apply(this, arguments);
						},
						e,
					);
				},
				count: function (a) {
					var b = 0;
					return (
						S(a, function () {
							b++;
						}),
						b
					);
				},
				toArray: function (a) {
					return (
						S(a, function (a) {
							return a;
						}) || []
					);
				},
				only: function (a) {
					if (!O(a))
						throw Error(
							'React.Children.only expected to receive a single React element child.',
						);
					return a;
				},
			}),
				(exports.Component = E),
				(exports.Fragment = p),
				(exports.Profiler = r),
				(exports.PureComponent = G),
				(exports.StrictMode = q),
				(exports.Suspense = w),
				(exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED =
					W),
				(exports.act = X),
				(exports.cloneElement = function (a, b, e) {
					if (null == a)
						throw Error(
							'React.cloneElement(...): The argument must be a React element, but you passed ' +
								a +
								'.',
						);
					var d = C({}, a.props),
						c = a.key,
						k = a.ref,
						h = a._owner;
					if (null != b) {
						if (
							(void 0 !== b.ref && ((k = b.ref), (h = K.current)),
							void 0 !== b.key && (c = '' + b.key),
							a.type && a.type.defaultProps)
						)
							var g = a.type.defaultProps;
						for (f in b)
							J.call(b, f) &&
								!L.hasOwnProperty(f) &&
								(d[f] =
									void 0 === b[f] && void 0 !== g
										? g[f]
										: b[f]);
					}
					var f = arguments.length - 2;
					if (1 === f) d.children = e;
					else if (1 < f) {
						g = Array(f);
						for (var m = 0; m < f; m++) g[m] = arguments[m + 2];
						d.children = g;
					}
					return {
						$$typeof: l,
						type: a.type,
						key: c,
						ref: k,
						props: d,
						_owner: h,
					};
				}),
				(exports.createContext = function (a) {
					return (
						((a = {
							$$typeof: u,
							_currentValue: a,
							_currentValue2: a,
							_threadCount: 0,
							Provider: null,
							Consumer: null,
							_defaultValue: null,
							_globalName: null,
						}).Provider = { $$typeof: t, _context: a }),
						(a.Consumer = a)
					);
				}),
				(exports.createElement = M),
				(exports.createFactory = function (a) {
					var b = M.bind(null, a);
					return (b.type = a), b;
				}),
				(exports.createRef = function () {
					return { current: null };
				}),
				(exports.forwardRef = function (a) {
					return { $$typeof: v, render: a };
				}),
				(exports.isValidElement = O),
				(exports.lazy = function (a) {
					return {
						$$typeof: y,
						_payload: { _status: -1, _result: a },
						_init: T,
					};
				}),
				(exports.memo = function (a, b) {
					return {
						$$typeof: x,
						type: a,
						compare: void 0 === b ? null : b,
					};
				}),
				(exports.startTransition = function (a) {
					var b = V.transition;
					V.transition = {};
					try {
						a();
					} finally {
						V.transition = b;
					}
				}),
				(exports.unstable_act = X),
				(exports.useCallback = function (a, b) {
					return U.current.useCallback(a, b);
				}),
				(exports.useContext = function (a) {
					return U.current.useContext(a);
				}),
				(exports.useDebugValue = function () {}),
				(exports.useDeferredValue = function (a) {
					return U.current.useDeferredValue(a);
				}),
				(exports.useEffect = function (a, b) {
					return U.current.useEffect(a, b);
				}),
				(exports.useId = function () {
					return U.current.useId();
				}),
				(exports.useImperativeHandle = function (a, b, e) {
					return U.current.useImperativeHandle(a, b, e);
				}),
				(exports.useInsertionEffect = function (a, b) {
					return U.current.useInsertionEffect(a, b);
				}),
				(exports.useLayoutEffect = function (a, b) {
					return U.current.useLayoutEffect(a, b);
				}),
				(exports.useMemo = function (a, b) {
					return U.current.useMemo(a, b);
				}),
				(exports.useReducer = function (a, b, e) {
					return U.current.useReducer(a, b, e);
				}),
				(exports.useRef = function (a) {
					return U.current.useRef(a);
				}),
				(exports.useState = function (a) {
					return U.current.useState(a);
				}),
				(exports.useSyncExternalStore = function (a, b, e) {
					return U.current.useSyncExternalStore(a, b, e);
				}),
				(exports.useTransition = function () {
					return U.current.useTransition();
				}),
				(exports.version = '18.3.1');
		},
		'./node_modules/react/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			module.exports = __webpack_require__(
				'./node_modules/react/cjs/react.production.min.js',
			);
		},
		'./node_modules/react/jsx-runtime.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			module.exports = __webpack_require__(
				'./node_modules/react/cjs/react-jsx-runtime.production.min.js',
			);
		},
		'./node_modules/side-channel/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				callBound = __webpack_require__(
					'./node_modules/side-channel/node_modules/call-bind/callBound.js',
				),
				inspect = __webpack_require__(
					'./node_modules/side-channel/node_modules/object-inspect/index.js',
				),
				$TypeError = GetIntrinsic('%TypeError%'),
				$WeakMap = GetIntrinsic('%WeakMap%', !0),
				$Map = GetIntrinsic('%Map%', !0),
				$weakMapGet = callBound('WeakMap.prototype.get', !0),
				$weakMapSet = callBound('WeakMap.prototype.set', !0),
				$weakMapHas = callBound('WeakMap.prototype.has', !0),
				$mapGet = callBound('Map.prototype.get', !0),
				$mapSet = callBound('Map.prototype.set', !0),
				$mapHas = callBound('Map.prototype.has', !0),
				listGetNode = function (list, key) {
					for (
						var curr, prev = list;
						null !== (curr = prev.next);
						prev = curr
					)
						if (curr.key === key)
							return (
								(prev.next = curr.next),
								(curr.next = list.next),
								(list.next = curr),
								curr
							);
				};
			module.exports = function getSideChannel() {
				var $wm,
					$m,
					$o,
					channel = {
						assert: function (key) {
							if (!channel.has(key))
								throw new $TypeError(
									'Side channel does not contain ' +
										inspect(key),
								);
						},
						get: function (key) {
							if (
								$WeakMap &&
								key &&
								('object' == typeof key ||
									'function' == typeof key)
							) {
								if ($wm) return $weakMapGet($wm, key);
							} else if ($Map) {
								if ($m) return $mapGet($m, key);
							} else if ($o)
								return (function (objects, key) {
									var node = listGetNode(objects, key);
									return node && node.value;
								})($o, key);
						},
						has: function (key) {
							if (
								$WeakMap &&
								key &&
								('object' == typeof key ||
									'function' == typeof key)
							) {
								if ($wm) return $weakMapHas($wm, key);
							} else if ($Map) {
								if ($m) return $mapHas($m, key);
							} else if ($o)
								return (function (objects, key) {
									return !!listGetNode(objects, key);
								})($o, key);
							return !1;
						},
						set: function (key, value) {
							$WeakMap &&
							key &&
							('object' == typeof key || 'function' == typeof key)
								? ($wm || ($wm = new $WeakMap()),
								  $weakMapSet($wm, key, value))
								: $Map
								? ($m || ($m = new $Map()),
								  $mapSet($m, key, value))
								: ($o || ($o = { key: {}, next: null }),
								  (function (objects, key, value) {
										var node = listGetNode(objects, key);
										node
											? (node.value = value)
											: (objects.next = {
													key,
													next: objects.next,
													value,
											  });
								  })($o, key, value));
						},
					};
				return channel;
			};
		},
		'./node_modules/side-channel/node_modules/call-bind/callBound.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/side-channel/node_modules/call-bind/index.js',
				),
				$indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
			module.exports = function callBoundIntrinsic(name, allowMissing) {
				var intrinsic = GetIntrinsic(name, !!allowMissing);
				return 'function' == typeof intrinsic &&
					$indexOf(name, '.prototype.') > -1
					? callBind(intrinsic)
					: intrinsic;
			};
		},
		'./node_modules/side-channel/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/side-channel/node_modules/object-inspect/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			var hasMap = 'function' == typeof Map && Map.prototype,
				mapSizeDescriptor =
					Object.getOwnPropertyDescriptor && hasMap
						? Object.getOwnPropertyDescriptor(Map.prototype, 'size')
						: null,
				mapSize =
					hasMap &&
					mapSizeDescriptor &&
					'function' == typeof mapSizeDescriptor.get
						? mapSizeDescriptor.get
						: null,
				mapForEach = hasMap && Map.prototype.forEach,
				hasSet = 'function' == typeof Set && Set.prototype,
				setSizeDescriptor =
					Object.getOwnPropertyDescriptor && hasSet
						? Object.getOwnPropertyDescriptor(Set.prototype, 'size')
						: null,
				setSize =
					hasSet &&
					setSizeDescriptor &&
					'function' == typeof setSizeDescriptor.get
						? setSizeDescriptor.get
						: null,
				setForEach = hasSet && Set.prototype.forEach,
				weakMapHas =
					'function' == typeof WeakMap && WeakMap.prototype
						? WeakMap.prototype.has
						: null,
				weakSetHas =
					'function' == typeof WeakSet && WeakSet.prototype
						? WeakSet.prototype.has
						: null,
				weakRefDeref =
					'function' == typeof WeakRef && WeakRef.prototype
						? WeakRef.prototype.deref
						: null,
				booleanValueOf = Boolean.prototype.valueOf,
				objectToString = Object.prototype.toString,
				functionToString = Function.prototype.toString,
				$match = String.prototype.match,
				$slice = String.prototype.slice,
				$replace = String.prototype.replace,
				$toUpperCase = String.prototype.toUpperCase,
				$toLowerCase = String.prototype.toLowerCase,
				$test = RegExp.prototype.test,
				$concat = Array.prototype.concat,
				$join = Array.prototype.join,
				$arrSlice = Array.prototype.slice,
				$floor = Math.floor,
				bigIntValueOf =
					'function' == typeof BigInt
						? BigInt.prototype.valueOf
						: null,
				gOPS = Object.getOwnPropertySymbols,
				symToString =
					'function' == typeof Symbol &&
					'symbol' == typeof Symbol.iterator
						? Symbol.prototype.toString
						: null,
				hasShammedSymbols =
					'function' == typeof Symbol &&
					'object' == typeof Symbol.iterator,
				toStringTag =
					'function' == typeof Symbol &&
					Symbol.toStringTag &&
					(typeof Symbol.toStringTag === hasShammedSymbols ||
						'symbol')
						? Symbol.toStringTag
						: null,
				isEnumerable = Object.prototype.propertyIsEnumerable,
				gPO =
					('function' == typeof Reflect
						? Reflect.getPrototypeOf
						: Object.getPrototypeOf) ||
					([].__proto__ === Array.prototype
						? function (O) {
								return O.__proto__;
						  }
						: null);
			function addNumericSeparator(num, str) {
				if (
					num === 1 / 0 ||
					num === -1 / 0 ||
					num != num ||
					(num && num > -1e3 && num < 1e3) ||
					$test.call(/e/, str)
				)
					return str;
				var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
				if ('number' == typeof num) {
					var int = num < 0 ? -$floor(-num) : $floor(num);
					if (int !== num) {
						var intStr = String(int),
							dec = $slice.call(str, intStr.length + 1);
						return (
							$replace.call(intStr, sepRegex, '$&_') +
							'.' +
							$replace.call(
								$replace.call(dec, /([0-9]{3})/g, '$&_'),
								/_$/,
								'',
							)
						);
					}
				}
				return $replace.call(str, sepRegex, '$&_');
			}
			var utilInspect = __webpack_require__('?b1b0'),
				inspectCustom = utilInspect.custom,
				inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
			function wrapQuotes(s, defaultStyle, opts) {
				var quoteChar =
					'double' === (opts.quoteStyle || defaultStyle) ? '"' : "'";
				return quoteChar + s + quoteChar;
			}
			function quote(s) {
				return $replace.call(String(s), /"/g, '&quot;');
			}
			function isArray(obj) {
				return !(
					'[object Array]' !== toStr(obj) ||
					(toStringTag &&
						'object' == typeof obj &&
						toStringTag in obj)
				);
			}
			function isRegExp(obj) {
				return !(
					'[object RegExp]' !== toStr(obj) ||
					(toStringTag &&
						'object' == typeof obj &&
						toStringTag in obj)
				);
			}
			function isSymbol(obj) {
				if (hasShammedSymbols)
					return (
						obj && 'object' == typeof obj && obj instanceof Symbol
					);
				if ('symbol' == typeof obj) return !0;
				if (!obj || 'object' != typeof obj || !symToString) return !1;
				try {
					return symToString.call(obj), !0;
				} catch (e) {}
				return !1;
			}
			module.exports = function inspect_(obj, options, depth, seen) {
				var opts = options || {};
				if (
					has(opts, 'quoteStyle') &&
					'single' !== opts.quoteStyle &&
					'double' !== opts.quoteStyle
				)
					throw new TypeError(
						'option "quoteStyle" must be "single" or "double"',
					);
				if (
					has(opts, 'maxStringLength') &&
					('number' == typeof opts.maxStringLength
						? opts.maxStringLength < 0 &&
						  opts.maxStringLength !== 1 / 0
						: null !== opts.maxStringLength)
				)
					throw new TypeError(
						'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`',
					);
				var customInspect =
					!has(opts, 'customInspect') || opts.customInspect;
				if (
					'boolean' != typeof customInspect &&
					'symbol' !== customInspect
				)
					throw new TypeError(
						'option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`',
					);
				if (
					has(opts, 'indent') &&
					null !== opts.indent &&
					'\t' !== opts.indent &&
					!(
						parseInt(opts.indent, 10) === opts.indent &&
						opts.indent > 0
					)
				)
					throw new TypeError(
						'option "indent" must be "\\t", an integer > 0, or `null`',
					);
				if (
					has(opts, 'numericSeparator') &&
					'boolean' != typeof opts.numericSeparator
				)
					throw new TypeError(
						'option "numericSeparator", if provided, must be `true` or `false`',
					);
				var numericSeparator = opts.numericSeparator;
				if (void 0 === obj) return 'undefined';
				if (null === obj) return 'null';
				if ('boolean' == typeof obj) return obj ? 'true' : 'false';
				if ('string' == typeof obj) return inspectString(obj, opts);
				if ('number' == typeof obj) {
					if (0 === obj) return 1 / 0 / obj > 0 ? '0' : '-0';
					var str = String(obj);
					return numericSeparator
						? addNumericSeparator(obj, str)
						: str;
				}
				if ('bigint' == typeof obj) {
					var bigIntStr = String(obj) + 'n';
					return numericSeparator
						? addNumericSeparator(obj, bigIntStr)
						: bigIntStr;
				}
				var maxDepth = void 0 === opts.depth ? 5 : opts.depth;
				if (
					(void 0 === depth && (depth = 0),
					depth >= maxDepth && maxDepth > 0 && 'object' == typeof obj)
				)
					return isArray(obj) ? '[Array]' : '[Object]';
				var indent = (function getIndent(opts, depth) {
					var baseIndent;
					if ('\t' === opts.indent) baseIndent = '\t';
					else {
						if (
							!('number' == typeof opts.indent && opts.indent > 0)
						)
							return null;
						baseIndent = $join.call(Array(opts.indent + 1), ' ');
					}
					return {
						base: baseIndent,
						prev: $join.call(Array(depth + 1), baseIndent),
					};
				})(opts, depth);
				if (void 0 === seen) seen = [];
				else if (indexOf(seen, obj) >= 0) return '[Circular]';
				function inspect(value, from, noIndent) {
					if (
						(from && (seen = $arrSlice.call(seen)).push(from),
						noIndent)
					) {
						var newOpts = { depth: opts.depth };
						return (
							has(opts, 'quoteStyle') &&
								(newOpts.quoteStyle = opts.quoteStyle),
							inspect_(value, newOpts, depth + 1, seen)
						);
					}
					return inspect_(value, opts, depth + 1, seen);
				}
				if ('function' == typeof obj && !isRegExp(obj)) {
					var name = (function nameOf(f) {
							if (f.name) return f.name;
							var m = $match.call(
								functionToString.call(f),
								/^function\s*([\w$]+)/,
							);
							if (m) return m[1];
							return null;
						})(obj),
						keys = arrObjKeys(obj, inspect);
					return (
						'[Function' +
						(name ? ': ' + name : ' (anonymous)') +
						']' +
						(keys.length > 0
							? ' { ' + $join.call(keys, ', ') + ' }'
							: '')
					);
				}
				if (isSymbol(obj)) {
					var symString = hasShammedSymbols
						? $replace.call(
								String(obj),
								/^(Symbol\(.*\))_[^)]*$/,
								'$1',
						  )
						: symToString.call(obj);
					return 'object' != typeof obj || hasShammedSymbols
						? symString
						: markBoxed(symString);
				}
				if (
					(function isElement(x) {
						if (!x || 'object' != typeof x) return !1;
						if (
							'undefined' != typeof HTMLElement &&
							x instanceof HTMLElement
						)
							return !0;
						return (
							'string' == typeof x.nodeName &&
							'function' == typeof x.getAttribute
						);
					})(obj)
				) {
					for (
						var s = '<' + $toLowerCase.call(String(obj.nodeName)),
							attrs = obj.attributes || [],
							i = 0;
						i < attrs.length;
						i++
					)
						s +=
							' ' +
							attrs[i].name +
							'=' +
							wrapQuotes(quote(attrs[i].value), 'double', opts);
					return (
						(s += '>'),
						obj.childNodes && obj.childNodes.length && (s += '...'),
						(s +=
							'</' +
							$toLowerCase.call(String(obj.nodeName)) +
							'>')
					);
				}
				if (isArray(obj)) {
					if (0 === obj.length) return '[]';
					var xs = arrObjKeys(obj, inspect);
					return indent &&
						!(function singleLineValues(xs) {
							for (var i = 0; i < xs.length; i++)
								if (indexOf(xs[i], '\n') >= 0) return !1;
							return !0;
						})(xs)
						? '[' + indentedJoin(xs, indent) + ']'
						: '[ ' + $join.call(xs, ', ') + ' ]';
				}
				if (
					(function isError(obj) {
						return !(
							'[object Error]' !== toStr(obj) ||
							(toStringTag &&
								'object' == typeof obj &&
								toStringTag in obj)
						);
					})(obj)
				) {
					var parts = arrObjKeys(obj, inspect);
					return 'cause' in Error.prototype ||
						!('cause' in obj) ||
						isEnumerable.call(obj, 'cause')
						? 0 === parts.length
							? '[' + String(obj) + ']'
							: '{ [' +
							  String(obj) +
							  '] ' +
							  $join.call(parts, ', ') +
							  ' }'
						: '{ [' +
								String(obj) +
								'] ' +
								$join.call(
									$concat.call(
										'[cause]: ' + inspect(obj.cause),
										parts,
									),
									', ',
								) +
								' }';
				}
				if ('object' == typeof obj && customInspect) {
					if (
						inspectSymbol &&
						'function' == typeof obj[inspectSymbol] &&
						utilInspect
					)
						return utilInspect(obj, { depth: maxDepth - depth });
					if (
						'symbol' !== customInspect &&
						'function' == typeof obj.inspect
					)
						return obj.inspect();
				}
				if (
					(function isMap(x) {
						if (!mapSize || !x || 'object' != typeof x) return !1;
						try {
							mapSize.call(x);
							try {
								setSize.call(x);
							} catch (s) {
								return !0;
							}
							return x instanceof Map;
						} catch (e) {}
						return !1;
					})(obj)
				) {
					var mapParts = [];
					return (
						mapForEach &&
							mapForEach.call(obj, function (value, key) {
								mapParts.push(
									inspect(key, obj, !0) +
										' => ' +
										inspect(value, obj),
								);
							}),
						collectionOf('Map', mapSize.call(obj), mapParts, indent)
					);
				}
				if (
					(function isSet(x) {
						if (!setSize || !x || 'object' != typeof x) return !1;
						try {
							setSize.call(x);
							try {
								mapSize.call(x);
							} catch (m) {
								return !0;
							}
							return x instanceof Set;
						} catch (e) {}
						return !1;
					})(obj)
				) {
					var setParts = [];
					return (
						setForEach &&
							setForEach.call(obj, function (value) {
								setParts.push(inspect(value, obj));
							}),
						collectionOf('Set', setSize.call(obj), setParts, indent)
					);
				}
				if (
					(function isWeakMap(x) {
						if (!weakMapHas || !x || 'object' != typeof x)
							return !1;
						try {
							weakMapHas.call(x, weakMapHas);
							try {
								weakSetHas.call(x, weakSetHas);
							} catch (s) {
								return !0;
							}
							return x instanceof WeakMap;
						} catch (e) {}
						return !1;
					})(obj)
				)
					return weakCollectionOf('WeakMap');
				if (
					(function isWeakSet(x) {
						if (!weakSetHas || !x || 'object' != typeof x)
							return !1;
						try {
							weakSetHas.call(x, weakSetHas);
							try {
								weakMapHas.call(x, weakMapHas);
							} catch (s) {
								return !0;
							}
							return x instanceof WeakSet;
						} catch (e) {}
						return !1;
					})(obj)
				)
					return weakCollectionOf('WeakSet');
				if (
					(function isWeakRef(x) {
						if (!weakRefDeref || !x || 'object' != typeof x)
							return !1;
						try {
							return weakRefDeref.call(x), !0;
						} catch (e) {}
						return !1;
					})(obj)
				)
					return weakCollectionOf('WeakRef');
				if (
					(function isNumber(obj) {
						return !(
							'[object Number]' !== toStr(obj) ||
							(toStringTag &&
								'object' == typeof obj &&
								toStringTag in obj)
						);
					})(obj)
				)
					return markBoxed(inspect(Number(obj)));
				if (
					(function isBigInt(obj) {
						if (!obj || 'object' != typeof obj || !bigIntValueOf)
							return !1;
						try {
							return bigIntValueOf.call(obj), !0;
						} catch (e) {}
						return !1;
					})(obj)
				)
					return markBoxed(inspect(bigIntValueOf.call(obj)));
				if (
					(function isBoolean(obj) {
						return !(
							'[object Boolean]' !== toStr(obj) ||
							(toStringTag &&
								'object' == typeof obj &&
								toStringTag in obj)
						);
					})(obj)
				)
					return markBoxed(booleanValueOf.call(obj));
				if (
					(function isString(obj) {
						return !(
							'[object String]' !== toStr(obj) ||
							(toStringTag &&
								'object' == typeof obj &&
								toStringTag in obj)
						);
					})(obj)
				)
					return markBoxed(inspect(String(obj)));
				if (obj === __webpack_require__.g)
					return 'undefined' != typeof window
						? '{ [object Window] }'
						: '{ [object global] }';
				if (
					!(function isDate(obj) {
						return !(
							'[object Date]' !== toStr(obj) ||
							(toStringTag &&
								'object' == typeof obj &&
								toStringTag in obj)
						);
					})(obj) &&
					!isRegExp(obj)
				) {
					var ys = arrObjKeys(obj, inspect),
						isPlainObject = gPO
							? gPO(obj) === Object.prototype
							: obj instanceof Object ||
							  obj.constructor === Object,
						protoTag =
							obj instanceof Object ? '' : 'null prototype',
						stringTag =
							!isPlainObject &&
							toStringTag &&
							Object(obj) === obj &&
							toStringTag in obj
								? $slice.call(toStr(obj), 8, -1)
								: protoTag
								? 'Object'
								: '',
						tag =
							(isPlainObject ||
							'function' != typeof obj.constructor
								? ''
								: obj.constructor.name
								? obj.constructor.name + ' '
								: '') +
							(stringTag || protoTag
								? '[' +
								  $join.call(
										$concat.call(
											[],
											stringTag || [],
											protoTag || [],
										),
										': ',
								  ) +
								  '] '
								: '');
					return 0 === ys.length
						? tag + '{}'
						: indent
						? tag + '{' + indentedJoin(ys, indent) + '}'
						: tag + '{ ' + $join.call(ys, ', ') + ' }';
				}
				return String(obj);
			};
			var hasOwn =
				Object.prototype.hasOwnProperty ||
				function (key) {
					return key in this;
				};
			function has(obj, key) {
				return hasOwn.call(obj, key);
			}
			function toStr(obj) {
				return objectToString.call(obj);
			}
			function indexOf(xs, x) {
				if (xs.indexOf) return xs.indexOf(x);
				for (var i = 0, l = xs.length; i < l; i++)
					if (xs[i] === x) return i;
				return -1;
			}
			function inspectString(str, opts) {
				if (str.length > opts.maxStringLength) {
					var remaining = str.length - opts.maxStringLength,
						trailer =
							'... ' +
							remaining +
							' more character' +
							(remaining > 1 ? 's' : '');
					return (
						inspectString(
							$slice.call(str, 0, opts.maxStringLength),
							opts,
						) + trailer
					);
				}
				return wrapQuotes(
					$replace.call(
						$replace.call(str, /(['\\])/g, '\\$1'),
						/[\x00-\x1f]/g,
						lowbyte,
					),
					'single',
					opts,
				);
			}
			function lowbyte(c) {
				var n = c.charCodeAt(0),
					x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
				return x
					? '\\' + x
					: '\\x' +
							(n < 16 ? '0' : '') +
							$toUpperCase.call(n.toString(16));
			}
			function markBoxed(str) {
				return 'Object(' + str + ')';
			}
			function weakCollectionOf(type) {
				return type + ' { ? }';
			}
			function collectionOf(type, size, entries, indent) {
				return (
					type +
					' (' +
					size +
					') {' +
					(indent
						? indentedJoin(entries, indent)
						: $join.call(entries, ', ')) +
					'}'
				);
			}
			function indentedJoin(xs, indent) {
				if (0 === xs.length) return '';
				var lineJoiner = '\n' + indent.prev + indent.base;
				return (
					lineJoiner +
					$join.call(xs, ',' + lineJoiner) +
					'\n' +
					indent.prev
				);
			}
			function arrObjKeys(obj, inspect) {
				var isArr = isArray(obj),
					xs = [];
				if (isArr) {
					xs.length = obj.length;
					for (var i = 0; i < obj.length; i++)
						xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
				}
				var symMap,
					syms = 'function' == typeof gOPS ? gOPS(obj) : [];
				if (hasShammedSymbols) {
					symMap = {};
					for (var k = 0; k < syms.length; k++)
						symMap['$' + syms[k]] = syms[k];
				}
				for (var key in obj)
					has(obj, key) &&
						((isArr &&
							String(Number(key)) === key &&
							key < obj.length) ||
							(hasShammedSymbols &&
								symMap['$' + key] instanceof Symbol) ||
							($test.call(/[^\w$]/, key)
								? xs.push(
										inspect(key, obj) +
											': ' +
											inspect(obj[key], obj),
								  )
								: xs.push(
										key + ': ' + inspect(obj[key], obj),
								  )));
				if ('function' == typeof gOPS)
					for (var j = 0; j < syms.length; j++)
						isEnumerable.call(obj, syms[j]) &&
							xs.push(
								'[' +
									inspect(syms[j]) +
									']: ' +
									inspect(obj[syms[j]], obj),
							);
				return xs;
			}
		},
		'./node_modules/source-map/lib/array-set.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var util = __webpack_require__(
					'./node_modules/source-map/lib/util.js',
				),
				has = Object.prototype.hasOwnProperty,
				hasNativeMap = 'undefined' != typeof Map;
			function ArraySet() {
				(this._array = []),
					(this._set = hasNativeMap
						? new Map()
						: Object.create(null));
			}
			(ArraySet.fromArray = function ArraySet_fromArray(
				aArray,
				aAllowDuplicates,
			) {
				for (
					var set = new ArraySet(), i = 0, len = aArray.length;
					i < len;
					i++
				)
					set.add(aArray[i], aAllowDuplicates);
				return set;
			}),
				(ArraySet.prototype.size = function ArraySet_size() {
					return hasNativeMap
						? this._set.size
						: Object.getOwnPropertyNames(this._set).length;
				}),
				(ArraySet.prototype.add = function ArraySet_add(
					aStr,
					aAllowDuplicates,
				) {
					var sStr = hasNativeMap ? aStr : util.toSetString(aStr),
						isDuplicate = hasNativeMap
							? this.has(aStr)
							: has.call(this._set, sStr),
						idx = this._array.length;
					(isDuplicate && !aAllowDuplicates) ||
						this._array.push(aStr),
						isDuplicate ||
							(hasNativeMap
								? this._set.set(aStr, idx)
								: (this._set[sStr] = idx));
				}),
				(ArraySet.prototype.has = function ArraySet_has(aStr) {
					if (hasNativeMap) return this._set.has(aStr);
					var sStr = util.toSetString(aStr);
					return has.call(this._set, sStr);
				}),
				(ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
					if (hasNativeMap) {
						var idx = this._set.get(aStr);
						if (idx >= 0) return idx;
					} else {
						var sStr = util.toSetString(aStr);
						if (has.call(this._set, sStr)) return this._set[sStr];
					}
					throw new Error('"' + aStr + '" is not in the set.');
				}),
				(ArraySet.prototype.at = function ArraySet_at(aIdx) {
					if (aIdx >= 0 && aIdx < this._array.length)
						return this._array[aIdx];
					throw new Error('No element indexed by ' + aIdx);
				}),
				(ArraySet.prototype.toArray = function ArraySet_toArray() {
					return this._array.slice();
				}),
				(exports.I = ArraySet);
		},
		'./node_modules/source-map/lib/base64-vlq.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var base64 = __webpack_require__(
				'./node_modules/source-map/lib/base64.js',
			);
			(exports.encode = function base64VLQ_encode(aValue) {
				var digit,
					encoded = '',
					vlq = (function toVLQSigned(aValue) {
						return aValue < 0
							? 1 + (-aValue << 1)
							: 0 + (aValue << 1);
					})(aValue);
				do {
					(digit = 31 & vlq),
						(vlq >>>= 5) > 0 && (digit |= 32),
						(encoded += base64.encode(digit));
				} while (vlq > 0);
				return encoded;
			}),
				(exports.decode = function base64VLQ_decode(
					aStr,
					aIndex,
					aOutParam,
				) {
					var continuation,
						digit,
						strLen = aStr.length,
						result = 0,
						shift = 0;
					do {
						if (aIndex >= strLen)
							throw new Error(
								'Expected more digits in base 64 VLQ value.',
							);
						if (
							-1 ===
							(digit = base64.decode(aStr.charCodeAt(aIndex++)))
						)
							throw new Error(
								'Invalid base64 digit: ' +
									aStr.charAt(aIndex - 1),
							);
						(continuation = !!(32 & digit)),
							(result += (digit &= 31) << shift),
							(shift += 5);
					} while (continuation);
					(aOutParam.value = (function fromVLQSigned(aValue) {
						var shifted = aValue >> 1;
						return 1 == (1 & aValue) ? -shifted : shifted;
					})(result)),
						(aOutParam.rest = aIndex);
				});
		},
		'./node_modules/source-map/lib/base64.js': (
			__unused_webpack_module,
			exports,
		) => {
			var intToCharMap =
				'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
					'',
				);
			(exports.encode = function (number) {
				if (0 <= number && number < intToCharMap.length)
					return intToCharMap[number];
				throw new TypeError('Must be between 0 and 63: ' + number);
			}),
				(exports.decode = function (charCode) {
					return 65 <= charCode && charCode <= 90
						? charCode - 65
						: 97 <= charCode && charCode <= 122
						? charCode - 97 + 26
						: 48 <= charCode && charCode <= 57
						? charCode - 48 + 52
						: 43 == charCode
						? 62
						: 47 == charCode
						? 63
						: -1;
				});
		},
		'./node_modules/source-map/lib/binary-search.js': (
			__unused_webpack_module,
			exports,
		) => {
			function recursiveSearch(
				aLow,
				aHigh,
				aNeedle,
				aHaystack,
				aCompare,
				aBias,
			) {
				var mid = Math.floor((aHigh - aLow) / 2) + aLow,
					cmp = aCompare(aNeedle, aHaystack[mid], !0);
				return 0 === cmp
					? mid
					: cmp > 0
					? aHigh - mid > 1
						? recursiveSearch(
								mid,
								aHigh,
								aNeedle,
								aHaystack,
								aCompare,
								aBias,
						  )
						: aBias == exports.LEAST_UPPER_BOUND
						? aHigh < aHaystack.length
							? aHigh
							: -1
						: mid
					: mid - aLow > 1
					? recursiveSearch(
							aLow,
							mid,
							aNeedle,
							aHaystack,
							aCompare,
							aBias,
					  )
					: aBias == exports.LEAST_UPPER_BOUND
					? mid
					: aLow < 0
					? -1
					: aLow;
			}
			(exports.GREATEST_LOWER_BOUND = 1),
				(exports.LEAST_UPPER_BOUND = 2),
				(exports.search = function search(
					aNeedle,
					aHaystack,
					aCompare,
					aBias,
				) {
					if (0 === aHaystack.length) return -1;
					var index = recursiveSearch(
						-1,
						aHaystack.length,
						aNeedle,
						aHaystack,
						aCompare,
						aBias || exports.GREATEST_LOWER_BOUND,
					);
					if (index < 0) return -1;
					for (
						;
						index - 1 >= 0 &&
						0 ===
							aCompare(
								aHaystack[index],
								aHaystack[index - 1],
								!0,
							);

					)
						--index;
					return index;
				});
		},
		'./node_modules/source-map/lib/mapping-list.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var util = __webpack_require__(
				'./node_modules/source-map/lib/util.js',
			);
			function MappingList() {
				(this._array = []),
					(this._sorted = !0),
					(this._last = { generatedLine: -1, generatedColumn: 0 });
			}
			(MappingList.prototype.unsortedForEach =
				function MappingList_forEach(aCallback, aThisArg) {
					this._array.forEach(aCallback, aThisArg);
				}),
				(MappingList.prototype.add = function MappingList_add(
					aMapping,
				) {
					!(function generatedPositionAfter(mappingA, mappingB) {
						var lineA = mappingA.generatedLine,
							lineB = mappingB.generatedLine,
							columnA = mappingA.generatedColumn,
							columnB = mappingB.generatedColumn;
						return (
							lineB > lineA ||
							(lineB == lineA && columnB >= columnA) ||
							util.compareByGeneratedPositionsInflated(
								mappingA,
								mappingB,
							) <= 0
						);
					})(this._last, aMapping)
						? ((this._sorted = !1), this._array.push(aMapping))
						: ((this._last = aMapping), this._array.push(aMapping));
				}),
				(MappingList.prototype.toArray =
					function MappingList_toArray() {
						return (
							this._sorted ||
								(this._array.sort(
									util.compareByGeneratedPositionsInflated,
								),
								(this._sorted = !0)),
							this._array
						);
					}),
				(exports.H = MappingList);
		},
		'./node_modules/source-map/lib/quick-sort.js': (
			__unused_webpack_module,
			exports,
		) => {
			function swap(ary, x, y) {
				var temp = ary[x];
				(ary[x] = ary[y]), (ary[y] = temp);
			}
			function doQuickSort(ary, comparator, p, r) {
				if (p < r) {
					var i = p - 1;
					swap(
						ary,
						(function randomIntInRange(low, high) {
							return Math.round(
								low + Math.random() * (high - low),
							);
						})(p, r),
						r,
					);
					for (var pivot = ary[r], j = p; j < r; j++)
						comparator(ary[j], pivot) <= 0 &&
							swap(ary, (i += 1), j);
					swap(ary, i + 1, j);
					var q = i + 1;
					doQuickSort(ary, comparator, p, q - 1),
						doQuickSort(ary, comparator, q + 1, r);
				}
			}
			exports.U = function (ary, comparator) {
				doQuickSort(ary, comparator, 0, ary.length - 1);
			};
		},
		'./node_modules/source-map/lib/source-map-consumer.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var util = __webpack_require__(
					'./node_modules/source-map/lib/util.js',
				),
				binarySearch = __webpack_require__(
					'./node_modules/source-map/lib/binary-search.js',
				),
				ArraySet = __webpack_require__(
					'./node_modules/source-map/lib/array-set.js',
				).I,
				base64VLQ = __webpack_require__(
					'./node_modules/source-map/lib/base64-vlq.js',
				),
				quickSort = __webpack_require__(
					'./node_modules/source-map/lib/quick-sort.js',
				).U;
			function SourceMapConsumer(aSourceMap, aSourceMapURL) {
				var sourceMap = aSourceMap;
				return (
					'string' == typeof aSourceMap &&
						(sourceMap = util.parseSourceMapInput(aSourceMap)),
					null != sourceMap.sections
						? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
						: new BasicSourceMapConsumer(sourceMap, aSourceMapURL)
				);
			}
			function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
				var sourceMap = aSourceMap;
				'string' == typeof aSourceMap &&
					(sourceMap = util.parseSourceMapInput(aSourceMap));
				var version = util.getArg(sourceMap, 'version'),
					sources = util.getArg(sourceMap, 'sources'),
					names = util.getArg(sourceMap, 'names', []),
					sourceRoot = util.getArg(sourceMap, 'sourceRoot', null),
					sourcesContent = util.getArg(
						sourceMap,
						'sourcesContent',
						null,
					),
					mappings = util.getArg(sourceMap, 'mappings'),
					file = util.getArg(sourceMap, 'file', null);
				if (version != this._version)
					throw new Error('Unsupported version: ' + version);
				sourceRoot && (sourceRoot = util.normalize(sourceRoot)),
					(sources = sources
						.map(String)
						.map(util.normalize)
						.map(function (source) {
							return sourceRoot &&
								util.isAbsolute(sourceRoot) &&
								util.isAbsolute(source)
								? util.relative(sourceRoot, source)
								: source;
						})),
					(this._names = ArraySet.fromArray(names.map(String), !0)),
					(this._sources = ArraySet.fromArray(sources, !0)),
					(this._absoluteSources = this._sources
						.toArray()
						.map(function (s) {
							return util.computeSourceURL(
								sourceRoot,
								s,
								aSourceMapURL,
							);
						})),
					(this.sourceRoot = sourceRoot),
					(this.sourcesContent = sourcesContent),
					(this._mappings = mappings),
					(this._sourceMapURL = aSourceMapURL),
					(this.file = file);
			}
			function Mapping() {
				(this.generatedLine = 0),
					(this.generatedColumn = 0),
					(this.source = null),
					(this.originalLine = null),
					(this.originalColumn = null),
					(this.name = null);
			}
			function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
				var sourceMap = aSourceMap;
				'string' == typeof aSourceMap &&
					(sourceMap = util.parseSourceMapInput(aSourceMap));
				var version = util.getArg(sourceMap, 'version'),
					sections = util.getArg(sourceMap, 'sections');
				if (version != this._version)
					throw new Error('Unsupported version: ' + version);
				(this._sources = new ArraySet()),
					(this._names = new ArraySet());
				var lastOffset = { line: -1, column: 0 };
				this._sections = sections.map(function (s) {
					if (s.url)
						throw new Error(
							'Support for url field in sections not implemented.',
						);
					var offset = util.getArg(s, 'offset'),
						offsetLine = util.getArg(offset, 'line'),
						offsetColumn = util.getArg(offset, 'column');
					if (
						offsetLine < lastOffset.line ||
						(offsetLine === lastOffset.line &&
							offsetColumn < lastOffset.column)
					)
						throw new Error(
							'Section offsets must be ordered and non-overlapping.',
						);
					return (
						(lastOffset = offset),
						{
							generatedOffset: {
								generatedLine: offsetLine + 1,
								generatedColumn: offsetColumn + 1,
							},
							consumer: new SourceMapConsumer(
								util.getArg(s, 'map'),
								aSourceMapURL,
							),
						}
					);
				});
			}
			(SourceMapConsumer.fromSourceMap = function (
				aSourceMap,
				aSourceMapURL,
			) {
				return BasicSourceMapConsumer.fromSourceMap(
					aSourceMap,
					aSourceMapURL,
				);
			}),
				(SourceMapConsumer.prototype._version = 3),
				(SourceMapConsumer.prototype.__generatedMappings = null),
				Object.defineProperty(
					SourceMapConsumer.prototype,
					'_generatedMappings',
					{
						configurable: !0,
						enumerable: !0,
						get: function () {
							return (
								this.__generatedMappings ||
									this._parseMappings(
										this._mappings,
										this.sourceRoot,
									),
								this.__generatedMappings
							);
						},
					},
				),
				(SourceMapConsumer.prototype.__originalMappings = null),
				Object.defineProperty(
					SourceMapConsumer.prototype,
					'_originalMappings',
					{
						configurable: !0,
						enumerable: !0,
						get: function () {
							return (
								this.__originalMappings ||
									this._parseMappings(
										this._mappings,
										this.sourceRoot,
									),
								this.__originalMappings
							);
						},
					},
				),
				(SourceMapConsumer.prototype._charIsMappingSeparator =
					function SourceMapConsumer_charIsMappingSeparator(
						aStr,
						index,
					) {
						var c = aStr.charAt(index);
						return ';' === c || ',' === c;
					}),
				(SourceMapConsumer.prototype._parseMappings =
					function SourceMapConsumer_parseMappings(
						aStr,
						aSourceRoot,
					) {
						throw new Error(
							'Subclasses must implement _parseMappings',
						);
					}),
				(SourceMapConsumer.GENERATED_ORDER = 1),
				(SourceMapConsumer.ORIGINAL_ORDER = 2),
				(SourceMapConsumer.GREATEST_LOWER_BOUND = 1),
				(SourceMapConsumer.LEAST_UPPER_BOUND = 2),
				(SourceMapConsumer.prototype.eachMapping =
					function SourceMapConsumer_eachMapping(
						aCallback,
						aContext,
						aOrder,
					) {
						var mappings,
							context = aContext || null;
						switch (aOrder || SourceMapConsumer.GENERATED_ORDER) {
							case SourceMapConsumer.GENERATED_ORDER:
								mappings = this._generatedMappings;
								break;
							case SourceMapConsumer.ORIGINAL_ORDER:
								mappings = this._originalMappings;
								break;
							default:
								throw new Error('Unknown order of iteration.');
						}
						var sourceRoot = this.sourceRoot;
						mappings
							.map(function (mapping) {
								var source =
									null === mapping.source
										? null
										: this._sources.at(mapping.source);
								return {
									source: (source = util.computeSourceURL(
										sourceRoot,
										source,
										this._sourceMapURL,
									)),
									generatedLine: mapping.generatedLine,
									generatedColumn: mapping.generatedColumn,
									originalLine: mapping.originalLine,
									originalColumn: mapping.originalColumn,
									name:
										null === mapping.name
											? null
											: this._names.at(mapping.name),
								};
							}, this)
							.forEach(aCallback, context);
					}),
				(SourceMapConsumer.prototype.allGeneratedPositionsFor =
					function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
						var line = util.getArg(aArgs, 'line'),
							needle = {
								source: util.getArg(aArgs, 'source'),
								originalLine: line,
								originalColumn: util.getArg(aArgs, 'column', 0),
							};
						if (
							((needle.source = this._findSourceIndex(
								needle.source,
							)),
							needle.source < 0)
						)
							return [];
						var mappings = [],
							index = this._findMapping(
								needle,
								this._originalMappings,
								'originalLine',
								'originalColumn',
								util.compareByOriginalPositions,
								binarySearch.LEAST_UPPER_BOUND,
							);
						if (index >= 0) {
							var mapping = this._originalMappings[index];
							if (void 0 === aArgs.column)
								for (
									var originalLine = mapping.originalLine;
									mapping &&
									mapping.originalLine === originalLine;

								)
									mappings.push({
										line: util.getArg(
											mapping,
											'generatedLine',
											null,
										),
										column: util.getArg(
											mapping,
											'generatedColumn',
											null,
										),
										lastColumn: util.getArg(
											mapping,
											'lastGeneratedColumn',
											null,
										),
									}),
										(mapping =
											this._originalMappings[++index]);
							else
								for (
									var originalColumn = mapping.originalColumn;
									mapping &&
									mapping.originalLine === line &&
									mapping.originalColumn == originalColumn;

								)
									mappings.push({
										line: util.getArg(
											mapping,
											'generatedLine',
											null,
										),
										column: util.getArg(
											mapping,
											'generatedColumn',
											null,
										),
										lastColumn: util.getArg(
											mapping,
											'lastGeneratedColumn',
											null,
										),
									}),
										(mapping =
											this._originalMappings[++index]);
						}
						return mappings;
					}),
				(BasicSourceMapConsumer.prototype = Object.create(
					SourceMapConsumer.prototype,
				)),
				(BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer),
				(BasicSourceMapConsumer.prototype._findSourceIndex = function (
					aSource,
				) {
					var i,
						relativeSource = aSource;
					if (
						(null != this.sourceRoot &&
							(relativeSource = util.relative(
								this.sourceRoot,
								relativeSource,
							)),
						this._sources.has(relativeSource))
					)
						return this._sources.indexOf(relativeSource);
					for (i = 0; i < this._absoluteSources.length; ++i)
						if (this._absoluteSources[i] == aSource) return i;
					return -1;
				}),
				(BasicSourceMapConsumer.fromSourceMap =
					function SourceMapConsumer_fromSourceMap(
						aSourceMap,
						aSourceMapURL,
					) {
						var smc = Object.create(
								BasicSourceMapConsumer.prototype,
							),
							names = (smc._names = ArraySet.fromArray(
								aSourceMap._names.toArray(),
								!0,
							)),
							sources = (smc._sources = ArraySet.fromArray(
								aSourceMap._sources.toArray(),
								!0,
							));
						(smc.sourceRoot = aSourceMap._sourceRoot),
							(smc.sourcesContent =
								aSourceMap._generateSourcesContent(
									smc._sources.toArray(),
									smc.sourceRoot,
								)),
							(smc.file = aSourceMap._file),
							(smc._sourceMapURL = aSourceMapURL),
							(smc._absoluteSources = smc._sources
								.toArray()
								.map(function (s) {
									return util.computeSourceURL(
										smc.sourceRoot,
										s,
										aSourceMapURL,
									);
								}));
						for (
							var generatedMappings = aSourceMap._mappings
									.toArray()
									.slice(),
								destGeneratedMappings =
									(smc.__generatedMappings = []),
								destOriginalMappings = (smc.__originalMappings =
									[]),
								i = 0,
								length = generatedMappings.length;
							i < length;
							i++
						) {
							var srcMapping = generatedMappings[i],
								destMapping = new Mapping();
							(destMapping.generatedLine =
								srcMapping.generatedLine),
								(destMapping.generatedColumn =
									srcMapping.generatedColumn),
								srcMapping.source &&
									((destMapping.source = sources.indexOf(
										srcMapping.source,
									)),
									(destMapping.originalLine =
										srcMapping.originalLine),
									(destMapping.originalColumn =
										srcMapping.originalColumn),
									srcMapping.name &&
										(destMapping.name = names.indexOf(
											srcMapping.name,
										)),
									destOriginalMappings.push(destMapping)),
								destGeneratedMappings.push(destMapping);
						}
						return (
							quickSort(
								smc.__originalMappings,
								util.compareByOriginalPositions,
							),
							smc
						);
					}),
				(BasicSourceMapConsumer.prototype._version = 3),
				Object.defineProperty(
					BasicSourceMapConsumer.prototype,
					'sources',
					{
						get: function () {
							return this._absoluteSources.slice();
						},
					},
				),
				(BasicSourceMapConsumer.prototype._parseMappings =
					function SourceMapConsumer_parseMappings(
						aStr,
						aSourceRoot,
					) {
						for (
							var mapping,
								str,
								segment,
								end,
								value,
								generatedLine = 1,
								previousGeneratedColumn = 0,
								previousOriginalLine = 0,
								previousOriginalColumn = 0,
								previousSource = 0,
								previousName = 0,
								length = aStr.length,
								index = 0,
								cachedSegments = {},
								temp = {},
								originalMappings = [],
								generatedMappings = [];
							index < length;

						)
							if (';' === aStr.charAt(index))
								generatedLine++,
									index++,
									(previousGeneratedColumn = 0);
							else if (',' === aStr.charAt(index)) index++;
							else {
								for (
									(mapping = new Mapping()).generatedLine =
										generatedLine,
										end = index;
									end < length &&
									!this._charIsMappingSeparator(aStr, end);
									end++
								);
								if (
									(segment =
										cachedSegments[
											(str = aStr.slice(index, end))
										])
								)
									index += str.length;
								else {
									for (segment = []; index < end; )
										base64VLQ.decode(aStr, index, temp),
											(value = temp.value),
											(index = temp.rest),
											segment.push(value);
									if (2 === segment.length)
										throw new Error(
											'Found a source, but no line and column',
										);
									if (3 === segment.length)
										throw new Error(
											'Found a source and line, but no column',
										);
									cachedSegments[str] = segment;
								}
								(mapping.generatedColumn =
									previousGeneratedColumn + segment[0]),
									(previousGeneratedColumn =
										mapping.generatedColumn),
									segment.length > 1 &&
										((mapping.source =
											previousSource + segment[1]),
										(previousSource += segment[1]),
										(mapping.originalLine =
											previousOriginalLine + segment[2]),
										(previousOriginalLine =
											mapping.originalLine),
										(mapping.originalLine += 1),
										(mapping.originalColumn =
											previousOriginalColumn +
											segment[3]),
										(previousOriginalColumn =
											mapping.originalColumn),
										segment.length > 4 &&
											((mapping.name =
												previousName + segment[4]),
											(previousName += segment[4]))),
									generatedMappings.push(mapping),
									'number' == typeof mapping.originalLine &&
										originalMappings.push(mapping);
							}
						quickSort(
							generatedMappings,
							util.compareByGeneratedPositionsDeflated,
						),
							(this.__generatedMappings = generatedMappings),
							quickSort(
								originalMappings,
								util.compareByOriginalPositions,
							),
							(this.__originalMappings = originalMappings);
					}),
				(BasicSourceMapConsumer.prototype._findMapping =
					function SourceMapConsumer_findMapping(
						aNeedle,
						aMappings,
						aLineName,
						aColumnName,
						aComparator,
						aBias,
					) {
						if (aNeedle[aLineName] <= 0)
							throw new TypeError(
								'Line must be greater than or equal to 1, got ' +
									aNeedle[aLineName],
							);
						if (aNeedle[aColumnName] < 0)
							throw new TypeError(
								'Column must be greater than or equal to 0, got ' +
									aNeedle[aColumnName],
							);
						return binarySearch.search(
							aNeedle,
							aMappings,
							aComparator,
							aBias,
						);
					}),
				(BasicSourceMapConsumer.prototype.computeColumnSpans =
					function SourceMapConsumer_computeColumnSpans() {
						for (
							var index = 0;
							index < this._generatedMappings.length;
							++index
						) {
							var mapping = this._generatedMappings[index];
							if (index + 1 < this._generatedMappings.length) {
								var nextMapping =
									this._generatedMappings[index + 1];
								if (
									mapping.generatedLine ===
									nextMapping.generatedLine
								) {
									mapping.lastGeneratedColumn =
										nextMapping.generatedColumn - 1;
									continue;
								}
							}
							mapping.lastGeneratedColumn = 1 / 0;
						}
					}),
				(BasicSourceMapConsumer.prototype.originalPositionFor =
					function SourceMapConsumer_originalPositionFor(aArgs) {
						var needle = {
								generatedLine: util.getArg(aArgs, 'line'),
								generatedColumn: util.getArg(aArgs, 'column'),
							},
							index = this._findMapping(
								needle,
								this._generatedMappings,
								'generatedLine',
								'generatedColumn',
								util.compareByGeneratedPositionsDeflated,
								util.getArg(
									aArgs,
									'bias',
									SourceMapConsumer.GREATEST_LOWER_BOUND,
								),
							);
						if (index >= 0) {
							var mapping = this._generatedMappings[index];
							if (
								mapping.generatedLine === needle.generatedLine
							) {
								var source = util.getArg(
									mapping,
									'source',
									null,
								);
								null !== source &&
									((source = this._sources.at(source)),
									(source = util.computeSourceURL(
										this.sourceRoot,
										source,
										this._sourceMapURL,
									)));
								var name = util.getArg(mapping, 'name', null);
								return (
									null !== name &&
										(name = this._names.at(name)),
									{
										source,
										line: util.getArg(
											mapping,
											'originalLine',
											null,
										),
										column: util.getArg(
											mapping,
											'originalColumn',
											null,
										),
										name,
									}
								);
							}
						}
						return {
							source: null,
							line: null,
							column: null,
							name: null,
						};
					}),
				(BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
					function BasicSourceMapConsumer_hasContentsOfAllSources() {
						return (
							!!this.sourcesContent &&
							this.sourcesContent.length >=
								this._sources.size() &&
							!this.sourcesContent.some(function (sc) {
								return null == sc;
							})
						);
					}),
				(BasicSourceMapConsumer.prototype.sourceContentFor =
					function SourceMapConsumer_sourceContentFor(
						aSource,
						nullOnMissing,
					) {
						if (!this.sourcesContent) return null;
						var index = this._findSourceIndex(aSource);
						if (index >= 0) return this.sourcesContent[index];
						var url,
							relativeSource = aSource;
						if (
							(null != this.sourceRoot &&
								(relativeSource = util.relative(
									this.sourceRoot,
									relativeSource,
								)),
							null != this.sourceRoot &&
								(url = util.urlParse(this.sourceRoot)))
						) {
							var fileUriAbsPath = relativeSource.replace(
								/^file:\/\//,
								'',
							);
							if (
								'file' == url.scheme &&
								this._sources.has(fileUriAbsPath)
							)
								return this.sourcesContent[
									this._sources.indexOf(fileUriAbsPath)
								];
							if (
								(!url.path || '/' == url.path) &&
								this._sources.has('/' + relativeSource)
							)
								return this.sourcesContent[
									this._sources.indexOf('/' + relativeSource)
								];
						}
						if (nullOnMissing) return null;
						throw new Error(
							'"' + relativeSource + '" is not in the SourceMap.',
						);
					}),
				(BasicSourceMapConsumer.prototype.generatedPositionFor =
					function SourceMapConsumer_generatedPositionFor(aArgs) {
						var source = util.getArg(aArgs, 'source');
						if ((source = this._findSourceIndex(source)) < 0)
							return {
								line: null,
								column: null,
								lastColumn: null,
							};
						var needle = {
								source,
								originalLine: util.getArg(aArgs, 'line'),
								originalColumn: util.getArg(aArgs, 'column'),
							},
							index = this._findMapping(
								needle,
								this._originalMappings,
								'originalLine',
								'originalColumn',
								util.compareByOriginalPositions,
								util.getArg(
									aArgs,
									'bias',
									SourceMapConsumer.GREATEST_LOWER_BOUND,
								),
							);
						if (index >= 0) {
							var mapping = this._originalMappings[index];
							if (mapping.source === needle.source)
								return {
									line: util.getArg(
										mapping,
										'generatedLine',
										null,
									),
									column: util.getArg(
										mapping,
										'generatedColumn',
										null,
									),
									lastColumn: util.getArg(
										mapping,
										'lastGeneratedColumn',
										null,
									),
								};
						}
						return { line: null, column: null, lastColumn: null };
					}),
				(IndexedSourceMapConsumer.prototype = Object.create(
					SourceMapConsumer.prototype,
				)),
				(IndexedSourceMapConsumer.prototype.constructor =
					SourceMapConsumer),
				(IndexedSourceMapConsumer.prototype._version = 3),
				Object.defineProperty(
					IndexedSourceMapConsumer.prototype,
					'sources',
					{
						get: function () {
							for (
								var sources = [], i = 0;
								i < this._sections.length;
								i++
							)
								for (
									var j = 0;
									j <
									this._sections[i].consumer.sources.length;
									j++
								)
									sources.push(
										this._sections[i].consumer.sources[j],
									);
							return sources;
						},
					},
				),
				(IndexedSourceMapConsumer.prototype.originalPositionFor =
					function IndexedSourceMapConsumer_originalPositionFor(
						aArgs,
					) {
						var needle = {
								generatedLine: util.getArg(aArgs, 'line'),
								generatedColumn: util.getArg(aArgs, 'column'),
							},
							sectionIndex = binarySearch.search(
								needle,
								this._sections,
								function (needle, section) {
									var cmp =
										needle.generatedLine -
										section.generatedOffset.generatedLine;
									return (
										cmp ||
										needle.generatedColumn -
											section.generatedOffset
												.generatedColumn
									);
								},
							),
							section = this._sections[sectionIndex];
						return section
							? section.consumer.originalPositionFor({
									line:
										needle.generatedLine -
										(section.generatedOffset.generatedLine -
											1),
									column:
										needle.generatedColumn -
										(section.generatedOffset
											.generatedLine ===
										needle.generatedLine
											? section.generatedOffset
													.generatedColumn - 1
											: 0),
									bias: aArgs.bias,
							  })
							: {
									source: null,
									line: null,
									column: null,
									name: null,
							  };
					}),
				(IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
					function IndexedSourceMapConsumer_hasContentsOfAllSources() {
						return this._sections.every(function (s) {
							return s.consumer.hasContentsOfAllSources();
						});
					}),
				(IndexedSourceMapConsumer.prototype.sourceContentFor =
					function IndexedSourceMapConsumer_sourceContentFor(
						aSource,
						nullOnMissing,
					) {
						for (var i = 0; i < this._sections.length; i++) {
							var content = this._sections[
								i
							].consumer.sourceContentFor(aSource, !0);
							if (content) return content;
						}
						if (nullOnMissing) return null;
						throw new Error(
							'"' + aSource + '" is not in the SourceMap.',
						);
					}),
				(IndexedSourceMapConsumer.prototype.generatedPositionFor =
					function IndexedSourceMapConsumer_generatedPositionFor(
						aArgs,
					) {
						for (var i = 0; i < this._sections.length; i++) {
							var section = this._sections[i];
							if (
								-1 !==
								section.consumer._findSourceIndex(
									util.getArg(aArgs, 'source'),
								)
							) {
								var generatedPosition =
									section.consumer.generatedPositionFor(
										aArgs,
									);
								if (generatedPosition)
									return {
										line:
											generatedPosition.line +
											(section.generatedOffset
												.generatedLine -
												1),
										column:
											generatedPosition.column +
											(section.generatedOffset
												.generatedLine ===
											generatedPosition.line
												? section.generatedOffset
														.generatedColumn - 1
												: 0),
									};
							}
						}
						return { line: null, column: null };
					}),
				(IndexedSourceMapConsumer.prototype._parseMappings =
					function IndexedSourceMapConsumer_parseMappings(
						aStr,
						aSourceRoot,
					) {
						(this.__generatedMappings = []),
							(this.__originalMappings = []);
						for (var i = 0; i < this._sections.length; i++)
							for (
								var section = this._sections[i],
									sectionMappings =
										section.consumer._generatedMappings,
									j = 0;
								j < sectionMappings.length;
								j++
							) {
								var mapping = sectionMappings[j],
									source = section.consumer._sources.at(
										mapping.source,
									);
								(source = util.computeSourceURL(
									section.consumer.sourceRoot,
									source,
									this._sourceMapURL,
								)),
									this._sources.add(source),
									(source = this._sources.indexOf(source));
								var name = null;
								mapping.name &&
									((name = section.consumer._names.at(
										mapping.name,
									)),
									this._names.add(name),
									(name = this._names.indexOf(name)));
								var adjustedMapping = {
									source,
									generatedLine:
										mapping.generatedLine +
										(section.generatedOffset.generatedLine -
											1),
									generatedColumn:
										mapping.generatedColumn +
										(section.generatedOffset
											.generatedLine ===
										mapping.generatedLine
											? section.generatedOffset
													.generatedColumn - 1
											: 0),
									originalLine: mapping.originalLine,
									originalColumn: mapping.originalColumn,
									name,
								};
								this.__generatedMappings.push(adjustedMapping),
									'number' ==
										typeof adjustedMapping.originalLine &&
										this.__originalMappings.push(
											adjustedMapping,
										);
							}
						quickSort(
							this.__generatedMappings,
							util.compareByGeneratedPositionsDeflated,
						),
							quickSort(
								this.__originalMappings,
								util.compareByOriginalPositions,
							);
					});
		},
		'./node_modules/source-map/lib/source-map-generator.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var base64VLQ = __webpack_require__(
					'./node_modules/source-map/lib/base64-vlq.js',
				),
				util = __webpack_require__(
					'./node_modules/source-map/lib/util.js',
				),
				ArraySet = __webpack_require__(
					'./node_modules/source-map/lib/array-set.js',
				).I,
				MappingList = __webpack_require__(
					'./node_modules/source-map/lib/mapping-list.js',
				).H;
			function SourceMapGenerator(aArgs) {
				aArgs || (aArgs = {}),
					(this._file = util.getArg(aArgs, 'file', null)),
					(this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null)),
					(this._skipValidation = util.getArg(
						aArgs,
						'skipValidation',
						!1,
					)),
					(this._sources = new ArraySet()),
					(this._names = new ArraySet()),
					(this._mappings = new MappingList()),
					(this._sourcesContents = null);
			}
			(SourceMapGenerator.prototype._version = 3),
				(SourceMapGenerator.fromSourceMap =
					function SourceMapGenerator_fromSourceMap(
						aSourceMapConsumer,
					) {
						var sourceRoot = aSourceMapConsumer.sourceRoot,
							generator = new SourceMapGenerator({
								file: aSourceMapConsumer.file,
								sourceRoot,
							});
						return (
							aSourceMapConsumer.eachMapping(function (mapping) {
								var newMapping = {
									generated: {
										line: mapping.generatedLine,
										column: mapping.generatedColumn,
									},
								};
								null != mapping.source &&
									((newMapping.source = mapping.source),
									null != sourceRoot &&
										(newMapping.source = util.relative(
											sourceRoot,
											newMapping.source,
										)),
									(newMapping.original = {
										line: mapping.originalLine,
										column: mapping.originalColumn,
									}),
									null != mapping.name &&
										(newMapping.name = mapping.name)),
									generator.addMapping(newMapping);
							}),
							aSourceMapConsumer.sources.forEach(function (
								sourceFile,
							) {
								var sourceRelative = sourceFile;
								null !== sourceRoot &&
									(sourceRelative = util.relative(
										sourceRoot,
										sourceFile,
									)),
									generator._sources.has(sourceRelative) ||
										generator._sources.add(sourceRelative);
								var content =
									aSourceMapConsumer.sourceContentFor(
										sourceFile,
									);
								null != content &&
									generator.setSourceContent(
										sourceFile,
										content,
									);
							}),
							generator
						);
					}),
				(SourceMapGenerator.prototype.addMapping =
					function SourceMapGenerator_addMapping(aArgs) {
						var generated = util.getArg(aArgs, 'generated'),
							original = util.getArg(aArgs, 'original', null),
							source = util.getArg(aArgs, 'source', null),
							name = util.getArg(aArgs, 'name', null);
						this._skipValidation ||
							this._validateMapping(
								generated,
								original,
								source,
								name,
							),
							null != source &&
								((source = String(source)),
								this._sources.has(source) ||
									this._sources.add(source)),
							null != name &&
								((name = String(name)),
								this._names.has(name) || this._names.add(name)),
							this._mappings.add({
								generatedLine: generated.line,
								generatedColumn: generated.column,
								originalLine: null != original && original.line,
								originalColumn:
									null != original && original.column,
								source,
								name,
							});
					}),
				(SourceMapGenerator.prototype.setSourceContent =
					function SourceMapGenerator_setSourceContent(
						aSourceFile,
						aSourceContent,
					) {
						var source = aSourceFile;
						null != this._sourceRoot &&
							(source = util.relative(this._sourceRoot, source)),
							null != aSourceContent
								? (this._sourcesContents ||
										(this._sourcesContents =
											Object.create(null)),
								  (this._sourcesContents[
										util.toSetString(source)
								  ] = aSourceContent))
								: this._sourcesContents &&
								  (delete this._sourcesContents[
										util.toSetString(source)
								  ],
								  0 ===
										Object.keys(this._sourcesContents)
											.length &&
										(this._sourcesContents = null));
					}),
				(SourceMapGenerator.prototype.applySourceMap =
					function SourceMapGenerator_applySourceMap(
						aSourceMapConsumer,
						aSourceFile,
						aSourceMapPath,
					) {
						var sourceFile = aSourceFile;
						if (null == aSourceFile) {
							if (null == aSourceMapConsumer.file)
								throw new Error(
									'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.',
								);
							sourceFile = aSourceMapConsumer.file;
						}
						var sourceRoot = this._sourceRoot;
						null != sourceRoot &&
							(sourceFile = util.relative(
								sourceRoot,
								sourceFile,
							));
						var newSources = new ArraySet(),
							newNames = new ArraySet();
						this._mappings.unsortedForEach(function (mapping) {
							if (
								mapping.source === sourceFile &&
								null != mapping.originalLine
							) {
								var original =
									aSourceMapConsumer.originalPositionFor({
										line: mapping.originalLine,
										column: mapping.originalColumn,
									});
								null != original.source &&
									((mapping.source = original.source),
									null != aSourceMapPath &&
										(mapping.source = util.join(
											aSourceMapPath,
											mapping.source,
										)),
									null != sourceRoot &&
										(mapping.source = util.relative(
											sourceRoot,
											mapping.source,
										)),
									(mapping.originalLine = original.line),
									(mapping.originalColumn = original.column),
									null != original.name &&
										(mapping.name = original.name));
							}
							var source = mapping.source;
							null == source ||
								newSources.has(source) ||
								newSources.add(source);
							var name = mapping.name;
							null == name ||
								newNames.has(name) ||
								newNames.add(name);
						}, this),
							(this._sources = newSources),
							(this._names = newNames),
							aSourceMapConsumer.sources.forEach(function (
								sourceFile,
							) {
								var content =
									aSourceMapConsumer.sourceContentFor(
										sourceFile,
									);
								null != content &&
									(null != aSourceMapPath &&
										(sourceFile = util.join(
											aSourceMapPath,
											sourceFile,
										)),
									null != sourceRoot &&
										(sourceFile = util.relative(
											sourceRoot,
											sourceFile,
										)),
									this.setSourceContent(sourceFile, content));
							},
							this);
					}),
				(SourceMapGenerator.prototype._validateMapping =
					function SourceMapGenerator_validateMapping(
						aGenerated,
						aOriginal,
						aSource,
						aName,
					) {
						if (
							aOriginal &&
							'number' != typeof aOriginal.line &&
							'number' != typeof aOriginal.column
						)
							throw new Error(
								'original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.',
							);
						if (
							(!(
								aGenerated &&
								'line' in aGenerated &&
								'column' in aGenerated &&
								aGenerated.line > 0 &&
								aGenerated.column >= 0
							) ||
								aOriginal ||
								aSource ||
								aName) &&
							!(
								aGenerated &&
								'line' in aGenerated &&
								'column' in aGenerated &&
								aOriginal &&
								'line' in aOriginal &&
								'column' in aOriginal &&
								aGenerated.line > 0 &&
								aGenerated.column >= 0 &&
								aOriginal.line > 0 &&
								aOriginal.column >= 0 &&
								aSource
							)
						)
							throw new Error(
								'Invalid mapping: ' +
									JSON.stringify({
										generated: aGenerated,
										source: aSource,
										original: aOriginal,
										name: aName,
									}),
							);
					}),
				(SourceMapGenerator.prototype._serializeMappings =
					function SourceMapGenerator_serializeMappings() {
						for (
							var next,
								mapping,
								nameIdx,
								sourceIdx,
								previousGeneratedColumn = 0,
								previousGeneratedLine = 1,
								previousOriginalColumn = 0,
								previousOriginalLine = 0,
								previousName = 0,
								previousSource = 0,
								result = '',
								mappings = this._mappings.toArray(),
								i = 0,
								len = mappings.length;
							i < len;
							i++
						) {
							if (
								((next = ''),
								(mapping = mappings[i]).generatedLine !==
									previousGeneratedLine)
							)
								for (
									previousGeneratedColumn = 0;
									mapping.generatedLine !==
									previousGeneratedLine;

								)
									(next += ';'), previousGeneratedLine++;
							else if (i > 0) {
								if (
									!util.compareByGeneratedPositionsInflated(
										mapping,
										mappings[i - 1],
									)
								)
									continue;
								next += ',';
							}
							(next += base64VLQ.encode(
								mapping.generatedColumn -
									previousGeneratedColumn,
							)),
								(previousGeneratedColumn =
									mapping.generatedColumn),
								null != mapping.source &&
									((sourceIdx = this._sources.indexOf(
										mapping.source,
									)),
									(next += base64VLQ.encode(
										sourceIdx - previousSource,
									)),
									(previousSource = sourceIdx),
									(next += base64VLQ.encode(
										mapping.originalLine -
											1 -
											previousOriginalLine,
									)),
									(previousOriginalLine =
										mapping.originalLine - 1),
									(next += base64VLQ.encode(
										mapping.originalColumn -
											previousOriginalColumn,
									)),
									(previousOriginalColumn =
										mapping.originalColumn),
									null != mapping.name &&
										((nameIdx = this._names.indexOf(
											mapping.name,
										)),
										(next += base64VLQ.encode(
											nameIdx - previousName,
										)),
										(previousName = nameIdx))),
								(result += next);
						}
						return result;
					}),
				(SourceMapGenerator.prototype._generateSourcesContent =
					function SourceMapGenerator_generateSourcesContent(
						aSources,
						aSourceRoot,
					) {
						return aSources.map(function (source) {
							if (!this._sourcesContents) return null;
							null != aSourceRoot &&
								(source = util.relative(aSourceRoot, source));
							var key = util.toSetString(source);
							return Object.prototype.hasOwnProperty.call(
								this._sourcesContents,
								key,
							)
								? this._sourcesContents[key]
								: null;
						}, this);
					}),
				(SourceMapGenerator.prototype.toJSON =
					function SourceMapGenerator_toJSON() {
						var map = {
							version: this._version,
							sources: this._sources.toArray(),
							names: this._names.toArray(),
							mappings: this._serializeMappings(),
						};
						return (
							null != this._file && (map.file = this._file),
							null != this._sourceRoot &&
								(map.sourceRoot = this._sourceRoot),
							this._sourcesContents &&
								(map.sourcesContent =
									this._generateSourcesContent(
										map.sources,
										map.sourceRoot,
									)),
							map
						);
					}),
				(SourceMapGenerator.prototype.toString =
					function SourceMapGenerator_toString() {
						return JSON.stringify(this.toJSON());
					}),
				(exports.h = SourceMapGenerator);
		},
		'./node_modules/source-map/lib/source-node.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var SourceMapGenerator = __webpack_require__(
					'./node_modules/source-map/lib/source-map-generator.js',
				).h,
				util = __webpack_require__(
					'./node_modules/source-map/lib/util.js',
				),
				REGEX_NEWLINE = /(\r?\n)/,
				isSourceNode = '$$$isSourceNode$$$';
			function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
				(this.children = []),
					(this.sourceContents = {}),
					(this.line = null == aLine ? null : aLine),
					(this.column = null == aColumn ? null : aColumn),
					(this.source = null == aSource ? null : aSource),
					(this.name = null == aName ? null : aName),
					(this[isSourceNode] = !0),
					null != aChunks && this.add(aChunks);
			}
			(SourceNode.fromStringWithSourceMap =
				function SourceNode_fromStringWithSourceMap(
					aGeneratedCode,
					aSourceMapConsumer,
					aRelativePath,
				) {
					var node = new SourceNode(),
						remainingLines = aGeneratedCode.split(REGEX_NEWLINE),
						remainingLinesIndex = 0,
						shiftNextLine = function () {
							return getNextLine() + (getNextLine() || '');
							function getNextLine() {
								return remainingLinesIndex <
									remainingLines.length
									? remainingLines[remainingLinesIndex++]
									: void 0;
							}
						},
						lastGeneratedLine = 1,
						lastGeneratedColumn = 0,
						lastMapping = null;
					return (
						aSourceMapConsumer.eachMapping(function (mapping) {
							if (null !== lastMapping) {
								if (
									!(lastGeneratedLine < mapping.generatedLine)
								) {
									var code = (nextLine =
										remainingLines[remainingLinesIndex] ||
										'').substr(
										0,
										mapping.generatedColumn -
											lastGeneratedColumn,
									);
									return (
										(remainingLines[remainingLinesIndex] =
											nextLine.substr(
												mapping.generatedColumn -
													lastGeneratedColumn,
											)),
										(lastGeneratedColumn =
											mapping.generatedColumn),
										addMappingWithCode(lastMapping, code),
										void (lastMapping = mapping)
									);
								}
								addMappingWithCode(
									lastMapping,
									shiftNextLine(),
								),
									lastGeneratedLine++,
									(lastGeneratedColumn = 0);
							}
							for (; lastGeneratedLine < mapping.generatedLine; )
								node.add(shiftNextLine()), lastGeneratedLine++;
							if (lastGeneratedColumn < mapping.generatedColumn) {
								var nextLine =
									remainingLines[remainingLinesIndex] || '';
								node.add(
									nextLine.substr(0, mapping.generatedColumn),
								),
									(remainingLines[remainingLinesIndex] =
										nextLine.substr(
											mapping.generatedColumn,
										)),
									(lastGeneratedColumn =
										mapping.generatedColumn);
							}
							lastMapping = mapping;
						}, this),
						remainingLinesIndex < remainingLines.length &&
							(lastMapping &&
								addMappingWithCode(
									lastMapping,
									shiftNextLine(),
								),
							node.add(
								remainingLines
									.splice(remainingLinesIndex)
									.join(''),
							)),
						aSourceMapConsumer.sources.forEach(function (
							sourceFile,
						) {
							var content =
								aSourceMapConsumer.sourceContentFor(sourceFile);
							null != content &&
								(null != aRelativePath &&
									(sourceFile = util.join(
										aRelativePath,
										sourceFile,
									)),
								node.setSourceContent(sourceFile, content));
						}),
						node
					);
					function addMappingWithCode(mapping, code) {
						if (null === mapping || void 0 === mapping.source)
							node.add(code);
						else {
							var source = aRelativePath
								? util.join(aRelativePath, mapping.source)
								: mapping.source;
							node.add(
								new SourceNode(
									mapping.originalLine,
									mapping.originalColumn,
									source,
									code,
									mapping.name,
								),
							);
						}
					}
				}),
				(SourceNode.prototype.add = function SourceNode_add(aChunk) {
					if (Array.isArray(aChunk))
						aChunk.forEach(function (chunk) {
							this.add(chunk);
						}, this);
					else {
						if (!aChunk[isSourceNode] && 'string' != typeof aChunk)
							throw new TypeError(
								'Expected a SourceNode, string, or an array of SourceNodes and strings. Got ' +
									aChunk,
							);
						aChunk && this.children.push(aChunk);
					}
					return this;
				}),
				(SourceNode.prototype.prepend = function SourceNode_prepend(
					aChunk,
				) {
					if (Array.isArray(aChunk))
						for (var i = aChunk.length - 1; i >= 0; i--)
							this.prepend(aChunk[i]);
					else {
						if (!aChunk[isSourceNode] && 'string' != typeof aChunk)
							throw new TypeError(
								'Expected a SourceNode, string, or an array of SourceNodes and strings. Got ' +
									aChunk,
							);
						this.children.unshift(aChunk);
					}
					return this;
				}),
				(SourceNode.prototype.walk = function SourceNode_walk(aFn) {
					for (
						var chunk, i = 0, len = this.children.length;
						i < len;
						i++
					)
						(chunk = this.children[i])[isSourceNode]
							? chunk.walk(aFn)
							: '' !== chunk &&
							  aFn(chunk, {
									source: this.source,
									line: this.line,
									column: this.column,
									name: this.name,
							  });
				}),
				(SourceNode.prototype.join = function SourceNode_join(aSep) {
					var newChildren,
						i,
						len = this.children.length;
					if (len > 0) {
						for (newChildren = [], i = 0; i < len - 1; i++)
							newChildren.push(this.children[i]),
								newChildren.push(aSep);
						newChildren.push(this.children[i]),
							(this.children = newChildren);
					}
					return this;
				}),
				(SourceNode.prototype.replaceRight =
					function SourceNode_replaceRight(aPattern, aReplacement) {
						var lastChild = this.children[this.children.length - 1];
						return (
							lastChild[isSourceNode]
								? lastChild.replaceRight(aPattern, aReplacement)
								: 'string' == typeof lastChild
								? (this.children[this.children.length - 1] =
										lastChild.replace(
											aPattern,
											aReplacement,
										))
								: this.children.push(
										''.replace(aPattern, aReplacement),
								  ),
							this
						);
					}),
				(SourceNode.prototype.setSourceContent =
					function SourceNode_setSourceContent(
						aSourceFile,
						aSourceContent,
					) {
						this.sourceContents[util.toSetString(aSourceFile)] =
							aSourceContent;
					}),
				(SourceNode.prototype.walkSourceContents =
					function SourceNode_walkSourceContents(aFn) {
						for (
							var i = 0, len = this.children.length;
							i < len;
							i++
						)
							this.children[i][isSourceNode] &&
								this.children[i].walkSourceContents(aFn);
						var sources = Object.keys(this.sourceContents);
						for (i = 0, len = sources.length; i < len; i++)
							aFn(
								util.fromSetString(sources[i]),
								this.sourceContents[sources[i]],
							);
					}),
				(SourceNode.prototype.toString =
					function SourceNode_toString() {
						var str = '';
						return (
							this.walk(function (chunk) {
								str += chunk;
							}),
							str
						);
					}),
				(SourceNode.prototype.toStringWithSourceMap =
					function SourceNode_toStringWithSourceMap(aArgs) {
						var generated = { code: '', line: 1, column: 0 },
							map = new SourceMapGenerator(aArgs),
							sourceMappingActive = !1,
							lastOriginalSource = null,
							lastOriginalLine = null,
							lastOriginalColumn = null,
							lastOriginalName = null;
						return (
							this.walk(function (chunk, original) {
								(generated.code += chunk),
									null !== original.source &&
									null !== original.line &&
									null !== original.column
										? ((lastOriginalSource ===
												original.source &&
												lastOriginalLine ===
													original.line &&
												lastOriginalColumn ===
													original.column &&
												lastOriginalName ===
													original.name) ||
												map.addMapping({
													source: original.source,
													original: {
														line: original.line,
														column: original.column,
													},
													generated: {
														line: generated.line,
														column: generated.column,
													},
													name: original.name,
												}),
										  (lastOriginalSource =
												original.source),
										  (lastOriginalLine = original.line),
										  (lastOriginalColumn =
												original.column),
										  (lastOriginalName = original.name),
										  (sourceMappingActive = !0))
										: sourceMappingActive &&
										  (map.addMapping({
												generated: {
													line: generated.line,
													column: generated.column,
												},
										  }),
										  (lastOriginalSource = null),
										  (sourceMappingActive = !1));
								for (
									var idx = 0, length = chunk.length;
									idx < length;
									idx++
								)
									10 === chunk.charCodeAt(idx)
										? (generated.line++,
										  (generated.column = 0),
										  idx + 1 === length
												? ((lastOriginalSource = null),
												  (sourceMappingActive = !1))
												: sourceMappingActive &&
												  map.addMapping({
														source: original.source,
														original: {
															line: original.line,
															column: original.column,
														},
														generated: {
															line: generated.line,
															column: generated.column,
														},
														name: original.name,
												  }))
										: generated.column++;
							}),
							this.walkSourceContents(function (
								sourceFile,
								sourceContent,
							) {
								map.setSourceContent(sourceFile, sourceContent);
							}),
							{ code: generated.code, map }
						);
					}),
				(exports.SourceNode = SourceNode);
		},
		'./node_modules/source-map/lib/util.js': (
			__unused_webpack_module,
			exports,
		) => {
			exports.getArg = function getArg(aArgs, aName, aDefaultValue) {
				if (aName in aArgs) return aArgs[aName];
				if (3 === arguments.length) return aDefaultValue;
				throw new Error('"' + aName + '" is a required argument.');
			};
			var urlRegexp =
					/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,
				dataUrlRegexp = /^data:.+\,.+$/;
			function urlParse(aUrl) {
				var match = aUrl.match(urlRegexp);
				return match
					? {
							scheme: match[1],
							auth: match[2],
							host: match[3],
							port: match[4],
							path: match[5],
					  }
					: null;
			}
			function urlGenerate(aParsedUrl) {
				var url = '';
				return (
					aParsedUrl.scheme && (url += aParsedUrl.scheme + ':'),
					(url += '//'),
					aParsedUrl.auth && (url += aParsedUrl.auth + '@'),
					aParsedUrl.host && (url += aParsedUrl.host),
					aParsedUrl.port && (url += ':' + aParsedUrl.port),
					aParsedUrl.path && (url += aParsedUrl.path),
					url
				);
			}
			function normalize(aPath) {
				var path = aPath,
					url = urlParse(aPath);
				if (url) {
					if (!url.path) return aPath;
					path = url.path;
				}
				for (
					var part,
						isAbsolute = exports.isAbsolute(path),
						parts = path.split(/\/+/),
						up = 0,
						i = parts.length - 1;
					i >= 0;
					i--
				)
					'.' === (part = parts[i])
						? parts.splice(i, 1)
						: '..' === part
						? up++
						: up > 0 &&
						  ('' === part
								? (parts.splice(i + 1, up), (up = 0))
								: (parts.splice(i, 2), up--));
				return (
					'' === (path = parts.join('/')) &&
						(path = isAbsolute ? '/' : '.'),
					url ? ((url.path = path), urlGenerate(url)) : path
				);
			}
			function join(aRoot, aPath) {
				'' === aRoot && (aRoot = '.'), '' === aPath && (aPath = '.');
				var aPathUrl = urlParse(aPath),
					aRootUrl = urlParse(aRoot);
				if (
					(aRootUrl && (aRoot = aRootUrl.path || '/'),
					aPathUrl && !aPathUrl.scheme)
				)
					return (
						aRootUrl && (aPathUrl.scheme = aRootUrl.scheme),
						urlGenerate(aPathUrl)
					);
				if (aPathUrl || aPath.match(dataUrlRegexp)) return aPath;
				if (aRootUrl && !aRootUrl.host && !aRootUrl.path)
					return (aRootUrl.host = aPath), urlGenerate(aRootUrl);
				var joined =
					'/' === aPath.charAt(0)
						? aPath
						: normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);
				return aRootUrl
					? ((aRootUrl.path = joined), urlGenerate(aRootUrl))
					: joined;
			}
			(exports.urlParse = urlParse),
				(exports.urlGenerate = urlGenerate),
				(exports.normalize = normalize),
				(exports.join = join),
				(exports.isAbsolute = function (aPath) {
					return '/' === aPath.charAt(0) || urlRegexp.test(aPath);
				}),
				(exports.relative = function relative(aRoot, aPath) {
					'' === aRoot && (aRoot = '.'),
						(aRoot = aRoot.replace(/\/$/, ''));
					for (var level = 0; 0 !== aPath.indexOf(aRoot + '/'); ) {
						var index = aRoot.lastIndexOf('/');
						if (index < 0) return aPath;
						if (
							(aRoot = aRoot.slice(0, index)).match(
								/^([^\/]+:\/)?\/*$/,
							)
						)
							return aPath;
						++level;
					}
					return (
						Array(level + 1).join('../') +
						aPath.substr(aRoot.length + 1)
					);
				});
			var supportsNullProto = !('__proto__' in Object.create(null));
			function identity(s) {
				return s;
			}
			function isProtoString(s) {
				if (!s) return !1;
				var length = s.length;
				if (length < 9) return !1;
				if (
					95 !== s.charCodeAt(length - 1) ||
					95 !== s.charCodeAt(length - 2) ||
					111 !== s.charCodeAt(length - 3) ||
					116 !== s.charCodeAt(length - 4) ||
					111 !== s.charCodeAt(length - 5) ||
					114 !== s.charCodeAt(length - 6) ||
					112 !== s.charCodeAt(length - 7) ||
					95 !== s.charCodeAt(length - 8) ||
					95 !== s.charCodeAt(length - 9)
				)
					return !1;
				for (var i = length - 10; i >= 0; i--)
					if (36 !== s.charCodeAt(i)) return !1;
				return !0;
			}
			function strcmp(aStr1, aStr2) {
				return aStr1 === aStr2
					? 0
					: null === aStr1
					? 1
					: null === aStr2
					? -1
					: aStr1 > aStr2
					? 1
					: -1;
			}
			(exports.toSetString = supportsNullProto
				? identity
				: function toSetString(aStr) {
						return isProtoString(aStr) ? '$' + aStr : aStr;
				  }),
				(exports.fromSetString = supportsNullProto
					? identity
					: function fromSetString(aStr) {
							return isProtoString(aStr) ? aStr.slice(1) : aStr;
					  }),
				(exports.compareByOriginalPositions =
					function compareByOriginalPositions(
						mappingA,
						mappingB,
						onlyCompareOriginal,
					) {
						var cmp = strcmp(mappingA.source, mappingB.source);
						return 0 !== cmp ||
							0 !==
								(cmp =
									mappingA.originalLine -
									mappingB.originalLine) ||
							0 !==
								(cmp =
									mappingA.originalColumn -
									mappingB.originalColumn) ||
							onlyCompareOriginal ||
							0 !==
								(cmp =
									mappingA.generatedColumn -
									mappingB.generatedColumn) ||
							0 !==
								(cmp =
									mappingA.generatedLine -
									mappingB.generatedLine)
							? cmp
							: strcmp(mappingA.name, mappingB.name);
					}),
				(exports.compareByGeneratedPositionsDeflated =
					function compareByGeneratedPositionsDeflated(
						mappingA,
						mappingB,
						onlyCompareGenerated,
					) {
						var cmp =
							mappingA.generatedLine - mappingB.generatedLine;
						return 0 !== cmp ||
							0 !==
								(cmp =
									mappingA.generatedColumn -
									mappingB.generatedColumn) ||
							onlyCompareGenerated ||
							0 !==
								(cmp = strcmp(
									mappingA.source,
									mappingB.source,
								)) ||
							0 !==
								(cmp =
									mappingA.originalLine -
									mappingB.originalLine) ||
							0 !==
								(cmp =
									mappingA.originalColumn -
									mappingB.originalColumn)
							? cmp
							: strcmp(mappingA.name, mappingB.name);
					}),
				(exports.compareByGeneratedPositionsInflated =
					function compareByGeneratedPositionsInflated(
						mappingA,
						mappingB,
					) {
						var cmp =
							mappingA.generatedLine - mappingB.generatedLine;
						return 0 !== cmp ||
							0 !==
								(cmp =
									mappingA.generatedColumn -
									mappingB.generatedColumn) ||
							0 !==
								(cmp = strcmp(
									mappingA.source,
									mappingB.source,
								)) ||
							0 !==
								(cmp =
									mappingA.originalLine -
									mappingB.originalLine) ||
							0 !==
								(cmp =
									mappingA.originalColumn -
									mappingB.originalColumn)
							? cmp
							: strcmp(mappingA.name, mappingB.name);
					}),
				(exports.parseSourceMapInput = function parseSourceMapInput(
					str,
				) {
					return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
				}),
				(exports.computeSourceURL = function computeSourceURL(
					sourceRoot,
					sourceURL,
					sourceMapURL,
				) {
					if (
						((sourceURL = sourceURL || ''),
						sourceRoot &&
							('/' !== sourceRoot[sourceRoot.length - 1] &&
								'/' !== sourceURL[0] &&
								(sourceRoot += '/'),
							(sourceURL = sourceRoot + sourceURL)),
						sourceMapURL)
					) {
						var parsed = urlParse(sourceMapURL);
						if (!parsed)
							throw new Error('sourceMapURL could not be parsed');
						if (parsed.path) {
							var index = parsed.path.lastIndexOf('/');
							index >= 0 &&
								(parsed.path = parsed.path.substring(
									0,
									index + 1,
								));
						}
						sourceURL = join(urlGenerate(parsed), sourceURL);
					}
					return normalize(sourceURL);
				});
		},
		'./node_modules/source-map/source-map.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			__webpack_require__(
				'./node_modules/source-map/lib/source-map-generator.js',
			).h,
				__webpack_require__(
					'./node_modules/source-map/lib/source-map-consumer.js',
				),
				(exports.SourceNode = __webpack_require__(
					'./node_modules/source-map/lib/source-node.js',
				).SourceNode);
		},
		'./node_modules/strict-event-emitter/lib/index.mjs': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			__webpack_require__.d(__webpack_exports__, { Q: () => Emitter });
			var MemoryLeakError = class extends Error {
					constructor(emitter, type, count) {
						super(
							`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`,
						),
							(this.emitter = emitter),
							(this.type = type),
							(this.count = count),
							(this.name = 'MaxListenersExceededWarning');
					}
				},
				_Emitter = class {
					static listenerCount(emitter, eventName) {
						return emitter.listenerCount(eventName);
					}
					constructor() {
						(this.events = new Map()),
							(this.maxListeners = _Emitter.defaultMaxListeners),
							(this.hasWarnedAboutPotentialMemoryLeak = !1);
					}
					_emitInternalEvent(internalEventName, eventName, listener) {
						this.emit(internalEventName, eventName, listener);
					}
					_getListeners(eventName) {
						return (
							Array.prototype.concat.apply(
								[],
								this.events.get(eventName),
							) || []
						);
					}
					_removeListener(listeners, listener) {
						const index = listeners.indexOf(listener);
						return index > -1 && listeners.splice(index, 1), [];
					}
					_wrapOnceListener(eventName, listener) {
						const onceListener = (...data) => (
							this.removeListener(eventName, onceListener),
							listener.apply(this, data)
						);
						return (
							Object.defineProperty(onceListener, 'name', {
								value: listener.name,
							}),
							onceListener
						);
					}
					setMaxListeners(maxListeners) {
						return (this.maxListeners = maxListeners), this;
					}
					getMaxListeners() {
						return this.maxListeners;
					}
					eventNames() {
						return Array.from(this.events.keys());
					}
					emit(eventName, ...data) {
						const listeners = this._getListeners(eventName);
						return (
							listeners.forEach((listener) => {
								listener.apply(this, data);
							}),
							listeners.length > 0
						);
					}
					addListener(eventName, listener) {
						this._emitInternalEvent(
							'newListener',
							eventName,
							listener,
						);
						const nextListeners =
							this._getListeners(eventName).concat(listener);
						if (
							(this.events.set(eventName, nextListeners),
							this.maxListeners > 0 &&
								this.listenerCount(eventName) >
									this.maxListeners &&
								!this.hasWarnedAboutPotentialMemoryLeak)
						) {
							this.hasWarnedAboutPotentialMemoryLeak = !0;
							const memoryLeakWarning = new MemoryLeakError(
								this,
								eventName,
								this.listenerCount(eventName),
							);
							console.warn(memoryLeakWarning);
						}
						return this;
					}
					on(eventName, listener) {
						return this.addListener(eventName, listener);
					}
					once(eventName, listener) {
						return this.addListener(
							eventName,
							this._wrapOnceListener(eventName, listener),
						);
					}
					prependListener(eventName, listener) {
						const listeners = this._getListeners(eventName);
						if (listeners.length > 0) {
							const nextListeners = [listener].concat(listeners);
							this.events.set(eventName, nextListeners);
						} else
							this.events.set(
								eventName,
								listeners.concat(listener),
							);
						return this;
					}
					prependOnceListener(eventName, listener) {
						return this.prependListener(
							eventName,
							this._wrapOnceListener(eventName, listener),
						);
					}
					removeListener(eventName, listener) {
						const listeners = this._getListeners(eventName);
						return (
							listeners.length > 0 &&
								(this._removeListener(listeners, listener),
								this.events.set(eventName, listeners),
								this._emitInternalEvent(
									'removeListener',
									eventName,
									listener,
								)),
							this
						);
					}
					off(eventName, listener) {
						return this.removeListener(eventName, listener);
					}
					removeAllListeners(eventName) {
						return (
							eventName
								? this.events.delete(eventName)
								: this.events.clear(),
							this
						);
					}
					listeners(eventName) {
						return Array.from(this._getListeners(eventName));
					}
					listenerCount(eventName) {
						return this._getListeners(eventName).length;
					}
					rawListeners(eventName) {
						return this.listeners(eventName);
					}
				},
				Emitter = _Emitter;
			Emitter.defaultMaxListeners = 10;
		},
		'./node_modules/ts-dedent/esm/index.js': (
			__unused_webpack_module,
			__webpack_exports__,
			__webpack_require__,
		) => {
			'use strict';
			function dedent(templ) {
				for (var values = [], _i = 1; _i < arguments.length; _i++)
					values[_i - 1] = arguments[_i];
				var strings = Array.from(
					'string' == typeof templ ? [templ] : templ,
				);
				strings[strings.length - 1] = strings[
					strings.length - 1
				].replace(/\r?\n([\t ]*)$/, '');
				var indentLengths = strings.reduce(function (arr, str) {
					var matches = str.match(/\n([\t ]+|(?!\s).)/g);
					return matches
						? arr.concat(
								matches.map(function (match) {
									var _a, _b;
									return null !==
										(_b =
											null ===
												(_a = match.match(/[\t ]/g)) ||
											void 0 === _a
												? void 0
												: _a.length) && void 0 !== _b
										? _b
										: 0;
								}),
						  )
						: arr;
				}, []);
				if (indentLengths.length) {
					var pattern_1 = new RegExp(
						'\n[\t ]{' + Math.min.apply(Math, indentLengths) + '}',
						'g',
					);
					strings = strings.map(function (str) {
						return str.replace(pattern_1, '\n');
					});
				}
				strings[0] = strings[0].replace(/^\r?\n/, '');
				var string = strings[0];
				return (
					values.forEach(function (value, i) {
						var endentations = string.match(/(?:^|\n)( *)$/),
							endentation = endentations ? endentations[1] : '',
							indentedValue = value;
						'string' == typeof value &&
							value.includes('\n') &&
							(indentedValue = String(value)
								.split('\n')
								.map(function (str, i) {
									return 0 === i
										? str
										: '' + endentation + str;
								})
								.join('\n')),
							(string += indentedValue + strings[i + 1]);
					}),
					string
				);
			}
			__webpack_require__.d(__webpack_exports__, {
				C: () => __WEBPACK_DEFAULT_EXPORT__,
				Z: () => dedent,
			});
			const __WEBPACK_DEFAULT_EXPORT__ = dedent;
		},
		'./node_modules/url/node_modules/punycode/punycode.js': function (
			module,
			exports,
			__webpack_require__,
		) {
			var __WEBPACK_AMD_DEFINE_RESULT__;
			(module = __webpack_require__.nmd(module)),
				(function (root) {
					exports && exports.nodeType, module && module.nodeType;
					var freeGlobal =
						'object' == typeof __webpack_require__.g &&
						__webpack_require__.g;
					freeGlobal.global !== freeGlobal &&
						freeGlobal.window !== freeGlobal &&
						freeGlobal.self;
					var punycode,
						maxInt = 2147483647,
						base = 36,
						tMin = 1,
						tMax = 26,
						skew = 38,
						damp = 700,
						initialBias = 72,
						initialN = 128,
						delimiter = '-',
						regexPunycode = /^xn--/,
						regexNonASCII = /[^\x20-\x7E]/,
						regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
						errors = {
							overflow:
								'Overflow: input needs wider integers to process',
							'not-basic':
								'Illegal input >= 0x80 (not a basic code point)',
							'invalid-input': 'Invalid input',
						},
						baseMinusTMin = base - tMin,
						floor = Math.floor,
						stringFromCharCode = String.fromCharCode;
					function error(type) {
						throw new RangeError(errors[type]);
					}
					function map(array, fn) {
						for (var length = array.length, result = []; length--; )
							result[length] = fn(array[length]);
						return result;
					}
					function mapDomain(string, fn) {
						var parts = string.split('@'),
							result = '';
						return (
							parts.length > 1 &&
								((result = parts[0] + '@'),
								(string = parts[1])),
							result +
								map(
									(string = string.replace(
										regexSeparators,
										'.',
									)).split('.'),
									fn,
								).join('.')
						);
					}
					function ucs2decode(string) {
						for (
							var value,
								extra,
								output = [],
								counter = 0,
								length = string.length;
							counter < length;

						)
							(value = string.charCodeAt(counter++)) >= 55296 &&
							value <= 56319 &&
							counter < length
								? 56320 ==
								  (64512 &
										(extra = string.charCodeAt(counter++)))
									? output.push(
											((1023 & value) << 10) +
												(1023 & extra) +
												65536,
									  )
									: (output.push(value), counter--)
								: output.push(value);
						return output;
					}
					function ucs2encode(array) {
						return map(array, function (value) {
							var output = '';
							return (
								value > 65535 &&
									((output += stringFromCharCode(
										(((value -= 65536) >>> 10) & 1023) |
											55296,
									)),
									(value = 56320 | (1023 & value))),
								(output += stringFromCharCode(value))
							);
						}).join('');
					}
					function digitToBasic(digit, flag) {
						return (
							digit + 22 + 75 * (digit < 26) - ((0 != flag) << 5)
						);
					}
					function adapt(delta, numPoints, firstTime) {
						var k = 0;
						for (
							delta = firstTime
								? floor(delta / damp)
								: delta >> 1,
								delta += floor(delta / numPoints);
							delta > (baseMinusTMin * tMax) >> 1;
							k += base
						)
							delta = floor(delta / baseMinusTMin);
						return floor(
							k + ((baseMinusTMin + 1) * delta) / (delta + skew),
						);
					}
					function decode(input) {
						var out,
							basic,
							j,
							index,
							oldi,
							w,
							k,
							digit,
							t,
							baseMinusT,
							codePoint,
							output = [],
							inputLength = input.length,
							i = 0,
							n = initialN,
							bias = initialBias;
						for (
							(basic = input.lastIndexOf(delimiter)) < 0 &&
								(basic = 0),
								j = 0;
							j < basic;
							++j
						)
							input.charCodeAt(j) >= 128 && error('not-basic'),
								output.push(input.charCodeAt(j));
						for (
							index = basic > 0 ? basic + 1 : 0;
							index < inputLength;

						) {
							for (
								oldi = i, w = 1, k = base;
								index >= inputLength && error('invalid-input'),
									((digit =
										(codePoint = input.charCodeAt(
											index++,
										)) -
											48 <
										10
											? codePoint - 22
											: codePoint - 65 < 26
											? codePoint - 65
											: codePoint - 97 < 26
											? codePoint - 97
											: base) >= base ||
										digit > floor((maxInt - i) / w)) &&
										error('overflow'),
									(i += digit * w),
									!(
										digit <
										(t =
											k <= bias
												? tMin
												: k >= bias + tMax
												? tMax
												: k - bias)
									);
								k += base
							)
								w > floor(maxInt / (baseMinusT = base - t)) &&
									error('overflow'),
									(w *= baseMinusT);
							(bias = adapt(
								i - oldi,
								(out = output.length + 1),
								0 == oldi,
							)),
								floor(i / out) > maxInt - n &&
									error('overflow'),
								(n += floor(i / out)),
								(i %= out),
								output.splice(i++, 0, n);
						}
						return ucs2encode(output);
					}
					function encode(input) {
						var n,
							delta,
							handledCPCount,
							basicLength,
							bias,
							j,
							m,
							q,
							k,
							t,
							currentValue,
							inputLength,
							handledCPCountPlusOne,
							baseMinusT,
							qMinusT,
							output = [];
						for (
							inputLength = (input = ucs2decode(input)).length,
								n = initialN,
								delta = 0,
								bias = initialBias,
								j = 0;
							j < inputLength;
							++j
						)
							(currentValue = input[j]) < 128 &&
								output.push(stringFromCharCode(currentValue));
						for (
							handledCPCount = basicLength = output.length,
								basicLength && output.push(delimiter);
							handledCPCount < inputLength;

						) {
							for (m = maxInt, j = 0; j < inputLength; ++j)
								(currentValue = input[j]) >= n &&
									currentValue < m &&
									(m = currentValue);
							for (
								m - n >
									floor(
										(maxInt - delta) /
											(handledCPCountPlusOne =
												handledCPCount + 1),
									) && error('overflow'),
									delta += (m - n) * handledCPCountPlusOne,
									n = m,
									j = 0;
								j < inputLength;
								++j
							)
								if (
									((currentValue = input[j]) < n &&
										++delta > maxInt &&
										error('overflow'),
									currentValue == n)
								) {
									for (
										q = delta, k = base;
										!(
											q <
											(t =
												k <= bias
													? tMin
													: k >= bias + tMax
													? tMax
													: k - bias)
										);
										k += base
									)
										(qMinusT = q - t),
											(baseMinusT = base - t),
											output.push(
												stringFromCharCode(
													digitToBasic(
														t +
															(qMinusT %
																baseMinusT),
														0,
													),
												),
											),
											(q = floor(qMinusT / baseMinusT));
									output.push(
										stringFromCharCode(digitToBasic(q, 0)),
									),
										(bias = adapt(
											delta,
											handledCPCountPlusOne,
											handledCPCount == basicLength,
										)),
										(delta = 0),
										++handledCPCount;
								}
							++delta, ++n;
						}
						return output.join('');
					}
					(punycode = {
						version: '1.4.1',
						ucs2: { decode: ucs2decode, encode: ucs2encode },
						decode,
						encode,
						toASCII: function toASCII(input) {
							return mapDomain(input, function (string) {
								return regexNonASCII.test(string)
									? 'xn--' + encode(string)
									: string;
							});
						},
						toUnicode: function toUnicode(input) {
							return mapDomain(input, function (string) {
								return regexPunycode.test(string)
									? decode(string.slice(4).toLowerCase())
									: string;
							});
						},
					}),
						void 0 ===
							(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
								return punycode;
							}.call(
								exports,
								__webpack_require__,
								exports,
								module,
							)) ||
							(module.exports = __WEBPACK_AMD_DEFINE_RESULT__);
				})();
		},
		'./node_modules/url/url.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var punycode = __webpack_require__(
				'./node_modules/url/node_modules/punycode/punycode.js',
			);
			function Url() {
				(this.protocol = null),
					(this.slashes = null),
					(this.auth = null),
					(this.host = null),
					(this.port = null),
					(this.hostname = null),
					(this.hash = null),
					(this.search = null),
					(this.query = null),
					(this.pathname = null),
					(this.path = null),
					(this.href = null);
			}
			var protocolPattern = /^([a-z0-9.+-]+:)/i,
				portPattern = /:[0-9]*$/,
				simplePathPattern = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/,
				unwise = ['{', '}', '|', '\\', '^', '`'].concat([
					'<',
					'>',
					'"',
					'`',
					' ',
					'\r',
					'\n',
					'\t',
				]),
				autoEscape = ["'"].concat(unwise),
				nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
				hostEndingChars = ['/', '?', '#'],
				hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
				hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
				unsafeProtocol = { javascript: !0, 'javascript:': !0 },
				hostlessProtocol = { javascript: !0, 'javascript:': !0 },
				slashedProtocol = {
					http: !0,
					https: !0,
					ftp: !0,
					gopher: !0,
					file: !0,
					'http:': !0,
					'https:': !0,
					'ftp:': !0,
					'gopher:': !0,
					'file:': !0,
				},
				querystring = __webpack_require__(
					'./node_modules/qs/lib/index.js',
				);
			function urlParse(url, parseQueryString, slashesDenoteHost) {
				if (url && 'object' == typeof url && url instanceof Url)
					return url;
				var u = new Url();
				return u.parse(url, parseQueryString, slashesDenoteHost), u;
			}
			(Url.prototype.parse = function (
				url,
				parseQueryString,
				slashesDenoteHost,
			) {
				if ('string' != typeof url)
					throw new TypeError(
						"Parameter 'url' must be a string, not " + typeof url,
					);
				var queryIndex = url.indexOf('?'),
					splitter =
						-1 !== queryIndex && queryIndex < url.indexOf('#')
							? '?'
							: '#',
					uSplit = url.split(splitter);
				uSplit[0] = uSplit[0].replace(/\\/g, '/');
				var rest = (url = uSplit.join(splitter));
				if (
					((rest = rest.trim()),
					!slashesDenoteHost && 1 === url.split('#').length)
				) {
					var simplePath = simplePathPattern.exec(rest);
					if (simplePath)
						return (
							(this.path = rest),
							(this.href = rest),
							(this.pathname = simplePath[1]),
							simplePath[2]
								? ((this.search = simplePath[2]),
								  (this.query = parseQueryString
										? querystring.parse(
												this.search.substr(1),
										  )
										: this.search.substr(1)))
								: parseQueryString &&
								  ((this.search = ''), (this.query = {})),
							this
						);
				}
				var proto = protocolPattern.exec(rest);
				if (proto) {
					var lowerProto = (proto = proto[0]).toLowerCase();
					(this.protocol = lowerProto),
						(rest = rest.substr(proto.length));
				}
				if (
					slashesDenoteHost ||
					proto ||
					rest.match(/^\/\/[^@/]+@[^@/]+/)
				) {
					var slashes = '//' === rest.substr(0, 2);
					!slashes ||
						(proto && hostlessProtocol[proto]) ||
						((rest = rest.substr(2)), (this.slashes = !0));
				}
				if (
					!hostlessProtocol[proto] &&
					(slashes || (proto && !slashedProtocol[proto]))
				) {
					for (
						var auth, atSign, hostEnd = -1, i = 0;
						i < hostEndingChars.length;
						i++
					) {
						-1 !== (hec = rest.indexOf(hostEndingChars[i])) &&
							(-1 === hostEnd || hec < hostEnd) &&
							(hostEnd = hec);
					}
					-1 !==
						(atSign =
							-1 === hostEnd
								? rest.lastIndexOf('@')
								: rest.lastIndexOf('@', hostEnd)) &&
						((auth = rest.slice(0, atSign)),
						(rest = rest.slice(atSign + 1)),
						(this.auth = decodeURIComponent(auth))),
						(hostEnd = -1);
					for (i = 0; i < nonHostChars.length; i++) {
						var hec;
						-1 !== (hec = rest.indexOf(nonHostChars[i])) &&
							(-1 === hostEnd || hec < hostEnd) &&
							(hostEnd = hec);
					}
					-1 === hostEnd && (hostEnd = rest.length),
						(this.host = rest.slice(0, hostEnd)),
						(rest = rest.slice(hostEnd)),
						this.parseHost(),
						(this.hostname = this.hostname || '');
					var ipv6Hostname =
						'[' === this.hostname[0] &&
						']' === this.hostname[this.hostname.length - 1];
					if (!ipv6Hostname)
						for (
							var hostparts = this.hostname.split(/\./),
								l = ((i = 0), hostparts.length);
							i < l;
							i++
						) {
							var part = hostparts[i];
							if (part && !part.match(hostnamePartPattern)) {
								for (
									var newpart = '', j = 0, k = part.length;
									j < k;
									j++
								)
									part.charCodeAt(j) > 127
										? (newpart += 'x')
										: (newpart += part[j]);
								if (!newpart.match(hostnamePartPattern)) {
									var validParts = hostparts.slice(0, i),
										notHost = hostparts.slice(i + 1),
										bit = part.match(hostnamePartStart);
									bit &&
										(validParts.push(bit[1]),
										notHost.unshift(bit[2])),
										notHost.length &&
											(rest =
												'/' + notHost.join('.') + rest),
										(this.hostname = validParts.join('.'));
									break;
								}
							}
						}
					this.hostname.length > 255
						? (this.hostname = '')
						: (this.hostname = this.hostname.toLowerCase()),
						ipv6Hostname ||
							(this.hostname = punycode.toASCII(this.hostname));
					var p = this.port ? ':' + this.port : '',
						h = this.hostname || '';
					(this.host = h + p),
						(this.href += this.host),
						ipv6Hostname &&
							((this.hostname = this.hostname.substr(
								1,
								this.hostname.length - 2,
							)),
							'/' !== rest[0] && (rest = '/' + rest));
				}
				if (!unsafeProtocol[lowerProto])
					for (i = 0, l = autoEscape.length; i < l; i++) {
						var ae = autoEscape[i];
						if (-1 !== rest.indexOf(ae)) {
							var esc = encodeURIComponent(ae);
							esc === ae && (esc = escape(ae)),
								(rest = rest.split(ae).join(esc));
						}
					}
				var hash = rest.indexOf('#');
				-1 !== hash &&
					((this.hash = rest.substr(hash)),
					(rest = rest.slice(0, hash)));
				var qm = rest.indexOf('?');
				if (
					(-1 !== qm
						? ((this.search = rest.substr(qm)),
						  (this.query = rest.substr(qm + 1)),
						  parseQueryString &&
								(this.query = querystring.parse(this.query)),
						  (rest = rest.slice(0, qm)))
						: parseQueryString &&
						  ((this.search = ''), (this.query = {})),
					rest && (this.pathname = rest),
					slashedProtocol[lowerProto] &&
						this.hostname &&
						!this.pathname &&
						(this.pathname = '/'),
					this.pathname || this.search)
				) {
					p = this.pathname || '';
					var s = this.search || '';
					this.path = p + s;
				}
				return (this.href = this.format()), this;
			}),
				(Url.prototype.format = function () {
					var auth = this.auth || '';
					auth &&
						((auth = (auth = encodeURIComponent(auth)).replace(
							/%3A/i,
							':',
						)),
						(auth += '@'));
					var protocol = this.protocol || '',
						pathname = this.pathname || '',
						hash = this.hash || '',
						host = !1,
						query = '';
					this.host
						? (host = auth + this.host)
						: this.hostname &&
						  ((host =
								auth +
								(-1 === this.hostname.indexOf(':')
									? this.hostname
									: '[' + this.hostname + ']')),
						  this.port && (host += ':' + this.port)),
						this.query &&
							'object' == typeof this.query &&
							Object.keys(this.query).length &&
							(query = querystring.stringify(this.query));
					var search = this.search || (query && '?' + query) || '';
					return (
						protocol &&
							':' !== protocol.substr(-1) &&
							(protocol += ':'),
						this.slashes ||
						((!protocol || slashedProtocol[protocol]) &&
							!1 !== host)
							? ((host = '//' + (host || '')),
							  pathname &&
									'/' !== pathname.charAt(0) &&
									(pathname = '/' + pathname))
							: host || (host = ''),
						hash && '#' !== hash.charAt(0) && (hash = '#' + hash),
						search &&
							'?' !== search.charAt(0) &&
							(search = '?' + search),
						protocol +
							host +
							(pathname = pathname.replace(
								/[?#]/g,
								function (match) {
									return encodeURIComponent(match);
								},
							)) +
							(search = search.replace('#', '%23')) +
							hash
					);
				}),
				(Url.prototype.resolve = function (relative) {
					return this.resolveObject(
						urlParse(relative, !1, !0),
					).format();
				}),
				(Url.prototype.resolveObject = function (relative) {
					if ('string' == typeof relative) {
						var rel = new Url();
						rel.parse(relative, !1, !0), (relative = rel);
					}
					for (
						var result = new Url(),
							tkeys = Object.keys(this),
							tk = 0;
						tk < tkeys.length;
						tk++
					) {
						var tkey = tkeys[tk];
						result[tkey] = this[tkey];
					}
					if (((result.hash = relative.hash), '' === relative.href))
						return (result.href = result.format()), result;
					if (relative.slashes && !relative.protocol) {
						for (
							var rkeys = Object.keys(relative), rk = 0;
							rk < rkeys.length;
							rk++
						) {
							var rkey = rkeys[rk];
							'protocol' !== rkey &&
								(result[rkey] = relative[rkey]);
						}
						return (
							slashedProtocol[result.protocol] &&
								result.hostname &&
								!result.pathname &&
								((result.pathname = '/'),
								(result.path = result.pathname)),
							(result.href = result.format()),
							result
						);
					}
					if (
						relative.protocol &&
						relative.protocol !== result.protocol
					) {
						if (!slashedProtocol[relative.protocol]) {
							for (
								var keys = Object.keys(relative), v = 0;
								v < keys.length;
								v++
							) {
								var k = keys[v];
								result[k] = relative[k];
							}
							return (result.href = result.format()), result;
						}
						if (
							((result.protocol = relative.protocol),
							relative.host ||
								hostlessProtocol[relative.protocol])
						)
							result.pathname = relative.pathname;
						else {
							for (
								var relPath = (relative.pathname || '').split(
									'/',
								);
								relPath.length &&
								!(relative.host = relPath.shift());

							);
							relative.host || (relative.host = ''),
								relative.hostname || (relative.hostname = ''),
								'' !== relPath[0] && relPath.unshift(''),
								relPath.length < 2 && relPath.unshift(''),
								(result.pathname = relPath.join('/'));
						}
						if (
							((result.search = relative.search),
							(result.query = relative.query),
							(result.host = relative.host || ''),
							(result.auth = relative.auth),
							(result.hostname =
								relative.hostname || relative.host),
							(result.port = relative.port),
							result.pathname || result.search)
						) {
							var p = result.pathname || '',
								s = result.search || '';
							result.path = p + s;
						}
						return (
							(result.slashes =
								result.slashes || relative.slashes),
							(result.href = result.format()),
							result
						);
					}
					var isSourceAbs =
							result.pathname &&
							'/' === result.pathname.charAt(0),
						isRelAbs =
							relative.host ||
							(relative.pathname &&
								'/' === relative.pathname.charAt(0)),
						mustEndAbs =
							isRelAbs ||
							isSourceAbs ||
							(result.host && relative.pathname),
						removeAllDots = mustEndAbs,
						srcPath =
							(result.pathname && result.pathname.split('/')) ||
							[],
						psychotic =
							((relPath =
								(relative.pathname &&
									relative.pathname.split('/')) ||
								[]),
							result.protocol &&
								!slashedProtocol[result.protocol]);
					if (
						(psychotic &&
							((result.hostname = ''),
							(result.port = null),
							result.host &&
								('' === srcPath[0]
									? (srcPath[0] = result.host)
									: srcPath.unshift(result.host)),
							(result.host = ''),
							relative.protocol &&
								((relative.hostname = null),
								(relative.port = null),
								relative.host &&
									('' === relPath[0]
										? (relPath[0] = relative.host)
										: relPath.unshift(relative.host)),
								(relative.host = null)),
							(mustEndAbs =
								mustEndAbs &&
								('' === relPath[0] || '' === srcPath[0]))),
						isRelAbs)
					)
						(result.host =
							relative.host || '' === relative.host
								? relative.host
								: result.host),
							(result.hostname =
								relative.hostname || '' === relative.hostname
									? relative.hostname
									: result.hostname),
							(result.search = relative.search),
							(result.query = relative.query),
							(srcPath = relPath);
					else if (relPath.length)
						srcPath || (srcPath = []),
							srcPath.pop(),
							(srcPath = srcPath.concat(relPath)),
							(result.search = relative.search),
							(result.query = relative.query);
					else if (null != relative.search) {
						if (psychotic)
							(result.host = srcPath.shift()),
								(result.hostname = result.host),
								(authInHost =
									!!(
										result.host &&
										result.host.indexOf('@') > 0
									) && result.host.split('@')) &&
									((result.auth = authInHost.shift()),
									(result.hostname = authInHost.shift()),
									(result.host = result.hostname));
						return (
							(result.search = relative.search),
							(result.query = relative.query),
							(null === result.pathname &&
								null === result.search) ||
								(result.path =
									(result.pathname ? result.pathname : '') +
									(result.search ? result.search : '')),
							(result.href = result.format()),
							result
						);
					}
					if (!srcPath.length)
						return (
							(result.pathname = null),
							result.search
								? (result.path = '/' + result.search)
								: (result.path = null),
							(result.href = result.format()),
							result
						);
					for (
						var last = srcPath.slice(-1)[0],
							hasTrailingSlash =
								((result.host ||
									relative.host ||
									srcPath.length > 1) &&
									('.' === last || '..' === last)) ||
								'' === last,
							up = 0,
							i = srcPath.length;
						i >= 0;
						i--
					)
						'.' === (last = srcPath[i])
							? srcPath.splice(i, 1)
							: '..' === last
							? (srcPath.splice(i, 1), up++)
							: up && (srcPath.splice(i, 1), up--);
					if (!mustEndAbs && !removeAllDots)
						for (; up--; up) srcPath.unshift('..');
					!mustEndAbs ||
						'' === srcPath[0] ||
						(srcPath[0] && '/' === srcPath[0].charAt(0)) ||
						srcPath.unshift(''),
						hasTrailingSlash &&
							'/' !== srcPath.join('/').substr(-1) &&
							srcPath.push('');
					var authInHost,
						isAbsolute =
							'' === srcPath[0] ||
							(srcPath[0] && '/' === srcPath[0].charAt(0));
					psychotic &&
						((result.hostname = isAbsolute
							? ''
							: srcPath.length
							? srcPath.shift()
							: ''),
						(result.host = result.hostname),
						(authInHost =
							!!(result.host && result.host.indexOf('@') > 0) &&
							result.host.split('@')) &&
							((result.auth = authInHost.shift()),
							(result.hostname = authInHost.shift()),
							(result.host = result.hostname)));
					return (
						(mustEndAbs =
							mustEndAbs || (result.host && srcPath.length)) &&
							!isAbsolute &&
							srcPath.unshift(''),
						srcPath.length > 0
							? (result.pathname = srcPath.join('/'))
							: ((result.pathname = null), (result.path = null)),
						(null === result.pathname && null === result.search) ||
							(result.path =
								(result.pathname ? result.pathname : '') +
								(result.search ? result.search : '')),
						(result.auth = relative.auth || result.auth),
						(result.slashes = result.slashes || relative.slashes),
						(result.href = result.format()),
						result
					);
				}),
				(Url.prototype.parseHost = function () {
					var host = this.host,
						port = portPattern.exec(host);
					port &&
						(':' !== (port = port[0]) &&
							(this.port = port.substr(1)),
						(host = host.substr(0, host.length - port.length))),
						host && (this.hostname = host);
				}),
				(exports.parse = urlParse),
				(exports.resolve = function urlResolve(source, relative) {
					return urlParse(source, !1, !0).resolve(relative);
				}),
				(exports.resolveObject = function urlResolveObject(
					source,
					relative,
				) {
					return source
						? urlParse(source, !1, !0).resolveObject(relative)
						: relative;
				}),
				(exports.format = function urlFormat(obj) {
					return (
						'string' == typeof obj && (obj = urlParse(obj)),
						obj instanceof Url
							? obj.format()
							: Url.prototype.format.call(obj)
					);
				}),
				(exports.Url = Url);
		},
		'./node_modules/util/node_modules/is-typed-array/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var whichTypedArray = __webpack_require__(
				'./node_modules/which-typed-array/index.js',
			);
			module.exports = function isTypedArray(value) {
				return !!whichTypedArray(value);
			};
		},
		'./node_modules/util/support/isBufferBrowser.js': (module) => {
			module.exports = function isBuffer(arg) {
				return (
					arg &&
					'object' == typeof arg &&
					'function' == typeof arg.copy &&
					'function' == typeof arg.fill &&
					'function' == typeof arg.readUInt8
				);
			};
		},
		'./node_modules/util/support/types.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			'use strict';
			var isArgumentsObject = __webpack_require__(
					'./node_modules/is-arguments/index.js',
				),
				isGeneratorFunction = __webpack_require__(
					'./node_modules/is-generator-function/index.js',
				),
				whichTypedArray = __webpack_require__(
					'./node_modules/which-typed-array/index.js',
				),
				isTypedArray = __webpack_require__(
					'./node_modules/util/node_modules/is-typed-array/index.js',
				);
			function uncurryThis(f) {
				return f.call.bind(f);
			}
			var BigIntSupported = 'undefined' != typeof BigInt,
				SymbolSupported = 'undefined' != typeof Symbol,
				ObjectToString = uncurryThis(Object.prototype.toString),
				numberValue = uncurryThis(Number.prototype.valueOf),
				stringValue = uncurryThis(String.prototype.valueOf),
				booleanValue = uncurryThis(Boolean.prototype.valueOf);
			if (BigIntSupported)
				var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
			if (SymbolSupported)
				var symbolValue = uncurryThis(Symbol.prototype.valueOf);
			function checkBoxedPrimitive(value, prototypeValueOf) {
				if ('object' != typeof value) return !1;
				try {
					return prototypeValueOf(value), !0;
				} catch (e) {
					return !1;
				}
			}
			function isMapToString(value) {
				return '[object Map]' === ObjectToString(value);
			}
			function isSetToString(value) {
				return '[object Set]' === ObjectToString(value);
			}
			function isWeakMapToString(value) {
				return '[object WeakMap]' === ObjectToString(value);
			}
			function isWeakSetToString(value) {
				return '[object WeakSet]' === ObjectToString(value);
			}
			function isArrayBufferToString(value) {
				return '[object ArrayBuffer]' === ObjectToString(value);
			}
			function isArrayBuffer(value) {
				return (
					'undefined' != typeof ArrayBuffer &&
					(isArrayBufferToString.working
						? isArrayBufferToString(value)
						: value instanceof ArrayBuffer)
				);
			}
			function isDataViewToString(value) {
				return '[object DataView]' === ObjectToString(value);
			}
			function isDataView(value) {
				return (
					'undefined' != typeof DataView &&
					(isDataViewToString.working
						? isDataViewToString(value)
						: value instanceof DataView)
				);
			}
			(exports.isArgumentsObject = isArgumentsObject),
				(exports.isGeneratorFunction = isGeneratorFunction),
				(exports.isTypedArray = isTypedArray),
				(exports.isPromise = function isPromise(input) {
					return (
						('undefined' != typeof Promise &&
							input instanceof Promise) ||
						(null !== input &&
							'object' == typeof input &&
							'function' == typeof input.then &&
							'function' == typeof input.catch)
					);
				}),
				(exports.isArrayBufferView = function isArrayBufferView(value) {
					return 'undefined' != typeof ArrayBuffer &&
						ArrayBuffer.isView
						? ArrayBuffer.isView(value)
						: isTypedArray(value) || isDataView(value);
				}),
				(exports.isUint8Array = function isUint8Array(value) {
					return 'Uint8Array' === whichTypedArray(value);
				}),
				(exports.isUint8ClampedArray = function isUint8ClampedArray(
					value,
				) {
					return 'Uint8ClampedArray' === whichTypedArray(value);
				}),
				(exports.isUint16Array = function isUint16Array(value) {
					return 'Uint16Array' === whichTypedArray(value);
				}),
				(exports.isUint32Array = function isUint32Array(value) {
					return 'Uint32Array' === whichTypedArray(value);
				}),
				(exports.isInt8Array = function isInt8Array(value) {
					return 'Int8Array' === whichTypedArray(value);
				}),
				(exports.isInt16Array = function isInt16Array(value) {
					return 'Int16Array' === whichTypedArray(value);
				}),
				(exports.isInt32Array = function isInt32Array(value) {
					return 'Int32Array' === whichTypedArray(value);
				}),
				(exports.isFloat32Array = function isFloat32Array(value) {
					return 'Float32Array' === whichTypedArray(value);
				}),
				(exports.isFloat64Array = function isFloat64Array(value) {
					return 'Float64Array' === whichTypedArray(value);
				}),
				(exports.isBigInt64Array = function isBigInt64Array(value) {
					return 'BigInt64Array' === whichTypedArray(value);
				}),
				(exports.isBigUint64Array = function isBigUint64Array(value) {
					return 'BigUint64Array' === whichTypedArray(value);
				}),
				(isMapToString.working =
					'undefined' != typeof Map && isMapToString(new Map())),
				(exports.isMap = function isMap(value) {
					return (
						'undefined' != typeof Map &&
						(isMapToString.working
							? isMapToString(value)
							: value instanceof Map)
					);
				}),
				(isSetToString.working =
					'undefined' != typeof Set && isSetToString(new Set())),
				(exports.isSet = function isSet(value) {
					return (
						'undefined' != typeof Set &&
						(isSetToString.working
							? isSetToString(value)
							: value instanceof Set)
					);
				}),
				(isWeakMapToString.working =
					'undefined' != typeof WeakMap &&
					isWeakMapToString(new WeakMap())),
				(exports.isWeakMap = function isWeakMap(value) {
					return (
						'undefined' != typeof WeakMap &&
						(isWeakMapToString.working
							? isWeakMapToString(value)
							: value instanceof WeakMap)
					);
				}),
				(isWeakSetToString.working =
					'undefined' != typeof WeakSet &&
					isWeakSetToString(new WeakSet())),
				(exports.isWeakSet = function isWeakSet(value) {
					return isWeakSetToString(value);
				}),
				(isArrayBufferToString.working =
					'undefined' != typeof ArrayBuffer &&
					isArrayBufferToString(new ArrayBuffer())),
				(exports.isArrayBuffer = isArrayBuffer),
				(isDataViewToString.working =
					'undefined' != typeof ArrayBuffer &&
					'undefined' != typeof DataView &&
					isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))),
				(exports.isDataView = isDataView);
			var SharedArrayBufferCopy =
				'undefined' != typeof SharedArrayBuffer
					? SharedArrayBuffer
					: void 0;
			function isSharedArrayBufferToString(value) {
				return '[object SharedArrayBuffer]' === ObjectToString(value);
			}
			function isSharedArrayBuffer(value) {
				return (
					void 0 !== SharedArrayBufferCopy &&
					(void 0 === isSharedArrayBufferToString.working &&
						(isSharedArrayBufferToString.working =
							isSharedArrayBufferToString(
								new SharedArrayBufferCopy(),
							)),
					isSharedArrayBufferToString.working
						? isSharedArrayBufferToString(value)
						: value instanceof SharedArrayBufferCopy)
				);
			}
			function isNumberObject(value) {
				return checkBoxedPrimitive(value, numberValue);
			}
			function isStringObject(value) {
				return checkBoxedPrimitive(value, stringValue);
			}
			function isBooleanObject(value) {
				return checkBoxedPrimitive(value, booleanValue);
			}
			function isBigIntObject(value) {
				return (
					BigIntSupported && checkBoxedPrimitive(value, bigIntValue)
				);
			}
			function isSymbolObject(value) {
				return (
					SymbolSupported && checkBoxedPrimitive(value, symbolValue)
				);
			}
			(exports.isSharedArrayBuffer = isSharedArrayBuffer),
				(exports.isAsyncFunction = function isAsyncFunction(value) {
					return '[object AsyncFunction]' === ObjectToString(value);
				}),
				(exports.isMapIterator = function isMapIterator(value) {
					return '[object Map Iterator]' === ObjectToString(value);
				}),
				(exports.isSetIterator = function isSetIterator(value) {
					return '[object Set Iterator]' === ObjectToString(value);
				}),
				(exports.isGeneratorObject = function isGeneratorObject(value) {
					return '[object Generator]' === ObjectToString(value);
				}),
				(exports.isWebAssemblyCompiledModule =
					function isWebAssemblyCompiledModule(value) {
						return (
							'[object WebAssembly.Module]' ===
							ObjectToString(value)
						);
					}),
				(exports.isNumberObject = isNumberObject),
				(exports.isStringObject = isStringObject),
				(exports.isBooleanObject = isBooleanObject),
				(exports.isBigIntObject = isBigIntObject),
				(exports.isSymbolObject = isSymbolObject),
				(exports.isBoxedPrimitive = function isBoxedPrimitive(value) {
					return (
						isNumberObject(value) ||
						isStringObject(value) ||
						isBooleanObject(value) ||
						isBigIntObject(value) ||
						isSymbolObject(value)
					);
				}),
				(exports.isAnyArrayBuffer = function isAnyArrayBuffer(value) {
					return (
						'undefined' != typeof Uint8Array &&
						(isArrayBuffer(value) || isSharedArrayBuffer(value))
					);
				}),
				['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(
					function (method) {
						Object.defineProperty(exports, method, {
							enumerable: !1,
							value: function () {
								throw new Error(
									method + ' is not supported in userland',
								);
							},
						});
					},
				);
		},
		'./node_modules/util/util.js': (
			__unused_webpack_module,
			exports,
			__webpack_require__,
		) => {
			var process = __webpack_require__(
					'./node_modules/process/browser.js',
				),
				getOwnPropertyDescriptors =
					Object.getOwnPropertyDescriptors ||
					function getOwnPropertyDescriptors(obj) {
						for (
							var keys = Object.keys(obj),
								descriptors = {},
								i = 0;
							i < keys.length;
							i++
						)
							descriptors[keys[i]] =
								Object.getOwnPropertyDescriptor(obj, keys[i]);
						return descriptors;
					},
				formatRegExp = /%[sdj%]/g;
			(exports.format = function (f) {
				if (!isString(f)) {
					for (var objects = [], i = 0; i < arguments.length; i++)
						objects.push(inspect(arguments[i]));
					return objects.join(' ');
				}
				i = 1;
				for (
					var args = arguments,
						len = args.length,
						str = String(f).replace(formatRegExp, function (x) {
							if ('%%' === x) return '%';
							if (i >= len) return x;
							switch (x) {
								case '%s':
									return String(args[i++]);
								case '%d':
									return Number(args[i++]);
								case '%j':
									try {
										return JSON.stringify(args[i++]);
									} catch (_) {
										return '[Circular]';
									}
								default:
									return x;
							}
						}),
						x = args[i];
					i < len;
					x = args[++i]
				)
					isNull(x) || !isObject(x)
						? (str += ' ' + x)
						: (str += ' ' + inspect(x));
				return str;
			}),
				(exports.deprecate = function (fn, msg) {
					if (void 0 !== process && !0 === process.noDeprecation)
						return fn;
					if (void 0 === process)
						return function () {
							return exports
								.deprecate(fn, msg)
								.apply(this, arguments);
						};
					var warned = !1;
					return function deprecated() {
						if (!warned) {
							if (process.throwDeprecation) throw new Error(msg);
							process.traceDeprecation
								? console.trace(msg)
								: console.error(msg),
								(warned = !0);
						}
						return fn.apply(this, arguments);
					};
				});
			var debugs = {},
				debugEnvRegex = /^$/;
			if (process.env.NODE_DEBUG) {
				var debugEnv = process.env.NODE_DEBUG;
				(debugEnv = debugEnv
					.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
					.replace(/\*/g, '.*')
					.replace(/,/g, '$|^')
					.toUpperCase()),
					(debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i'));
			}
			function inspect(obj, opts) {
				var ctx = { seen: [], stylize: stylizeNoColor };
				return (
					arguments.length >= 3 && (ctx.depth = arguments[2]),
					arguments.length >= 4 && (ctx.colors = arguments[3]),
					isBoolean(opts)
						? (ctx.showHidden = opts)
						: opts && exports._extend(ctx, opts),
					isUndefined(ctx.showHidden) && (ctx.showHidden = !1),
					isUndefined(ctx.depth) && (ctx.depth = 2),
					isUndefined(ctx.colors) && (ctx.colors = !1),
					isUndefined(ctx.customInspect) && (ctx.customInspect = !0),
					ctx.colors && (ctx.stylize = stylizeWithColor),
					formatValue(ctx, obj, ctx.depth)
				);
			}
			function stylizeWithColor(str, styleType) {
				var style = inspect.styles[styleType];
				return style
					? '[' +
							inspect.colors[style][0] +
							'm' +
							str +
							'[' +
							inspect.colors[style][1] +
							'm'
					: str;
			}
			function stylizeNoColor(str, styleType) {
				return str;
			}
			function formatValue(ctx, value, recurseTimes) {
				if (
					ctx.customInspect &&
					value &&
					isFunction(value.inspect) &&
					value.inspect !== exports.inspect &&
					(!value.constructor ||
						value.constructor.prototype !== value)
				) {
					var ret = value.inspect(recurseTimes, ctx);
					return (
						isString(ret) ||
							(ret = formatValue(ctx, ret, recurseTimes)),
						ret
					);
				}
				var primitive = (function formatPrimitive(ctx, value) {
					if (isUndefined(value))
						return ctx.stylize('undefined', 'undefined');
					if (isString(value)) {
						var simple =
							"'" +
							JSON.stringify(value)
								.replace(/^"|"$/g, '')
								.replace(/'/g, "\\'")
								.replace(/\\"/g, '"') +
							"'";
						return ctx.stylize(simple, 'string');
					}
					if (isNumber(value))
						return ctx.stylize('' + value, 'number');
					if (isBoolean(value))
						return ctx.stylize('' + value, 'boolean');
					if (isNull(value)) return ctx.stylize('null', 'null');
				})(ctx, value);
				if (primitive) return primitive;
				var keys = Object.keys(value),
					visibleKeys = (function arrayToHash(array) {
						var hash = {};
						return (
							array.forEach(function (val, idx) {
								hash[val] = !0;
							}),
							hash
						);
					})(keys);
				if (
					(ctx.showHidden &&
						(keys = Object.getOwnPropertyNames(value)),
					isError(value) &&
						(keys.indexOf('message') >= 0 ||
							keys.indexOf('description') >= 0))
				)
					return formatError(value);
				if (0 === keys.length) {
					if (isFunction(value)) {
						var name = value.name ? ': ' + value.name : '';
						return ctx.stylize('[Function' + name + ']', 'special');
					}
					if (isRegExp(value))
						return ctx.stylize(
							RegExp.prototype.toString.call(value),
							'regexp',
						);
					if (isDate(value))
						return ctx.stylize(
							Date.prototype.toString.call(value),
							'date',
						);
					if (isError(value)) return formatError(value);
				}
				var output,
					base = '',
					array = !1,
					braces = ['{', '}'];
				(isArray(value) && ((array = !0), (braces = ['[', ']'])),
				isFunction(value)) &&
					(base =
						' [Function' +
						(value.name ? ': ' + value.name : '') +
						']');
				return (
					isRegExp(value) &&
						(base = ' ' + RegExp.prototype.toString.call(value)),
					isDate(value) &&
						(base = ' ' + Date.prototype.toUTCString.call(value)),
					isError(value) && (base = ' ' + formatError(value)),
					0 !== keys.length || (array && 0 != value.length)
						? recurseTimes < 0
							? isRegExp(value)
								? ctx.stylize(
										RegExp.prototype.toString.call(value),
										'regexp',
								  )
								: ctx.stylize('[Object]', 'special')
							: (ctx.seen.push(value),
							  (output = array
									? (function formatArray(
											ctx,
											value,
											recurseTimes,
											visibleKeys,
											keys,
									  ) {
											for (
												var output = [],
													i = 0,
													l = value.length;
												i < l;
												++i
											)
												hasOwnProperty(value, String(i))
													? output.push(
															formatProperty(
																ctx,
																value,
																recurseTimes,
																visibleKeys,
																String(i),
																!0,
															),
													  )
													: output.push('');
											return (
												keys.forEach(function (key) {
													key.match(/^\d+$/) ||
														output.push(
															formatProperty(
																ctx,
																value,
																recurseTimes,
																visibleKeys,
																key,
																!0,
															),
														);
												}),
												output
											);
									  })(
											ctx,
											value,
											recurseTimes,
											visibleKeys,
											keys,
									  )
									: keys.map(function (key) {
											return formatProperty(
												ctx,
												value,
												recurseTimes,
												visibleKeys,
												key,
												array,
											);
									  })),
							  ctx.seen.pop(),
							  (function reduceToSingleString(
									output,
									base,
									braces,
							  ) {
									var length = output.reduce(function (
										prev,
										cur,
									) {
										return (
											cur.indexOf('\n') >= 0 && 0,
											prev +
												cur.replace(
													/\u001b\[\d\d?m/g,
													'',
												).length +
												1
										);
									},
									0);
									if (length > 60)
										return (
											braces[0] +
											('' === base ? '' : base + '\n ') +
											' ' +
											output.join(',\n  ') +
											' ' +
											braces[1]
										);
									return (
										braces[0] +
										base +
										' ' +
										output.join(', ') +
										' ' +
										braces[1]
									);
							  })(output, base, braces))
						: braces[0] + base + braces[1]
				);
			}
			function formatError(value) {
				return '[' + Error.prototype.toString.call(value) + ']';
			}
			function formatProperty(
				ctx,
				value,
				recurseTimes,
				visibleKeys,
				key,
				array,
			) {
				var name, str, desc;
				if (
					((desc = Object.getOwnPropertyDescriptor(value, key) || {
						value: value[key],
					}).get
						? (str = desc.set
								? ctx.stylize('[Getter/Setter]', 'special')
								: ctx.stylize('[Getter]', 'special'))
						: desc.set &&
						  (str = ctx.stylize('[Setter]', 'special')),
					hasOwnProperty(visibleKeys, key) ||
						(name = '[' + key + ']'),
					str ||
						(ctx.seen.indexOf(desc.value) < 0
							? (str = isNull(recurseTimes)
									? formatValue(ctx, desc.value, null)
									: formatValue(
											ctx,
											desc.value,
											recurseTimes - 1,
									  )).indexOf('\n') > -1 &&
							  (str = array
									? str
											.split('\n')
											.map(function (line) {
												return '  ' + line;
											})
											.join('\n')
											.slice(2)
									: '\n' +
									  str
											.split('\n')
											.map(function (line) {
												return '   ' + line;
											})
											.join('\n'))
							: (str = ctx.stylize('[Circular]', 'special'))),
					isUndefined(name))
				) {
					if (array && key.match(/^\d+$/)) return str;
					(name = JSON.stringify('' + key)).match(
						/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/,
					)
						? ((name = name.slice(1, -1)),
						  (name = ctx.stylize(name, 'name')))
						: ((name = name
								.replace(/'/g, "\\'")
								.replace(/\\"/g, '"')
								.replace(/(^"|"$)/g, "'")),
						  (name = ctx.stylize(name, 'string')));
				}
				return name + ': ' + str;
			}
			function isArray(ar) {
				return Array.isArray(ar);
			}
			function isBoolean(arg) {
				return 'boolean' == typeof arg;
			}
			function isNull(arg) {
				return null === arg;
			}
			function isNumber(arg) {
				return 'number' == typeof arg;
			}
			function isString(arg) {
				return 'string' == typeof arg;
			}
			function isUndefined(arg) {
				return void 0 === arg;
			}
			function isRegExp(re) {
				return isObject(re) && '[object RegExp]' === objectToString(re);
			}
			function isObject(arg) {
				return 'object' == typeof arg && null !== arg;
			}
			function isDate(d) {
				return isObject(d) && '[object Date]' === objectToString(d);
			}
			function isError(e) {
				return (
					isObject(e) &&
					('[object Error]' === objectToString(e) ||
						e instanceof Error)
				);
			}
			function isFunction(arg) {
				return 'function' == typeof arg;
			}
			function objectToString(o) {
				return Object.prototype.toString.call(o);
			}
			function pad(n) {
				return n < 10 ? '0' + n.toString(10) : n.toString(10);
			}
			(exports.debuglog = function (set) {
				if (((set = set.toUpperCase()), !debugs[set]))
					if (debugEnvRegex.test(set)) {
						var pid = process.pid;
						debugs[set] = function () {
							var msg = exports.format.apply(exports, arguments);
							console.error('%s %d: %s', set, pid, msg);
						};
					} else debugs[set] = function () {};
				return debugs[set];
			}),
				(exports.inspect = inspect),
				(inspect.colors = {
					bold: [1, 22],
					italic: [3, 23],
					underline: [4, 24],
					inverse: [7, 27],
					white: [37, 39],
					grey: [90, 39],
					black: [30, 39],
					blue: [34, 39],
					cyan: [36, 39],
					green: [32, 39],
					magenta: [35, 39],
					red: [31, 39],
					yellow: [33, 39],
				}),
				(inspect.styles = {
					special: 'cyan',
					number: 'yellow',
					boolean: 'yellow',
					undefined: 'grey',
					null: 'bold',
					string: 'green',
					date: 'magenta',
					regexp: 'red',
				}),
				(exports.types = __webpack_require__(
					'./node_modules/util/support/types.js',
				)),
				(exports.isArray = isArray),
				(exports.isBoolean = isBoolean),
				(exports.isNull = isNull),
				(exports.isNullOrUndefined = function isNullOrUndefined(arg) {
					return null == arg;
				}),
				(exports.isNumber = isNumber),
				(exports.isString = isString),
				(exports.isSymbol = function isSymbol(arg) {
					return 'symbol' == typeof arg;
				}),
				(exports.isUndefined = isUndefined),
				(exports.isRegExp = isRegExp),
				(exports.types.isRegExp = isRegExp),
				(exports.isObject = isObject),
				(exports.isDate = isDate),
				(exports.types.isDate = isDate),
				(exports.isError = isError),
				(exports.types.isNativeError = isError),
				(exports.isFunction = isFunction),
				(exports.isPrimitive = function isPrimitive(arg) {
					return (
						null === arg ||
						'boolean' == typeof arg ||
						'number' == typeof arg ||
						'string' == typeof arg ||
						'symbol' == typeof arg ||
						void 0 === arg
					);
				}),
				(exports.isBuffer = __webpack_require__(
					'./node_modules/util/support/isBufferBrowser.js',
				));
			var months = [
				'Jan',
				'Feb',
				'Mar',
				'Apr',
				'May',
				'Jun',
				'Jul',
				'Aug',
				'Sep',
				'Oct',
				'Nov',
				'Dec',
			];
			function hasOwnProperty(obj, prop) {
				return Object.prototype.hasOwnProperty.call(obj, prop);
			}
			(exports.log = function () {
				console.log(
					'%s - %s',
					(function timestamp() {
						var d = new Date(),
							time = [
								pad(d.getHours()),
								pad(d.getMinutes()),
								pad(d.getSeconds()),
							].join(':');
						return [d.getDate(), months[d.getMonth()], time].join(
							' ',
						);
					})(),
					exports.format.apply(exports, arguments),
				);
			}),
				(exports.inherits = __webpack_require__(
					'./node_modules/inherits/inherits_browser.js',
				)),
				(exports._extend = function (origin, add) {
					if (!add || !isObject(add)) return origin;
					for (var keys = Object.keys(add), i = keys.length; i--; )
						origin[keys[i]] = add[keys[i]];
					return origin;
				});
			var kCustomPromisifiedSymbol =
				'undefined' != typeof Symbol
					? Symbol('util.promisify.custom')
					: void 0;
			function callbackifyOnRejected(reason, cb) {
				if (!reason) {
					var newReason = new Error(
						'Promise was rejected with a falsy value',
					);
					(newReason.reason = reason), (reason = newReason);
				}
				return cb(reason);
			}
			(exports.promisify = function promisify(original) {
				if ('function' != typeof original)
					throw new TypeError(
						'The "original" argument must be of type Function',
					);
				if (
					kCustomPromisifiedSymbol &&
					original[kCustomPromisifiedSymbol]
				) {
					var fn;
					if (
						'function' !=
						typeof (fn = original[kCustomPromisifiedSymbol])
					)
						throw new TypeError(
							'The "util.promisify.custom" argument must be of type Function',
						);
					return (
						Object.defineProperty(fn, kCustomPromisifiedSymbol, {
							value: fn,
							enumerable: !1,
							writable: !1,
							configurable: !0,
						}),
						fn
					);
				}
				function fn() {
					for (
						var promiseResolve,
							promiseReject,
							promise = new Promise(function (resolve, reject) {
								(promiseResolve = resolve),
									(promiseReject = reject);
							}),
							args = [],
							i = 0;
						i < arguments.length;
						i++
					)
						args.push(arguments[i]);
					args.push(function (err, value) {
						err ? promiseReject(err) : promiseResolve(value);
					});
					try {
						original.apply(this, args);
					} catch (err) {
						promiseReject(err);
					}
					return promise;
				}
				return (
					Object.setPrototypeOf(fn, Object.getPrototypeOf(original)),
					kCustomPromisifiedSymbol &&
						Object.defineProperty(fn, kCustomPromisifiedSymbol, {
							value: fn,
							enumerable: !1,
							writable: !1,
							configurable: !0,
						}),
					Object.defineProperties(
						fn,
						getOwnPropertyDescriptors(original),
					)
				);
			}),
				(exports.promisify.custom = kCustomPromisifiedSymbol),
				(exports.callbackify = function callbackify(original) {
					if ('function' != typeof original)
						throw new TypeError(
							'The "original" argument must be of type Function',
						);
					function callbackified() {
						for (var args = [], i = 0; i < arguments.length; i++)
							args.push(arguments[i]);
						var maybeCb = args.pop();
						if ('function' != typeof maybeCb)
							throw new TypeError(
								'The last argument must be of type Function',
							);
						var self = this,
							cb = function () {
								return maybeCb.apply(self, arguments);
							};
						original.apply(this, args).then(
							function (ret) {
								process.nextTick(cb.bind(null, null, ret));
							},
							function (rej) {
								process.nextTick(
									callbackifyOnRejected.bind(null, rej, cb),
								);
							},
						);
					}
					return (
						Object.setPrototypeOf(
							callbackified,
							Object.getPrototypeOf(original),
						),
						Object.defineProperties(
							callbackified,
							getOwnPropertyDescriptors(original),
						),
						callbackified
					);
				});
		},
		'./node_modules/which-typed-array/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var forEach = __webpack_require__(
					'./node_modules/for-each/index.js',
				),
				availableTypedArrays = __webpack_require__(
					'./node_modules/which-typed-array/node_modules/available-typed-arrays/index.js',
				),
				callBind = __webpack_require__(
					'./node_modules/which-typed-array/node_modules/call-bind/index.js',
				),
				callBound = __webpack_require__(
					'./node_modules/which-typed-array/node_modules/call-bind/callBound.js',
				),
				gOPD = __webpack_require__('./node_modules/gopd/index.js'),
				$toString = callBound('Object.prototype.toString'),
				hasToStringTag = __webpack_require__(
					'./node_modules/which-typed-array/node_modules/has-tostringtag/shams.js',
				)(),
				g =
					'undefined' == typeof globalThis
						? __webpack_require__.g
						: globalThis,
				typedArrays = availableTypedArrays(),
				$slice = callBound('String.prototype.slice'),
				getPrototypeOf = Object.getPrototypeOf,
				$indexOf =
					callBound('Array.prototype.indexOf', !0) ||
					function indexOf(array, value) {
						for (var i = 0; i < array.length; i += 1)
							if (array[i] === value) return i;
						return -1;
					},
				cache = { __proto__: null };
			forEach(
				typedArrays,
				hasToStringTag && gOPD && getPrototypeOf
					? function (typedArray) {
							var arr = new g[typedArray]();
							if (Symbol.toStringTag in arr) {
								var proto = getPrototypeOf(arr),
									descriptor = gOPD(
										proto,
										Symbol.toStringTag,
									);
								if (!descriptor) {
									var superProto = getPrototypeOf(proto);
									descriptor = gOPD(
										superProto,
										Symbol.toStringTag,
									);
								}
								cache['$' + typedArray] = callBind(
									descriptor.get,
								);
							}
					  }
					: function (typedArray) {
							var arr = new g[typedArray]();
							cache['$' + typedArray] = callBind(arr.slice);
					  },
			);
			module.exports = function whichTypedArray(value) {
				if (!value || 'object' != typeof value) return !1;
				if (!hasToStringTag) {
					var tag = $slice($toString(value), 8, -1);
					return $indexOf(typedArrays, tag) > -1
						? tag
						: 'Object' === tag &&
								(function tryAllSlices(value) {
									var found = !1;
									return (
										forEach(cache, function (getter, name) {
											if (!found)
												try {
													getter(value),
														(found = $slice(
															name,
															1,
														));
												} catch (e) {}
										}),
										found
									);
								})(value);
				}
				return gOPD
					? (function tryAllTypedArrays(value) {
							var found = !1;
							return (
								forEach(cache, function (getter, typedArray) {
									if (!found)
										try {
											'$' + getter(value) ===
												typedArray &&
												(found = $slice(typedArray, 1));
										} catch (e) {}
								}),
								found
							);
					  })(value)
					: null;
			};
		},
		'./node_modules/which-typed-array/node_modules/available-typed-arrays/index.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var possibleNames = [
						'BigInt64Array',
						'BigUint64Array',
						'Float32Array',
						'Float64Array',
						'Int16Array',
						'Int32Array',
						'Int8Array',
						'Uint16Array',
						'Uint32Array',
						'Uint8Array',
						'Uint8ClampedArray',
					],
					g =
						'undefined' == typeof globalThis
							? __webpack_require__.g
							: globalThis;
				module.exports = function availableTypedArrays() {
					for (var out = [], i = 0; i < possibleNames.length; i++)
						'function' == typeof g[possibleNames[i]] &&
							(out[out.length] = possibleNames[i]);
					return out;
				};
			},
		'./node_modules/which-typed-array/node_modules/call-bind/callBound.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var GetIntrinsic = __webpack_require__(
						'./node_modules/get-intrinsic/index.js',
					),
					callBind = __webpack_require__(
						'./node_modules/which-typed-array/node_modules/call-bind/index.js',
					),
					$indexOf = callBind(
						GetIntrinsic('String.prototype.indexOf'),
					);
				module.exports = function callBoundIntrinsic(
					name,
					allowMissing,
				) {
					var intrinsic = GetIntrinsic(name, !!allowMissing);
					return 'function' == typeof intrinsic &&
						$indexOf(name, '.prototype.') > -1
						? callBind(intrinsic)
						: intrinsic;
				};
			},
		'./node_modules/which-typed-array/node_modules/call-bind/index.js': (
			module,
			__unused_webpack_exports,
			__webpack_require__,
		) => {
			'use strict';
			var bind = __webpack_require__(
					'./node_modules/function-bind/index.js',
				),
				GetIntrinsic = __webpack_require__(
					'./node_modules/get-intrinsic/index.js',
				),
				$apply = GetIntrinsic('%Function.prototype.apply%'),
				$call = GetIntrinsic('%Function.prototype.call%'),
				$reflectApply =
					GetIntrinsic('%Reflect.apply%', !0) ||
					bind.call($call, $apply),
				$gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', !0),
				$defineProperty = GetIntrinsic('%Object.defineProperty%', !0),
				$max = GetIntrinsic('%Math.max%');
			if ($defineProperty)
				try {
					$defineProperty({}, 'a', { value: 1 });
				} catch (e) {
					$defineProperty = null;
				}
			module.exports = function callBind(originalFunction) {
				var func = $reflectApply(bind, $call, arguments);
				$gOPD &&
					$defineProperty &&
					$gOPD(func, 'length').configurable &&
					$defineProperty(func, 'length', {
						value:
							1 +
							$max(
								0,
								originalFunction.length -
									(arguments.length - 1),
							),
					});
				return func;
			};
			var applyBind = function applyBind() {
				return $reflectApply(bind, $apply, arguments);
			};
			$defineProperty
				? $defineProperty(module.exports, 'apply', { value: applyBind })
				: (module.exports.apply = applyBind);
		},
		'./node_modules/which-typed-array/node_modules/has-tostringtag/shams.js':
			(module, __unused_webpack_exports, __webpack_require__) => {
				'use strict';
				var hasSymbols = __webpack_require__(
					'./node_modules/has-symbols/shams.js',
				);
				module.exports = function hasToStringTagShams() {
					return hasSymbols() && !!Symbol.toStringTag;
				};
			},
		'./node_modules/doctrine/package.json': (module) => {
			'use strict';
			module.exports = { i8: '3.0.0' };
		},
		'./node_modules/escodegen/package.json': (module) => {
			'use strict';
			module.exports = {};
		},
		'./node_modules/html-tags/html-tags.json': (module) => {
			'use strict';
			module.exports = JSON.parse(
				'["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rb","rp","rt","rtc","ruby","s","samp","script","search","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr"]',
			);
		},
	},
]);
//# sourceMappingURL=2180.527822ee.iframe.bundle.js.map
