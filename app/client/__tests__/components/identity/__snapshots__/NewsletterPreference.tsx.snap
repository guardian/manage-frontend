// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewsletterPreference component renders correctly and displays marketing information 1`] = `
<div
  css={
    Array [
      Object {
        "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
        "fontSize": "14px",
      },
      Object {
        "lineHeight": "1.333",
        "marginTop": "12px",
        "paddingLeft": "30px",
        "position": "relative",
      },
    ]
  }
  onClick={[Function]}
>
  <div
    css={
      Object {
        "left": 0,
        "position": "absolute",
      }
    }
  >
    <label
      css={
        Object {
          ":hover .checkbox": Object {
            "boxShadow": "0 0 0 3px #ececec",
          },
          "cursor": "pointer",
          "display": "flex",
          "maxWidth": undefined,
          "userSelect": "none",
        }
      }
    >
      <div
        aria-checked={false}
        className="checkbox"
        css={
          Object {
            ":focus": Object {
              "boxShadow": "0 0 0 3px #ffe500",
            },
            "background": "#ffffff",
            "border": "1px solid #999999",
            "display": "inline-block",
            "height": "18px",
            "margin": "3px",
            "marginRight": "10px",
            "minWidth": "18px",
            "outline": 0,
            "position": "relative",
            "transition": "all .2s ease-in-out",
          }
        }
        onKeyPress={[Function]}
        role="checkbox"
        tabIndex={0}
      >
        <input
          checked={false}
          css={
            Object {
              "opacity": 0,
              "overflow": "hidden",
              "position": "absolute",
              "zIndex": -999999,
            }
          }
          onChange={[Function]}
          tabIndex={-1}
          type="checkbox"
        />
        <div
          css={
            Object {
              "height": "6px",
              "left": "3px",
              "position": "absolute",
              "textAlign": "right",
              "top": "5px",
              "transform": "rotate(-45deg)",
              "width": "12px",
            }
          }
        >
          <div
            css={
              Object {
                "borderColor": "#ffffff",
                "borderStyle": "solid",
                "borderWidth": "0 0 2px 2px",
                "height": "6px",
                "transition": "all .2s ease-in-out",
                "transitionDelay": ".1s",
                "width": "2px",
              }
            }
          />
        </div>
      </div>
      <span />
    </label>
  </div>
  <p
    css={
      Array [
        Object {
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
        },
        Object {
          "cursor": "pointer",
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
          "fontWeight": "bold",
          "lineHeight": "22px",
          "margin": "0",
        },
      ]
    }
  >
    Test title
  </p>
  <p
    css={
      Object {
        "padding": "2.88px 0 0 0",
      }
    }
  >
    Test description
  </p>
  <p
    css={
      Object {
        "fontSize": "12px",
        "lineHeight": "16px",
        "margin": "3px 0 0 0",
        "opacity": 0.75,
      }
    }
  >
    <span
      css={
        Object {
          "display": "inline-block",
          "marginRight": "8px",
          "verticalAlign": "middle",
        }
      }
    >
      <svg
        css={
          Object {
            "fill": "#dcdcdc",
          }
        }
        height="11px"
        viewBox="0 0 11 11"
        width="11px"
      >
        <path
          d="M5.4 0C2.4 0 0 2.4 0 5.4s2.4 5.4 5.4 5.4 5.4-2.4 5.4-5.4S8.4 0 5.4 0zm3 6.8H4.7V1.7h.7L6 5.4l2.4.6v.8z"
        />
      </svg>
    </span>
    Test frequency
  </p>
</div>
`;

exports[`NewsletterPreference component will select the checkbox when the selected prop is passed 1`] = `
<div
  css={
    Array [
      Object {
        "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
        "fontSize": "14px",
      },
      Object {
        "lineHeight": "1.333",
        "marginTop": "12px",
        "paddingLeft": "30px",
        "position": "relative",
      },
    ]
  }
  onClick={[Function]}
>
  <div
    css={
      Object {
        "left": 0,
        "position": "absolute",
      }
    }
  >
    <label
      css={
        Object {
          ":hover .checkbox": Object {
            "boxShadow": "0 0 0 3px #ececec",
          },
          "cursor": "pointer",
          "display": "flex",
          "maxWidth": undefined,
          "userSelect": "none",
        }
      }
    >
      <div
        aria-checked={true}
        className="checkbox"
        css={
          Object {
            ":focus": Object {
              "boxShadow": "0 0 0 3px #ffe500",
            },
            "background": "#22834D",
            "border": undefined,
            "display": "inline-block",
            "height": "18px",
            "margin": "3px",
            "marginRight": "10px",
            "minWidth": "18px",
            "outline": 0,
            "position": "relative",
            "transition": "all .2s ease-in-out",
          }
        }
        onKeyPress={[Function]}
        role="checkbox"
        tabIndex={0}
      >
        <input
          checked={true}
          css={
            Object {
              "opacity": 0,
              "overflow": "hidden",
              "position": "absolute",
              "zIndex": -999999,
            }
          }
          onChange={[Function]}
          tabIndex={-1}
          type="checkbox"
        />
        <div
          css={
            Object {
              "height": "6px",
              "left": "3px",
              "position": "absolute",
              "textAlign": "right",
              "top": "5px",
              "transform": "rotate(-45deg)",
              "width": "12px",
            }
          }
        >
          <div
            css={
              Object {
                "borderColor": "#ffffff",
                "borderStyle": "solid",
                "borderWidth": "0 0 2px 2px",
                "height": "6px",
                "transition": "all .2s ease-in-out",
                "transitionDelay": ".1s",
                "width": "12px",
              }
            }
          />
        </div>
      </div>
      <span />
    </label>
  </div>
  <p
    css={
      Array [
        Object {
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
        },
        Object {
          "cursor": "pointer",
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
          "fontWeight": "bold",
          "lineHeight": "22px",
          "margin": "0",
        },
      ]
    }
  >
    Test title
  </p>
  <p
    css={
      Object {
        "padding": "2.88px 0 0 0",
      }
    }
  >
    Test description
  </p>
  <p
    css={
      Object {
        "fontSize": "12px",
        "lineHeight": "16px",
        "margin": "3px 0 0 0",
        "opacity": 0.75,
      }
    }
  >
    <span
      css={
        Object {
          "display": "inline-block",
          "marginRight": "8px",
          "verticalAlign": "middle",
        }
      }
    >
      <svg
        css={
          Object {
            "fill": "#dcdcdc",
          }
        }
        height="11px"
        viewBox="0 0 11 11"
        width="11px"
      >
        <path
          d="M5.4 0C2.4 0 0 2.4 0 5.4s2.4 5.4 5.4 5.4 5.4-2.4 5.4-5.4S8.4 0 5.4 0zm3 6.8H4.7V1.7h.7L6 5.4l2.4.6v.8z"
        />
      </svg>
    </span>
    Test frequency
  </p>
</div>
`;
