// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MarketingToggle component renders correctly and displays marketing information 1`] = `
<div
  css={
    Array [
      Object {
        "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
        "fontSize": "14px",
      },
      Object {
        "lineHeight": "1.333",
        "marginTop": "12px",
        "position": "relative",
      },
    ]
  }
  onClick={[Function]}
>
  <div
    css={
      Object {
        "left": 0,
      }
    }
  >
    <div
      css={
        Array [
          Object {
            "paddingRight": "30px",
          },
        ]
      }
    >
      <button
        aria-checked={false}
        aria-labelledby="13"
        css={
          Array [
            Object {
              "map": undefined,
              "name": "jdbwo1",
              "next": undefined,
              "styles": "
  flex: none;
  border: none;
  margin: 8px;
  margin-left: 0;
  padding: 0;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  position: relative;
  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  &:after {
    content: \\"\\";
    position: absolute;
    border-radius: 50%;
    background: #fff;
    will-change: left;
    transition: left 0.15s ease-in-out;
  }
",
              "toString": [Function],
            },
            Object {
              "map": undefined,
              "name": "awfpkd",
              "next": undefined,
              "styles": "
  width: 2.75rem;
  height: 1.5rem;
  border-radius: 15.5px;
  /* this will go away when resets have been standardised */
  &:before,
  &:after {
    box-sizing: border-box;
  }
  &:before {
    content: \\"\\";
    position: absolute;
    top: 0.375rem;
    height: 0.7rem;
    width: 0.4rem;
    opacity: 0;
    border-bottom: 2px solid #22874D;
    border-right: 2px solid #22874D;
    transition: opacity 0.1s ease-in;
  }
  &:after {
    height: 1.125rem;
    width: 1.125rem;
    top: 0.15625rem;
    left: 0.25rem;
  }
  &[aria-checked=\\"false\\"] {
    background-color: rgba(153, 153, 153, 0.5);
  }
  &[aria-checked=\\"true\\"] {
    background: #58D08B;
  }
  &[aria-checked=\\"true\\"]:before {
    opacity: 1;
    z-index: 1;
    transform: translateX(6px) rotate(45deg);
  }
  &[aria-checked=\\"true\\"]:after {
    left: 1.375rem;
    background: #FFFFFF;
  }
",
              "toString": [Function],
            },
          ]
        }
        onClick={[Function]}
      />
      <label
        css={
          Object {
            "map": undefined,
            "name": "o10xob",
            "next": undefined,
            "styles": "
  
	font-family: GuardianTextSans, Guardian Text Sans Web, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;
	font-size: 0.9375rem;
	line-height: 1.5;
	font-weight: 400;
	;
;
  display: inline-block;
  color: #121212;
",
            "toString": [Function],
          }
        }
        id="13"
      >
        Test description
      </label>
    </div>
  </div>
  <p
    css={
      Array [
        Object {
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
        },
        Object {
          "cursor": "pointer",
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
          "fontWeight": "bold",
          "lineHeight": "22px",
          "margin": "0",
        },
      ]
    }
  >
    Test title
  </p>
</div>
`;

exports[`MarketingToggle component will select the checkbox when the selected prop is passed 1`] = `
<div
  css={
    Array [
      Object {
        "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
        "fontSize": "14px",
      },
      Object {
        "lineHeight": "1.333",
        "marginTop": "12px",
        "position": "relative",
      },
    ]
  }
  onClick={[Function]}
>
  <div
    css={
      Object {
        "left": 0,
      }
    }
  >
    <div
      css={
        Array [
          Object {
            "paddingRight": "30px",
          },
        ]
      }
    >
      <button
        aria-checked={true}
        aria-labelledby="13"
        css={
          Array [
            Object {
              "map": undefined,
              "name": "jdbwo1",
              "next": undefined,
              "styles": "
  flex: none;
  border: none;
  margin: 8px;
  margin-left: 0;
  padding: 0;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  position: relative;
  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  &:after {
    content: \\"\\";
    position: absolute;
    border-radius: 50%;
    background: #fff;
    will-change: left;
    transition: left 0.15s ease-in-out;
  }
",
              "toString": [Function],
            },
            Object {
              "map": undefined,
              "name": "awfpkd",
              "next": undefined,
              "styles": "
  width: 2.75rem;
  height: 1.5rem;
  border-radius: 15.5px;
  /* this will go away when resets have been standardised */
  &:before,
  &:after {
    box-sizing: border-box;
  }
  &:before {
    content: \\"\\";
    position: absolute;
    top: 0.375rem;
    height: 0.7rem;
    width: 0.4rem;
    opacity: 0;
    border-bottom: 2px solid #22874D;
    border-right: 2px solid #22874D;
    transition: opacity 0.1s ease-in;
  }
  &:after {
    height: 1.125rem;
    width: 1.125rem;
    top: 0.15625rem;
    left: 0.25rem;
  }
  &[aria-checked=\\"false\\"] {
    background-color: rgba(153, 153, 153, 0.5);
  }
  &[aria-checked=\\"true\\"] {
    background: #58D08B;
  }
  &[aria-checked=\\"true\\"]:before {
    opacity: 1;
    z-index: 1;
    transform: translateX(6px) rotate(45deg);
  }
  &[aria-checked=\\"true\\"]:after {
    left: 1.375rem;
    background: #FFFFFF;
  }
",
              "toString": [Function],
            },
          ]
        }
        onClick={[Function]}
      />
      <label
        css={
          Object {
            "map": undefined,
            "name": "o10xob",
            "next": undefined,
            "styles": "
  
	font-family: GuardianTextSans, Guardian Text Sans Web, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;
	font-size: 0.9375rem;
	line-height: 1.5;
	font-weight: 400;
	;
;
  display: inline-block;
  color: #121212;
",
            "toString": [Function],
          }
        }
        id="13"
      >
        Test description
      </label>
    </div>
  </div>
  <p
    css={
      Array [
        Object {
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
        },
        Object {
          "cursor": "pointer",
          "fontFamily": "\\"Guardian Text Sans Web\\", \\"Helvetica Neue\\", Helvetica, Arial, \\"Lucida Grande\\", sans-serif",
          "fontSize": "14px",
          "fontWeight": "bold",
          "lineHeight": "22px",
          "margin": "0",
        },
      ]
    }
  >
    Test title
  </p>
</div>
`;
